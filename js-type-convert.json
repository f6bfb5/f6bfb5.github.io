{"title":"JavaScript 筆記 - 資料型別轉換與資料處理","slug":"js-type-convert","html":"<h2 id=\"強制轉換資料型別\">強制轉換資料型別</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Convery Data Type</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -Infinity;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Infinity;</span>\n\n<span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.30000000000000004;</span>\n\n<span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false;</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"\"</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[object Object][object Object]\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[object Object]\"</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"1\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"1\"</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"53\";</span>\n<span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"35\";</span>\n<span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"031\";</span>\n<span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"04\";</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2;</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span>\n<span class=\"token string\">\"15\"</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token operator\">+</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token operator\">-</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -123;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 0, 1, 2, 3, 4 ]</span>\n\n<span class=\"token comment\">// convert to boolean</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hoge<span class=\"token operator\">:</span> <span class=\"token string\">\"hoge\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span>obj<span class=\"token punctuation\">.</span>hoge<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre><h2 id=\"複製內容\">複製內容</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Shallow Copy</span>\n<span class=\"token comment\">// only copy first depth data</span>\n<span class=\"token keyword\">const</span> shallowCopy <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Deep Copy</span>\n<span class=\"token comment\">// use JSON.parse/stringify</span>\n<span class=\"token keyword\">const</span> deepCopy <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or use loadsh</span>\n<span class=\"token keyword\">const</span> deepCopy <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">cloneDeep</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"檢查-nullish\">檢查 Nullish</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Nullish Coalescing</span>\n<span class=\"token comment\">// check whether left-hand is null or undefined</span>\n<span class=\"token keyword\">const</span> hoge <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">??</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"default\"</span>\n<span class=\"token keyword\">const</span> fuga <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">??</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// Optional Chaining</span>\n<span class=\"token comment\">// check whether obj ref is nullish</span>\nobj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  fuga<span class=\"token operator\">:</span> <span class=\"token string\">\"fuga\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token operator\">?.</span>hoge<span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nobj <span class=\"token operator\">&amp;&amp;</span> obj<span class=\"token punctuation\">.</span>hoge<span class=\"token punctuation\">;</span> <span class=\"token comment\">// equal to this statement</span>\nobj<span class=\"token operator\">?.</span>fuga<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"fuga\"</span>\nobj<span class=\"token operator\">?.</span>fuga<span class=\"token operator\">?.</span>hoge<span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kozzzz/items/b4cd57ead41fc6355afd\">[JavaScript]初心者が初見で必ず thinking 顔になるもの特集 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.infoq.cn/article/jPF4p0Srd9qhVbWMaOFh\">有趣的 JavaScript 运算符用法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://davidwalsh.name/javascript-tricks\">7 Useful JavaScript Tricks</a></li>\n</ul>\n<h2 id=\"forin-和-forof-的差別\">for...in 和 for...of 的差別</h2>\n<ol>\n<li>迭代 <strong>物件屬性</strong> 時使用 <code>for...in</code>，迭代 <strong>陣列</strong> 時使用 <code>for...of</code></li>\n<li><code>for..in</code> 輸出 <strong>屬性名稱 (key)**，<code>for...of</code> 輸出 **值 (value)</strong></li>\n<li><code>for...of</code> 是 ES6 的新語法，補足了 ES5 <code>for...in</code> 的不足之處</li>\n<li><code>for...of</code> 不能迭代物件，需與 <code>Object.keys()</code> 搭配使用</li>\n</ol>\n<h2 id=\"array\">Array</h2>\n<ul>\n<li><code>var fiveItems = new Array(5);</code>：建立指定長度陣列</li>\n<li><code>fill(value[, start=0[, end=this.length]])</code>：填入輸入值至陣列的指定索引開始至結尾處</li>\n<li><code>map()</code> 可以使用自訂判斷為真的值建立一個新陣列：<code>map1 = array1.map(x ⇒ x*2 );</code>，注意此方法與資料型態的 <code>Map()</code> 是不同東西。</li>\n<li><code>reduce()</code> 簡言之能夠簡化需要遞迴整個陣列的操作，並回傳一經過處理後的值。例如計算整個陣列總和可以使用 <code>array1.reduce((pre,cur) =&gt; pre+cur)</code> 求得。</li>\n<li>檢查陣列是否為空：<code>if (typeof image_array !== &#39;undefined&#39; &amp;&amp; image_array.length &gt; 0)</code></li>\n</ul>\n<h3 id=\"快速產生陣列內容\">快速產生陣列內容</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\">alternative range()</a></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 數值</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => [0, 1, 2, 3, 4]</span>\n\n<span class=\"token comment\">// 文字</span>\nString<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ⇒ \"ABCD\"</span>\n\n<span class=\"token comment\">// 組合</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> x <span class=\"token keyword\">of</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ⇒ 0,\"A\" 1,\"B\" 2,\"C\" 3,\"D\" 4,\"E\"</span></code></pre><h3 id=\"刪除-array\">刪除 Array</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// delete array</span>\n<span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// array = []</span></code></pre><h3 id=\"slice-vs-splice-vs-split\">slice() vs splice() vs split()</h3>\n<h4 id=\"slice\">slice()</h4>\n<ul>\n<li><code>array.slice(begin, end)</code></li>\n<li>複製陣列項目，不會修改原始陣列，回傳指定兩點之間的內容</li>\n<li><code>begin</code>：開始複製項目的位置，負值則為反方向計算</li>\n<li><code>end</code>：結束複製項目的位置，留空時會複製至結尾</li>\n</ul>\n<h4 id=\"splice\">splice()</h4>\n<ul>\n<li><code>array.splice(start, deleteCount, item...)</code></li>\n<li>新增／刪除陣列項目，會修改原始陣列，回傳被刪除的項目</li>\n<li><code>start</code>：插入或刪除項目的位置，負值則為反方向計算</li>\n<li><code>deleteCount</code>：刪除的個數，傳入 0 則不會刪除</li>\n<li><code>item...</code>：要插入的新項目。</li>\n</ul>\n<h4 id=\"split\">split()</h4>\n<ul>\n<li><code>string.split(seperator, length)</code></li>\n<li>分割字串成陣列，不會修改原始字串，回傳分割後的字串陣列</li>\n<li><code>seperator</code>：字符或正規表達式，依照此參數分割字串</li>\n<li><code>length</code>：回傳陣列的最大長度</li>\n</ul>\n<h3 id=\"foreach-map-filter-find-every-some-reduce\">forEach(), map(), filter(), find(), every(), some(), reduce()</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hsiangfeng.github.io/javascript/20190421/1216566123/\">關於 JS 陣列 20 種操作的方法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://w3c.hexschool.com/blog/6594e4ff\">JavaScript 陣列 (array) 操作處理大全</a></li>\n</ul>\n<h4 id=\"foreach\">forEach()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>處理陣列內<strong>每個</strong>資料</li>\n<li>無回傳值（<code>undefined</code>）</li>\n<li>會改變原始陣列資料</li>\n</ul>\n<h4 id=\"map\">map()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">+</span> item<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>處理陣列內<strong>每個</strong>資料</li>\n<li>回傳一個新的陣列</li>\n<li>不會改變原始陣列資料</li>\n</ul>\n<h4 id=\"filter\">filter()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>回傳<strong>所有</strong>處理為 true 的項目</li>\n<li>回傳一個新的陣列</li>\n</ul>\n<h4 id=\"find\">find()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>回傳<strong>第一個</strong>處理結果為 true 的項目</li>\n</ul>\n<h4 id=\"every\">every()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>檢查陣列內<strong>所有</strong>值是否符合條件</li>\n<li>回傳 boolean 值</li>\n</ul>\n<h4 id=\"some\">some()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>檢查陣列內<strong>是否存在一</strong>值符合條件</li>\n<li>僅需有值符合即可</li>\n<li>回傳 boolean 值</li>\n</ul>\n<h4 id=\"reduce\">reduce()</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> myArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 處理每個元素後等待回傳結果，第一次處理時代入初始值 0</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> myArr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 與之前的數值加總，回傳後代入下一輪的處理</span>\n  <span class=\"token keyword\">return</span> prev <span class=\"token operator\">+</span> element<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>自陣列首值依序處理</li>\n<li>第一次被呼叫時，<code>accumulator</code> 與 <code>currentValue</code> 的值可能為兩種不同的狀況：\n<br>├ 1. 呼叫 <code>reduce()</code> 有提供 <code>initialValue</code> 時，<code>accumulator</code> 會等於 <code>initialValue</code>，<code>currentValue</code> 等於陣列中的第一個元素值\n<br>└ 2. 未提供 <code>initialValue</code>時，<code>accumulator</code> 會等於陣列的第一個元素值，<code>currentValue</code> 等於陣列的第二個元素</li>\n</ul>\n<h3 id=\"如何安全使用會破壞-array-資料的-method\">如何安全使用會破壞 Array 資料的 Method</h3>\n<p>例如 <code>reverse()</code> 會直接改變原本陣列的資料：</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr1: [1,2,3]</span>\narr1<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span>\narr1<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span></code></pre><p>可以使用展開運算子 <code>[...arr]</code> 或是 <code>concat()</code> 避開修改原本的陣列：</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr2: [1,2,3]</span>\n<span class=\"token keyword\">const</span> changedArr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narr2<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [1,2,3]</span>\nchangedArr2<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr3: [1,2,3]</span>\n<span class=\"token keyword\">const</span> changedArr3 <span class=\"token operator\">=</span> arr3<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narr3<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [1,2,3]</span>\nchangedArr3<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span></code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/poruruba/items/6c67c7eef34ed302feb3\">便利ページ：Javascript でちょっとした便利な機能を作ってみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=Mus_vwhTCq0\">JavaScript Pro Tips - Code This, NOT That - YouTube</a></li>\n</ul>\n<h2 id=\"string\">String</h2>\n<ul>\n<li><code>String.substr( start, length )</code></li>\n<li><code>String.substring( start, end )</code></li>\n<li>預設會擷取到最後一個字符</li>\n</ul>\n<h3 id=\"string-to-int\">String to Int</h3>\n<p><code>parseInt(string, radix)</code></p>\n<h2 id=\"object\">Object</h2>\n<ol>\n<li><code>obj[key] = value</code></li>\n<li><code>{ [key]: value }</code></li>\n<li><code>Object.keys(obj)</code></li>\n<li><code>Object.values(obj)</code></li>\n<li><code>Object.entries(obj)</code></li>\n<li><code>!(&quot;key&quot; in obj)</code></li>\n<li><code>obj.hasOwnProperty(&quot;key&quot;)</code></li>\n<li><code>delete obj[key]</code></li>\n</ol>\n<h2 id=\"queue--stack\">Queue &amp; Stack</h2>\n<ul>\n<li>JS 可直接使用 Array 的\n<br>├ <code>push</code> 放入結尾\n<br>├ <code>unshift</code> 放入開頭\n<br>├ <code>pop</code> 取出結尾\n<br>└ <code>shift</code> 取出開頭\n<br>來實作這兩種資料結構。</li>\n</ul>\n<h3 id=\"queue\">Queue</h3>\n<ul>\n<li>First In First Out</li>\n<li><code>unshift()</code>、<code>pop()</code></li>\n</ul>\n<h3 id=\"stack\">Stack</h3>\n<ul>\n<li>Last In First Out</li>\n<li><code>push()</code>、<code>pop()</code></li>\n</ul>\n<h2 id=\"map--set\">Map &amp; Set</h2>\n<ul>\n<li>JS 於 ES6 新增 <code>Set</code> 與 <code>Map</code> 兩種物件</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://javascript.info/map-set\">Map and Set</a></li>\n</ul>\n<h3 id=\"map-1\">Map</h3>\n<ul>\n<li><code>Map</code> 關心的是 <code>{ 鍵 (key) : 值 (value) }</code> 的對應關係</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ES6 Map</span>\n<span class=\"token keyword\">let</span> mapTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"string value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> obj<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Get</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Has</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Iterator</span>\n<span class=\"token comment\">// returns for keys</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns for values</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns for [key, value], used by default in for...in</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete All</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Length</span>\nmapTable<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// To Array</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>mapTable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"set\">Set</h3>\n<ul>\n<li><code>Set</code> 關心的是不重覆值的獨立元素 <code>{value1, value2}</code></li>\n</ul>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ES6 Set</span>\n<span class=\"token keyword\">let</span> setTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Has</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Iterator</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete All</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Length</span>\nsetTable<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// To Array</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>setTable<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>setTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","date":"2021-01-11T00:07:30.000Z","printDate":"January 11, 2021","printReadingTime":"6 min read","tags":["F2E","JavaScript"],"image":""}