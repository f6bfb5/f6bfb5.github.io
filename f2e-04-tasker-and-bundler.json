{"title":"前端筆記 (4) 自動化工具","slug":"f2e-04-tasker-and-bundler","html":"<p>為了簡化各種工作，開發前端也有許多自動化工具可使用，例如自動化工作流程的 gulp，以及整合、打包模組的 webpack。</p>\n<h2 id=\"npm\">npm</h2>\n<ul>\n<li><code>npm</code> 是 Node.js 的套件管理系統，在開發起初時使用 <code>npm init</code> 指令會在開發環境底下新增 <code>package.json</code> 檔案，將所使用的套件名稱與版本等相關資訊儲存在裡面。</li>\n<li>每次追加新的 <code>xxx</code> 套件時，執行 <code>npm install xxx --save</code> 就會更新 <code>package.json</code> 裡面的 <code>dependencies</code>，並且新增另一個 <code>package-lock.json</code> 檔案。</li>\n<li><code>xxx</code> 套件的最新版本為 <code>1.0.0</code> 時，<code>package.json</code> 的 <code>dependencies</code> 會以範圍格式記載 <code>&quot;xxx&quot;: &quot;^1.0.0&quot;</code>，亦即適用以 1 開頭的最新版本檔案，然而若是已經推播最新版本 <code>yyy</code> 含有漏洞亦或問題，直接使用 <code>npm install</code> 會難以重現開發環境</li>\n<li>雖然 <code>package-lock.json</code> 存有該次建構時的確切版本，但 <code>npm install</code> 會覆寫 <code>package-lock.json</code> 裡的版本紀錄，若是需要以建構環境時的套件版本為主，需改用 <code>npm ci</code>，便會以 <code>package-lock.json</code> 為主要參照來源。</li>\n<li>想更新 <code>package-lock.json</code> 時則直接使用 <code>npm install</code> 或 <code>npm update</code>。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://soarlin.github.io/2017/04/21/Composer-NPM-install-update/\">Composer 與 NPM 指令 install 與 update 的差異｜ SoarLin&#39;s blog</a></li>\n</ul>\n<h2 id=\"gulp\">Gulp</h2>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://gulpjs.com/\">Gulp</a> 是一套任務管理工具，可將工作流程自動化，例如自動重新整理網頁、編譯 SASS、檢查程式碼、壓縮 CSS 與 JavaScript 或圖片檔案等等，亦可自訂所需的處理內容。</p>\n<h3 id=\"安裝\">安裝</h3>\n<p>Gulp 運行於 node.js 底下，因此需先安裝 node.js 與 npm。</p>\n<ol>\n<li><code>npm install --global gulp-cli</code>：安裝 gulp-cli</li>\n<li>開啟需使用 gulp 的專案資料夾</li>\n<li><code>npm init</code>：初始化專案資料夾</li>\n<li><code>npm install --save-dev gulp</code>：安裝 gulp package</li>\n<li><code>gulp --version</code>：確認安裝的 gulp 版本</li>\n</ol>\n<h2 id=\"webpack\">Webpack</h2>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://webpack.js.org/\">Webpack</a> 是一套模組整合工具，可以打包零散的 JavaScript 模組，以及解決舊瀏覽器不支援新語法的問題，以利於後續管理與維護。</p>\n<p>亦可將各種靜態資源，例如 JavaScript 、CSS、SASS、圖片檔案視為模組，透過各種 loader 轉換與載入資源，最後由 webpack 打包、最佳化成為 JavaScript 檔。</p>\n<h3 id=\"安裝-1\">安裝</h3>\n<ol>\n<li>開啟需使用 webpack 的專案資料夾</li>\n<li><code>npm init</code>：初始化專案資料夾</li>\n<li><code>npm install --save-dev webpack webpack-cli</code>：安裝 webpack package</li>\n</ol>\n","date":"2019-07-18T07:04:00.000Z","printDate":"July 18, 2019","printReadingTime":"1 min read","tags":["F2E"],"image":"https://f6bfb5.github.io/preview/f2e-04-tasker-and-bundler.png"}