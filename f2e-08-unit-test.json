{"title":"前端筆記 (8) 網頁測試","slug":"f2e-08-unit-test","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/yusong-blog/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%9C%A8github%E4%B8%8A%E6%8C%81%E7%BA%8C%E6%95%B4%E5%90%88%E8%88%87%E9%83%A8%E7%BD%B2-ci-cd-9735f622ae68\">前端工程師在 GitHub 上持續整合與部署(CI/CD)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Daara_y/items/4f006ead604e015186dc\">Chrome の拡張機能を 2 つ使うだけでブラウザの操作を自動化！？ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/nezuq/items/c5e827e1827e7cb29011\">Web スクレイピングの注意事項一覧 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Azunyan1111/items/b161b998790b1db2ff7a\">Python Web スクレイピング テクニック集「取得できない値は無い」JavaScript 対応@追記あり 6/12 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/Jsn8miqHQdWUUdqgrIc9Cg\">六角學院線上分享單元測試 QA 區</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ms314006/step-by-step-unit-testing\">step-by-step-unit-testing</a></li>\n</ul>\n<h2 id=\"1-selenium\">1. <a target=\"_blank\" rel=\"nofollow\" href=\"https://selenium.dev/\">Selenium</a></h2>\n<h2 id=\"2-jest\">2. <a target=\"_blank\" rel=\"nofollow\" href=\"https://jestjs.io/\">Jest</a></h2>\n<h3 id=\"安裝\">安裝</h3>\n<p><code>npm install --save-dev jest</code>\n<code>yarn add puppeteer jest</code></p>\n<h3 id=\"使用\">使用</h3>\n<h4 id=\"撰寫\">撰寫</h4>\n<p><code>util.test.js</code></p>\n<ul>\n<li><code>test()</code> 是 Jest 提供的 function，第一個參數為文字敘述，第二個參數則是傳入一個 function</li>\n<li><code>expect()</code> 是傳入要接受測試的函式</li>\n<li><code>toBe()</code> 是預期得到的結果</li>\n</ul>\n<h4 id=\"執行\">執行</h4>\n<p><code>npm run jest</code>: 測試所有的測試檔案\n<code>npm run jest [檔案]</code>: 測試指定檔案</p>\n<h3 id=\"參考\">參考</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/development/2020/02/02/jest-intro/\">十分鐘上手前端單元測試 - 使用 Jest</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/enjoy-life-enjoy-coding/%E8%AE%93-jest-%E7%82%BA%E4%BD%A0%E7%9A%84-code-%E5%81%9A%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95%E6%95%99%E5%AD%B8-d898f11d9a23\">Jest | 讓 Jest 為你的 Code 做測試-基礎用法教學</a></li>\n</ul>\n<h2 id=\"3-cypress\">3. <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.cypress.io/\">Cypress</a></h2>\n<h2 id=\"4-storybook\">4. <a target=\"_blank\" rel=\"nofollow\" href=\"https://storybook.js.org/\">Storybook</a></h2>\n<h2 id=\"5-nightwatch\">5. <a target=\"_blank\" rel=\"nofollow\" href=\"https://nightwatchjs.org/\">Nightwatch</a></h2>\n<h2 id=\"6-puppeteer\">6. <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer\">Puppeteer</a></h2>\n<h3 id=\"簡介\">簡介</h3>\n<p>Puppter 是由 Google Chrome 官方團隊所推出的無界面（Headless）Chrome 工具，是一套 Node 的 Library，提供 API 讓使用者可以透過 DevTools Protocol 控制無介面的 Chrome，亦可透過調整參數使用完整版的 Chrome。</p>\n<p>常見用途：</p>\n<ul>\n<li>產生網頁頁面的截圖或 PDF 檔</li>\n<li>抓取 Single Page Application 產生預覽內容 (Server-Side Rendering)</li>\n<li>從網站上抓取想要的內容</li>\n<li>自動送出表單、測試 UI、控制輸入</li>\n<li>建構自動化測試環境</li>\n</ul>\n<h3 id=\"安裝-1\">安裝</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm i puppeteer\n# or use yarn\nyarn add puppeteer</code></pre><h3 id=\"使用-1\">使用</h3>\n<p>使用方式相當簡單，安裝完 puppeteer 的套件之後，將相關的程式碼寫進一支 js 檔案裡，並直接使用 Node.js 執行便可使用：<code>node example.js</code></p>\n<h4 id=\"基礎使用\">基礎使用</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 引入 puppeteer</span>\n<span class=\"token keyword\">const</span> puppeteer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'puppeteer'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 啟動 puppeteer</span>\n  <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span>puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 使用背景模式執行</span>\n    headless<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 開啟新分頁</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 前往頁面</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// action here...</span>\n\n  <span class=\"token comment\">// 關閉 puppeteer</span>\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 也可以使用 then 撰寫</span>\npuppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> headless<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">browser</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// action here...</span>\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p><code>launch</code> 裡面可以使用諸多參數，調整瀏覽器的細部運作設定，例如：</p>\n<ul>\n<li><code>headless: [boolean]</code>：是否以背景模式執行瀏覽器</li>\n<li><code>useDataDir: [string]</code>：儲存使用者的相關資料</li>\n<li><code>slowMo: [number]</code>：設定每個操作的延遲毫秒數</li>\n<li><code>args: [array[string]]</code>：設定傳入給瀏覽器的相關參數</li>\n<li><code>timeout: [number]</code>：等待瀏覽器啟動的時間長度</li>\n<li><code>devtools: [boolean]</code>：啟動後是否開啟開發者工具列，啟用此選項時 <code>headless</code> 必須為 <code>true</code></li>\n</ul>\n<h4 id=\"獲取節點\">獲取節點</h4>\n<p>網頁最常見的操作是，我們會專注於某個節點上，例如一個連結、按鈕，或是一個文字輸入框、一段文字內容，在 puppeteer 裡，我們可以透過類似 jQuery 的寫法來取得網頁節點。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 取得 DOM</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".listItem ul li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 取得 DOM 裡的值</span>\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".listItem ul li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> targetText <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">_target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> _target<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">,</span>\n  target\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 等同於</span>\n<span class=\"token keyword\">const</span> targetText <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".listItem ul li\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 也可以取得 DOM 的其它屬性，例如 HTML 內容，或是連結網址</span>\n<span class=\"token keyword\">const</span> targetText <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".listItem ul li\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> href <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".btn-download\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 取得所有節點</span>\n<span class=\"token keyword\">const</span> targets <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 同樣可以結合 evaluate 使用，但傳入的是 DOM 陣列，需要再做一次迭代處理</span>\n<span class=\"token keyword\">const</span> targets <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">els</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> els<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"操作節點\">操作節點</h4>\n<p>在拿到節點之後，我們就可以進行相應操作，例如點擊按鈕、輸入文字，或是取得節點內容、下載檔案、截圖等等。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 輸入內容</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"example@example.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 點擊元素</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#loginButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> agreeButton <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".btn-input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> agreeButton<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> clickCount<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 截圖頁面</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"screenshot.png\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 截圖指定元素</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"screenshot_h1.png\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"等待頁面\">等待頁面</h4>\n<p>由於網頁操作常會出現非同步的狀況，例如點擊同意使用規約之後，網頁會自行跳轉，puppeteer 有一系列與等待相關的 function：</p>\n<ul>\n<li><code>page.waitFor(selector/function/timeout[, options[, args]])</code>：等待 selector 出現／function 執行完畢／時間過後，才執行後面動作</li>\n<li><code>page.waitForNavigation(options)</code>：等待頁面跳轉完，才執行後面動作，通常會用於點擊連結或同意使用者規約等等頁面會發生跳轉的行為之後</li>\n<li><code>page.waitForSelector(selector[, options])</code>：等待至元素出現，才執行後面動作</li>\n<li><code>page.waitForRequest(url/predicate, options)</code>：等待 request 處理完畢</li>\n<li><code>page.waitForResponse(url/predicate, options)</code>：等待獲得 response</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 點擊同意按鈕</span>\n<span class=\"token keyword\">const</span> agreeButton <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".btn-input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> agreeButton<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> clickCount<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 點擊後網頁會自動跳頁，因此等待至跳轉完畢，再進行後續處理</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForNavigation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> waitUntil<span class=\"token operator\">:</span> <span class=\"token string\">\"networkidle0\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// some other execution...</span></code></pre><h4 id=\"使用-cookie-登入\">使用 cookie 登入</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 從本地端讀取 oookie 檔案</span>\n<span class=\"token keyword\">const</span> cookies <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./cookies.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>cookies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"儲存檔案\">儲存檔案</h4>\n<p>puppeteer 裡只有提供截圖功能，並沒有下載檔案的 function（之前似乎有個 <code>page.setDownloadBehavior</code> 或 <code>browser.setDownloadBehavior</code>？），想要下載檔案的話，需要再搭配 <code>fs</code>，以及 <code>$eval</code> 使用。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 取得檔案連結</span>\n<span class=\"token keyword\">const</span> href <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".btn-download\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">anchor</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  anchor<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 取得檔案名稱</span>\n<span class=\"token keyword\">const</span> split <span class=\"token operator\">=</span> href<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> filename <span class=\"token operator\">=</span> split<span class=\"token punctuation\">[</span>split<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 取得檔案資料</span>\n<span class=\"token keyword\">let</span> bufferData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 使用 fs 下載檔案</span>\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFileSync</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"./download/\"</span> <span class=\"token operator\">+</span> filename<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">await</span> bufferData<span class=\"token punctuation\">.</span><span class=\"token function\">buffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File saved!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"參考-1\">參考</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://zhaoqize.github.io/puppeteer-api-zh_CN/#/\">Puppeteer v2.1.1 API</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://techblog.gmo-ap.jp/2018/12/28/puppeteer%E3%81%A7%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8%E3%81%BE%E3%81%A8%E3%82%81/\">Puppeteer でできることまとめ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10202445\">Day 17 Puppeteer API 介紹 - class: Page method part 3 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/KawamotoShuji/items/878ae659a5c6e540343e\">うるるを Puppeteer でスクレイピングしてみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/go_sagawa/items/85f97deab7ccfdce53ea\">puppeteer での要素の取得方法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/chenxiaochun/blog/issues/38\">Puppeteer：模拟浏览器操作行为的利器</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2019/07/13/medium-crawler/\">Medium 爬蟲進化史</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.typeart.cc/using-puppeteer-crawler-common-skills/\">Puppeteer 爬蟲常用技巧</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer/blob/main/examples/block-images.js\">puppeteer/block-images.js at main · puppeteer/puppeteer</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer/blob/main/docs/api.md#pagesetrequestinterceptionvalue\">puppeteer/api.md at main · puppeteer/puppeteer</a></li>\n</ul>\n<h2 id=\"文章\">文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332567899.A.C00.html\">[閒聊] 笑談軟體測試的幾個階段（一） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332601969.A.342.html\">[閒聊] 笑談軟體測試的幾個階段（二） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332681709.A.EB4.html\">[閒聊] 笑談軟體測試的幾個階段（三） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332697283.A.630.html\">[閒聊] 笑談軟體測試的幾個階段（四） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332863702.A.076.html\">[閒聊] 笑談軟體測試的幾個階段（五） 測試權重 - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1597938487.A.566.html\">[心得] 笑談軟體測試的幾個階段（六） 歷史代碼 - 看板 Soft_Job - 批踢踢實業坊</a></li>\n</ul>\n","date":"2019-07-18T07:08:00.000Z","excerpt":null,"printDate":"July 18, 2019","printReadingTime":"4 min read","tags":["F2E"],"image":""}