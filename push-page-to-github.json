{"title":"推送網頁到 GitHub Pages","slug":"push-page-to-github","html":"<h2 id=\"前置準備\">前置準備</h2>\n<ul>\n<li>Github 帳號</li>\n<li>理解版本控管</li>\n</ul>\n<h2 id=\"步驟\">步驟</h2>\n<ol>\n<li>登入 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/\">Github</a>，點選右上角 <code>+</code> -&gt; <code>New repository</code></li>\n<li>將 <code>Repository name</code> 命名為 <code>[你的 github 帳號].github.io</code> -&gt; <code>Create Repositorty</code></li>\n<li>開啟 Terminal，clone 專案至本地端: <code>git clone https://github.com/[你的帳號]/[你的帳號].github.io.git</code></li>\n<li>開啟編輯器，建立檔案後 commit: <code>git add .</code>，push: <code>git push</code>，完成</li>\n</ol>\n<h2 id=\"新增子專案\">新增子專案</h2>\n<h3 id=\"1-子資料夾方式\">1. 子資料夾方式</h3>\n<ol>\n<li>直接在 <code>[你的帳號].github.io</code> 裡新增子專案目錄</li>\n<li>push 上去後，就可從 <code>https://[你的帳號].github.io/[子專案]</code> 存取子專案網頁</li>\n</ol>\n<p>這種方式的缺點是會造成主專案目錄過度龐大且混亂，建議使用獨立專案方式</p>\n<h3 id=\"2-獨立專案方式\">2. 獨立專案方式</h3>\n<ol>\n<li>登入 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/new\">Github</a> 新增專案</li>\n<li>clone 專案</li>\n<li>建立 <code>gh-pages</code> branch: <code>git checkout -b gh-pages</code></li>\n<li>push，完成</li>\n</ol>\n<h3 id=\"其它\">其它</h3>\n<p>當同時存在子資料夾與獨立專案的同名專案時，會以獨立專案的分支內容為主</p>\n","date":"2020-05-25T00:26:32.000Z","excerpt":"","printDate":"May 25, 2020","printReadingTime":"1 min read"}