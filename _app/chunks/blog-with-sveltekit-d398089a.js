import{S as nc,i as ec,s as pc,C as xp,w as oc,x as lc,y as cc,z as rc,A as xl,q as ic,o as uc,B as kc,R as Ll,e as n,t as u,k as r,c as e,a as o,h as k,d as a,m as i,G as f,b as p,f as bn,g as c,F as t,H as Al,j as mc,T as fc}from"./index-1cb0a915.js";import{P as gc}from"./_post-84ef0c92.js";function vc(x){let g,E,y,h,m,d,P,Et,ga,wn,es,va,En,Sn,da,Pn,xn,Es,A,Ss,Ap,_a,Ln,ps,ha,An,jn,ya,In,Mn,Ps,j,xs,jp,ba,Rn,os,wa,Hn,Gn,Ea,Tn,St,Ls,Nn,Pt,ls,jl=`<code class="language-undefined">src/
  |- routes/
  | |- index.svelte ----&gt; localhost:3000
  | |- contact.svelte ----&gt; localhost:3000/contact
  | |
  | |- about/
  | |  |- index.svelte ----&gt; localhost:3000/about
  | |  |_ products.svelte ----&gt; localhost:3000/about/products
  | |
  | |- user/
  | |  |_ [userId].svelte ----&gt; \u900F\u904E &#96;load&#96; function
  | |                             \u6216 &#96;page&#96; store \u53D6\u5F97\u52D5\u614B\u8B8A\u6578
  | |- posts/
  | |- index.json.js ----&gt; localhost:3000/posts.json
  |
  | |- __layout.svelte ----&gt; \u9810\u8A2D\u9801\u9762 layout \u5143\u4EF6
  | |                        \u5B50\u5143\u4EF6\u6703\u5D4C\u5957\u81F3 &lt;slot/&gt; \u5143\u7D20\u88E1
  | |- __layout-foo.svelte ----&gt; \u5225\u540D layout
  | |_ special-page@foo.svelte ----&gt; \u4F7F\u7528\u5225\u540D layout \u7684\u9801\u9762
  |                                  localhost:3000/special-page
  |- lib/ ----&gt; \u5B50\u5143\u4EF6\u8CC7\u6599\u593E
  | |- Header.svelte
  | |_ Footer.svelte
  |
  |_ app.html

static/
  |- global.css
  |- highlight.css
  |- favicon.ico
  |- robots.txt
  |_ .nojekyll

svelte.config.js
mdsvex.config.js</code>`,xt,As,Dn,Lt,js,Kn,At,Y,Sa,I,Is,Ip,Pa,Un,Cn,xa,Bn,jt,cs,Il=`<code class="language-undefined">A. return posts from an endpoint
src/
  |_ routes/
    |_ blog/
    | |- 0001.md
    | |- 0002.md
    | |- index.svelte ----&gt; file page
    | |_ _post.svelte ----&gt; private layout
    |
    |- api/
      |_ posts.json.js ----&gt; api of file pages

mdsvex.config.js</code>`,It,rs,Ml=`<code class="language-undefined">B. dynamically routing from subfolder to root
src/
  |_ routes/
    |- posts/
    | |- 0001.md
    | |_ 0002.md
    |
    |- index.svelte ----&gt; file pages list, could be moved to another page
    |- [slug].svelte ----&gt; file page
    |_ _post.svelte ----&gt; private layout

mdsvex.config.js</code>`,Mt,is,La,On,qn,Rt,us,Rl=`<code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> First Post
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2022-01-01T00:00:00.000Z</span></span>
<span class="token punctuation">---</span></span>

Hello <span class="token italic"><span class="token punctuation">_</span><span class="token content">World!</span><span class="token punctuation">_</span></span>

<span class="token bold"><span class="token punctuation">**</span><span class="token content">This is the first post</span><span class="token punctuation">**</span></span></code>`,Ht,Gt,Tt,Ms,Fn,Nt,Rs,Aa,M,Hs,Mp,ja,$n,Dt,ks,Hl=`<code class="language-javascript"><span class="token comment">// api/posts.json.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> allPostsFiles <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">"../blog/*.md"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> iterablePostFiles <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>allPostFiles<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> allPosts <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
    iterablePostFiles<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>path<span class="token punctuation">,</span> resolver<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> metadata <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> postPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">meta</span><span class="token operator">:</span> metadata<span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> postPath<span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> sortedPosts <span class="token operator">=</span> allPosts<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> sortedPosts<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Kt,ms,Gl=`<code class="language-html"><span class="token comment">&lt;!-- blog/index.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  export const load = async (&#123; fetch &#125;) => &#123;
    const posts = await fetch(&#123;'/api/posts.json'&#125;)
    const allPosts = await posts.json()

    return &#123;
      props: &#123;
        posts: allPosts
      &#125;
    &#125;
  &#125;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>
  export let posts;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
  &#123;#each posts as post&#125;
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;post.path&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> &#123;post.meta.title&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
    Published &#123;post.meta.date&#125;
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  &#123;/each&#125;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code>`,Ut,Ct,Bt,Gs,Vn,Ot,ss,Ia,R,Ts,Rp,Ma,Wn,Jn,Ra,H,Ns,Hp,Ha,Xn,qt,fs,Tl=`<code class="language-html"><span class="token comment">&lt;!-- index.svelte --></span>
<span class="token comment">&lt;!-- Grab all files to regenerate link path --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  const allPosts = import.meta.globEager(&#96;../routes/posts/*.md&#96;);
  let body = [];

  for (let path in allPosts) &#123;
    const post = allPosts[path];
    const metadata = post.metadata;

   const p = &#123;
      path,
      metadata,
    &#125;;
    body.push(p);
  &#125;

  export const load = async () => &#123;
    return &#123;
      props: &#123;
        posts: body,
      &#125;,
    &#125;;
  &#125;;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>
  export let posts;

  import &#123; base &#125; from '$app/paths';
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
  &#123;#each posts as &#123; slugPage, metadata: &#123;title, slug&#125;&#125; &#125;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;&#96;$&#123;base&#125;/$&#123;slug&#125;&#96;&#125;</span><span class="token punctuation">></span></span>&#123;title&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  &#123;/each&#125;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code>`,Ft,gs,Nl=`<code class="language-html"><span class="token comment">&lt;!-- [slug].svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  const allPosts = import.meta.globEager(&#96;../routes/posts/*.md&#96;);
  let body = [];

  for (let path in allPosts) &#123;
    const post = allPosts[path];
    const metadata = post.metadata;
    const namePage = path.split("/");
    const slugPage = namePage[namePage.length - 1].slice(0, -3);
    const p = &#123;
      post,
      path,
      metadata,
      slugPage,
    &#125;;
    body.push(p);
  &#125;

  export const load = (&#123; params &#125;) => &#123;
    const posts = body;
    const &#123; slug &#125; = params;

    const filteredPosts = posts.filter((p) => &#123;
      return slug.toLowerCase() === p.slugPage.toLowerCase();
    &#125;);
    if (filteredPosts.length === 0) &#123;
      return &#123;
        status: 404,
        error: new Error(&#96;slug is not found&#96;)
      &#125;;
    &#125; else &#123;
      return &#123;
        props: &#123;
          page: filteredPosts[0].post.default,
          metadata: filteredPosts[0].metadata,
          slugPage: slug,
        &#125;,
      &#125;;
    &#125;
  &#125;;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>
  export let page;
  export let metadata;
  export let slugPage;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">svelte:</span>component</span> <span class="token attr-name">this</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;page&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,$t,Ds,zn,Vt,Ks,Ga,G,Us,Gp,Ta,Zn,Wt,vs,Dl=`<code class="language-html"><span class="token comment">&lt;!-- _post.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>
  // These props get filled in from the page's frontmatter
  export let title;
  export let date;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;title&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>meta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;date&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span></code>`,Jt,ds,Kl=`<code class="language-javascript"><span class="token comment">// mdsvex.config.js</span>
<span class="token comment">// ...</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".md"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// &#96;blog&#96; layout set in the frontmatter</span>
    <span class="token literal-property property">blog</span><span class="token operator">:</span> <span class="token string">"src/routes/_post.svelte"</span><span class="token punctuation">,</span>
    <span class="token comment">// &#96;_&#96; is the fallback or default layout</span>
    <span class="token literal-property property">_</span><span class="token operator">:</span> <span class="token string">"src/routes/_post.svelte"</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token comment">//...</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Xt,_s,Ul=`<code class="language-javascript"><span class="token comment">// svelte.config.js</span>
<span class="token comment">// ...</span>
<span class="token keyword">import</span> mdsvexConfig <span class="token keyword">from</span> <span class="token string">"./mdsvex.config.js"</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">mdsvex</span><span class="token punctuation">(</span>mdsvexConfig<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>`,zt,Cs,Qn,Zt,as,Na,T,Bs,Tp,Da,Yn,se,Ka,Ua,ae,Qt,hs,Cl=`<code class="language-javascript"><span class="token comment">// svelte.config.js</span>
<span class="token comment">// ...</span>
<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">"@sveltejs/adapter-static"</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">adapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      <span class="token literal-property property">pages</span><span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">assets</span><span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>`,Yt,Os,te,sn,b,Ca,N,qs,Np,Ba,ne,ee,Oa,D,Fs,Dp,qa,pe,oe,Fa,K,$s,Kp,$a,le,ce,Va,U,Vs,Up,Wa,re,ie,Ja,C,Ws,Cp,Xa,ue,an,ys,Bl=`<code class="language-javascript"><span class="token comment">// lib/_append-link-favicon.js</span>
<span class="token comment">// Don't know if put it in the lib folder is a good choice</span>
<span class="token keyword">import</span> visit <span class="token keyword">from</span> <span class="token string">"unist-util-visit"</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">transformer</span><span class="token punctuation">(</span><span class="token parameter">ast</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token function">visit</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> <span class="token string">"link"</span><span class="token punctuation">,</span> visitor<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">visitor</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">"image"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">const</span> url <span class="token operator">=</span> node<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      node<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"image"</span><span class="token punctuation">,</span>
          <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">https://s2.googleusercontent.com/s2/favicons?domain=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span>
          <span class="token literal-property property">alt</span><span class="token operator">:</span> node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#123;</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"html"</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">&lt;span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">appendLinkFavicon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> transformer<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> appendLinkFavicon<span class="token punctuation">;</span></code>`,tn,bs,Ol=`<code class="language-javascript"><span class="token comment">// mdsvex.config.js</span>
<span class="token keyword">import</span> appendLinkFavicon <span class="token keyword">from</span> <span class="token string">"./src/lib/_append-link-favicon.js"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> urls <span class="token keyword">from</span> <span class="token string">"rehype-urls"</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">processUrl</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      node<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token string">"_blank"</span><span class="token punctuation">;</span>
      node<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">"noopener"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">".md"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">blog</span><span class="token operator">:</span> <span class="token string">"src/routes/_post.svelte"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">_</span><span class="token operator">:</span> <span class="token string">"src/routes/_post.svelte"</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">remarkPlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>appendLinkFavicon<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rehypePlugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>urls<span class="token punctuation">,</span> processUrl<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,nn,Js,ke,en,v,ws,za,me,fe,Za,ge,ve,Qa,B,Xs,Bp,Ya,de,_e,st,O,zs,Op,at,he,ye,tt,q,Zs,qp,nt,be,we,et,F,Qs,Fp,pt,Ee,Se,ot,$,Ys,$p,lt,Pe,xe,ct,V,sa,Vp,rt,Le,Ae,it,W,aa,Wp,ut,je,Ie,kt,J,ta,Jp,mt,Me,pn,na,Re,on,S,ft,X,ea,Xp,gt,He,Ge,vt,z,pa,zp,dt,Te,Ne,_t,Z,oa,Zp,ht,De,Ke,yt,Q,la,Qp,bt,Ue,ln,ca,Ce,cn,ra,Be,rn,w,ia,Oe,qe,ua,un,Fe,ka,$e,kn,ts,Ve,wt,We,Je,Xe,Yp;return{c(){g=n("h2"),E=u("What\u2019s it all about?"),y=r(),h=n("ul"),m=n("li"),d=n("a"),P=n("img"),ga=n("span"),wn=u("Svelte"),es=n("ul"),va=n("li"),En=u("\u4E00\u5957\u79C9\u6301\u300CWrite less code\u300D\u7684\u7CBE\u795E\uFF0C\u70BA\u4E86\u5EFA\u69CB UI \u800C\u751F\u7684 JavaScript \u7DE8\u8B6F\u5668"),Sn=r(),da=n("li"),Pn=u("\u4E0D\u63A1\u7528 Virtual DOM diff\uFF0C\u4F7F\u7528\u539F\u751F JS \u76F4\u63A5\u4FEE\u6539 DOM\uFF0C\u64C1\u6709\u76F8\u5C0D\u512A\u79C0\u7684\u57F7\u884C\u901F\u5EA6\u8207\u6A94\u6848\u5927\u5C0F\u8868\u73FE"),xn=r(),Es=n("li"),A=n("a"),Ss=n("img"),_a=n("span"),Ln=u("Sapper"),ps=n("ul"),ha=n("li"),An=u("\u5B9A\u4F4D\u985E\u4F3C\u65BC React \u7684 Next.js\u3001Vue \u7684 Nuxt.js \u7684 framework \u5DE5\u5177"),jn=r(),ya=n("li"),In=u("\u57FA\u65BC Svelte \u8655\u7406\u8207\u88DC\u8DB3\u4E86\u5982 SSR\u3001SPA\u3001SSG \u7B49\u61C9\u7528\u88FD\u4F5C\u7684\u9700\u6C42"),Mn=r(),Ps=n("li"),j=n("a"),xs=n("img"),ba=n("span"),Rn=u("SvelteKit"),os=n("ul"),wa=n("li"),Hn=u("\u57FA\u65BC\u8AF8\u591A\u539F\u56E0\u5F9E Sapper \u7FFB\u65B0\u800C\u4F86\u7684 Svelte framework"),Gn=r(),Ea=n("li"),Tn=u("\u6539\u70BA\u4F7F\u7528 Vite\uFF0C\u9032\u4E00\u6B65\u7C21\u5316\u6A23\u677F\u67B6\u69CB"),St=r(),Ls=n("h2"),Nn=u("Common directory structure"),Pt=r(),ls=n("pre"),xt=r(),As=n("h2"),Dn=u("Features"),Lt=r(),js=n("h3"),Kn=u("Read articles from markdown file"),At=r(),Y=n("ul"),Sa=n("li"),I=n("a"),Is=n("img"),Pa=n("span"),Un=u("Sveltekit blog w/MDSVex: [dynamic routing] vs endpoints?"),Cn=r(),xa=n("li"),Bn=u("\u8981\u5C07 markdown \u6A94\u6848\u8F49\u63DB\u6210\u7DB2\u9801\uFF0C\u53EF\u7528 api \u65B9\u5F0F\u547C\u53EB\uFF0C\u6216\u5148\u5B58\u53D6\u6240\u6709\u5167\u5BB9\u5F8C\u518D\u8F49\u5740"),jt=r(),cs=n("pre"),It=r(),rs=n("pre"),Mt=r(),is=n("p"),La=n("code"),On=u("0001.md"),qn=u("\uFF1A"),Rt=r(),us=n("pre"),Ht=r(),Gt=n("hr"),Tt=r(),Ms=n("h4"),Fn=u("A. return posts from an endpoint"),Nt=r(),Rs=n("ul"),Aa=n("li"),M=n("a"),Hs=n("img"),ja=n("span"),$n=u("Let\u2019s learn SvelteKit by building a static Markdown blog from scratch"),Dt=r(),ks=n("pre"),Kt=r(),ms=n("pre"),Ut=r(),Ct=n("hr"),Bt=r(),Gs=n("h4"),Vn=u("B. dynamically routing from subfolder to root"),Ot=r(),ss=n("ul"),Ia=n("li"),R=n("a"),Ts=n("img"),Ma=n("span"),Wn=u("SvelteKit: routing from other folders"),Jn=r(),Ra=n("li"),H=n("a"),Ns=n("img"),Ha=n("span"),Xn=u("el3um4s/memento-sveltekit-and-github-pages"),qt=r(),fs=n("pre"),Ft=r(),gs=n("pre"),$t=r(),Ds=n("h4"),zn=u("Set layout to the private one"),Vt=r(),Ks=n("ul"),Ga=n("li"),G=n("a"),Us=n("img"),Ta=n("span"),Zn=u("mdsvex docs!"),Wt=r(),vs=n("pre"),Jt=r(),ds=n("pre"),Xt=r(),_s=n("pre"),zt=r(),Cs=n("h3"),Qn=u("Add static adapter for static pages"),Zt=r(),as=n("ul"),Na=n("li"),T=n("a"),Bs=n("img"),Da=n("span"),Yn=u("Adapters \u2022 Docs \u2022 SvelteKit"),se=r(),Ka=n("li"),Ua=n("code"),ae=u("npm i -D @sveltejs/adapter-static"),Qt=r(),hs=n("pre"),Yt=r(),Os=n("h3"),te=u("Write Remark and Rehype plugin"),sn=r(),b=n("ul"),Ca=n("li"),N=n("a"),qs=n("img"),Ba=n("span"),ne=u("How to get favicon\u2019s URL from a generic webpage in Javascript? - Stack Overflow"),ee=r(),Oa=n("li"),D=n("a"),Fs=n("img"),qa=n("span"),pe=u("Transforming Markdown with Remark & Rehype"),oe=r(),Fa=n("li"),K=n("a"),$s=n("img"),$a=n("span"),le=u("MDSveX and Svelte Kit"),ce=r(),Va=n("li"),U=n("a"),Vs=n("img"),Wa=n("span"),re=u("remark"),ie=r(),Ja=n("li"),C=n("a"),Ws=n("img"),Xa=n("span"),ue=u("mdast"),an=r(),ys=n("pre"),tn=r(),bs=n("pre"),nn=r(),Js=n("h2"),ke=u("Ref"),en=r(),v=n("ul"),ws=n("li"),za=n("code"),me=u("$lib"),fe=u(" is default alias of "),Za=n("code"),ge=u("$project/src/lib"),ve=r(),Qa=n("li"),B=n("a"),Xs=n("img"),Ya=n("span"),de=u("The Unwritten Svelte Stores Guide"),_e=r(),st=n("li"),O=n("a"),zs=n("img"),at=n("span"),he=u("How to Build a Reading Progress Bar With CSS and JavaScript"),ye=r(),tt=n("li"),q=n("a"),Zs=n("img"),nt=n("span"),be=u("How to Deploy SvelteKit Apps to Github Pages"),we=r(),et=n("li"),F=n("a"),Qs=n("img"),pt=n("span"),Ee=u("RSS - Version 2.0 Tags and Syntax"),Se=r(),ot=n("li"),$=n("a"),Ys=n("img"),lt=n("span"),Pe=u("Best practices for XML sitemaps and RSS/Atom feeds"),xe=r(),ct=n("li"),V=n("a"),sa=n("img"),rt=n("span"),Le=u("beyonk-adventures/svelte-google-analytics"),Ae=r(),it=n("li"),W=n("a"),aa=n("img"),ut=n("span"),je=u("SvelteKit google analytics double reporting"),Ie=r(),kt=n("li"),J=n("a"),ta=n("img"),mt=n("span"),Me=u("mdx-mermaid"),pn=r(),na=n("h2"),Re=u("Example repo"),on=r(),S=n("ul"),ft=n("li"),X=n("a"),ea=n("img"),gt=n("span"),He=u("Sh031224/svelte-kit-github-page-example"),Ge=r(),vt=n("li"),z=n("a"),pa=n("img"),dt=n("span"),Te=u("svelteland/svelte-kit-blog-demo"),Ne=r(),_t=n("li"),Z=n("a"),oa=n("img"),ht=n("span"),De=u("marydotdev/simple-sveltekit-starter-v2"),Ke=r(),yt=n("li"),Q=n("a"),la=n("img"),bt=n("span"),Ue=u("janosh/awesome-svelte-kit"),ln=r(),ca=n("h2"),Ce=u("\u96DC\u8AC7"),cn=r(),ra=n("p"),Be=u("\u525B\u5F9E Sapper \u8DF3\u5230 SvelteKit \u7684\u6642\u5019\uFF0C\u7531\u65BC\u662F\u76F4\u63A5\u4FEE\u6539\u820A\u6A94\u6848\uFF0C\u5B98\u65B9\u6587\u4EF6\u4E5F\u6C92\u6709\u63D0\u4F9B\u6A94\u6848\u67B6\u69CB\u7BC4\u4F8B\u53C3\u8003\uFF0C\u771F\u7684\u662F\u770B\u5F97\u4E00\u500B\u982D\u5169\u500B\u5927\uFF0C\u4F46\u6478\u4E86\u4E00\u9663\u5B50\uFF0C\u6BD4\u8F03\u7406\u89E3\u5927\u6982\u662F\u600E\u9EBC\u904B\u4F5C\u4E4B\u5F8C\uFF0C\u89BA\u5F97\u5176\u5BE6\u610F\u5916\u5730\u76F8\u7576\u4FD0\u843D\uFF0C\u800C\u4E14\u6709\u4E86 MDsveX \u4E5F\u8B93\u9801\u9762\u7684\u53EF\u73A9\u6027\u8B8A\u5F97\u5F88\u5927\uFF0C\u4F8B\u5982\u53EF\u4EE5\u76F4\u63A5\u5728 Markdown \u88E1\u64B0\u5BEB\u53EF\u4E92\u52D5\u7684\u5143\u4EF6\uFF1A"),rn=r(),w=n("div"),ia=n("button"),Oe=u("\u2212"),qe=r(),ua=n("span"),un=u(x[0]),Fe=r(),ka=n("button"),$e=u("+"),kn=r(),ts=n("p"),Ve=u("\u96D6\u8AAA\u5982\u6B64\u9084\u662F\u6709\u5F88\u591A\u6C92\u6709\u5B8C\u5168\u7406\u89E3\u6216\u6D3B\u7528\u7684\u90E8\u4EFD\uFF0C\u50CF\u662F "),wt=n("code"),We=u("import.mega.globEager"),Je=u(" \u4F3C\u4E4E\u5728\u9810\u89BD\u6642\u6703\u6709\u6548\u80FD\u4E0A\u7684\u554F\u984C\uFF0C\u4E5F\u9084\u6709\u50CF\u9810\u89BD\u7E2E\u5716\u3001\u6587\u7AE0\u5927\u7DB1\u3001\u95B1\u8B80\u6240\u9700\u6642\u9593\u7B49\u7B49\u60F3\u5BE6\u88DD\u7684\u529F\u80FD\uFF0C\u6216\u662F\u7D71\u6574\u6A23\u5F0F\u5230 Tailwind CSS \u6216 Windi CSS\uFF0C\u4F46\u5C31\u62B1\u8457\u81F3\u5C11\u80FD\u52D5\u7684\u7CBE\u795E\uFF0C\u7C21\u55AE\u6574\u7406\u4E86\u76EE\u524D\u7528\u5230\u7684\u6838\u5FC3\u67B6\u69CB\u3002"),this.h()},l(s){g=e(s,"H2",{});var l=o(g);E=k(l,"What\u2019s it all about?"),l.forEach(a),y=i(s),h=e(s,"UL",{});var ma=o(h);m=e(ma,"LI",{});var ze=o(m);d=e(ze,"A",{href:!0,rel:!0,target:!0});var Ze=o(d);P=e(Ze,"IMG",{src:!0,alt:!0}),ga=e(Ze,"SPAN",{});var so=o(ga);wn=k(so,"Svelte"),so.forEach(a),Ze.forEach(a),es=e(ze,"UL",{});var mn=o(es);va=e(mn,"LI",{});var ao=o(va);En=k(ao,"\u4E00\u5957\u79C9\u6301\u300CWrite less code\u300D\u7684\u7CBE\u795E\uFF0C\u70BA\u4E86\u5EFA\u69CB UI \u800C\u751F\u7684 JavaScript \u7DE8\u8B6F\u5668"),ao.forEach(a),Sn=i(mn),da=e(mn,"LI",{});var to=o(da);Pn=k(to,"\u4E0D\u63A1\u7528 Virtual DOM diff\uFF0C\u4F7F\u7528\u539F\u751F JS \u76F4\u63A5\u4FEE\u6539 DOM\uFF0C\u64C1\u6709\u76F8\u5C0D\u512A\u79C0\u7684\u57F7\u884C\u901F\u5EA6\u8207\u6A94\u6848\u5927\u5C0F\u8868\u73FE"),to.forEach(a),mn.forEach(a),ze.forEach(a),xn=i(ma),Es=e(ma,"LI",{});var Qe=o(Es);A=e(Qe,"A",{href:!0,rel:!0,target:!0});var Ye=o(A);Ss=e(Ye,"IMG",{src:!0,alt:!0}),_a=e(Ye,"SPAN",{});var no=o(_a);Ln=k(no,"Sapper"),no.forEach(a),Ye.forEach(a),ps=e(Qe,"UL",{});var fn=o(ps);ha=e(fn,"LI",{});var eo=o(ha);An=k(eo,"\u5B9A\u4F4D\u985E\u4F3C\u65BC React \u7684 Next.js\u3001Vue \u7684 Nuxt.js \u7684 framework \u5DE5\u5177"),eo.forEach(a),jn=i(fn),ya=e(fn,"LI",{});var po=o(ya);In=k(po,"\u57FA\u65BC Svelte \u8655\u7406\u8207\u88DC\u8DB3\u4E86\u5982 SSR\u3001SPA\u3001SSG \u7B49\u61C9\u7528\u88FD\u4F5C\u7684\u9700\u6C42"),po.forEach(a),fn.forEach(a),Qe.forEach(a),Mn=i(ma),Ps=e(ma,"LI",{});var sp=o(Ps);j=e(sp,"A",{href:!0,rel:!0,target:!0});var ap=o(j);xs=e(ap,"IMG",{src:!0,alt:!0}),ba=e(ap,"SPAN",{});var oo=o(ba);Rn=k(oo,"SvelteKit"),oo.forEach(a),ap.forEach(a),os=e(sp,"UL",{});var gn=o(os);wa=e(gn,"LI",{});var lo=o(wa);Hn=k(lo,"\u57FA\u65BC\u8AF8\u591A\u539F\u56E0\u5F9E Sapper \u7FFB\u65B0\u800C\u4F86\u7684 Svelte framework"),lo.forEach(a),Gn=i(gn),Ea=e(gn,"LI",{});var co=o(Ea);Tn=k(co,"\u6539\u70BA\u4F7F\u7528 Vite\uFF0C\u9032\u4E00\u6B65\u7C21\u5316\u6A23\u677F\u67B6\u69CB"),co.forEach(a),gn.forEach(a),sp.forEach(a),ma.forEach(a),St=i(s),Ls=e(s,"H2",{});var ro=o(Ls);Nn=k(ro,"Common directory structure"),ro.forEach(a),Pt=i(s),ls=e(s,"PRE",{class:!0});var ql=o(ls);ql.forEach(a),xt=i(s),As=e(s,"H2",{});var io=o(As);Dn=k(io,"Features"),io.forEach(a),Lt=i(s),js=e(s,"H3",{});var uo=o(js);Kn=k(uo,"Read articles from markdown file"),uo.forEach(a),At=i(s),Y=e(s,"UL",{});var vn=o(Y);Sa=e(vn,"LI",{});var ko=o(Sa);I=e(ko,"A",{href:!0,rel:!0,target:!0});var tp=o(I);Is=e(tp,"IMG",{src:!0,alt:!0}),Pa=e(tp,"SPAN",{});var mo=o(Pa);Un=k(mo,"Sveltekit blog w/MDSVex: [dynamic routing] vs endpoints?"),mo.forEach(a),tp.forEach(a),ko.forEach(a),Cn=i(vn),xa=e(vn,"LI",{});var fo=o(xa);Bn=k(fo,"\u8981\u5C07 markdown \u6A94\u6848\u8F49\u63DB\u6210\u7DB2\u9801\uFF0C\u53EF\u7528 api \u65B9\u5F0F\u547C\u53EB\uFF0C\u6216\u5148\u5B58\u53D6\u6240\u6709\u5167\u5BB9\u5F8C\u518D\u8F49\u5740"),fo.forEach(a),vn.forEach(a),jt=i(s),cs=e(s,"PRE",{class:!0});var Fl=o(cs);Fl.forEach(a),It=i(s),rs=e(s,"PRE",{class:!0});var $l=o(rs);$l.forEach(a),Mt=i(s),is=e(s,"P",{});var np=o(is);La=e(np,"CODE",{});var go=o(La);On=k(go,"0001.md"),go.forEach(a),qn=k(np,"\uFF1A"),np.forEach(a),Rt=i(s),us=e(s,"PRE",{class:!0});var Vl=o(us);Vl.forEach(a),Ht=i(s),Gt=e(s,"HR",{}),Tt=i(s),Ms=e(s,"H4",{});var vo=o(Ms);Fn=k(vo,"A. return posts from an endpoint"),vo.forEach(a),Nt=i(s),Rs=e(s,"UL",{});var _o=o(Rs);Aa=e(_o,"LI",{});var ho=o(Aa);M=e(ho,"A",{href:!0,rel:!0,target:!0});var ep=o(M);Hs=e(ep,"IMG",{src:!0,alt:!0}),ja=e(ep,"SPAN",{});var yo=o(ja);$n=k(yo,"Let\u2019s learn SvelteKit by building a static Markdown blog from scratch"),yo.forEach(a),ep.forEach(a),ho.forEach(a),_o.forEach(a),Dt=i(s),ks=e(s,"PRE",{class:!0});var Wl=o(ks);Wl.forEach(a),Kt=i(s),ms=e(s,"PRE",{class:!0});var Jl=o(ms);Jl.forEach(a),Ut=i(s),Ct=e(s,"HR",{}),Bt=i(s),Gs=e(s,"H4",{});var bo=o(Gs);Vn=k(bo,"B. dynamically routing from subfolder to root"),bo.forEach(a),Ot=i(s),ss=e(s,"UL",{});var dn=o(ss);Ia=e(dn,"LI",{});var wo=o(Ia);R=e(wo,"A",{href:!0,rel:!0,target:!0});var pp=o(R);Ts=e(pp,"IMG",{src:!0,alt:!0}),Ma=e(pp,"SPAN",{});var Eo=o(Ma);Wn=k(Eo,"SvelteKit: routing from other folders"),Eo.forEach(a),pp.forEach(a),wo.forEach(a),Jn=i(dn),Ra=e(dn,"LI",{});var So=o(Ra);H=e(So,"A",{href:!0,rel:!0,target:!0});var op=o(H);Ns=e(op,"IMG",{src:!0,alt:!0}),Ha=e(op,"SPAN",{});var Po=o(Ha);Xn=k(Po,"el3um4s/memento-sveltekit-and-github-pages"),Po.forEach(a),op.forEach(a),So.forEach(a),dn.forEach(a),qt=i(s),fs=e(s,"PRE",{class:!0});var Xl=o(fs);Xl.forEach(a),Ft=i(s),gs=e(s,"PRE",{class:!0});var zl=o(gs);zl.forEach(a),$t=i(s),Ds=e(s,"H4",{});var xo=o(Ds);zn=k(xo,"Set layout to the private one"),xo.forEach(a),Vt=i(s),Ks=e(s,"UL",{});var Lo=o(Ks);Ga=e(Lo,"LI",{});var Ao=o(Ga);G=e(Ao,"A",{href:!0,rel:!0,target:!0});var lp=o(G);Us=e(lp,"IMG",{src:!0,alt:!0}),Ta=e(lp,"SPAN",{});var jo=o(Ta);Zn=k(jo,"mdsvex docs!"),jo.forEach(a),lp.forEach(a),Ao.forEach(a),Lo.forEach(a),Wt=i(s),vs=e(s,"PRE",{class:!0});var Zl=o(vs);Zl.forEach(a),Jt=i(s),ds=e(s,"PRE",{class:!0});var Ql=o(ds);Ql.forEach(a),Xt=i(s),_s=e(s,"PRE",{class:!0});var Yl=o(_s);Yl.forEach(a),zt=i(s),Cs=e(s,"H3",{});var Io=o(Cs);Qn=k(Io,"Add static adapter for static pages"),Io.forEach(a),Zt=i(s),as=e(s,"UL",{});var _n=o(as);Na=e(_n,"LI",{});var Mo=o(Na);T=e(Mo,"A",{href:!0,rel:!0,target:!0});var cp=o(T);Bs=e(cp,"IMG",{src:!0,alt:!0}),Da=e(cp,"SPAN",{});var Ro=o(Da);Yn=k(Ro,"Adapters \u2022 Docs \u2022 SvelteKit"),Ro.forEach(a),cp.forEach(a),Mo.forEach(a),se=i(_n),Ka=e(_n,"LI",{});var Ho=o(Ka);Ua=e(Ho,"CODE",{});var Go=o(Ua);ae=k(Go,"npm i -D @sveltejs/adapter-static"),Go.forEach(a),Ho.forEach(a),_n.forEach(a),Qt=i(s),hs=e(s,"PRE",{class:!0});var sc=o(hs);sc.forEach(a),Yt=i(s),Os=e(s,"H3",{});var To=o(Os);te=k(To,"Write Remark and Rehype plugin"),To.forEach(a),sn=i(s),b=e(s,"UL",{});var L=o(b);Ca=e(L,"LI",{});var No=o(Ca);N=e(No,"A",{href:!0,rel:!0,target:!0});var rp=o(N);qs=e(rp,"IMG",{src:!0,alt:!0}),Ba=e(rp,"SPAN",{});var Do=o(Ba);ne=k(Do,"How to get favicon\u2019s URL from a generic webpage in Javascript? - Stack Overflow"),Do.forEach(a),rp.forEach(a),No.forEach(a),ee=i(L),Oa=e(L,"LI",{});var Ko=o(Oa);D=e(Ko,"A",{href:!0,rel:!0,target:!0});var ip=o(D);Fs=e(ip,"IMG",{src:!0,alt:!0}),qa=e(ip,"SPAN",{});var Uo=o(qa);pe=k(Uo,"Transforming Markdown with Remark & Rehype"),Uo.forEach(a),ip.forEach(a),Ko.forEach(a),oe=i(L),Fa=e(L,"LI",{});var Co=o(Fa);K=e(Co,"A",{href:!0,rel:!0,target:!0});var up=o(K);$s=e(up,"IMG",{src:!0,alt:!0}),$a=e(up,"SPAN",{});var Bo=o($a);le=k(Bo,"MDSveX and Svelte Kit"),Bo.forEach(a),up.forEach(a),Co.forEach(a),ce=i(L),Va=e(L,"LI",{});var Oo=o(Va);U=e(Oo,"A",{href:!0,rel:!0,target:!0});var kp=o(U);Vs=e(kp,"IMG",{src:!0,alt:!0}),Wa=e(kp,"SPAN",{});var qo=o(Wa);re=k(qo,"remark"),qo.forEach(a),kp.forEach(a),Oo.forEach(a),ie=i(L),Ja=e(L,"LI",{});var Fo=o(Ja);C=e(Fo,"A",{href:!0,rel:!0,target:!0});var mp=o(C);Ws=e(mp,"IMG",{src:!0,alt:!0}),Xa=e(mp,"SPAN",{});var $o=o(Xa);ue=k($o,"mdast"),$o.forEach(a),mp.forEach(a),Fo.forEach(a),L.forEach(a),an=i(s),ys=e(s,"PRE",{class:!0});var ac=o(ys);ac.forEach(a),tn=i(s),bs=e(s,"PRE",{class:!0});var tc=o(bs);tc.forEach(a),nn=i(s),Js=e(s,"H2",{});var Vo=o(Js);ke=k(Vo,"Ref"),Vo.forEach(a),en=i(s),v=e(s,"UL",{});var _=o(v);ws=e(_,"LI",{});var hn=o(ws);za=e(hn,"CODE",{});var Wo=o(za);me=k(Wo,"$lib"),Wo.forEach(a),fe=k(hn," is default alias of "),Za=e(hn,"CODE",{});var Jo=o(Za);ge=k(Jo,"$project/src/lib"),Jo.forEach(a),hn.forEach(a),ve=i(_),Qa=e(_,"LI",{});var Xo=o(Qa);B=e(Xo,"A",{href:!0,rel:!0,target:!0});var fp=o(B);Xs=e(fp,"IMG",{src:!0,alt:!0}),Ya=e(fp,"SPAN",{});var zo=o(Ya);de=k(zo,"The Unwritten Svelte Stores Guide"),zo.forEach(a),fp.forEach(a),Xo.forEach(a),_e=i(_),st=e(_,"LI",{});var Zo=o(st);O=e(Zo,"A",{href:!0,rel:!0,target:!0});var gp=o(O);zs=e(gp,"IMG",{src:!0,alt:!0}),at=e(gp,"SPAN",{});var Qo=o(at);he=k(Qo,"How to Build a Reading Progress Bar With CSS and JavaScript"),Qo.forEach(a),gp.forEach(a),Zo.forEach(a),ye=i(_),tt=e(_,"LI",{});var Yo=o(tt);q=e(Yo,"A",{href:!0,rel:!0,target:!0});var vp=o(q);Zs=e(vp,"IMG",{src:!0,alt:!0}),nt=e(vp,"SPAN",{});var sl=o(nt);be=k(sl,"How to Deploy SvelteKit Apps to Github Pages"),sl.forEach(a),vp.forEach(a),Yo.forEach(a),we=i(_),et=e(_,"LI",{});var al=o(et);F=e(al,"A",{href:!0,rel:!0,target:!0});var dp=o(F);Qs=e(dp,"IMG",{src:!0,alt:!0}),pt=e(dp,"SPAN",{});var tl=o(pt);Ee=k(tl,"RSS - Version 2.0 Tags and Syntax"),tl.forEach(a),dp.forEach(a),al.forEach(a),Se=i(_),ot=e(_,"LI",{});var nl=o(ot);$=e(nl,"A",{href:!0,rel:!0,target:!0});var _p=o($);Ys=e(_p,"IMG",{src:!0,alt:!0}),lt=e(_p,"SPAN",{});var el=o(lt);Pe=k(el,"Best practices for XML sitemaps and RSS/Atom feeds"),el.forEach(a),_p.forEach(a),nl.forEach(a),xe=i(_),ct=e(_,"LI",{});var pl=o(ct);V=e(pl,"A",{href:!0,rel:!0,target:!0});var hp=o(V);sa=e(hp,"IMG",{src:!0,alt:!0}),rt=e(hp,"SPAN",{});var ol=o(rt);Le=k(ol,"beyonk-adventures/svelte-google-analytics"),ol.forEach(a),hp.forEach(a),pl.forEach(a),Ae=i(_),it=e(_,"LI",{});var ll=o(it);W=e(ll,"A",{href:!0,rel:!0,target:!0});var yp=o(W);aa=e(yp,"IMG",{src:!0,alt:!0}),ut=e(yp,"SPAN",{});var cl=o(ut);je=k(cl,"SvelteKit google analytics double reporting"),cl.forEach(a),yp.forEach(a),ll.forEach(a),Ie=i(_),kt=e(_,"LI",{});var rl=o(kt);J=e(rl,"A",{href:!0,rel:!0,target:!0});var bp=o(J);ta=e(bp,"IMG",{src:!0,alt:!0}),mt=e(bp,"SPAN",{});var il=o(mt);Me=k(il,"mdx-mermaid"),il.forEach(a),bp.forEach(a),rl.forEach(a),_.forEach(a),pn=i(s),na=e(s,"H2",{});var ul=o(na);Re=k(ul,"Example repo"),ul.forEach(a),on=i(s),S=e(s,"UL",{});var ns=o(S);ft=e(ns,"LI",{});var kl=o(ft);X=e(kl,"A",{href:!0,rel:!0,target:!0});var wp=o(X);ea=e(wp,"IMG",{src:!0,alt:!0}),gt=e(wp,"SPAN",{});var ml=o(gt);He=k(ml,"Sh031224/svelte-kit-github-page-example"),ml.forEach(a),wp.forEach(a),kl.forEach(a),Ge=i(ns),vt=e(ns,"LI",{});var fl=o(vt);z=e(fl,"A",{href:!0,rel:!0,target:!0});var Ep=o(z);pa=e(Ep,"IMG",{src:!0,alt:!0}),dt=e(Ep,"SPAN",{});var gl=o(dt);Te=k(gl,"svelteland/svelte-kit-blog-demo"),gl.forEach(a),Ep.forEach(a),fl.forEach(a),Ne=i(ns),_t=e(ns,"LI",{});var vl=o(_t);Z=e(vl,"A",{href:!0,rel:!0,target:!0});var Sp=o(Z);oa=e(Sp,"IMG",{src:!0,alt:!0}),ht=e(Sp,"SPAN",{});var dl=o(ht);De=k(dl,"marydotdev/simple-sveltekit-starter-v2"),dl.forEach(a),Sp.forEach(a),vl.forEach(a),Ke=i(ns),yt=e(ns,"LI",{});var _l=o(yt);Q=e(_l,"A",{href:!0,rel:!0,target:!0});var Pp=o(Q);la=e(Pp,"IMG",{src:!0,alt:!0}),bt=e(Pp,"SPAN",{});var hl=o(bt);Ue=k(hl,"janosh/awesome-svelte-kit"),hl.forEach(a),Pp.forEach(a),_l.forEach(a),ns.forEach(a),ln=i(s),ca=e(s,"H2",{});var yl=o(ca);Ce=k(yl,"\u96DC\u8AC7"),yl.forEach(a),cn=i(s),ra=e(s,"P",{});var bl=o(ra);Be=k(bl,"\u525B\u5F9E Sapper \u8DF3\u5230 SvelteKit \u7684\u6642\u5019\uFF0C\u7531\u65BC\u662F\u76F4\u63A5\u4FEE\u6539\u820A\u6A94\u6848\uFF0C\u5B98\u65B9\u6587\u4EF6\u4E5F\u6C92\u6709\u63D0\u4F9B\u6A94\u6848\u67B6\u69CB\u7BC4\u4F8B\u53C3\u8003\uFF0C\u771F\u7684\u662F\u770B\u5F97\u4E00\u500B\u982D\u5169\u500B\u5927\uFF0C\u4F46\u6478\u4E86\u4E00\u9663\u5B50\uFF0C\u6BD4\u8F03\u7406\u89E3\u5927\u6982\u662F\u600E\u9EBC\u904B\u4F5C\u4E4B\u5F8C\uFF0C\u89BA\u5F97\u5176\u5BE6\u610F\u5916\u5730\u76F8\u7576\u4FD0\u843D\uFF0C\u800C\u4E14\u6709\u4E86 MDsveX \u4E5F\u8B93\u9801\u9762\u7684\u53EF\u73A9\u6027\u8B8A\u5F97\u5F88\u5927\uFF0C\u4F8B\u5982\u53EF\u4EE5\u76F4\u63A5\u5728 Markdown \u88E1\u64B0\u5BEB\u53EF\u4E92\u52D5\u7684\u5143\u4EF6\uFF1A"),bl.forEach(a),rn=i(s),w=e(s,"DIV",{style:!0});var fa=o(w);ia=e(fa,"BUTTON",{});var wl=o(ia);Oe=k(wl,"\u2212"),wl.forEach(a),qe=i(fa),ua=e(fa,"SPAN",{style:!0});var El=o(ua);un=k(El,x[0]),El.forEach(a),Fe=i(fa),ka=e(fa,"BUTTON",{});var Sl=o(ka);$e=k(Sl,"+"),Sl.forEach(a),fa.forEach(a),kn=i(s),ts=e(s,"P",{});var yn=o(ts);Ve=k(yn,"\u96D6\u8AAA\u5982\u6B64\u9084\u662F\u6709\u5F88\u591A\u6C92\u6709\u5B8C\u5168\u7406\u89E3\u6216\u6D3B\u7528\u7684\u90E8\u4EFD\uFF0C\u50CF\u662F "),wt=e(yn,"CODE",{});var Pl=o(wt);We=k(Pl,"import.mega.globEager"),Pl.forEach(a),Je=k(yn," \u4F3C\u4E4E\u5728\u9810\u89BD\u6642\u6703\u6709\u6548\u80FD\u4E0A\u7684\u554F\u984C\uFF0C\u4E5F\u9084\u6709\u50CF\u9810\u89BD\u7E2E\u5716\u3001\u6587\u7AE0\u5927\u7DB1\u3001\u95B1\u8B80\u6240\u9700\u6642\u9593\u7B49\u7B49\u60F3\u5BE6\u88DD\u7684\u529F\u80FD\uFF0C\u6216\u662F\u7D71\u6574\u6A23\u5F0F\u5230 Tailwind CSS \u6216 Windi CSS\uFF0C\u4F46\u5C31\u62B1\u8457\u81F3\u5C11\u80FD\u52D5\u7684\u7CBE\u795E\uFF0C\u7C21\u55AE\u6574\u7406\u4E86\u76EE\u524D\u7528\u5230\u7684\u6838\u5FC3\u67B6\u69CB\u3002"),yn.forEach(a),this.h()},h(){f(P.src,Et="https://s2.googleusercontent.com/s2/favicons?domain=https://svelte.dev/")||p(P,"src",Et),p(P,"alt","Svelte"),p(d,"href","https://svelte.dev/"),p(d,"rel","noopener"),p(d,"target","_blank"),f(Ss.src,Ap="https://s2.googleusercontent.com/s2/favicons?domain=https://sapper.svelte.dev/")||p(Ss,"src",Ap),p(Ss,"alt","Sapper"),p(A,"href","https://sapper.svelte.dev/"),p(A,"rel","noopener"),p(A,"target","_blank"),f(xs.src,jp="https://s2.googleusercontent.com/s2/favicons?domain=https://kit.svelte.dev/")||p(xs,"src",jp),p(xs,"alt","SvelteKit"),p(j,"href","https://kit.svelte.dev/"),p(j,"rel","noopener"),p(j,"target","_blank"),p(ls,"class","language-undefined"),f(Is.src,Ip="https://s2.googleusercontent.com/s2/favicons?domain=https://www.reddit.com/r/sveltejs/comments/rs0iby/sveltekit_blog_wmdsvex_dynamic_routing_vs/")||p(Is,"src",Ip),p(Is,"alt","Sveltekit blog w/MDSVex: [dynamic routing] vs endpoints?"),p(I,"href","https://www.reddit.com/r/sveltejs/comments/rs0iby/sveltekit_blog_wmdsvex_dynamic_routing_vs/"),p(I,"rel","noopener"),p(I,"target","_blank"),p(cs,"class","language-undefined"),p(rs,"class","language-undefined"),p(us,"class","language-markdown"),f(Hs.src,Mp="https://s2.googleusercontent.com/s2/favicons?domain=https://joshcollinsworth.com/blog/build-static-sveltekit-markdown-blog")||p(Hs,"src",Mp),p(Hs,"alt","Let\u2019s learn SvelteKit by building a static Markdown blog from scratch"),p(M,"href","https://joshcollinsworth.com/blog/build-static-sveltekit-markdown-blog"),p(M,"rel","noopener"),p(M,"target","_blank"),p(ks,"class","language-javascript"),p(ms,"class","language-html"),f(Ts.src,Rp="https://s2.googleusercontent.com/s2/favicons?domain=https://blog.stranianelli.com/sveltekit-routing-from-other-folders-english/")||p(Ts,"src",Rp),p(Ts,"alt","SvelteKit: routing from other folders"),p(R,"href","https://blog.stranianelli.com/sveltekit-routing-from-other-folders-english/"),p(R,"rel","noopener"),p(R,"target","_blank"),f(Ns.src,Hp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/el3um4s/memento-sveltekit-and-github-pages")||p(Ns,"src",Hp),p(Ns,"alt","el3um4s/memento-sveltekit-and-github-pages"),p(H,"href","https://github.com/el3um4s/memento-sveltekit-and-github-pages"),p(H,"rel","noopener"),p(H,"target","_blank"),p(fs,"class","language-html"),p(gs,"class","language-html"),f(Us.src,Gp="https://s2.googleusercontent.com/s2/favicons?domain=https://mdsvex.com/docs#layout=")||p(Us,"src",Gp),p(Us,"alt","mdsvex docs!"),p(G,"href","https://mdsvex.com/docs#layout="),p(G,"rel","noopener"),p(G,"target","_blank"),p(vs,"class","language-html"),p(ds,"class","language-javascript"),p(_s,"class","language-javascript"),f(Bs.src,Tp="https://s2.googleusercontent.com/s2/favicons?domain=https://kit.svelte.dev/docs/adapters#supported-environments-static-sites=")||p(Bs,"src",Tp),p(Bs,"alt","Adapters \u2022 Docs \u2022 SvelteKit"),p(T,"href","https://kit.svelte.dev/docs/adapters#supported-environments-static-sites="),p(T,"rel","noopener"),p(T,"target","_blank"),p(hs,"class","language-javascript"),f(qs.src,Np="https://s2.googleusercontent.com/s2/favicons?domain=https://stackoverflow.com/questions/10282939/how-to-get-favicons-url-from-a-generic-webpage-in-javascript")||p(qs,"src",Np),p(qs,"alt","How to get favicon\u2019s URL from a generic webpage in Javascript? - Stack Overflow"),p(N,"href","https://stackoverflow.com/questions/10282939/how-to-get-favicons-url-from-a-generic-webpage-in-javascript"),p(N,"rel","noopener"),p(N,"target","_blank"),f(Fs.src,Dp="https://s2.googleusercontent.com/s2/favicons?domain=https://www.ryanfiller.com/blog/remark-and-rehype-plugins")||p(Fs,"src",Dp),p(Fs,"alt","Transforming Markdown with Remark & Rehype"),p(D,"href","https://www.ryanfiller.com/blog/remark-and-rehype-plugins"),p(D,"rel","noopener"),p(D,"target","_blank"),f($s.src,Kp="https://s2.googleusercontent.com/s2/favicons?domain=https://www.furudean.com/blog/svelte-kit-mdsvex")||p($s,"src",Kp),p($s,"alt","MDSveX and Svelte Kit"),p(K,"href","https://www.furudean.com/blog/svelte-kit-mdsvex"),p(K,"rel","noopener"),p(K,"target","_blank"),f(Vs.src,Up="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/remarkjs/remark")||p(Vs,"src",Up),p(Vs,"alt","remark"),p(U,"href","https://github.com/remarkjs/remark"),p(U,"rel","noopener"),p(U,"target","_blank"),f(Ws.src,Cp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/syntax-tree/mdast")||p(Ws,"src",Cp),p(Ws,"alt","mdast"),p(C,"href","https://github.com/syntax-tree/mdast"),p(C,"rel","noopener"),p(C,"target","_blank"),p(ys,"class","language-javascript"),p(bs,"class","language-javascript"),f(Xs.src,Bp="https://s2.googleusercontent.com/s2/favicons?domain=https://dev.to/jdgamble555/the-unwritten-svelte-stores-guide-47la")||p(Xs,"src",Bp),p(Xs,"alt","The Unwritten Svelte Stores Guide"),p(B,"href","https://dev.to/jdgamble555/the-unwritten-svelte-stores-guide-47la"),p(B,"rel","noopener"),p(B,"target","_blank"),f(zs.src,Op="https://s2.googleusercontent.com/s2/favicons?domain=https://webdesign.tutsplus.com/tutorials/reading-progress-bar-css-javascript--cms-36635")||p(zs,"src",Op),p(zs,"alt","How to Build a Reading Progress Bar With CSS and JavaScript"),p(O,"href","https://webdesign.tutsplus.com/tutorials/reading-progress-bar-css-javascript--cms-36635"),p(O,"rel","noopener"),p(O,"target","_blank"),f(Zs.src,qp="https://s2.googleusercontent.com/s2/favicons?domain=https://sveltesaas.com/articles/sveltekit-github-pages-guide/")||p(Zs,"src",qp),p(Zs,"alt","How to Deploy SvelteKit Apps to Github Pages"),p(q,"href","https://sveltesaas.com/articles/sveltekit-github-pages-guide/"),p(q,"rel","noopener"),p(q,"target","_blank"),f(Qs.src,Fp="https://s2.googleusercontent.com/s2/favicons?domain=https://www.tutorialspoint.com/rss/rss2.0-tag-syntax.htm")||p(Qs,"src",Fp),p(Qs,"alt","RSS - Version 2.0 Tags and Syntax"),p(F,"href","https://www.tutorialspoint.com/rss/rss2.0-tag-syntax.htm"),p(F,"rel","noopener"),p(F,"target","_blank"),f(Ys.src,$p="https://s2.googleusercontent.com/s2/favicons?domain=https://developers.google.com/search/blog/2014/10/best-practices-for-xml-sitemaps-rssatom")||p(Ys,"src",$p),p(Ys,"alt","Best practices for XML sitemaps and RSS/Atom feeds"),p($,"href","https://developers.google.com/search/blog/2014/10/best-practices-for-xml-sitemaps-rssatom"),p($,"rel","noopener"),p($,"target","_blank"),f(sa.src,Vp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/beyonk-adventures/svelte-google-analytics")||p(sa,"src",Vp),p(sa,"alt","beyonk-adventures/svelte-google-analytics"),p(V,"href","https://github.com/beyonk-adventures/svelte-google-analytics"),p(V,"rel","noopener"),p(V,"target","_blank"),f(aa.src,Wp="https://s2.googleusercontent.com/s2/favicons?domain=https://stackoverflow.com/questions/71861393/sveltekit-google-analytics-double-reporting")||p(aa,"src",Wp),p(aa,"alt","SvelteKit google analytics double reporting"),p(W,"href","https://stackoverflow.com/questions/71861393/sveltekit-google-analytics-double-reporting"),p(W,"rel","noopener"),p(W,"target","_blank"),f(ta.src,Jp="https://s2.googleusercontent.com/s2/favicons?domain=https://sjwall.github.io/mdx-mermaid/")||p(ta,"src",Jp),p(ta,"alt","mdx-mermaid"),p(J,"href","https://sjwall.github.io/mdx-mermaid/"),p(J,"rel","noopener"),p(J,"target","_blank"),f(ea.src,Xp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/Sh031224/svelte-kit-github-page-example")||p(ea,"src",Xp),p(ea,"alt","Sh031224/svelte-kit-github-page-example"),p(X,"href","https://github.com/Sh031224/svelte-kit-github-page-example"),p(X,"rel","noopener"),p(X,"target","_blank"),f(pa.src,zp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/svelteland/svelte-kit-blog-demo")||p(pa,"src",zp),p(pa,"alt","svelteland/svelte-kit-blog-demo"),p(z,"href","https://github.com/svelteland/svelte-kit-blog-demo"),p(z,"rel","noopener"),p(z,"target","_blank"),f(oa.src,Zp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/marydotdev/simple-sveltekit-starter-v2")||p(oa,"src",Zp),p(oa,"alt","marydotdev/simple-sveltekit-starter-v2"),p(Z,"href","https://github.com/marydotdev/simple-sveltekit-starter-v2"),p(Z,"rel","noopener"),p(Z,"target","_blank"),f(la.src,Qp="https://s2.googleusercontent.com/s2/favicons?domain=https://github.com/janosh/awesome-svelte-kit")||p(la,"src",Qp),p(la,"alt","janosh/awesome-svelte-kit"),p(Q,"href","https://github.com/janosh/awesome-svelte-kit"),p(Q,"rel","noopener"),p(Q,"target","_blank"),bn(ua,"margin","0 1em"),bn(w,"display","flex"),bn(w,"justify-content","center"),bn(w,"align-items","center")},m(s,l){c(s,g,l),t(g,E),c(s,y,l),c(s,h,l),t(h,m),t(m,d),t(d,P),t(d,ga),t(ga,wn),t(m,es),t(es,va),t(va,En),t(es,Sn),t(es,da),t(da,Pn),t(h,xn),t(h,Es),t(Es,A),t(A,Ss),t(A,_a),t(_a,Ln),t(Es,ps),t(ps,ha),t(ha,An),t(ps,jn),t(ps,ya),t(ya,In),t(h,Mn),t(h,Ps),t(Ps,j),t(j,xs),t(j,ba),t(ba,Rn),t(Ps,os),t(os,wa),t(wa,Hn),t(os,Gn),t(os,Ea),t(Ea,Tn),c(s,St,l),c(s,Ls,l),t(Ls,Nn),c(s,Pt,l),c(s,ls,l),ls.innerHTML=jl,c(s,xt,l),c(s,As,l),t(As,Dn),c(s,Lt,l),c(s,js,l),t(js,Kn),c(s,At,l),c(s,Y,l),t(Y,Sa),t(Sa,I),t(I,Is),t(I,Pa),t(Pa,Un),t(Y,Cn),t(Y,xa),t(xa,Bn),c(s,jt,l),c(s,cs,l),cs.innerHTML=Il,c(s,It,l),c(s,rs,l),rs.innerHTML=Ml,c(s,Mt,l),c(s,is,l),t(is,La),t(La,On),t(is,qn),c(s,Rt,l),c(s,us,l),us.innerHTML=Rl,c(s,Ht,l),c(s,Gt,l),c(s,Tt,l),c(s,Ms,l),t(Ms,Fn),c(s,Nt,l),c(s,Rs,l),t(Rs,Aa),t(Aa,M),t(M,Hs),t(M,ja),t(ja,$n),c(s,Dt,l),c(s,ks,l),ks.innerHTML=Hl,c(s,Kt,l),c(s,ms,l),ms.innerHTML=Gl,c(s,Ut,l),c(s,Ct,l),c(s,Bt,l),c(s,Gs,l),t(Gs,Vn),c(s,Ot,l),c(s,ss,l),t(ss,Ia),t(Ia,R),t(R,Ts),t(R,Ma),t(Ma,Wn),t(ss,Jn),t(ss,Ra),t(Ra,H),t(H,Ns),t(H,Ha),t(Ha,Xn),c(s,qt,l),c(s,fs,l),fs.innerHTML=Tl,c(s,Ft,l),c(s,gs,l),gs.innerHTML=Nl,c(s,$t,l),c(s,Ds,l),t(Ds,zn),c(s,Vt,l),c(s,Ks,l),t(Ks,Ga),t(Ga,G),t(G,Us),t(G,Ta),t(Ta,Zn),c(s,Wt,l),c(s,vs,l),vs.innerHTML=Dl,c(s,Jt,l),c(s,ds,l),ds.innerHTML=Kl,c(s,Xt,l),c(s,_s,l),_s.innerHTML=Ul,c(s,zt,l),c(s,Cs,l),t(Cs,Qn),c(s,Zt,l),c(s,as,l),t(as,Na),t(Na,T),t(T,Bs),t(T,Da),t(Da,Yn),t(as,se),t(as,Ka),t(Ka,Ua),t(Ua,ae),c(s,Qt,l),c(s,hs,l),hs.innerHTML=Cl,c(s,Yt,l),c(s,Os,l),t(Os,te),c(s,sn,l),c(s,b,l),t(b,Ca),t(Ca,N),t(N,qs),t(N,Ba),t(Ba,ne),t(b,ee),t(b,Oa),t(Oa,D),t(D,Fs),t(D,qa),t(qa,pe),t(b,oe),t(b,Fa),t(Fa,K),t(K,$s),t(K,$a),t($a,le),t(b,ce),t(b,Va),t(Va,U),t(U,Vs),t(U,Wa),t(Wa,re),t(b,ie),t(b,Ja),t(Ja,C),t(C,Ws),t(C,Xa),t(Xa,ue),c(s,an,l),c(s,ys,l),ys.innerHTML=Bl,c(s,tn,l),c(s,bs,l),bs.innerHTML=Ol,c(s,nn,l),c(s,Js,l),t(Js,ke),c(s,en,l),c(s,v,l),t(v,ws),t(ws,za),t(za,me),t(ws,fe),t(ws,Za),t(Za,ge),t(v,ve),t(v,Qa),t(Qa,B),t(B,Xs),t(B,Ya),t(Ya,de),t(v,_e),t(v,st),t(st,O),t(O,zs),t(O,at),t(at,he),t(v,ye),t(v,tt),t(tt,q),t(q,Zs),t(q,nt),t(nt,be),t(v,we),t(v,et),t(et,F),t(F,Qs),t(F,pt),t(pt,Ee),t(v,Se),t(v,ot),t(ot,$),t($,Ys),t($,lt),t(lt,Pe),t(v,xe),t(v,ct),t(ct,V),t(V,sa),t(V,rt),t(rt,Le),t(v,Ae),t(v,it),t(it,W),t(W,aa),t(W,ut),t(ut,je),t(v,Ie),t(v,kt),t(kt,J),t(J,ta),t(J,mt),t(mt,Me),c(s,pn,l),c(s,na,l),t(na,Re),c(s,on,l),c(s,S,l),t(S,ft),t(ft,X),t(X,ea),t(X,gt),t(gt,He),t(S,Ge),t(S,vt),t(vt,z),t(z,pa),t(z,dt),t(dt,Te),t(S,Ne),t(S,_t),t(_t,Z),t(Z,oa),t(Z,ht),t(ht,De),t(S,Ke),t(S,yt),t(yt,Q),t(Q,la),t(Q,bt),t(bt,Ue),c(s,ln,l),c(s,ca,l),t(ca,Ce),c(s,cn,l),c(s,ra,l),t(ra,Be),c(s,rn,l),c(s,w,l),t(w,ia),t(ia,Oe),t(w,qe),t(w,ua),t(ua,un),t(w,Fe),t(w,ka),t(ka,$e),c(s,kn,l),c(s,ts,l),t(ts,Ve),t(ts,wt),t(wt,We),t(ts,Je),Xe||(Yp=[Al(ia,"click",x[4]),Al(ka,"click",x[5])],Xe=!0)},p(s,l){l&1&&mc(un,s[0])},d(s){s&&a(g),s&&a(y),s&&a(h),s&&a(St),s&&a(Ls),s&&a(Pt),s&&a(ls),s&&a(xt),s&&a(As),s&&a(Lt),s&&a(js),s&&a(At),s&&a(Y),s&&a(jt),s&&a(cs),s&&a(It),s&&a(rs),s&&a(Mt),s&&a(is),s&&a(Rt),s&&a(us),s&&a(Ht),s&&a(Gt),s&&a(Tt),s&&a(Ms),s&&a(Nt),s&&a(Rs),s&&a(Dt),s&&a(ks),s&&a(Kt),s&&a(ms),s&&a(Ut),s&&a(Ct),s&&a(Bt),s&&a(Gs),s&&a(Ot),s&&a(ss),s&&a(qt),s&&a(fs),s&&a(Ft),s&&a(gs),s&&a($t),s&&a(Ds),s&&a(Vt),s&&a(Ks),s&&a(Wt),s&&a(vs),s&&a(Jt),s&&a(ds),s&&a(Xt),s&&a(_s),s&&a(zt),s&&a(Cs),s&&a(Zt),s&&a(as),s&&a(Qt),s&&a(hs),s&&a(Yt),s&&a(Os),s&&a(sn),s&&a(b),s&&a(an),s&&a(ys),s&&a(tn),s&&a(bs),s&&a(nn),s&&a(Js),s&&a(en),s&&a(v),s&&a(pn),s&&a(na),s&&a(on),s&&a(S),s&&a(ln),s&&a(ca),s&&a(cn),s&&a(ra),s&&a(rn),s&&a(w),s&&a(kn),s&&a(ts),Xe=!1,fc(Yp)}}}function dc(x){let g,E;const y=[x[3],Lp];let h={$$slots:{default:[vc]},$$scope:{ctx:x}};for(let m=0;m<y.length;m+=1)h=xp(h,y[m]);return g=new gc({props:h}),{c(){oc(g.$$.fragment)},l(m){lc(g.$$.fragment,m)},m(m,d){cc(g,m,d),E=!0},p(m,[d]){const P=d&8?rc(y,[d&8&&xl(m[3]),d&0&&xl(Lp)]):{};d&65&&(P.$$scope={dirty:d,ctx:m}),g.$set(P)},i(m){E||(ic(g.$$.fragment,m),E=!0)},o(m){uc(g.$$.fragment,m),E=!1},d(m){kc(g,m)}}}const Lp={title:"Blog with SvelteKit",date:"2022-01-01T01:00:00.000Z",tags:"F2E"};function _c(x,g,E){let y=0;const h=()=>E(0,y--,y),m=()=>E(0,y++,y),d=()=>h(),P=()=>m();return x.$$set=Et=>{E(3,g=xp(xp({},g),Ll(Et)))},g=Ll(g),[y,h,m,g,d,P]}class hc extends nc{constructor(g){super(),ec(this,g,_c,dc,pc,{})}}var wc=Object.freeze(Object.defineProperty({__proto__:null,default:hc,metadata:Lp},Symbol.toStringTag,{value:"Module"}));export{hc as B,wc as _,Lp as m};
