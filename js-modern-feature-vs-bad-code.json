{"title":"JavaScript 筆記 - 如何改寫","slug":"js-modern-feature-vs-bad-code","html":"<h3 id=\"good-javascript-with-modern-feature-vs-bad-code\"><strong>Good Javascript with modern feature</strong> vs <strong>Bad Code</strong></h3>\n<h4 id=\"consolelog\">console.log</h4>\n<h5 id=\"1-table\">1. table</h5>\n<pre class=\"language-js\"><code class=\"language-js\">cosnt foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> nervous<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\ncosnt bar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'dick'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> nervous<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\ncosnt baz <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'harry'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> nervous<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Bad Code</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>baz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c My Friends,\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"color: orange; font-weight: bold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">,</span> baz <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">,</span> baz<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h5 id=\"2-time\">2. time</h5>\n<pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"looper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"looper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h5 id=\"3-trace\">3. trace</h5>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">deleteMe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bye bye database\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">deleteMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">deleteMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"destucturing\">destucturing</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> turtle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Bobo\"</span><span class=\"token punctuation\">,</span>\n  legs<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  shell<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"amphibious\"</span><span class=\"token punctuation\">,</span>\n  meal<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  diet<span class=\"token operator\">:</span> <span class=\"token string\">\"berries\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Feed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token punctuation\">.</span>meal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kils of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token punctuation\">.</span>diet<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> meal<span class=\"token punctuation\">,</span> diet <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Feed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>meal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kilos of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>diet<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// OR</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> meal<span class=\"token punctuation\">,</span> diet <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Feed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>meal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> kilos of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>diet<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><h4 id=\"template-literals\">Template literals</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">let</span> bio <span class=\"token operator\">=</span>\n  horse<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"is a \"</span> <span class=\"token operator\">+</span>\n  horse<span class=\"token punctuation\">.</span>size <span class=\"token operator\">+</span>\n  <span class=\"token string\">\" horse skilled in \"</span> <span class=\"token operator\">+</span>\n  horse<span class=\"token punctuation\">.</span>skills<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" &amp; \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> skills <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> horse<span class=\"token punctuation\">;</span>\n\nbio <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>size<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> skilled in </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>skills<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" &amp; \"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">horseAge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ageStr <span class=\"token operator\">=</span> age <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"old\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"young\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ageStr<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> bio2 <span class=\"token operator\">=</span> horseAge<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">This horse is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>horse<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"spread-syntax\">spread syntax</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> pikachu <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Pikachu\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> stats <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hp<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> attack<span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> defense<span class=\"token operator\">:</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\npikachu<span class=\"token punctuation\">[</span><span class=\"token string\">\"hp\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>hp<span class=\"token punctuation\">;</span>\npikachu<span class=\"token punctuation\">[</span><span class=\"token string\">\"attack\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">;</span>\npikachu<span class=\"token punctuation\">[</span><span class=\"token string\">\"defense\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>defense<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// OR</span>\n<span class=\"token keyword\">const</span> lv10 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>pikachu<span class=\"token punctuation\">,</span> stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lv11 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>pikachu<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> hp<span class=\"token operator\">:</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> lv10 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>pikachu<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>stats <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lv11 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>pikachu<span class=\"token punctuation\">,</span> hp<span class=\"token operator\">:</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"array\">Array</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> pokemon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Arbok\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Raichu\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sandshrew\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\npokemon<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bulbasaur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npokemon<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Metapod\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npokemon<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weedle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n\n<span class=\"token comment\">// Push</span>\npokemon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>pokemon<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bulbasaur\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Metapod\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Weedle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Shift</span>\npokemon <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Bulbasaur\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Metapod\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Weedle\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>pokemon<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"loops\">loops</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> orders <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">223</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> withTax <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> highValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> orders<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Reduce</span>\n  total <span class=\"token operator\">+=</span> orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Map</span>\n  withTax<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Filter</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    highValue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>orders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> acc <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> withTax <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> highValue <span class=\"token operator\">=</span> orders<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h4 id=\"async--await\">async / await</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">random</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad Code</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sumRandomAsyncNums</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> first<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> second<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> third<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      first <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      second <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      third <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> first <span class=\"token operator\">+</span> second <span class=\"token operator\">+</span> thrid<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Result </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>v<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good Code</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sumRandomAsyncNums</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> second <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> thrid <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Result </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first <span class=\"token operator\">+</span> second <span class=\"token operator\">+</span> thrid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>","date":"2021-01-11T00:07:30.000Z","printDate":"January 11, 2021","printReadingTime":"3 min read","tags":["F2E"," JavaScript"]}