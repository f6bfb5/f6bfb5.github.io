{"title":"Blog with Hexo","slug":"blog-with-hexo","html":"<h2 id=\"指令速見表\">指令速見表</h2>\n<ol>\n<li>新建記事 <code>hexo n</code></li>\n<li>清除暫存 <code>hexo clean</code></li>\n<li>產生推播 <code>hexo g -d</code></li>\n</ol>\n<hr>\n<h2 id=\"0-準備安裝\">0. 準備安裝</h2>\n<p>開始使用 hexo 建置部落格之前，需先安裝 <code>git</code> 和 <code>nodejs</code></p>\n<p>安裝建置用的相關套件： <code>npm install hexo-cli -g</code></p>\n<p>本文預設使用 GitHub 做為建置平台，Hexo 可放置於 GitHub Pages 的主分支上，或是子網域頁面（在 GitHub Pages 主頁面的專案之外另開一個專案）上</p>\n<p>參考： <a target=\"_blank\" rel=\"nofollow\" href=\"http://alincode.github.io/blog/2016/03/05/hexo-deploy/\">將 hexo 部署到 GitHub page</a></p>\n<h2 id=\"1-放置網域\">1. 放置網域</h2>\n<h3 id=\"a-github-pages-主分支（repourl-accountnamegithubio）\">a. GitHub Pages 主分支（repo/url: <code>AccountName.github.io</code>）</h3>\n<ol>\n<li>以 <code>自己的 GitHub 帳號.github.io</code> 命名建立一個 Repo ，遵循網頁上的指令完成建立作業</li>\n<li>進行後續建置</li>\n</ol>\n<p>參考：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/github/using-github-pages.html\">使用 GitHub 免費製作個人網站</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/zh-tw/24.md\">使用 GitHub 遠端儲存庫 - 入門篇</a></li>\n</ul>\n<h3 id=\"b-子網域頁面（repo-reponame-url-accountnamegithubioreponame）\">b. 子網域頁面（repo: <code>RepoName</code>, url: <code>AccountName.github.io/RepoName</code>）</h3>\n<ol>\n<li>以 <code>子網域名稱</code> 命名建立一個 Repo ，遵循網頁上的指令完成建立作業</li>\n<li>建立 <code>gh-pages</code> 分支</li>\n<li>切回 <code>master</code> 主支進行後續建置</li>\n</ol>\n<p>參考：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/zh-tw/08.md\">關於分支的基本觀念與使用方式</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/branch/using-branch.html\">開始使用分支</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gitbook.tw/chapters/github/push-to-github.html\">Git 教學：如何 Push 上傳到 GitHub？</a></li>\n</ul>\n<h2 id=\"2-部落格建構\">2. 部落格建構</h2>\n<h3 id=\"a-初始化\">a. 初始化</h3>\n<ol>\n<li>將建立好的 Repo pull 至本地硬碟裡後，將命令列錨點移至該資料夾內</li>\n<li>確定分支為 <code>master</code> 之後，使用 <code>hexo init blog-name</code> 指令初始化存放部落格內容的資料夾</li>\n<li>將錨點移進該資料夾內，執行 <code>npm install</code> 與 <code>hexo init</code> 完成初始化</li>\n</ol>\n<h3 id=\"b-設定\">b. 設定</h3>\n<p>Repo 母資料夾底下的 <code>_confiy.yml</code> 可以設定如標題、副標、說明等內容</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">title: 部落格標題\nsubtitle: 副標(可留空)\ndescription: 部落格說明\nauthor:\nlanguage: (預設設定為en)\ntimezone: (預設設定為執行電腦上的時區)\n\nurl: http://example.com\nroot: /blog/\npermalink: :year/:month/:day/:title/\npermalink_defaults:</code></pre><h2 id=\"3-正式上線\">3. 正式上線</h2>\n<h3 id=\"a-撰寫文章\">a. 撰寫文章</h3>\n<p>這時已經可以運行如文章新增與預覽的基本功能：</p>\n<ol>\n<li>建立記事：<code>hexo new post-name</code> = <code>hexo n</code><ul>\n<li>（可選）清除暫存：<code>hexo clean</code></li>\n</ul>\n</li>\n<li>產生記事靜態頁面：<code>hexo generate</code> = <code>hexo g</code></li>\n<li>在本地上執行伺服器進行預覽：<code>hexo server</code> = <code>hexo s</code></li>\n</ol>\n<h3 id=\"b-推送\">b. 推送</h3>\n<ol>\n<li><p>安裝推送到 GitHub Pages 的套件：\n<code>npm install hexo-deplyer-git --save</code></p>\n</li>\n<li><p>於 <code>_config.yml</code> 設定 Deploy：</p>\n</li>\n</ol>\n<pre class=\"language-yml\"><code class=\"language-yml\">deploy:\n  type: git\n  repo: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span> <span class=\"token attr-name\">url</span><span class=\"token punctuation\">></span></span>\n  branch: gh-pages // 只有建置在子網域頁面時才需要</code></pre><ol start=\"3\">\n<li>推送：<code>hexo deploy</code> = <code>hexo d</code><ul>\n<li>生成頁面後即推送：<code>hexo generate --deploy</code> = <code>hexo g -d</code></li>\n</ul>\n</li>\n</ol>\n<p>參考： <a target=\"_blank\" rel=\"nofollow\" href=\"https://hexo.io/zh-tw/docs/deployment\">Hexo - 佈署</a></p>\n<h3 id=\"（可選）c-線上編輯後自動更新\">（可選）c. 線上編輯後自動更新</h3>\n<p>也可以利用 GitHub 所提供的 CI/CD（持續性整合與自動化部署）服務 GitHub Actions，自動化儲存與發表文章的處理</p>\n<ol>\n<li>於 GitHub 上建立一個新專案，push hexo 上去後，將此專案設為 Private</li>\n<li>設立 SSH Key 提供給 GitHub Actions 使用</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen -f github-deploy-key</code></pre><p>留空點擊兩次 Enter 後，會在 hexo 資料夾底下產生兩個新檔案 <code>github-deply-key</code>（私鑰）與 <code>github-deploy-key.pub</code>（公鑰）</p>\n<ol start=\"3\">\n<li>至原始碼專案的 Settings 的 Secrets 分頁裡，點選 Add a new secret，<ul>\n<li>於 Name 輸入 <code>HEXO_DEPLOY_PRI</code>，Value 輸入私鑰 <code>github-deply-key</code> 裡的內容</li>\n</ul>\n</li>\n<li>至靜態網頁專案的 Settings 的 Deploy keys 分頁裡，<ul>\n<li>於 Title 輸入 <code>HEXO_DEPLOY_PUB</code>，Key 輸入公鑰 <code>github-deploy-key.pub</code> 裡的內容，勾選 Allow write access</li>\n</ul>\n</li>\n<li>開啟 hexo 資料夾裡的 <code>_config.xml</code> 檔案，編輯 <code>deploy</code> 的部份改為 SSH 連線</li>\n</ol>\n<pre class=\"language-xml\"><code class=\"language-xml\">deploy:\n  type: git\n  repo: git@github.com:[YOUR_GITHUB_ACCOUNT/YOUR_STATIC_WEB_REPO_NAME].git\n  branch: master</code></pre><ol start=\"6\">\n<li>推送更新專案</li>\n<li>至原始碼專案頁面的 Actions 分頁，點選右上角的 <code>Set up a workflow yourself</code><ul>\n<li>設定自動部署時要使用的環境與執行的指令，以及 Hexo 所需要的主題和插件安裝</li>\n<li>把 <code>main.yml</code> 推上 <code>workflows/</code> 之後，再次回到 Actions 確認 workflows 是否已更新</li>\n</ul>\n</li>\n</ol>\n<p><code>main.yml</code> 參考：</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">name: Deploy Blog\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    env:\n      HEXO_DEPLOY_PRI: ${{secrets.HEXO_DEPLOY_PRI}}\n      USER_NAME: USER_NAME\n      USER_EMAIL: USER_EMAIL\n\n    strategy:\n      matrix:\n        node-version: [10.x]\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v1\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v1\n        with:\n          node-version: ${{ matrix.node-version }}\n      - name: Setup Hexo\n        run: |\n          mkdir -p ~/.ssh/\n          echo \"$HEXO_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          git config --global user.name $USER_NAME\n          git config --global user.email $USER_EMAIL\n          npm i -g hexo-cli\n          npm i hexo-generator-tag hexo-generator-feed hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-pagination hexo-all-minifier hexo-autoprefixer hexo-front-matter\n          npm i\n      - name: Deploy\n        run: |\n          hexo g -d</code></pre><ol start=\"8\">\n<li>本地端亦需同步推上建立 <code>main.yml</code> 後的 commit</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">git remote update\ngit pull</code></pre><ol start=\"9\">\n<li>若有修改 blog 的佈景或設定時也需要同部更新原始碼</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\">git add --all\ngit commit -m \"update\"\ngit push origin master</code></pre><ol start=\"10\">\n<li>至原始碼專案的 <code>source/_posts</code> 資料夾裡，點選右上角的 <code>Create new file</code>，<ul>\n<li>輸入完文章內容後，點擊 <code>Commit new file</code> 便可線上發布文章了</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"參考\">參考</h4>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.weitw.net/posts/350dd70b/index.html\">Hexo + GitHub Actions 打造自動部署</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://gythialy.github.io/deploy-hexo-to-github-pages-via-github-actions/\">通过 GitHub Actions 自动部署 Hexo</a></li>\n</ul>\n<h2 id=\"4-套件\">4. 套件</h2>\n<h3 id=\"a-主題\">a. 主題</h3>\n<ul>\n<li>Apollo (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/pinggod/hexo-theme-apollo\">hexo-theme-apollo</a>)</li>\n<li>Element (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/artchen/hexo-theme-element\">hexo-theme-element</a>)</li>\n<li>Modernist (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/heroicyang/hexo-theme-modernist\">hexo-modernist</a>)</li>\n<li>Light (<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-theme-light\">hexo-theme-light</a>)</li>\n</ul>\n<h3 id=\"b-rss\">b. RSS</h3>\n<p><code>npm install hexo-generator-feed --save</code></p>\n<h3 id=\"c-sitemap\">c. Sitemap</h3>\n<p><code>npm install hexo-generator-seo-friendly-sitemap --save</code></p>\n<p><code>_config.yml</code>設定：</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">sitemap:\n  path: sitemap.xml\n  template: ./sitemap_template.xml</code></pre><h3 id=\"d-壓縮\">d. 壓縮</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/mamboer/hexo-filter-cleanup\">Hexo-filter-cleanup</a><ul>\n<li><code>npm install hexo-filter-cleanup --save</code></li>\n</ul>\n</li>\n</ul>\n<p><code>Hexo-filter-cleanup</code>也整合了以下三個插件：</p>\n<ol>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-html-minifier\">hexo-html-minifier</a><ul>\n<li><code>npm install hexo-html-minifier --save</code></li>\n</ul>\n</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-clean-css\">hexo-clean-css</a><ul>\n<li><code>npm install hexo-clean-css --save</code></li>\n</ul>\n</li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hexojs/hexo-uglify\">hexo-uglify</a><ul>\n<li><code>npm install hexo-uglify --save</code></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/theme-next/hexo-filter-optimize\">hexo-filter-optimize</a><ul>\n<li><code>npm install hexo-filter-optimize --save</code></li>\n</ul>\n</li>\n</ul>\n<p><code>_config.yml</code>設定：</p>\n<pre class=\"language-yml\"><code class=\"language-yml\">filter_optimize:\n  enable: true\n  # remove static resource query string\n  #   - like `?v=1.0.0`\n  remove_query_string: true\n  # remove the surrounding comments in each of the bundled files\n  remove_comments: false\n  css:\n    enable: true\n    # bundle loaded css file into the one\n    bundle: true\n    # use a script block to load css elements dynamically\n    delivery: true\n    # make specific css content inline into the html page\n    #   - only support the full path\n    #   - default is ['css/main.css']\n    inlines:\n    excludes:\n  js:\n    # bundle loaded js file into the one\n    bundle: true\n    excludes:\n  # set the priority of this plugin,\n  # lower means it will be executed first, default is 10\n  priority: 12\n\n  # ---\n\nhtml_minifier:\n  exclude:\n  removeComments: true\n  removeCommentsFromCDATA: false\n  removeCDATASectionsFromCDATA: false\n  collapseWhitespace: true\n  conservativeCollapse: true\n  preserveLineBreaks: true\n  collapseBooleanAttributes: false\n  removeAttributeQuotes: false\n  removeRedundantAttributes: false\n  preventAttributesEscaping: false\n  useShortDoctype: false\n  removeEmptyAttributes: false\n  removeScriptTypeAttributes: false\n  removeStyleLinkTypeAttributes: false\n  removeOptionalTags: false\n  removeIgnored: false\n  removeEmptyElements: false\n  lint: false\n  keepClosingSlash: false\n  caseSensitive: false\n  minifyJS: true\n  minifyCSS: true\n  minifyURLs: false</code></pre><h2 id=\"5-文章編寫-（markdown-記法）\">5. 文章編寫 （Markdown 記法）</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/5I6nEE0aQTGYT1PzTyTBAw\">HackMD 的 Markdown 輸入格式對照表</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/ka215/items/a709665cb34c505ccf1f\">Markdown テキストでシーケンス図とフローチャートを描く</a></li>\n</ul>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"># 主標題\n\n## 副標題\n\n> 引言\n\n- 清單\n- 清單\n\n1. 有序清單\n2. 有序清單\n\n**粗體**\n_斜線_\n~刪除線~\n\n連結\n[an example](http://example.com/ \"Title\")\nThis is [an example][id] reference-style link.\n[id]: http://example.com/ \"Optional Title Here\"\n\n圖片\n![エビフライトライアングル](http://i.imgur.com/Jjwsc.jpg \"サンプル\")\n\n待辦事項\n\n- [ ] Eat\n- [x] Code\n  - [x] HTML\n  - [x] CSS\n  - [x] JavaScript\n- [ ] Sleep\n\n閱讀更多\n\n＜!-- more --＞\n\n嵌入 Youtube 影片\n{%youtube [Youtube影片ID] %}\n\n{%raw%}不需解析的 markdown 原文{%endraw%}</code></pre><h2 id=\"6-補充連結\">6. 補充連結</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/in_silico_/items/7e6ed639c24142bdbd04\">Hexo で始めるお手軽な静的ブログ　-インストールと配備-</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/in_silico_/items/31c2c0bc1cf061c86250\">Hexo で始めるお手軽な静的ブログ　-画像投稿とプラグインの追加-</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://pepese.github.io/blog/hexo-github-pages/\">Hexo で作ったブログを GitHub Pages で公開</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://photo-tea.com/p/usecase-of-hexo-plugin/\">Hexo ブログで使ってるプラグインを公開します</a></li>\n</ul>\n","date":"1990-01-01T00:00:00.000Z","printDate":"January 1, 1990","printReadingTime":"5 min read","tags":[]}