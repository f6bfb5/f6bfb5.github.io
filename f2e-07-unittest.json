{"title":"前端筆記 (7) 網頁測試","slug":"f2e-07-unittest","html":"<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/yusong-blog/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E5%9C%A8github%E4%B8%8A%E6%8C%81%E7%BA%8C%E6%95%B4%E5%90%88%E8%88%87%E9%83%A8%E7%BD%B2-ci-cd-9735f622ae68\">前端工程師在 GitHub 上持續整合與部署(CI/CD)</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Daara_y/items/4f006ead604e015186dc\">Chrome の拡張機能を 2 つ使うだけでブラウザの操作を自動化！？ - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/nezuq/items/c5e827e1827e7cb29011\">Web スクレイピングの注意事項一覧 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/Azunyan1111/items/b161b998790b1db2ff7a\">Python Web スクレイピング テクニック集「取得できない値は無い」JavaScript 対応@追記あり 6/12 - Qiita</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://hackmd.io/Jsn8miqHQdWUUdqgrIc9Cg\">六角學院線上分享單元測試 QA 區</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/ms314006/step-by-step-unit-testing\">step-by-step-unit-testing</a></li>\n</ul>\n<h2 id=\"1-selenium\">1. <a target=\"_blank\" rel=\"nofollow\" href=\"https://selenium.dev/\">Selenium</a></h2>\n<h2 id=\"2-jest\">2. <a target=\"_blank\" rel=\"nofollow\" href=\"https://jestjs.io/\">Jest</a></h2>\n<h3 id=\"安裝\">安裝</h3>\n<p><code>npm install --save-dev jest</code>\n<code>yarn add puppeteer jest</code></p>\n<h3 id=\"使用\">使用</h3>\n<p><code>util.test.js</code></p>\n<p><code>test()</code> 是 Jest 提供的 function，\n第一個參數為文字敘述，第二個參數則是傳入一個 function\n<code>expect()</code> 是傳入要接受測試的函式\n<code>toBe()</code> 是預期得到的結果</p>\n<p><code>npm run jest</code>: 測試所有的測試檔案\n<code>npm run jest [檔案]</code>: 測試指定檔案</p>\n<h3 id=\"參考\">參考</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://wcc723.github.io/development/2020/02/02/jest-intro/\">十分鐘上手前端單元測試 - 使用 Jest</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://medium.com/enjoy-life-enjoy-coding/%E8%AE%93-jest-%E7%82%BA%E4%BD%A0%E7%9A%84-code-%E5%81%9A%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95%E6%95%99%E5%AD%B8-d898f11d9a23\">Jest | 讓 Jest 為你的 Code 做測試-基礎用法教學</a></li>\n</ul>\n<h2 id=\"3-cypressio\">3. <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.cypress.io/\">Cypress.io</a></h2>\n<h2 id=\"4-storybook\">4. <a target=\"_blank\" rel=\"nofollow\" href=\"https://storybook.js.org/\">Storybook</a></h2>\n<h2 id=\"5-nightwatch\">5. <a target=\"_blank\" rel=\"nofollow\" href=\"https://nightwatchjs.org/\">Nightwatch</a></h2>\n<h2 id=\"6-puppeteer\">6. <a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer\">Puppeteer</a></h2>\n<h3 id=\"簡介\">簡介</h3>\n<p>Puppter 是由 Google Chrome 官方團隊所推出的無界面 (Headless) Chrome 工具，是一套 Node 的 Library，提供 API 透過 DevTools Protocol 控制無介面的 Chrome，亦可透過調整參數使用完整版的 Chrome。</p>\n<p>常見用途：</p>\n<ul>\n<li>產生網頁頁面的截圖或 PDF 檔</li>\n<li>抓取 Single Page Application 產生預覽內容 (Server-Side Rendering)</li>\n<li>從網站上抓取想要的內容</li>\n<li>自動送出表單、測試 UI、控制輸入</li>\n<li>建構自動化測試環境</li>\n</ul>\n<h3 id=\"安裝-1\">安裝</h3>\n<p><code>yarn add puppeteer</code>\n<code>npm i puppeteer</code></p>\n<h3 id=\"使用-1\">使用</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> puppeteer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'puppeteer'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span>puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// action here...</span>\n\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><h4 id=\"可進行操作\">可進行操作</h4>\n<p>截圖: <code>await page.screenshot({path: &#39;screenshot.png&#39;})</code></p>\n<p>只截取特定部份:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>path<span class=\"token operator\">:</span> 'screenshot_h1<span class=\"token punctuation\">.</span>png<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><p>執行 JS:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> h1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  h1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"hoge\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>點擊: <code>await page.click(&#39;.button_element&#39;)</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> button_element <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".button_element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> button_element<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><p>等待: <code>await page.waitForNavigation({waitUntil: &#39;domcontentloaded&#39;})</code>\n<code>await page.waitFor(&#39;.lazy&#39;)</code>\n<code>await page.waitFor(5000)</code></p>\n<p>取得 DOM 樹:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> bodyHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">body</span> <span class=\"token operator\">=></span> body<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">.</span>bodyHandle<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><h3 id=\"參考-1\">參考</h3>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://zhaoqize.github.io/puppeteer-api-zh_CN/#/\">Puppeteer v2.1.1 API</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://techblog.gmo-ap.jp/2018/12/28/puppeteer%E3%81%A7%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8%E3%81%BE%E3%81%A8%E3%82%81/\">Puppeteer でできることまとめ</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://ithelp.ithome.com.tw/articles/10202445\">Day 17 Puppeteer API 介紹 - class: Page method part 3 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/KawamotoShuji/items/878ae659a5c6e540343e\">うるるを Puppeteer でスクレイピングしてみた</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://qiita.com/go_sagawa/items/85f97deab7ccfdce53ea\">puppeteer での要素の取得方法</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/chenxiaochun/blog/issues/38\">Puppeteer：模拟浏览器操作行为的利器</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.techbridge.cc/2019/07/13/medium-crawler/\">Medium 爬蟲進化史</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://blog.typeart.cc/using-puppeteer-crawler-common-skills/\">Puppeteer 爬蟲常用技巧</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer/blob/main/examples/block-images.js\">puppeteer/block-images.js at main · puppeteer/puppeteer</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/puppeteer/puppeteer/blob/main/docs/api.md#pagesetrequestinterceptionvalue\">puppeteer/api.md at main · puppeteer/puppeteer</a></li>\n</ul>\n<h2 id=\"文章\">文章</h2>\n<ul>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332567899.A.C00.html\">[閒聊] 笑談軟體測試的幾個階段（一） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332601969.A.342.html\">[閒聊] 笑談軟體測試的幾個階段（二） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332681709.A.EB4.html\">[閒聊] 笑談軟體測試的幾個階段（三） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332697283.A.630.html\">[閒聊] 笑談軟體測試的幾個階段（四） - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1332863702.A.076.html\">[閒聊] 笑談軟體測試的幾個階段（五） 測試權重 - 看板 Soft_Job - 批踢踢實業坊</a></li>\n<li><a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ptt.cc/bbs/Soft_Job/M.1597938487.A.566.html\">[心得] 笑談軟體測試的幾個階段（六） 歷史代碼 - 看板 Soft_Job - 批踢踢實業坊</a></li>\n</ul>\n","date":"2019-07-18T07:16:11.000Z","excerpt":null,"printDate":"July 18, 2019","printReadingTime":"2 min read"}