import{e as $}from"./index.modern.d96712a8.js";function y(){return y=Object.assign?Object.assign.bind():function(s){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var u in t)Object.prototype.hasOwnProperty.call(t,u)&&(s[u]=t[u])}return s},y.apply(this,arguments)}function A(s){return s.localName!=="title"&&!s.matches("[data-swup-theme]")}function b(s,r){return s.outerHTML===r.outerHTML}function E(s){return s.matches("link[rel=stylesheet][href]")}class M extends ${constructor(r={}){var t;super(),t=this,this.name="SwupHeadPlugin",this.requires={swup:">=4"},this.defaults={persistTags:!1,persistAssets:!1,awaitAssets:!1,timeout:3e3},this.options=void 0,this.updateHead=async function(u,{page:{html:x}}){const v=new DOMParser().parseFromString(x,"text/html"),{removed:H,added:w}=function(n,f,{shouldPersist:g=()=>!1}={}){const c=Array.from(n.children),d=Array.from(f.children),a=(l=c,d.reduce((e,o,h)=>(l.some(p=>b(o,p))||e.push({el:o,index:h}),e),[]));var l;const i=function(e,o){return e.reduce((h,p)=>(o.some(O=>b(p,O))||h.push({el:p}),h),[])}(c,d);return i.reverse().filter(({el:e})=>A(e)).filter(({el:e})=>!g(e)).forEach(({el:e})=>n.removeChild(e)),a.filter(({el:e})=>A(e)).forEach(({el:e,index:o=0})=>{n.insertBefore(e,n.children[o+1]||null)}),{removed:i.map(({el:e})=>e),added:a.map(({el:e})=>e)}}(document.head,v.head,{shouldPersist:n=>t.isPersistentTag(n)});t.swup.log(`Removed ${H.length} / added ${w.length} tags in head`);const T=(m=document.documentElement).lang!==(P=v.documentElement).lang?(m.lang=P.lang,m.lang):null;var m,P;if(T&&t.swup.log(`Updated lang attribute: ${T}`),t.options.awaitAssets){const n=function(f,g=0){return f.filter(E).map(c=>function(d,a=0){const l=i=>{(({href:e})=>Array.from(document.styleSheets).map(({href:o})=>o).includes(e))(d)?i():setTimeout(()=>l(i),10)};return new Promise(i=>{l(i),a>0&&setTimeout(i,a)})}(c,g))}(w,t.options.timeout);n.length&&(t.swup.log(`Waiting for ${n.length} assets to load`),await Promise.all(n))}},this.options=y({},this.defaults,r),this.options.persistAssets&&!this.options.persistTags&&(this.options.persistTags="link[rel=stylesheet], script[src], style")}mount(){this.before("content:replace",this.updateHead)}isPersistentTag(r){const{persistTags:t}=this.options;return typeof t=="function"?t(r):typeof t=="string"?r.matches(t):!!t}}export{M as default};
